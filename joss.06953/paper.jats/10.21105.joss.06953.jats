<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6953</article-id>
<article-id pub-id-type="doi">10.21105/joss.06953</article-id>
<title-group>
<article-title>FiLiP: A python software development kit (SDK) for
accelerating the development of services based on FIWARE IoT
platform</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-2652-1686</contrib-id>
<name>
<surname>Storek</surname>
<given-names>Thomas</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-2247-2423</contrib-id>
<name>
<surname>Du</surname>
<given-names>Junsong</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-8135-1843</contrib-id>
<name>
<surname>Blechmann</surname>
<given-names>Sebastian</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-7640-0930</contrib-id>
<name>
<surname>Streblow</surname>
<given-names>Rita</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-6106-6607</contrib-id>
<name>
<surname>Müller</surname>
<given-names>Dirk</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Institute for Energy Efficient Buildings and Indoor
Climate, RWTH Aachen University, Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Drees &amp; Sommer SE, Germany</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-02-27">
<day>27</day>
<month>2</month>
<year>2024</year>
</pub-date>
<volume>9</volume>
<issue>101</issue>
<fpage>6953</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>IoT</kwd>
<kwd>API client</kwd>
<kwd>Pydantic</kwd>
<kwd>Platform</kwd>
<kwd>Semantic</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>FIWARE, an open-source initiative providing open-source software
  platform components and a set of standardized APIs (Application
  Programming Interfaces), has been instrumental in driving
  digitalization across various domains and research fields
  (<xref alt="Araujo et al., 2019" rid="ref-araujo_performance_2019" ref-type="bibr">Araujo
  et al., 2019</xref>). The use of FIWARE enables faster, easier, and
  cheaper developments of a wide range of IoT-enabled solutions
  (<xref alt="FIWARE Catalogue – FIWARE, 2023" rid="ref-fiwareU003A2023" ref-type="bibr"><italic>FIWARE
  Catalogue – FIWARE</italic>, 2023</xref>). Over the years, the FIWARE
  Next-Generation-Service-Interface (NGSI-v2) API specification has been
  well-developed. There is also a variety of reusable software
  components, so-called Generic Enablers
  (<ext-link ext-link-type="uri" xlink:href="https://github.com/FIWARE-GEs">GEs</ext-link>),
  complying with NGSI-v2
  (<xref alt="Cantera Fonseca et al., 2018" rid="ref-canterafonsecaFIWARENGSIV2Specification" ref-type="bibr">Cantera
  Fonseca et al., 2018</xref>), including
  <ext-link ext-link-type="uri" xlink:href="https://github.com/telefonicaid/fiware-orion">Orion
  Context Broker</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://github.com/telefonicaid/iotagent-node-lib">IoT
  Agent</ext-link>, and
  <ext-link ext-link-type="uri" xlink:href="https://github.com/orchestracities/ngsi-timeseries-api?tab=readme-ov-file">QuantumLeap</ext-link>.
  These components play a pivotal role in core context information
  management, IoT device connectivity, and time-series database
  interaction
  (<xref alt="FIWARE Catalogue – FIWARE, 2023" rid="ref-fiwareU003A2023" ref-type="bibr"><italic>FIWARE
  Catalogue – FIWARE</italic>, 2023</xref>).</p>
  <p>In this context, we developed FiLiP, a Python Software Development
  Kit (SDK) designed to accelerate the development of services that
  interact with the aforementioned FIWARE GEs. FiLiP emerges as a
  powerful tool, particularly in the domain of energy management
  systems, where it simplifies development, enhances efficiency, and
  empowers developers to create reliable and reusable IoT applications,
  aligning with the digital transformation facilitated by FIWARE.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The NGSI-v2 specification defines a standardized RESTful API to
  represent, exchange and manage context information throughout its
  entire lifecycle
  (<xref alt="Cantera Fonseca et al., 2018" rid="ref-canterafonsecaFIWARENGSIV2Specification" ref-type="bibr">Cantera
  Fonseca et al., 2018</xref>). Researchers or application developers
  can refer to the specifications and build reliable and interoperable
  data systems. However, NGSI-v2 is a general cross-domain specification
  and does not provide any domain-specific information models. Although
  it defines the general data structure of entities, the definition of
  domain-specific attributes and metadata information remains in the
  responsibility of the users. Hence, adopting the specification for
  domain-specific engineering applications requires extensive training
  in both data modeling and programming of IoT applications.
  Additionally, the specification has continuously evolved over time,
  necessitating significant efforts to define domain-specific data
  models and to ensure that applications and models comply with the
  latest specification.</p>
  <p>Existing FIWARE APIs client libraries can already provide some
  basic support but often fall short in several key areas. A comparison
  as shown in Table <xref alt="1" rid="Comparison">1</xref> reveals the
  shortage of various existing libraries, including limited support for
  multiple FIWARE APIs, lack of advanced validation and data models
  integration, and unsatisfactory usability and reliability.</p>
  <table-wrap>
    <caption>
      <p>Comparison of FiLiP with existing FIWARE APIs client libraries.
      “-” indicates that the feature is not supported or not available.
      “*” indicates that the feature is available but
      incomplete.<styled-content id="Comparison"></styled-content></p>
    </caption>
    <table>
      <colgroup>
        <col width="24%" />
        <col width="27%" />
        <col width="9%" />
        <col width="10%" />
        <col width="19%" />
        <col width="10%" />
      </colgroup>
      <thead>
        <tr>
          <th>Library</th>
          <th>API Support</th>
          <th>Validation</th>
          <th>Datamodel</th>
          <th>Learning Support</th>
          <th>Test Cases</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>QuantumLeapClient
          (<xref alt="“QLClient,” 2024" rid="ref-QuantumLeapClient" ref-type="bibr">“QLClient,”
          2024</xref>)</td>
          <td>TS</td>
          <td>-</td>
          <td>-</td>
          <td>Readme file</td>
          <td>18</td>
        </tr>
        <tr>
          <td>fiware-ngsi-api
          (<xref alt="“Fiware-Api,” 2024" rid="ref-fiware-ngsi-api" ref-type="bibr">“Fiware-Api,”
          2024</xref>)</td>
          <td>D, E</td>
          <td>Basic</td>
          <td>Proprietary</td>
          <td>-</td>
          <td>-</td>
        </tr>
        <tr>
          <td>fiot-client-ngsi-python
          (<xref alt="“Fiot-Client,” 2024" rid="ref-fiot-client-ngsi-python" ref-type="bibr">“Fiot-Client,”
          2024</xref>)</td>
          <td>D*, E, S</td>
          <td>-</td>
          <td>-</td>
          <td>Readme file</td>
          <td>31</td>
        </tr>
        <tr>
          <td>orion-python-client
          (<xref alt="“Orion-Client,” 2024" rid="ref-orion-python-client" ref-type="bibr">“Orion-Client,”
          2024</xref>)</td>
          <td>E, S*</td>
          <td>-</td>
          <td>-</td>
          <td>Readme file</td>
          <td>1</td>
        </tr>
        <tr>
          <td>FiLiP</td>
          <td>Device (D), Entity (E), Subscription (S), TimeSeries
          (TS)</td>
          <td>Enhanced</td>
          <td>Customizable</td>
          <td>Documentation, 12 examples, and 8 tutorials</td>
          <td>82 (84% coverage)</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <p>Although FIWARE provides OpenAPI specifications
  (<xref alt="OpenAPI Specification, 2023" rid="ref-openapi" ref-type="bibr"><italic>OpenAPI
  Specification</italic>, 2023</xref>)
  (<xref alt="Cantera Fonseca et al., 2018" rid="ref-canterafonsecaFIWARENGSIV2Specification" ref-type="bibr">Cantera
  Fonseca et al., 2018</xref>), which can be used to automatically
  generate API clients for various programming languages, there are
  still issues that make those auto-generated API clients less
  reliable:</p>
  <list list-type="bullet">
    <list-item>
      <p>The quality of auto-generated code strongly depends on the
      provided input data, i.e. OpenAPI specification.</p>
    </list-item>
    <list-item>
      <p>Integrating additional features is generally not viable because
      manipulating the generated code can result in larger maintenance
      efforts.</p>
    </list-item>
    <list-item>
      <p>The generated clients do not enable advanced data validation
      and reasonable error handling.</p>
    </list-item>
  </list>
  <p>As a result, the lack of a comprehensive and reliable tool kit
  continues to hinder the adoption of FIWARE-based platforms in research
  fields and industrial applications. To overcome the aforementioned
  issues and shortcomings of the existing solutions, we present FiLiP
  (Fiware Library for Python).</p>
</sec>
<sec id="implementation">
  <title>Implementation</title>
  <p>As the name suggests, the library is written in Python and provides
  a set of client classes for typical recurring GEs for IoT systems.
  Currently, FiLiP supports Orion Context Broker for central data
  management, IoT Agent for modular IoT-Interfaces, and QuantumLeap for
  time-series management. The interactions with the API endpoints are
  implemented as methods of these corresponding
  <italic>“Clients”</italic>. For example, the
  <monospace>ContextBrokerClient</monospace> implements typical CRUD
  (create, read, update, and delete) operations for the NGSI-v2 Context
  Broker. By encapsulating API interactions in these specialized
  clients, FiLiP eliminates the necessity for users to create unreliable
  data models and consult API documentation for endpoint details.
  Instead, users can directly invoke clients’ methods of FiLiP, thereby
  automating the composition and dispatch of the requisite CRUD
  operations. This feature greatly reduces the difficulty of getting
  started with the FIWARE-based platform and also accelerates the
  development of applications.</p>
  <p>To enhance the efficiency of service development, FiLiP offers a
  range of advanced functionalities. One of them is the robust and
  enhanced implementation of data parsing and validation via the
  Pydantic library
  (<xref alt="“Pydantic,” 2023" rid="ref-pydantic" ref-type="bibr">“Pydantic,”
  2023</xref>). The information models defined by NGSI-v2 API standards
  are implemented as Pydantic data models in FiLiP. In addition to basic
  validation tasks such as verifying the <monospace>id</monospace> and
  <monospace>type</monospace> required to identify an entity, FiLiP
  offers numerous enhanced validation functionalities. For instance, we
  have developed a custom validator that checks the unit specified in
  metadata based on UN/CEFACT standards
  (<xref alt="“Codes for Units of Measure Used in International Trade,” 2021" rid="ref-uncefact" ref-type="bibr">“Codes
  for Units of Measure Used in International Trade,” 2021</xref>). When
  these validations are successful, the validator enriches the metadata
  with additional information such as symbol, conversion factor, and
  description. This enhanced validation functionality ensures data
  quality and integrity in interactions with FIWARE GEs, while also
  reducing the effort required from developers.</p>
  <p>Another enhanced functionality of FiLiP is the data model
  integration. In practice, individual domains often necessitate
  domain-specific, and even application-specific data models to meet
  distinct requirements. The FiLiP <italic>“Models”</italic>, e.g.,
  <monospace>ContextEntity</monospace> and
  <monospace>ContextEntityKeyValues</monospace>, facilitate this process
  by offering parent classes that ensure adherence to FIWARE API
  standards. Consequently, specific attributes can be defined to
  construct data models tailored to particular use cases, while the
  compliance with FIWARE is also validated and ensured by the provided
  FiLiP <italic>“Models”</italic>.</p>
  <p>Since <italic>“Clients”</italic> and <italic>“Models”</italic>
  constitute the core features of FiLiP, the reliability of these
  components is pivotal to the overall usability and effectiveness of
  the library. In the realm of open-source software development,
  maintaining code quality and dependability is paramount. FiLiP
  accomplishes this by implementing 82 test cases based on the Python
  unit testing framework
  (<xref alt="“Unitest,” 2023" rid="ref-unitest" ref-type="bibr">“Unitest,”
  2023</xref>), currently covering over 80 % of the code base.</p>
  <p>In general, the abstraction of API endpoints, implementation of
  data parsing and enhanced validation, and the comprehensive testing
  workflow enable FiLiP to simplify the development process of
  applications by reducing the need for API specification reading,
  manual data checking, and functional validation within the application
  code. Thus, FiLiP effectively avoids the use for unreliable
  boilerplate code, thereby reducing overall development and maintenance
  costs.</p>
</sec>
<sec id="use-case">
  <title>Use Case</title>
  <p>FiLiP has already been used to deploy various cloud-based building
  energy management systems
  (<xref alt="Blechmann et al., 2023" rid="ref-blechmann_open_2023" ref-type="bibr">Blechmann
  et al., 2023</xref>;
  <xref alt="Kümpel et al., 2019" rid="ref-kumpel_cloud_2019" ref-type="bibr">Kümpel
  et al., 2019</xref>;
  <xref alt="T. Storek et al., 2019" rid="ref-storek_application_2019" ref-type="bibr">T.
  Storek et al., 2019</xref>). Among those, one simplified use case is
  to regulate the indoor air temperature of an office via IoT-enabled
  devices and a simple controller.
  <xref alt="[fig:usecase]" rid="figU003Ausecase">[fig:usecase]</xref>
  shows an office in a building equipped with two smart devices: a smart
  temperature sensor and a smart electrical heater, which can send
  measurements or receive commands, respectively, via Message Queuing
  Telemetry Transport (MQTT) protocol. FiLiP provides reliable
  functionalities to deploy and commission a control service
  efficiently.</p>
  <fig>
    <caption><p>Use Case Overview: Intelligent Room Temperature
    Regulation.<styled-content id="figU003Ausecase"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="usecase.png" />
  </fig>
  <p>To establish the communication workflow, entities and IoT devices
  must be registered in the corresponding FIWARE components, i.e.,
  Context Broker and IoT Agent. In the following example, by using
  FiLiP, an office room can be registered using
  <monospace>post_entity()</monospace> method of the
  <monospace>ContextBrokerClient</monospace>. An entity object of the
  office is created using the <monospace>ContextEntity</monospace>
  class, which specifies those mandatory properties of the office and
  can validate their compliance. Similarly, a temperature sensor and a
  heater can also be registered as IoT devices by calling
  <monospace>post_device()</monospace> method of the
  <monospace>IoTAgentClient</monospace> of FiLiP. The classes
  <monospace>Device</monospace> and
  <monospace>DeviceAttribute</monospace> help to create the device
  models more efficiently and correctly. Especially for the various
  setting parameters of <monospace>Device</monospace>,
  e.g. <monospace>transport</monospace> and
  <monospace>protocol</monospace>, the validation can avoid ambiguity
  and significantly simplifies the development.</p>
  <code language="python"># create entities
office = ContextEntity(id=&quot;Office:001&quot;, type=&quot;Office&quot;)
context_broker_client.post_entity(entity=office)

# provision IoT sensor
t_zone = DeviceAttribute(name='temperature', type=&quot;Number&quot;)
temperature_sensor = Device(
    device_id='device:001',
    entity_name='TemperatureSensor:001',
    entity_type='TemperatureSensor',
    protocol='IoTA-JSON',
    transport='MQTT',
    apikey=APIKEY,
    attributes=[t_zone])
iot_client.post_device(device=temperature_sensor)

# provision IoT actuator
heating_power = NamedCommand(name=&quot;heating_power&quot;)
heater = Device(
    device_id='device:002',
    entity_name='Heater:001',
    entity_type='Heater',
    protocol='IoTA-JSON',
    transport='MQTT',
    apikey=APIKEY,
    commands=[heating_power])
iot_client.post_device(device=heater)</code>
  <p>Besides, FiLiP can be used to add semantic information to the data
  points. In the example below, the temperature sensor is associated
  with the office through a relationship labeled
  <monospace>hasSensor</monospace>. Another relationship
  <monospace>locatedIn</monospace> can further link this office with a
  building, provided that the entity of that building already
  exists.</p>
  <code language="python"># add semantic information
hasSensor = NamedContextAttribute(
    name=&quot;hasSensor&quot;,
    type=&quot;Relationship&quot;,
    value=temperature_sensor.entity_name)

locatedIn = NamedContextAttribute(
    name=&quot;locatedIn&quot;,
    type=&quot;Relationship&quot;,
    value=building.id)

office.add_attributes(attrs=[hasSensor, locatedIn])</code>
  <p>To this end, data can be exchanged between the FIWARE-based
  platform and the smart devices. A controller can then be deployed as a
  cloud service to regulate the indoor temperature of the office. With
  the help of FiLiP, a communication interface between the controller
  and the FIWARE GEs can be efficiently established as well.</p>
  <code language="python"># retrieve data from the temperature sensor
temperature = context_broker_client.get_attribute_value(
    entity_id=temperature_sensor.entity_name,
    entity_type=temperature_sensor.type,
    attr_name=t_zone.name)

# calculate new set point with controller logic
heating_power.value = controller_logic(temperature=temperature)


# send command to the heater entity
context_broker_client.post_command(
    entity_id=heater.id,
    entity_type=heater.type,
    command=heating_power)</code>
  <p>The presented use case exemplifies how FiLiP plays a pivotal role
  in the implementation of IoT-enabled applications using FIWARE GEs. To
  shorten the learning curve for developers and researchers, we provide
  examples for individual functions as entry points and comprehensive
  workshop materials for developing a complete FIWARE-based application
  leveraging FiLiP
  (<xref alt="Thomas Storek &amp; Müller, 2023" rid="ref-storekFIWAREEnergySystem2023" ref-type="bibr">Thomas
  Storek &amp; Müller, 2023</xref>). Hence, developers can efficiently
  get informed and focus on building innovative IoT solutions.</p>
</sec>
<sec id="conclusion">
  <title>Conclusion</title>
  <p>The primary strengths of using FiLiP encompass the following key
  aspects:</p>
  <list list-type="bullet">
    <list-item>
      <p><bold>Simplified Development</bold>: FiLiP simplifies
      interaction with FIWARE GEs by providing classes like
      <monospace>ContextEntity</monospace> and
      <monospace>Device</monospace>, ensuring validated data exchange
      and informed decisions without advanced expertise.</p>
    </list-item>
    <list-item>
      <p><bold>Maintainable Applications</bold>: FiLiP encapsulates API
      interactions within class methods, separating application logic
      from the dynamic evolving NGSI-v2 APIs. This approach enhances
      application reusability and maintainability.</p>
    </list-item>
    <list-item>
      <p><bold>Reliable Functionalities</bold>: FiLiP’s comprehensive
      testing, with over 80% coverage, ensures code quality and allows
      developers to focus on developing applications.</p>
    </list-item>
  </list>
  <p>In conclusion, FiLiP is a robust and reliable tool. With FiLiP,
  developers can efficiently create innovative IoT applications, and
  researchers can explore smart solutions in various domains, including
  energy management and beyond.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We gratefully acknowledge the financial support provided by the
  Federal Ministry for Economic Affairs and Climate Action (BMWK),
  promotional references 03ET1495A, 03ET1551A, 0350018A, 03ET1561B,
  03EN1030B.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-kumpel_cloud_2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kümpel</surname><given-names>Alexander</given-names></name>
        <name><surname>Storek</surname><given-names>Thomas</given-names></name>
        <name><surname>Baranski</surname><given-names>Marc</given-names></name>
        <name><surname>Schumacher</surname><given-names>Markus</given-names></name>
        <name><surname>Müller</surname><given-names>Dirk</given-names></name>
      </person-group>
      <article-title>A cloud-based operation optimization of building energy systems using a hierarchical multi-agent control</article-title>
      <source>Journal of Physics: Conference Series</source>
      <year iso-8601-date="2019-11">2019</year><month>11</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-11-06">2023</year><month>11</month><day>06</day></date-in-citation>
      <volume>1343</volume>
      <issue>1</issue>
      <issn>1742-6596</issn>
      <uri>https://dx.doi.org/10.1088/1742-6596/1343/1/012053</uri>
      <pub-id pub-id-type="doi">10.1088/1742-6596/1343/1/012053</pub-id>
      <fpage>012053</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-storek_application_2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Storek</surname><given-names>T.</given-names></name>
        <name><surname>Lohmöller</surname><given-names>J.</given-names></name>
        <name><surname>Kümpel</surname><given-names>A.</given-names></name>
        <name><surname>Baranski</surname><given-names>M.</given-names></name>
        <name><surname>Müller</surname><given-names>D.</given-names></name>
      </person-group>
      <article-title>Application of the open-source cloud platform FIWARE for future building energy management systems</article-title>
      <source>Journal of Physics: Conference Series</source>
      <year iso-8601-date="2019-11">2019</year><month>11</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-11-06">2023</year><month>11</month><day>06</day></date-in-citation>
      <volume>1343</volume>
      <issue>1</issue>
      <issn>1742-6596</issn>
      <uri>https://dx.doi.org/10.1088/1742-6596/1343/1/012063</uri>
      <pub-id pub-id-type="doi">10.1088/1742-6596/1343/1/012063</pub-id>
      <fpage>012063</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-fiwareU003A2023">
    <element-citation publication-type="webpage">
      <article-title>FIWARE catalogue – FIWARE</article-title>
      <year iso-8601-date="2023-06-26">2023</year><month>06</month><day>26</day>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-11-06">2023</year><month>11</month><day>06</day></date-in-citation>
      <uri>https://www.fiware.org/catalogue/</uri>
    </element-citation>
  </ref>
  <ref id="ref-openapi">
    <element-citation publication-type="webpage">
      <article-title>OpenAPI specification</article-title>
      <year iso-8601-date="2023-11-06">2023</year><month>11</month><day>06</day>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-11-06">2023</year><month>11</month><day>06</day></date-in-citation>
      <uri>https://www.openapis.org/</uri>
    </element-citation>
  </ref>
  <ref id="ref-uncefact">
    <element-citation>
      <article-title>Codes for units of measure used in international trade</article-title>
      <source>UNECE Code List Recommendations</source>
      <publisher-name>UN Centre for Trade Facilitation</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <uri>https://unece.org/trade/uncefact/cl-recommendations</uri>
    </element-citation>
  </ref>
  <ref id="ref-pydantic">
    <element-citation>
      <article-title>Pydantic: Data validation using python type hint</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/pydantic/pydantic</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.10185654</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-unitest">
    <element-citation>
      <article-title>Unitest: Unit testing framework</article-title>
      <source>Python Documentation</source>
      <publisher-name>Python</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://docs.python.org/3/library/unittest.html</uri>
    </element-citation>
  </ref>
  <ref id="ref-QuantumLeapClient">
    <element-citation>
      <article-title>QLClient</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <uri>https://github.com/OkinawaOpenLaboratory/QuantumLeapClient</uri>
    </element-citation>
  </ref>
  <ref id="ref-fiware-ngsi-api">
    <element-citation>
      <article-title>Fiware-api</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <uri>https://github.com/robotics-4-all/fiware-ngsi-api</uri>
    </element-citation>
  </ref>
  <ref id="ref-fiot-client-ngsi-python">
    <element-citation>
      <article-title>Fiot-client</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <uri>https://github.com/FIoT-Client/fiot-client-ngsi-python</uri>
    </element-citation>
  </ref>
  <ref id="ref-orion-python-client">
    <element-citation>
      <article-title>Orion-client</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <uri>https://github.com/openath/orion-python-client</uri>
    </element-citation>
  </ref>
  <ref id="ref-canterafonsecaFIWARENGSIV2Specification">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Cantera Fonseca</surname><given-names>José Manuel</given-names></name>
        <name><surname>Márquez</surname><given-names>Fermín Galán</given-names></name>
        <name><surname>Jacobs</surname><given-names>Tobias</given-names></name>
      </person-group>
      <article-title>FIWARE-NGSI v2 Specification</article-title>
      <year iso-8601-date="2018">2018</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-12-15">2023</year><month>12</month><day>15</day></date-in-citation>
    </element-citation>
  </ref>
  <ref id="ref-storekFIWAREEnergySystem2023">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Storek</surname><given-names>Thomas</given-names></name>
        <name><surname>Müller</surname><given-names>Dirk</given-names></name>
      </person-group>
      <article-title>FIWARE for Energy System Engineers: An Introduction to FIWARE-based Applications in Python</article-title>
      <year iso-8601-date="2023">2023</year>
      <pub-id pub-id-type="doi">10.18154/RWTH-2022-11779</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-blechmann_open_2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Blechmann</surname><given-names>Sebastian</given-names></name>
        <name><surname>Sowa</surname><given-names>Igor</given-names></name>
        <name><surname>Schraven</surname><given-names>Markus Hans</given-names></name>
        <name><surname>Streblow</surname><given-names>Rita</given-names></name>
        <name><surname>Müller</surname><given-names>Dirk</given-names></name>
        <name><surname>Monti</surname><given-names>Antonello</given-names></name>
      </person-group>
      <article-title>Open source platform application for smart building and smart grid controls</article-title>
      <source>Automation in Construction</source>
      <year iso-8601-date="2023-01-01">2023</year><month>01</month><day>01</day>
      <date-in-citation content-type="access-date"><year iso-8601-date="2022-11-02">2022</year><month>11</month><day>02</day></date-in-citation>
      <volume>145</volume>
      <issn>0926-5805</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S0926580522004927</uri>
      <pub-id pub-id-type="doi">10.1016/j.autcon.2022.104622</pub-id>
      <fpage>104622</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-araujo_performance_2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Araujo</surname><given-names>Victor</given-names></name>
        <name><surname>Mitra</surname><given-names>Karan</given-names></name>
        <name><surname>Saguna</surname><given-names>Saguna</given-names></name>
        <name><surname>Åhlund</surname><given-names>Christer</given-names></name>
      </person-group>
      <article-title>Performance evaluation of FIWARE: A cloud-based IoT platform for smart cities</article-title>
      <source>Journal of Parallel and Distributed Computing</source>
      <year iso-8601-date="2019">2019</year>
      <volume>132</volume>
      <issn>0743-7315</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S0743731519300164</uri>
      <pub-id pub-id-type="doi">10.1016/j.jpdc.2018.12.010</pub-id>
      <fpage>250</fpage>
      <lpage>261</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
