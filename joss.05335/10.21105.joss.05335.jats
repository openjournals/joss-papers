<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">5335</article-id>
<article-id pub-id-type="doi">10.21105/joss.05335</article-id>
<title-group>
<article-title>chombo-discharge: An AMR code for gas discharge
simulations in complex geometries</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-1706-9736</contrib-id>
<name>
<surname>Marskar</surname>
<given-names>Robert</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>SINTEF Energy Research, Norway</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-01-05">
<day>5</day>
<month>1</month>
<year>2023</year>
</pub-date>
<volume>8</volume>
<issue>85</issue>
<fpage>5335</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>astronomy</kwd>
<kwd>dynamics</kwd>
<kwd>galactic dynamics</kwd>
<kwd>milky way</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>chombo-discharge is a parallelized Cartesian 2D and 3D adaptive
  code for simulating low-temperature gas discharges in complex
  geometries. Such discharges occur when electrons accelerate in strong
  electric fields and ionize the gas, and further evolution is affected
  by residual space charges. Streamers, for example, are filamentary
  plasma dominated by space charge effects. They are the natural
  precursors to leader, sparks, and lightning.</p>
  <p>Gas discharge modeling involves simulations over multiple scales in
  time and space. chombo-discharge reduces the cost of such simulations
  by using Cartesian Adaptive Mesh Refinement (AMR). It also provides
  support for multi-material complex geometries (gas phase, electrodes,
  and solid dielectrics) through an embedded boundary (EB) formulation.
  Geometries are represented as implicit functions, and can be created
  using constructive solid geometry. Conversion of surface meshes to
  implicit functions is also supported. Under the hood, chombo-discharge
  uses Chombo
  (<xref alt="Colella et al., 2000" rid="ref-ebchombo" ref-type="bibr">Colella
  et al., 2000</xref>) for the AMR and EB infrastructure, and is
  parallelized using MPI. However, chombo-discharge supplies all
  numerical solvers.</p>
  <p>chombo-discharge uses a solver-centered modular design where larger
  applications are developed by coupling numerical solvers in the
  chombo-discharge base code, using C++ interfaces. Many solvers already
  exist in chombo-discharge, all of which are parallelized and
  compatible with EBs and AMR:</p>
  <list list-type="bullet">
    <list-item>
      <p>Advection-diffusion-reaction solvers.</p>
    </list-item>
    <list-item>
      <p>Helmholtz equation solvers, using geometric multigrid.</p>
    </list-item>
    <list-item>
      <p>An electrostatic solver (with support for discontinuous
      coefficients).</p>
    </list-item>
    <list-item>
      <p>Kinetic Monte Carlo chemistry solvers.</p>
    </list-item>
    <list-item>
      <p>Radiative transfer solvers (continuum and Monte Carlo).</p>
    </list-item>
    <list-item>
      <p>Various particle solvers, e.g., for Monte Carlo radiative
      transfer, tracer particles, and microscopic drift-diffusion.</p>
    </list-item>
    <list-item>
      <p>ODE solvers defined over volume or surface meshes.</p>
    </list-item>
  </list>
  <p>All solvers exist as stand-alone applications, and many of them are
  also coupled through more complex physics applications that aim at
  resolving different types of discharge phenomena (e.g., statistical
  inception models, or particle and fluid models of streamer
  discharges). The interaction of these solvers occurs through a common
  AMR “core”, which can also use dual grids where e.g. fluid and
  particle kernels are load-balanced separately. Depending on their
  needs, users can therefore enter the framework at several levels. For
  example, they need to learn interfaces when using existing
  applications (e.g., streamer models); use C++ APIs if developing new
  physics applications, or use the EB-AMR infrastructure if contributing
  with new solvers.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>There is already a number of discharge simulation codes currently
  available. Commercial codes used for simulating discharges include
  COMSOL
  (<xref alt="Jovanović et al., 2021" rid="ref-mcplas" ref-type="bibr">Jovanović
  et al., 2021</xref>), ANSYS Fluent
  (<xref alt="Niknezhad et al., 2021" rid="ref-Niknezhad_2021" ref-type="bibr">Niknezhad
  et al., 2021</xref>), and PLASIMO
  (<xref alt="Dijk et al., 2009" rid="ref-plasimo" ref-type="bibr">Dijk
  et al., 2009</xref>). Another example is Afivo-streamer
  (<xref alt="Teunissen &amp; Ebert, 2017" rid="ref-TeunissenU003A2017" ref-type="bibr">Teunissen
  &amp; Ebert, 2017</xref>), which is also open source and uses
  Cartesian AMR.</p>
  <p>While chombo-discharge is not the only open-source discharge
  simulation code, it has a number of unique features. In particular,
  chombo-discharge supports complex geometries, and is therefore useful
  in many discharge-related science applications. Support for AMR is
  also important, as AMR is a virtual requirement in many 3D
  applications (certainly the ones involving filamentary plasma). The
  code is also quite performant, and its design pattern permits a
  flexible and extensible approach to numerically solving various
  discharge-related problems, even when these end up requiring many
  thousands of CPU cores. Originally, the code was written for studying
  pre-breakdown discharges in high-voltage equipment
  (<xref alt="Marskar, 2019" rid="ref-MarskarU003A2019" ref-type="bibr">Marskar,
  2019</xref>), but over time it has been adapted in order to fit a
  wider category of discharge-related problems. Two science examples are
  given in
  <xref alt="[fig:surface]" rid="figU003Asurface">[fig:surface]</xref>
  (HV technology) and
  <xref alt="[fig:corona]" rid="figU003Acorona">[fig:corona]</xref>
  (pulsed discharge). Lightning initiation investigations (from
  hydrometeors), plasma medicine, and plasma-assisted combustion are
  other examples where chombo-discharge could potentially be used.</p>
  <fig>
    <caption><p>2D Surface discharges over complex surfaces
    (<xref alt="Meyer et al., 2022" rid="ref-MeyerU003A2022" ref-type="bibr">Meyer
    et al., 2022</xref>). Top: Electrode (shaded region) and dielectric
    (profiled surface). Bottom left panel: Electric field magnitude.
    Bottom right panel: Plasma density.
    <styled-content id="figU003Asurface"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/figures/SquareEvolution.pdf" />
  </fig>
  <fig>
    <caption><p>Streamer discharge tree simulation in full 3D using
    Kinetic Monte Carlo. The two figures show the same discharge, viewed
    from the side and from the bottom.
    <styled-content id="figU003Acorona"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/figures/ItoKMC.pdf" />
  </fig>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The development of chombo-discharge was partially achieved through
  funding by the Research Council of Norway through grants 245422,
  319930/E20, and 321449.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-MarskarU003A2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Marskar</surname><given-names>R</given-names></name>
      </person-group>
      <article-title>An adaptive cartesian embedded boundary approach for fluid simulations of two- and three-dimensional low temperature plasma filaments in complex geometries</article-title>
      <source>Journal of Computational Physics</source>
      <year iso-8601-date="2019">2019</year>
      <uri>https://doi.org/10.1016/j.jcp.2019.03.036</uri>
      <pub-id pub-id-type="doi">10.1016/j.jcp.2019.03.036</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-plasimo">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Dijk</surname><given-names>Jan van</given-names></name>
        <name><surname>Peerenboom</surname><given-names>Kim</given-names></name>
        <name><surname>Jimenez</surname><given-names>Manuel</given-names></name>
        <name><surname>Mihailova</surname><given-names>Diana</given-names></name>
        <name><surname>Mullen</surname><given-names>Joost van der</given-names></name>
      </person-group>
      <article-title>The plasma modelling toolkit plasimo</article-title>
      <source>Journal of Physics D: Applied Physics</source>
      <year iso-8601-date="2009-09">2009</year><month>09</month>
      <volume>42</volume>
      <issue>19</issue>
      <uri>https://dx.doi.org/10.1088/0022-3727/42/19/194012</uri>
      <pub-id pub-id-type="doi">10.1088/0022-3727/42/19/194012</pub-id>
      <fpage>194012</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Niknezhad_2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Niknezhad</surname><given-names>M</given-names></name>
        <name><surname>Chanrion</surname><given-names>O</given-names></name>
        <name><surname>Köhn</surname><given-names>C</given-names></name>
        <name><surname>Holbøll</surname><given-names>J</given-names></name>
        <name><surname>Neubert</surname><given-names>T</given-names></name>
      </person-group>
      <article-title>A three-dimensional model of streamer discharges in unsteady airflow</article-title>
      <source>Plasma Sources Science and Technology</source>
      <publisher-name>IOP Publishing</publisher-name>
      <year iso-8601-date="2021-04">2021</year><month>04</month>
      <volume>30</volume>
      <issue>4</issue>
      <uri>https://dx.doi.org/10.1088/1361-6595/abefa6</uri>
      <pub-id pub-id-type="doi">10.1088/1361-6595/abefa6</pub-id>
      <fpage>045012</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-mcplas">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Jovanović</surname><given-names>Aleksandar P.</given-names></name>
        <name><surname>Stankov</surname><given-names>Marjan N.</given-names></name>
        <name><surname>Loffhagen</surname><given-names>Detlef</given-names></name>
        <name><surname>Becker</surname><given-names>Markus M.</given-names></name>
      </person-group>
      <article-title>Automated fluid model generation and numerical analysis of dielectric barrier discharges using comsol</article-title>
      <source>IEEE Transactions on Plasma Science</source>
      <year iso-8601-date="2021">2021</year>
      <volume>49</volume>
      <issue>11</issue>
      <pub-id pub-id-type="doi">10.1109/TPS.2021.3120507</pub-id>
      <fpage>3710</fpage>
      <lpage>3718</lpage>
    </element-citation>
  </ref>
  <ref id="ref-TeunissenU003A2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Teunissen</surname><given-names>J</given-names></name>
        <name><surname>Ebert</surname><given-names>E</given-names></name>
      </person-group>
      <article-title>Simulating streamer discharges in 3D with the parallel adaptive afivo framework</article-title>
      <source>Journal of Physics D: Applied Physics</source>
      <year iso-8601-date="2017-11">2017</year><month>11</month>
      <volume>50</volume>
      <uri>https://doi.org/10.1088/1361-6463/aa8faf</uri>
      <pub-id pub-id-type="doi">10.1088/1361-6463/aa8faf</pub-id>
      <fpage>474001</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-MeyerU003A2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Meyer</surname><given-names>H K H</given-names></name>
        <name><surname>Marskar</surname><given-names>R</given-names></name>
        <name><surname>Mauseth</surname><given-names>F</given-names></name>
      </person-group>
      <article-title>Evolution of positive streamers in air over non-planar dielectrics: Experiments and simulations</article-title>
      <source>Plasma Sources Science and Technology</source>
      <year iso-8601-date="2022">2022</year>
      <volume>31</volume>
      <uri>https://doi.org/10.1088/1361-6595/aca0be</uri>
      <pub-id pub-id-type="doi">10.1088/1361-6595/aca0be</pub-id>
      <fpage>114006</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-ebchombo">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Colella</surname><given-names>P</given-names></name>
        <name><surname>Graves</surname><given-names>D T</given-names></name>
        <name><surname>Ligocki</surname><given-names>T J</given-names></name>
        <name><surname>Miller</surname><given-names>G H</given-names></name>
        <name><surname>Modiano</surname><given-names>D</given-names></name>
        <name><surname>Schwartz</surname><given-names>P O</given-names></name>
        <name><surname>Van Straalen</surname><given-names>B</given-names></name>
        <name><surname>Pillod</surname><given-names>J</given-names></name>
        <name><surname>Trebotich</surname><given-names>D</given-names></name>
        <name><surname>Barad</surname><given-names>M</given-names></name>
      </person-group>
      <article-title>EBChombo software package for cartesian grid, embedded boundary applications</article-title>
      <publisher-name>Technical Report LBNL-6615E; Lawrence Berkeley National Laboratory</publisher-name>
      <year iso-8601-date="2000">2000</year>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
