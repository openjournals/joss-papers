<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">7947</article-id>
<article-id pub-id-type="doi">10.21105/joss.07947</article-id>
<title-group>
<article-title>pykoop: a Python Library for Koopman Operator
Approximation</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-4930-9634</contrib-id>
<name>
<surname>Dahdah</surname>
<given-names>Steven</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-1987-9268</contrib-id>
<name>
<surname>Forbes</surname>
<given-names>James Richard</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Mechanical Engineering, McGill University,
Montreal QC, Canada</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-09-26">
<day>26</day>
<month>9</month>
<year>2024</year>
</pub-date>
<volume>10</volume>
<issue>114</issue>
<fpage>7947</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>Koopman operator</kwd>
<kwd>system identification</kwd>
<kwd>differential equations</kwd>
<kwd>machine learning</kwd>
<kwd>dynamical systems</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><monospace>pykoop</monospace> is a Python package for learning
  differential equations in discretized form using the Koopman operator.
  Differential equations are an essential tool for modelling the
  physical world. Ordinary differential equations can be used to
  describe electric circuits, rigid-body dynamics, or chemical reaction
  rates, while the fundamental laws of electromagnetism, fluid dynamics,
  and heat transfer can be formulated as partial differential equations.
  The Koopman operator allows nonlinear differential equations to be
  rewritten as infinite-dimensional linear differential equations by
  viewing their time evolution in terms of an infinite number of
  nonlinear lifting functions. A finite-dimensional approximation of the
  Koopman operator can be identified from data given a user-selected set
  of lifting functions. Thanks to its linearity, the approximate Koopman
  model can be used for analysis, design, and optimal controller or
  observer synthesis for a wide range of systems using well-established
  linear tools. <monospace>pykoop</monospace>’s documentation, along
  with examples in script and notebook form, can be found at at
  <ext-link ext-link-type="uri" xlink:href="https://pykoop.readthedocs.io/en/stable/">pykoop.readthedocs.io/en/stable</ext-link>.
  Its releases are also archived on Zenodo
  (<xref alt="Dahdah &amp; Forbes, 2024b" rid="ref-pykoop" ref-type="bibr">Dahdah
  &amp; Forbes, 2024b</xref>).</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Designing Koopman lifting functions for a particular system is
  largely a trial-and-error process. As such,
  <monospace>pykoop</monospace> is designed to facilitate
  experimentation with Koopman lifting functions, with the ultimate goal
  of automating the lifting function optimization process. The
  <monospace>pykoop</monospace> library addresses three limitations in
  current Koopman operator approximation software packages. First,
  <monospace>pykoop</monospace> allows lifting functions to be
  constructed in a modular fashion, specifically through the composition
  of a series of lifting functions. Second, the library allows regressor
  hyperparameters and lifting functions to be selected automatically
  through full compatibility with <monospace>scikit-learn</monospace>’s
  (<xref alt="Pedregosa et al., 2011" rid="ref-scikit-learn" ref-type="bibr">Pedregosa
  et al., 2011</xref>) existing cross-validation infrastructure. Third,
  <monospace>pykoop</monospace> handles datasets with control inputs and
  multiple training episodes at all stages of the pipeline. Furthermore,
  <monospace>pykoop</monospace> implements state-of-the-art Koopman
  operator approximation methods that enforce stability in the
  identified system, either through direct constraints on its
  eigenvalues or by regularizing the regression problem using its
  <inline-formula><alternatives>
  <tex-math><![CDATA[\mathcal{H}_\infty]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ℋ</mml:mi><mml:mi>∞</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  norm
  (<xref alt="Dahdah &amp; Forbes, 2022" rid="ref-dahdah_system_2022" ref-type="bibr">Dahdah
  &amp; Forbes, 2022</xref>).</p>
  <p>Open-source Python libraries for Koopman operator approximation
  include <monospace>PyKoopman</monospace>
  (<xref alt="Pan et al., 2024" rid="ref-pykoopman" ref-type="bibr">Pan
  et al., 2024</xref>), <monospace>DLKoopman</monospace>
  (<xref alt="Dey &amp; Davis, 2023" rid="ref-dlkoopman" ref-type="bibr">Dey
  &amp; Davis, 2023</xref>), and <monospace>kooplearn</monospace>
  (<xref alt="Novelli &amp; Kostic, 2023" rid="ref-kooplearn" ref-type="bibr">Novelli
  &amp; Kostic, 2023</xref>). While <monospace>PyKoopman</monospace>
  provides a similar selection of lifting functions to
  <monospace>pykoop</monospace>, it does not allow lifting functions to
  be composed. Furthermore, the library does not include built-in
  functionality to handle multiple training episodes. Unlike
  <monospace>pykoop</monospace>, which focuses on discrete-time,
  <monospace>PyKoopman</monospace> is able to identify continuous-time
  Koopman operators. As such, the library includes several built-in
  numerical differentiation methods. Neural network lifting functions
  are also supported by <monospace>PyKoopman</monospace>. The
  <monospace>DLKoopman</monospace> library focuses on learning Koopman
  models using only neural network lifting functions, which are not
  implemented in <monospace>pykoop</monospace>. The library supports
  multiple training episodes but does not support exogenous inputs and
  does not follow the <monospace>scikit-learn</monospace> interface. The
  <monospace>kooplearn</monospace> library includes kernel and neural
  network approaches to learning Koopman models, but does not include
  other types of lifting functions. While multiple training episodes are
  handled by <monospace>kooplearn</monospace>, exogenous inputs are not.
  Note that <monospace>pykoop</monospace> allows users to import Koopman
  matrices identified using other libraries for comparison and
  evaluation, provided that the lifting functions used are
  supported.</p>
  <p>The main use cases for each Koopman operator approximation library
  are summarized below. Multiple training episodes are supported by
  <monospace>pykoop</monospace>, <monospace>DLKoopman</monospace>, and
  <monospace>kooplearn</monospace>. For use cases requiring neural
  network lifting functions, <monospace>PyKoopman</monospace>,
  <monospace>DLKoopman</monospace>, and <monospace>kooplearn</monospace>
  are all excellent options. The only package that currently supports
  continuous-time Koopman modelling is <monospace>PyKoopman</monospace>.
  For use cases that require composable lifting functions that can be
  optimized using standard hyperparameter selection tools, or for use
  cases that require control inputs, <monospace>pykoop</monospace> is
  the standout choice.</p>
</sec>
<sec id="scholarly-publications-using-pykoop">
  <title>Scholarly publications using
  <monospace>pykoop</monospace></title>
  <p>The Koopman operator regression methods proposed in Dahdah &amp;
  Forbes
  (<xref alt="2022" rid="ref-dahdah_system_2022" ref-type="bibr">2022</xref>)
  have been implemented within <monospace>pykoop</monospace>, while the
  methods proposed in Dahdah &amp; Forbes
  (<xref alt="2024a" rid="ref-dahdah_2024_closed-loop" ref-type="bibr">2024a</xref>),
  Lortie et al.
  (<xref alt="2024" rid="ref-lortie_2024_forward-backward" ref-type="bibr">2024</xref>),
  Lortie &amp; Forbes
  (<xref alt="2025" rid="ref-lortie_2024_asymptotically" ref-type="bibr">2025</xref>),
  and Dahdah &amp; Forbes
  (<xref alt="2024c" rid="ref-dahdah_2024_uncertainty" ref-type="bibr">2024c</xref>)
  are all based on <monospace>pykoop</monospace>, but are implemented in
  their own repositories.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This work was supported financially by the NSERC Discovery Grants
  program, the FRQNT, IVADO, CIFAR, the CRM, and by Mecademic through
  the Mitacs Accelerate program.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-scikit-learn">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Pedregosa</surname><given-names>F.</given-names></name>
        <name><surname>Varoquaux</surname><given-names>G.</given-names></name>
        <name><surname>Gramfort</surname><given-names>A.</given-names></name>
        <name><surname>Michel</surname><given-names>V.</given-names></name>
        <name><surname>Thirion</surname><given-names>B.</given-names></name>
        <name><surname>Grisel</surname><given-names>O.</given-names></name>
        <name><surname>Blondel</surname><given-names>M.</given-names></name>
        <name><surname>Prettenhofer</surname><given-names>P.</given-names></name>
        <name><surname>Weiss</surname><given-names>R.</given-names></name>
        <name><surname>Dubourg</surname><given-names>V.</given-names></name>
        <name><surname>Vanderplas</surname><given-names>J.</given-names></name>
        <name><surname>Passos</surname><given-names>A.</given-names></name>
        <name><surname>Cournapeau</surname><given-names>D.</given-names></name>
        <name><surname>Brucher</surname><given-names>M.</given-names></name>
        <name><surname>Perrot</surname><given-names>M.</given-names></name>
        <name><surname>Duchesnay</surname><given-names>E.</given-names></name>
      </person-group>
      <article-title>Scikit-learn: Machine learning in Python</article-title>
      <source>Journal of Machine Learning Research</source>
      <year iso-8601-date="2011">2011</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2024-08-12">2024</year><month>08</month><day>12</day></date-in-citation>
      <volume>12</volume>
      <uri>https://jmlr.csail.mit.edu/papers/v12/pedregosa11a.html</uri>
      <fpage>2825</fpage>
      <lpage>2830</lpage>
    </element-citation>
  </ref>
  <ref id="ref-pykoopman">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Pan</surname><given-names>Shaowu</given-names></name>
        <name><surname>Kaiser</surname><given-names>Eurika</given-names></name>
        <name><surname>Silva</surname><given-names>Brian M. de</given-names></name>
        <name><surname>Kutz</surname><given-names>J. Nathan</given-names></name>
        <name><surname>Brunton</surname><given-names>Steven L.</given-names></name>
      </person-group>
      <article-title>PyKoopman: A Python package for data-driven approximation of the Koopman operator</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <volume>9</volume>
      <issue>94</issue>
      <pub-id pub-id-type="doi">10.21105/joss.05881</pub-id>
      <fpage>5881</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-dlkoopman">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Dey</surname><given-names>Sourya</given-names></name>
        <name><surname>Davis</surname><given-names>Eric William</given-names></name>
      </person-group>
      <article-title>DLKoopman: A deep learning software package for Koopman theory</article-title>
      <source>Proceedings of machine learning research</source>
      <publisher-name>PMLR</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <volume>211</volume>
      <fpage>1467</fpage>
      <lpage>1479</lpage>
    </element-citation>
  </ref>
  <ref id="ref-kooplearn">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Novelli</surname><given-names>Pietro</given-names></name>
        <name><surname>Kostic</surname><given-names>Vladimir</given-names></name>
      </person-group>
      <article-title>Machine-Learning-Dynamical-Systems/kooplearn v1.1.0</article-title>
      <year iso-8601-date="2023">2023</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2024-08-06">2024</year><month>08</month><day>06</day></date-in-citation>
      <uri>https://github.com/Machine-Learning-Dynamical-Systems/kooplearn</uri>
    </element-citation>
  </ref>
  <ref id="ref-dahdah_system_2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Dahdah</surname><given-names>Steven</given-names></name>
        <name><surname>Forbes</surname><given-names>James R.</given-names></name>
      </person-group>
      <article-title>System norm regularization methods for Koopman operator approximation</article-title>
      <source>Proceedings of the Royal Society A</source>
      <publisher-name>The Royal Society</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <volume>478</volume>
      <issue>2265</issue>
      <pub-id pub-id-type="doi">10.1098/rspa.2022.0162</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-dahdah_2024_closed-loop">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Dahdah</surname><given-names>Steven</given-names></name>
        <name><surname>Forbes</surname><given-names>James Richard</given-names></name>
      </person-group>
      <article-title>Closed-loop Koopman operator approximation</article-title>
      <source>Machine Learning: Science and Technology</source>
      <publisher-name>IOP Publishing</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <volume>5</volume>
      <issue>2</issue>
      <pub-id pub-id-type="doi">10.1088/2632-2153/ad45b0</pub-id>
      <fpage>025038</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-lortie_2024_forward-backward">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lortie</surname><given-names>Louis</given-names></name>
        <name><surname>Dahdah</surname><given-names>Steven</given-names></name>
        <name><surname>Forbes</surname><given-names>James Richard</given-names></name>
      </person-group>
      <article-title>Forward-backward extended DMD with an asymptotic stability constraint</article-title>
      <source>arXiv:2403.10623v1[eess.SY]</source>
      <year iso-8601-date="2024">2024</year>
      <pub-id pub-id-type="doi">10.48550/arXiv.2403.10623</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-dahdah_2024_uncertainty">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Dahdah</surname><given-names>Steven</given-names></name>
        <name><surname>Forbes</surname><given-names>James Richard</given-names></name>
      </person-group>
      <article-title>Uncertainty modelling and robust observer synthesis using the Koopman operator</article-title>
      <source>arXiv:2410.01057v1[eess.SY]</source>
      <year iso-8601-date="2024">2024</year>
      <pub-id pub-id-type="doi">10.48550/arXiv.2410.01057</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-lortie_2024_asymptotically">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lortie</surname><given-names>Louis</given-names></name>
        <name><surname>Forbes</surname><given-names>James Richard</given-names></name>
      </person-group>
      <article-title>Asymptotically stable data-driven Koopman operator approximation with inputs using total extended DMD</article-title>
      <source>Machine Learning: Science and Technology</source>
      <publisher-name>IOP Publishing</publisher-name>
      <year iso-8601-date="2025">2025</year>
      <volume>6</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1088/2632-2153/ada33b</pub-id>
      <fpage>015003</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-pykoop">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Dahdah</surname><given-names>Steven</given-names></name>
        <name><surname>Forbes</surname><given-names>James Richard</given-names></name>
      </person-group>
      <article-title>decargroup/pykoop</article-title>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <pub-id pub-id-type="doi">10.5281/zenodo.5576490</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
