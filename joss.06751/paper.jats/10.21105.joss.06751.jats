<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6751</article-id>
<article-id pub-id-type="doi">10.21105/joss.06751</article-id>
<title-group>
<article-title>LiGuard: Interactively and Rapidly Create Point-Cloud and
Image Processing Pipelines</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0003-6377-8274</contrib-id>
<name>
<surname>Shahbaz</surname>
<given-names>Muhammad</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-7754-6341</contrib-id>
<name>
<surname>Agarwal</surname>
<given-names>Shaurya</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>University of Central Florida, USA</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-04-16">
<day>16</day>
<month>4</month>
<year>2024</year>
</pub-date>
<volume>10</volume>
<issue>110</issue>
<fpage>6751</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>GUI</kwd>
<kwd>Open3D</kwd>
<kwd>OpenCV</kwd>
<kwd>lidar</kwd>
<kwd>Point-Cloud Processing</kwd>
<kwd>Image Processing</kwd>
<kwd>Visualization</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>There is a growing interest in the development of lidar-based
  applications in domains like robotics, autonomous driving, traffic
  monitoring, infrastructure inspection, and many areas of environmental
  surveying and mapping. In many cases, these applications rely on
  solutions that are not end-to-end but rather a sequential combination
  (a pipeline) of individual data processing functions such as data
  readers, pre-processors, application-specific algorithms or models,
  post-processors, visualizers, etc. Creating such multi-step solutions
  often requires extensive revisions of the proposed processing
  pipeline, including enabling or disabling certain functions,
  fine-tuning parameters, and even completely replacing parts of the
  solution. Such revisions pose challenges to the speed of research and
  even to the reuse of it, due to interdependencies among functions. To
  address this issue, <monospace>LiGuard</monospace> is presented. It is
  a software framework that provides an easy-to-use graphical user
  interface (GUI) that helps researchers rapidly build and test their
  point cloud (and corresponding image) processing pipelines. It allows
  them to dynamically add/remove/reorder functions, adjust the
  parameters of those functions, and visualize results in a live,
  interactive manner compared to other packages where such modifications
  often require re-executing the program script. Moreover, because it
  creates all the meta files in structured directories, it allows easy
  sharing of the created pipelines or the individual functions used in
  those pipelines.</p>
  <p><monospace>LiGuard</monospace> features, out of the box, data
  reading for many common dataset formats, including support for reading
  calibration and label data. Moreover, it provides an increasing list
  of commonly used algorithm components ranging from basic data
  preprocessors to advanced object detection and tracking algorithms.
  Additionally, it establishes a straightforward standard for adding
  custom functions/algorithms, allowing users to integrate unique
  components into their pipelines. For the latest updates on supported
  features, please see
  <ext-link ext-link-type="uri" xlink:href="https://m-shahbaz-kharal.github.io/LiGuard-2.x/">LiGuard’s
  documentation</ext-link>.</p>
  <p>Note: <monospace>LiGuard</monospace> is built on many standard
  Python libraries and packages for data processing and visualization,
  including Open3D
  (<xref alt="Zhou et al., 2018" rid="ref-Zhou2018" ref-type="bibr">Zhou
  et al., 2018</xref>), OpenCV
  (<xref alt="Bradski, 2000" rid="ref-opencv_library" ref-type="bibr">Bradski,
  2000</xref>), Numpy
  (<xref alt="Harris et al., 2020" rid="ref-harris2020array" ref-type="bibr">Harris
  et al., 2020</xref>), and SciPy
  (<xref alt="Virtanen et al., 2020" rid="ref-2020SciPy" ref-type="bibr">Virtanen
  et al., 2020</xref>). It is designed to be used interactively and is,
  therefore, not ideal for processing very large datasets. We provide a
  utility
  <ext-link ext-link-type="uri" xlink:href="https://github.com/m-shahbaz-kharal/LiGuard-2.x/blob/dev_2.x/liguard/liguard_cmd.py"><monospace>liguard_cmd</monospace></ext-link>
  that processes data slightly faster by removing GUI and by leveraging
  Dask
  (<xref alt="Dask Development Team, 2016" rid="ref-dask" ref-type="bibr">Dask
  Development Team, 2016</xref>) for parallel processing. However, since
  process pipelines are mostly sequential, the output generation is as
  fast as the slowest step in the pipeline.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>Recent advancements in lidar technology have significantly
  broadened its applicability across various domains, making it a
  potential sensor for precise measurement. Innovations such as
  solid-state lidar and nanophotonics-based devices have enhanced the
  performance, reliability, and cost-effectiveness of these sensors,
  enabling their use in diverse fields including autonomous driving,
  environmental monitoring, and industrial automation
  (<xref alt="Li et al., 2022" rid="ref-10.1002U002Flpor.202100511" ref-type="bibr">Li
  et al., 2022</xref>). Additionally, the integration of advanced optics
  and beam steering technologies has improved the spatial resolution and
  operational efficiency of lidar systems, facilitating their deployment
  in complex environments for applications ranging from agriculture to
  urban planning
  (<xref alt="Kim et al., 2022" rid="ref-10.3390U002Fs22239293" ref-type="bibr">Kim
  et al., 2022</xref>;
  <xref alt="Zhao et al., 2022" rid="ref-10.3390U002Fmi13060894" ref-type="bibr">Zhao
  et al., 2022</xref>). As the lidar sensors are becoming more and more
  mainstream, there is an increasing need for software tools that help
  standardize rapid research and discovery, and facilitate easy
  reproducibility of experiments.</p>
  <p><monospace>LiGuard</monospace> fulfills a critical need for
  interactive research in lidar data processing, where iterative
  adjustments and refinements to processing pipelines are essential and
  are otherwise time consuming. While it is not optimized for
  large-scale datasets such as pointcloudset
  (<xref alt="Goelles et al., 2021" rid="ref-Goelles2021" ref-type="bibr">Goelles
  et al., 2021</xref>) or focus operating-system-wide utility and
  integration such as ROS
  (<xref alt="Macenski et al., 2022" rid="ref-doiU003A10.1126U002Fscirobotics.abm6074" ref-type="bibr">Macenski
  et al., 2022</xref>), its user-friendly interface allows researchers
  to dynamically modify and visualize their workflows, facilitating
  rapid experimentation and adaptation. Although PDAL
  (<xref alt="Contributors, 2024" rid="ref-pdal_contributors_2024_2616780" ref-type="bibr">Contributors,
  2024</xref>), a notable library for creating point cloud processing
  pipelines, offers much more versatile control over pipelines by
  providing abstract access, filtering, exploitation, and workflow
  management capabilities, it lacks interactivity and live parameter
  tuning which is often crucial in fine-tuning multi-step pipelines. PCL
  (<xref alt="Rusu &amp; Cousins, 2011" rid="ref-Rusu_ICRA2011_PCL" ref-type="bibr">Rusu
  &amp; Cousins, 2011</xref>), Open3D
  (<xref alt="Zhou et al., 2018" rid="ref-Zhou2018" ref-type="bibr">Zhou
  et al., 2018</xref>), and others such as laspy
  (<xref alt="Brown &amp; Montaigu, 2012" rid="ref-brown2012laspy" ref-type="bibr">Brown
  &amp; Montaigu, 2012</xref>), pyntcloud
  (<xref alt="Pyntcloud Development Team, 2021" rid="ref-pyntcloud" ref-type="bibr">Pyntcloud
  Development Team, 2021</xref>), Pyoints
  (<xref alt="Lamprecht, 2019" rid="ref-Lamprecht2019" ref-type="bibr">Lamprecht,
  2019</xref>), etc., are low-level libraries that offer fine access to
  underlying data and are designed to be used as a base for the
  development of versatile 3D applications.
  <monospace>LiGuard</monospace> is also primarily built on Open3D for
  GUI and 3D visualizations.</p>
  <p><monospace>LiGuard</monospace> segregates the data processing
  pipeline from the application logic, making it a modular, reusable,
  and extensible framework. It is, at its core, a combination of five
  sub-modules, (1) Data I/O, (2) Process Configuration, (3)
  Inter-Process Data Sharing, (4) Data Processing, and (5)
  Visualization. During its development, a great focus was put towards
  minimizing redundant efforts by abstracting common tasks. Therefore,
  Data I/O, Inter-Process Data Sharing, and Visualization sub-modules
  are designed to operate seamlessly in the background. While these
  components can be modified by contributors, they are intentionally
  abstracted to relieve researchers from the complexities of efficient
  data reading, process management for interactivity, and visualization
  tasks. This, in turn, allows researchers to focus on two main aspects
  of their point-cloud data processing pipelines: the processes they
  need to execute on the data, and the configuration of those processes.
  <monospace>LiGuard</monospace> facilitates this by allowing users to
  create custom functions along their YAML configuration files. These
  custom functions can then be used without restarting the
  application.</p>
</sec>
<sec id="architecture">
  <title>Architecture</title>
  <fig>
    <caption><p><monospace>LiGuard</monospace>’s
    Architecture<styled-content id="figU003Aliguardarch"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="block_diagram.drawio.png" />
  </fig>
  <p><monospace>LiGuard</monospace> is built on top of the Open3D
  (<xref alt="Zhou et al., 2018" rid="ref-Zhou2018" ref-type="bibr">Zhou
  et al., 2018</xref>) and OpenCV
  (<xref alt="Bradski, 2000" rid="ref-opencv_library" ref-type="bibr">Bradski,
  2000</xref>) libraries, allowing researchers and contributors to
  leverage the extensive functionalities provided by these libraries. A
  high-level architecture is presented in
  <xref alt="[fig:liguardarch]" rid="figU003Aliguardarch">[fig:liguardarch]</xref>
  consisting of five main components: (1) GUI (purple), (2) Data
  Handlers (green), (3) Shared Configuration Dictionary (blue), (4)
  Shared Data Dictionary (orange), and (5) Research Algorithms. The GUI
  component is responsible for creating an interface for researchers to
  interact with the framework and for visualizations of both lidar and
  image data. The Data Handlers component is responsible for reading
  data from disk/sensor(s). The Shared Configuration Dictionary and
  Shared Data Dictionary components are responsible for sharing
  configuration and data, respectively, between different components of
  the framework. The Research Algorithms component is responsible for
  implementing the algorithms that process the data. The darker blue
  rectangular box at the top shows the
  <monospace>pipeline directory</monospace> where user-created data
  handler(s) and algorithm(s) reside along with the meta files (YAML,
  .yml). Please note that the research algorithms are analogous to the
  functions mentioned in the summary above.</p>
</sec>
<sec id="contributions">
  <title>Contributions</title>
  <p>M.S. and S.A. conceived the idea of <monospace>LiGuard</monospace>.
  M.S. developed the framework, wrote the documentation, and the
  manuscript. S.A. reviewed the manuscript and provided feedback. Both
  authors have read and agreed to the published version of the
  manuscript.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We thank
  <ext-link ext-link-type="uri" xlink:href="https://www.ksikka.com">Dr. Karan
  Sikka</ext-link> for his great support and guidance throughout the
  development of <monospace>LiGuard</monospace>.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-Goelles2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Goelles</surname><given-names>Thomas</given-names></name>
        <name><surname>Schlager</surname><given-names>Birgit</given-names></name>
        <name><surname>Muckenhuber</surname><given-names>Stefan</given-names></name>
        <name><surname>Haas</surname><given-names>Sarah</given-names></name>
        <name><surname>Hammer</surname><given-names>Tobias</given-names></name>
      </person-group>
      <article-title>pointcloudset: Efficient analysis of large datasets of point clouds recorded over time</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <volume>6</volume>
      <issue>65</issue>
      <uri>https://doi.org/10.21105/joss.03471</uri>
      <pub-id pub-id-type="doi">10.21105/joss.03471</pub-id>
      <fpage>3471</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Lamprecht2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lamprecht</surname><given-names>Sebastian</given-names></name>
      </person-group>
      <article-title>Pyoints: A Python package for point cloud, voxel and raster processing.</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <volume>4</volume>
      <issue>36</issue>
      <uri>https://doi.org/10.21105/joss.00990</uri>
      <pub-id pub-id-type="doi">10.21105/joss.00990</pub-id>
      <fpage>990</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Rusu_ICRA2011_PCL">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Rusu</surname><given-names>Radu Bogdan</given-names></name>
        <name><surname>Cousins</surname><given-names>Steve</given-names></name>
      </person-group>
      <article-title>3D is here: Point cloud library (PCL)</article-title>
      <source>2011 IEEE international conference on robotics and automation</source>
      <year iso-8601-date="2011">2011</year>
      <volume></volume>
      <pub-id pub-id-type="doi">10.1109/ICRA.2011.5980567</pub-id>
      <fpage>1</fpage>
      <lpage>4</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Zhou2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Zhou</surname><given-names>Qian-Yi</given-names></name>
        <name><surname>Park</surname><given-names>Jaesik</given-names></name>
        <name><surname>Koltun</surname><given-names>Vladlen</given-names></name>
      </person-group>
      <article-title>Open3D: A modern library for 3D data processing</article-title>
      <source>arXiv:1801.09847</source>
      <year iso-8601-date="2018">2018</year>
    </element-citation>
  </ref>
  <ref id="ref-brown2012laspy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Brown</surname><given-names>Grant</given-names></name>
        <name><surname>Montaigu</surname><given-names>T</given-names></name>
      </person-group>
      <article-title>Laspy</article-title>
      <source>URL: https://laspy.readthedocs.io/en/latest</source>
      <year iso-8601-date="2012">2012</year>
    </element-citation>
  </ref>
  <ref id="ref-pyntcloud">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <string-name>Pyntcloud Development Team</string-name>
      </person-group>
      <source>Pyntcloud</source>
      <year iso-8601-date="2021">2021</year>
      <uri>https://pyntcloud.readthedocs.io/en/latest/introduction.html</uri>
    </element-citation>
  </ref>
  <ref id="ref-opencv_library">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bradski</surname><given-names>G.</given-names></name>
      </person-group>
      <article-title>The OpenCV Library</article-title>
      <source>Dr. Dobb’s Journal of Software Tools</source>
      <year iso-8601-date="2000">2000</year>
    </element-citation>
  </ref>
  <ref id="ref-harris2020array">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>Walt</surname><given-names>Stéfan J. van der</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Wieser</surname><given-names>Eric</given-names></name>
        <name><surname>Taylor</surname><given-names>Julian</given-names></name>
        <name><surname>Berg</surname><given-names>Sebastian</given-names></name>
        <name><surname>Smith</surname><given-names>Nathaniel J.</given-names></name>
        <name><surname>Kern</surname><given-names>Robert</given-names></name>
        <name><surname>Picus</surname><given-names>Matti</given-names></name>
        <name><surname>Hoyer</surname><given-names>Stephan</given-names></name>
        <name><surname>Kerkwijk</surname><given-names>Marten H. van</given-names></name>
        <name><surname>Brett</surname><given-names>Matthew</given-names></name>
        <name><surname>Haldane</surname><given-names>Allan</given-names></name>
        <name><surname>Río</surname><given-names>Jaime Fernández del</given-names></name>
        <name><surname>Wiebe</surname><given-names>Mark</given-names></name>
        <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
        <name><surname>Gérard-Marchant</surname><given-names>Pierre</given-names></name>
        <name><surname>Sheppard</surname><given-names>Kevin</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
        <name><surname>Abbasi</surname><given-names>Hameer</given-names></name>
        <name><surname>Gohlke</surname><given-names>Christoph</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
      </person-group>
      <article-title>Array programming with NumPy</article-title>
      <source>Nature</source>
      <publisher-name>Springer Science; Business Media LLC</publisher-name>
      <year iso-8601-date="2020-09">2020</year><month>09</month>
      <volume>585</volume>
      <issue>7825</issue>
      <uri>https://doi.org/10.1038/s41586-020-2649-2</uri>
      <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
      <fpage>357</fpage>
      <lpage>362</lpage>
    </element-citation>
  </ref>
  <ref id="ref-2020SciPy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
        <name><surname>Haberland</surname><given-names>Matt</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Burovski</surname><given-names>Evgeni</given-names></name>
        <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
        <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
        <name><surname>Bright</surname><given-names>Jonathan</given-names></name>
        <name><surname>van der Walt</surname><given-names>Stéfan J.</given-names></name>
        <name><surname>Brett</surname><given-names>Matthew</given-names></name>
        <name><surname>Wilson</surname><given-names>Joshua</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>Mayorov</surname><given-names>Nikolay</given-names></name>
        <name><surname>Nelson</surname><given-names>Andrew R. J.</given-names></name>
        <name><surname>Jones</surname><given-names>Eric</given-names></name>
        <name><surname>Kern</surname><given-names>Robert</given-names></name>
        <name><surname>Larson</surname><given-names>Eric</given-names></name>
        <name><surname>Carey</surname><given-names>C J</given-names></name>
        <name><surname>Polat</surname><given-names>İlhan</given-names></name>
        <name><surname>Feng</surname><given-names>Yu</given-names></name>
        <name><surname>Moore</surname><given-names>Eric W.</given-names></name>
        <name><surname>VanderPlas</surname><given-names>Jake</given-names></name>
        <name><surname>Laxalde</surname><given-names>Denis</given-names></name>
        <name><surname>Perktold</surname><given-names>Josef</given-names></name>
        <name><surname>Cimrman</surname><given-names>Robert</given-names></name>
        <name><surname>Henriksen</surname><given-names>Ian</given-names></name>
        <name><surname>Quintero</surname><given-names>E. A.</given-names></name>
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Archibald</surname><given-names>Anne M.</given-names></name>
        <name><surname>Ribeiro</surname><given-names>Antônio H.</given-names></name>
        <name><surname>Pedregosa</surname><given-names>Fabian</given-names></name>
        <name><surname>van Mulbregt</surname><given-names>Paul</given-names></name>
        <string-name>SciPy 1.0 Contributors</string-name>
      </person-group>
      <article-title>SciPy 1.0: Fundamental Algorithms for Scientific Computing in Python</article-title>
      <source>Nature Methods</source>
      <year iso-8601-date="2020">2020</year>
      <volume>17</volume>
      <pub-id pub-id-type="doi">10.1038/s41592-019-0686-2</pub-id>
      <fpage>261</fpage>
      <lpage>272</lpage>
    </element-citation>
  </ref>
  <ref id="ref-10.1002U002Flpor.202100511">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Li</surname><given-names>Nanxi</given-names></name>
        <name><surname>Ho</surname><given-names>Chong Pei</given-names></name>
        <name><surname>Xue</surname><given-names>Jin</given-names></name>
        <name><surname>Lim</surname><given-names>Leh Woon</given-names></name>
        <name><surname>Chen</surname><given-names>Guanyu</given-names></name>
        <name><surname>Fu</surname><given-names>Yuan Hsing</given-names></name>
        <name><surname>T. Lee</surname><given-names>Lennon Y.</given-names></name>
      </person-group>
      <article-title>A progress review on solid‐state LiDAR and nanophotonics‐based LiDAR sensors</article-title>
      <source>Laser &amp; Photonics Review</source>
      <year iso-8601-date="2022">2022</year>
      <pub-id pub-id-type="doi">10.1002/lpor.202100511</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-10.3390U002Fs22239293">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kim</surname><given-names>Tae-Sik</given-names></name>
        <name><surname>Jung</surname><given-names>Jinman</given-names></name>
        <name><surname>Hong</surname><given-names>Maochun</given-names></name>
        <name><surname>Jung</surname><given-names>Young-Hoon</given-names></name>
      </person-group>
      <article-title>An entropy analysis-based window size optimization scheme for merging LiDAR data frames</article-title>
      <source>Sensors</source>
      <year iso-8601-date="2022">2022</year>
      <pub-id pub-id-type="doi">10.3390/s22239293</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-10.3390U002Fmi13060894">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Zhao</surname><given-names>Shenzhi</given-names></name>
        <name><surname>Chen</surname><given-names>Jingye</given-names></name>
        <name><surname>Shi</surname><given-names>Yaocheng</given-names></name>
      </person-group>
      <article-title>All-solid-state beam steering via integrated optical phased array technology</article-title>
      <source>Micromachines</source>
      <year iso-8601-date="2022">2022</year>
      <pub-id pub-id-type="doi">10.3390/mi13060894</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-pdal_contributors_2024_2616780">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Contributors</surname><given-names>PDAL</given-names></name>
      </person-group>
      <article-title>PDAL point data abstraction library</article-title>
      <year iso-8601-date="2024-08">2024</year><month>08</month>
      <uri>
          https://doi.org/10.5281/zenodo.10884408
        </uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.10884408</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-dask">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <string-name>Dask Development Team</string-name>
      </person-group>
      <source>Dask: Library for dynamic task scheduling</source>
      <year iso-8601-date="2016">2016</year>
      <uri>http://dask.pydata.org</uri>
    </element-citation>
  </ref>
  <ref id="ref-doiU003A10.1126U002Fscirobotics.abm6074">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Macenski</surname><given-names>Steven</given-names></name>
        <name><surname>Foote</surname><given-names>Tully</given-names></name>
        <name><surname>Gerkey</surname><given-names>Brian</given-names></name>
        <name><surname>Lalancette</surname><given-names>Chris</given-names></name>
        <name><surname>Woodall</surname><given-names>William</given-names></name>
      </person-group>
      <article-title>Robot operating system 2: Design, architecture, and uses in the wild</article-title>
      <source>Science Robotics</source>
      <year iso-8601-date="2022">2022</year>
      <volume>7</volume>
      <issue>66</issue>
      <uri>https://www.science.org/doi/abs/10.1126/scirobotics.abm6074</uri>
      <pub-id pub-id-type="doi">10.1126/scirobotics.abm6074</pub-id>
      <fpage>eabm6074</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
