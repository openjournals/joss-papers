<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6753</article-id>
<article-id pub-id-type="doi">10.21105/joss.06753</article-id>
<title-group>
<article-title>MODULO: A Python toolbox for data-driven modal
decomposition</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-3566-6956</contrib-id>
<name>
<surname>Poletti</surname>
<given-names>R.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-7183-0242</contrib-id>
<name>
<surname>Schena</surname>
<given-names>L.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-7179-3322</contrib-id>
<name>
<surname>Ninni</surname>
<given-names>D.</given-names>
</name>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-1115-2187</contrib-id>
<name>
<surname>Mendez</surname>
<given-names>M. A.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>von Karman Insitute for Fluid Dynamics</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>University of Ghent, Belgium</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Vrije Universiteit Brussel (VUB), Belgium</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>Politecnico di Bari, Italy</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-12-05">
<day>5</day>
<month>12</month>
<year>2023</year>
</pub-date>
<volume>9</volume>
<issue>102</issue>
<fpage>6753</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>fluid dynamics</kwd>
<kwd>modal decomposition</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Dimensionality reduction is an essential tool in processing large
  datasets, enabling data compression, pattern recognition, and
  reduced-order modeling. Many linear tools for dimensionality reduction
  have been developed in fluid mechanics, where they have been
  formulated to identify coherent structures and build reduced-order
  models of turbulent flows
  (<xref alt="Ranc et al., 2014" rid="ref-berkooz_proper_1993" ref-type="bibr">Ranc
  et al., 2014</xref>). This work proposes a major upgrade of the
  software package MODULO (MODal mULtiscale pOd)
  (<xref alt="Ninni &amp; Mendez, 2020" rid="ref-ninni_modulo_2020" ref-type="bibr">Ninni
  &amp; Mendez, 2020</xref>), which was designed to perform Multiscale
  Proper Orthogonal Decomposition (mPOD)
  (<xref alt="Mendez et al., 2019" rid="ref-mendez_balabane_buchlin_2019" ref-type="bibr">Mendez
  et al., 2019</xref>). In addition to implementing the classic Fourier
  Transform (DFT) and Proper Orthogonal Decomposition (POD), MODULO now
  also allows for computing Dynamic Mode Decomposition (DMD)
  (<xref alt="Schmid, 2010" rid="ref-schmid_2010" ref-type="bibr">Schmid,
  2010</xref>) as well as the Spectral POD by Sieber et al.
  (<xref alt="2016" rid="ref-sieber_paschereit_oberleithner_2016" ref-type="bibr">2016</xref>),
  the Spectral POD by Towne et al.
  (<xref alt="2018" rid="ref-Towne_2018" ref-type="bibr">2018</xref>)
  and a generalized kernel-based decomposition akin to kernel PCA
  (<xref alt="Mendez, 2023" rid="ref-mendez_2023" ref-type="bibr">Mendez,
  2023</xref>). All algorithms are wrapped in a ‘SciKit’-like Python
  API, which allows computing all decompositions in one line of code.
  Documentation, exercises, and video tutorials are also provided to
  offer a primer on data drive modal analysis.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>As extensively illustrated in recent reviews
  (<xref alt="Mendez, 2023" rid="ref-mendez_2023" ref-type="bibr">Mendez,
  2023</xref>;
  <xref alt="Taira et al., 2020" rid="ref-Taira2020" ref-type="bibr">Taira
  et al., 2020</xref>), all modal decompositions can be considered as
  special matrix factorizations. The matrix being factorized collects
  (many) snapshots (samples) of a high-dimensional variable. The
  factorization provides a basis for the matrix’s column and row spaces
  to identify the most essential patterns (modes) according to a certain
  criterion. In what follows, we will refer to common terminologies in
  fluid dynamics. Nevertheless, it is worth stressing that these tools
  can be applied to any high-dimensional dataset to identify patterns
  and build reduced-order models
  (<xref alt="Mendez et al., 2019" rid="ref-mendez_balabane_buchlin_2019" ref-type="bibr">Mendez
  et al., 2019</xref>). In the common arrangement encountered in fluid
  dynamics, the basis for the column space is a set of ‘spatial
  structures’ while the basis for the row space is a set of `temporal
  structures’. These are paired by a scalar, which defines their
  relative importance. The POD, closely related to Principal Component
  Analysis, yields modes with the highest energy (variance) content and,
  in addition, guarantees their orthonormality by construction. In the
  DFT, as implemented in MODULO, modes are defined to evolve as
  orthonormal complex exponential in time. This implies that the
  associated frequencies are integer multiples of a fundamental tone.
  The DMD generalizes the DFT by releasing the orthogonality constraint
  and considering complex frequencies, i.e., modes that can vanish or
  explode. Both the constraint of energy optimality and harmonic modes
  can lead to poor convergence and feature detection performances. This
  motivated the development of hybrid methods such as the Spectral POD
  by Towne et al.
  (<xref alt="2018" rid="ref-Towne_2018" ref-type="bibr">2018</xref>),
  Spectral POD by Sieber et al.
  (<xref alt="2016" rid="ref-sieber_paschereit_oberleithner_2016" ref-type="bibr">2016</xref>),
  and Multiscale Proper Orthogonal Decomposition (mPOD)
  (<xref alt="Mendez et al., 2019" rid="ref-mendez_balabane_buchlin_2019" ref-type="bibr">Mendez
  et al., 2019</xref>). The first can be seen as an optimally averaged
  DMD, while the second combines POD and DFT with a filtering operation.
  Both SPODs assume statistically stationary data and are designed to
  identify harmonic (or quasi-harmonic) modes. The mPOD combines POD
  with Multi-resolution Analysis (MRA) to provide optimal modes within a
  prescribed frequency band. The mPOD modes are thus spectrally less
  narrow than those obtained by the SPODs, but this allows for
  localizing them in time (i.e., potentially having compact support in
  time). Finally, recent developments in nonlinear methods such as
  kernel PCA and their applications to fluid dynamics (see Mendez
  (<xref alt="2023" rid="ref-mendez_2023" ref-type="bibr">2023</xref>))
  have motivated the interest in the connection between nonlinear
  methods and the most general Karhunen-Loeve expansion (KL). This
  generalizes the POD as the decomposition of data onto the
  eigenfunction of a kernel function (the POD being a KL for the case of
  linear kernel).</p>
  <p>MODULO provides a unified tool to carry out different
  decompositions with a shared API. This simplifies comparing different
  techniques and streamlines their application to a given dataset
  (problem). In addition, it is the only package that includes the mPOD
  and the generalized KL with kernel functions interfacing with
  SciKit-learn. For decomposition-specific packages, we refer the reader
  to many excellent Python APIs that are available to compute the POD,
  DMD, and both SPODs, for example
  (<xref alt="Demo et al., 2018" rid="ref-py_DMD" ref-type="bibr">Demo
  et al., 2018</xref>;
  <xref alt="Hatzissawidis &amp; Sieber, 2023" rid="ref-SpyOD" ref-type="bibr">Hatzissawidis
  &amp; Sieber, 2023</xref>;
  <xref alt="Mengaldo &amp; Maulik, 2021" rid="ref-Mengaldo2021" ref-type="bibr">Mengaldo
  &amp; Maulik, 2021</xref>;
  <xref alt="Rogowski et al., 2024" rid="ref-rogowski2024unlocking" ref-type="bibr">Rogowski
  et al., 2024</xref>).</p>
</sec>
<sec id="new-features">
  <title>New Features</title>
  <p>This manuscript accompanies MODULO version 2.0. This version
  features four new decompositions: the two SPODs, the DMD, and the
  general KL. It also allows for different approaches to computing the
  POD (interfacing with various SVD/EIG solvers from Scipy and
  SciKit-learn) and a first implementation for nonuniform grids. The
  memory-saving feature has been improved, and the software can now
  handle 3D decompositions.</p>
</sec>
<sec id="conclusions">
  <title>Conclusions</title>
  <p>MODULO is a versatile and user-friendly toolbox for data-driven
  modal decomposition. It provides a unified interface to various
  decomposition methods, allowing for a straightforward comparison and
  benchmarking. The package allows for modal decompositions in one line
  of code. It is also designed to handle large datasets via the
  so-called “memory saving” option and can handle nonuniformly sampled
  data.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>R. Poletti and L. Schena are supported by Fonds Wetenschappelijk
  Onderzoek (FWO), grant numbers 1SD7823N and 1S75825N,
  respectively.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-sieber_paschereit_oberleithner_2016">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Sieber</surname><given-names>Moritz</given-names></name>
        <name><surname>Paschereit</surname><given-names>C. Oliver</given-names></name>
        <name><surname>Oberleithner</surname><given-names>Kilian</given-names></name>
      </person-group>
      <article-title>Spectral proper orthogonal decomposition</article-title>
      <source>Journal of Fluid Mechanics</source>
      <publisher-name>Cambridge University Press</publisher-name>
      <year iso-8601-date="2016">2016</year>
      <volume>792</volume>
      <pub-id pub-id-type="doi">10.1017/jfm.2016.103</pub-id>
      <fpage>798</fpage>
      <lpage>828</lpage>
    </element-citation>
  </ref>
  <ref id="ref-berkooz_proper_1993">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ranc</surname><given-names>Nicolas</given-names></name>
        <name><surname>Blanche</surname><given-names>Antoione</given-names></name>
        <name><surname>Ryckelynck</surname><given-names>D.</given-names></name>
        <name><surname>Chrysochoos</surname><given-names>Andre</given-names></name>
      </person-group>
      <article-title>POD preprocessing of IR thermal data to assess heat source distributions</article-title>
      <source>Experimental Mechanics</source>
      <year iso-8601-date="2014-04">2014</year><month>04</month>
      <volume>55</volume>
      <pub-id pub-id-type="doi">10.1007/s11340-014-9858-2</pub-id>
      <fpage>725</fpage>
      <lpage>739</lpage>
    </element-citation>
  </ref>
  <ref id="ref-ninni_modulo_2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ninni</surname><given-names>Davide</given-names></name>
        <name><surname>Mendez</surname><given-names>Miguel A.</given-names></name>
      </person-group>
      <article-title>MODULO: A software for multiscale proper orthogonal decomposition of data</article-title>
      <source>SoftwareX</source>
      <year iso-8601-date="2020-12">2020</year><month>12</month>
      <volume>12</volume>
      <pub-id pub-id-type="doi">10.1016/j.softx.2020.100622</pub-id>
      <fpage>100622</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-mendez_balabane_buchlin_2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Mendez</surname><given-names>Miguel A.</given-names></name>
        <name><surname>Balabane</surname><given-names>M.</given-names></name>
        <name><surname>Buchlin</surname><given-names>J.-M.</given-names></name>
      </person-group>
      <article-title>Multi-scale proper orthogonal decomposition of complex fluid flows</article-title>
      <source>Journal of Fluid Mechanics</source>
      <publisher-name>Cambridge University Press</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <volume>870</volume>
      <pub-id pub-id-type="doi">10.1017/jfm.2019.212</pub-id>
      <fpage>988</fpage>
      <lpage>1036</lpage>
    </element-citation>
  </ref>
  <ref id="ref-schmid_2010">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Schmid</surname><given-names>Peter J.</given-names></name>
      </person-group>
      <article-title>Dynamic mode decomposition of numerical and experimental data</article-title>
      <source>Journal of Fluid Mechanics</source>
      <publisher-name>Cambridge University Press</publisher-name>
      <year iso-8601-date="2010">2010</year>
      <volume>656</volume>
      <pub-id pub-id-type="doi">10.1017/S0022112010001217</pub-id>
      <fpage>5</fpage>
      <lpage>28</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Towne_2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Towne</surname><given-names>Aaron</given-names></name>
        <name><surname>Schmidt</surname><given-names>Oliver T.</given-names></name>
        <name><surname>Colonius</surname><given-names>Tim</given-names></name>
      </person-group>
      <article-title>Spectral proper orthogonal decomposition and its relationship to dynamic mode decomposition and resolvent analysis</article-title>
      <source>Journal of Fluid Mechanics</source>
      <publisher-name>Cambridge University Press</publisher-name>
      <year iso-8601-date="2018">2018</year>
      <volume>847</volume>
      <pub-id pub-id-type="doi">10.1017/jfm.2018.283</pub-id>
      <fpage>821</fpage>
      <lpage>867</lpage>
    </element-citation>
  </ref>
  <ref id="ref-mendez_2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Mendez</surname><given-names>Miguel A.</given-names></name>
      </person-group>
      <article-title>Linear and nonlinear dimensionality reduction from fluid mechanics to machine learning</article-title>
      <source>Measurement Science and Technology</source>
      <year iso-8601-date="2023-01">2023</year><month>01</month>
      <volume>34</volume>
      <pub-id pub-id-type="doi">10.1088/1361-6501/acaffe</pub-id>
      <fpage>042001</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Taira2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Taira</surname><given-names>Kunihiko</given-names></name>
        <name><surname>Hemati</surname><given-names>Maziar S.</given-names></name>
        <name><surname>Brunton</surname><given-names>Steven L.</given-names></name>
        <name><surname>Sun</surname><given-names>Yiyang</given-names></name>
        <name><surname>Duraisamy</surname><given-names>Karthik</given-names></name>
        <name><surname>Bagheri</surname><given-names>Shervin</given-names></name>
        <name><surname>Dawson</surname><given-names>Scott T. M.</given-names></name>
        <name><surname>Yeh</surname><given-names>Chi-An</given-names></name>
      </person-group>
      <article-title>Modal analysis of fluid flows: Applications and outlook</article-title>
      <source>AIAA Journal</source>
      <year iso-8601-date="2020">2020</year>
      <volume>58</volume>
      <issue>3</issue>
      <uri>https://doi.org/10.2514/1.J058462</uri>
      <pub-id pub-id-type="doi">10.2514/1.J058462</pub-id>
      <fpage>998</fpage>
      <lpage>1022</lpage>
    </element-citation>
  </ref>
  <ref id="ref-py_DMD">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Demo</surname><given-names>Nicola</given-names></name>
        <name><surname>Tezzele</surname><given-names>Marco</given-names></name>
        <name><surname>Rozza</surname><given-names>Gianluigi</given-names></name>
      </person-group>
      <article-title>PyDMD: Python dynamic mode decomposition</article-title>
      <source>Journal of Open Source Software</source>
      <year iso-8601-date="2018">2018</year>
      <volume>3</volume>
      <issue>22</issue>
      <pub-id pub-id-type="doi">10.21105/joss.00530</pub-id>
      <fpage>530</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Mengaldo2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Mengaldo</surname><given-names>Gianmarco</given-names></name>
        <name><surname>Maulik</surname><given-names>Romit</given-names></name>
      </person-group>
      <article-title>PySPOD: A Python package for Spectral Proper Orthogonal Decomposition (SPOD)</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <volume>6</volume>
      <issue>60</issue>
      <uri>https://doi.org/10.21105/joss.02862</uri>
      <pub-id pub-id-type="doi">10.21105/joss.02862</pub-id>
      <fpage>2862</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-SpyOD">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Hatzissawidis</surname><given-names>Grigorios</given-names></name>
        <name><surname>Sieber</surname><given-names>Moritz</given-names></name>
      </person-group>
      <article-title>Spectral proper orthogonal decomposition</article-title>
      <publisher-name>https://github.com/grigorishat/SPyOD</publisher-name>
      <year iso-8601-date="2023">2023</year>
    </element-citation>
  </ref>
  <ref id="ref-rogowski2024unlocking">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Rogowski</surname><given-names>Marcin</given-names></name>
        <name><surname>Yeung</surname><given-names>Brandon C. Y.</given-names></name>
        <name><surname>Schmidt</surname><given-names>Oliver T.</given-names></name>
        <name><surname>Maulik</surname><given-names>Romit</given-names></name>
        <name><surname>Dalcin</surname><given-names>Lisandro</given-names></name>
        <name><surname>Parsani</surname><given-names>Matteo</given-names></name>
        <name><surname>Mengaldo</surname><given-names>Gianmarco</given-names></name>
      </person-group>
      <article-title>Unlocking massively parallel spectral proper orthogonal decompositions in the PySPOD package</article-title>
      <source>Computer Physics Communications</source>
      <year iso-8601-date="2024">2024</year>
      <volume>302</volume>
      <issn>0010-4655</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S0010465524001693</uri>
      <pub-id pub-id-type="doi">10.1016/j.cpc.2024.109246</pub-id>
      <fpage>109246</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
