<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">3884</article-id>
<article-id pub-id-type="doi">10.21105/joss.03884</article-id>
<title-group>
<article-title>Torque-limited simple pendulum: A toolkit for getting
familiar with control algorithms in underactuated
robotics</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-2195-9697</contrib-id>
<name>
<surname>Wiebe</surname>
<given-names>Felix</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Babel</surname>
<given-names>Jonathan</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-6254-3882</contrib-id>
<name>
<surname>Kumar</surname>
<given-names>Shivesh</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Vyas</surname>
<given-names>Shubham</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Harnack</surname>
<given-names>Daniel</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Boukheddimi</surname>
<given-names>Melya</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Popescu</surname>
<given-names>Mihaela</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Kirchner</surname>
<given-names>Frank</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>DFKI GmbH Robotics Innovation Center, Bremen,
Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Working Group Robotics, University of Bremen, Bremen,
Germany</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2021-10-04">
<day>4</day>
<month>10</month>
<year>2021</year>
</pub-date>
<volume>7</volume>
<issue>74</issue>
<fpage>3884</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>robotics</kwd>
<kwd>underactuated</kwd>
<kwd>pendulum</kwd>
<kwd>torque-limited</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>There are many, wildly different approaches to robotic control.
  Underactuated robots are systems for which it is not possible to
  dictate arbitrary accelerations to all joints. Hence, a controller
  cannot be used to override the system dynamics and force the system on
  a desired trajectory as it often is done in classical control
  techniques. A torque-limited pendulum is arguably the simplest
  underactuated robotic system and thus is a suitable system to study,
  test, and benchmark different controllers.</p>
  <p>This repository describes the hardware (Computer-aided design (CAD)
  models, Bill Of Materials (BOM), etc.) required to build a physical
  pendulum system and provides the software (Unified Robot Description
  Format (URDF) models, simulation, and controller) to control it. It
  provides a setup for studying established and novel control methods,
  and targets students and researchers interested in studying
  underactuation.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>This repository is designed to be used in education and research.
  It lowers the entry barrier for studying underactuation in real
  systems, which is often overlooked in conventional robotics courses.
  With this software package, students who want to learn about robotics,
  optimal control, or reinforcement learning can gain hands-on
  experience with hardware and software for robot control. The dualistic
  approach of describing software and hardware as well as the large
  spectrum of control methods are outstanding features of this package
  in comparison to similar software such as stable baselines
  (<xref alt="Raffin et al., 2021" rid="ref-stable-baselines3" ref-type="bibr">Raffin
  et al., 2021</xref>), open AI gym
  (<xref alt="Brockman et al., 2016" rid="ref-Brockman2016" ref-type="bibr">Brockman
  et al., 2016</xref>), and Drake
  (<xref alt="Tedrake &amp; the Drake Development Team, 2019" rid="ref-drake" ref-type="bibr">Tedrake
  &amp; the Drake Development Team, 2019</xref>). Results from real
  experiments are provided to ensure reproducibility and evaluate novel
  control methods.</p>
</sec>
<sec id="background">
  <title>Background</title>
  <p>This project provides an easy accessible plant for the pendulum
  dynamics, which is built up from scratch and uses only standard
  libraries. The plant can be passed to a simulator object, which is
  capable of integrating the equations of motion and thus simulating the
  pendulum’s motion forward in time. The simulator can perform Euler and
  Runge-Kutta integration and can also visualize the motion in a
  matplotlib animation. Furthermore, it is possible to interface a
  controller to the simulator that sends control a signal in form of a
  torque <inline-formula><alternatives>
  <tex-math><![CDATA[\tau]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>τ</mml:mi></mml:math></alternatives></inline-formula>
  to the motor.</p>
  <p>The pendulum has stable (downward configuration) and unstable
  (upward configuration) fixed points. A challenge from the control
  point of view is to swing the pendulum up to the unstable fixed point
  and stabilize the pendulum in that state, respecting the torque
  limitation.</p>
  <sec id="mechanical-setup">
    <title>Mechanical Setup</title>
    <fig>
      <caption><p>Simple Pendulum. The physical variables are introduced
      in <xref alt="Equation 1" rid="eqU003Aeom">Equation 1</xref>.
      <styled-content id="figU003Apendulum"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/figures/simple_pendulum_CAD.png" xlink:title="" />
    </fig>
    <p>The pendulum
    (<xref alt="Figure 1" rid="figU003Apendulum">Figure 1</xref>) is
    constructed by mounting a motor to a fixed frame, attaching a rod to
    the motor, and a weight to the other end of the rod. The motor used
    in this setup is the AK80-6 actuator from T-Motor
    (<xref alt="CubeMars, 2021" rid="ref-tmotors_manual" ref-type="bibr">CubeMars,
    2021</xref>), which is a quasi direct drive with a gear ratio of 6:1
    and a peak torque of 12 Nm at the output shaft.</p>
  </sec>
  <sec id="electrical-setup">
    <title>Electrical Setup</title>
    <p>The schematic below
    (<xref alt="Figure 2" rid="figU003Aelectrical_schematic">Figure 2</xref>)
    displays the electrial setup of the testbench. A main PC is
    connected to a motor controller board (CubeMars_AK_V1.1, see
    CubeMars
    (<xref alt="2021" rid="ref-tmotors_manual" ref-type="bibr">2021</xref>))
    mounted on the actuator. The communication takes place on a CAN bus
    with a maximum signal frequency of 1 Mbit/sec with the ‘classical’
    CAN protocol. Furthermore, a USB to CAN interface is needed if the
    main PC doesn’t feature a PCI CAN card. The actuator requires an
    input voltage of 24 Volts and consumes up to 24 Amps for peak
    torque. The power supply in our test setup is the EA-PS 9032-40 from
    Elektro-Automatik. The capacitor filters back EMF coming from the
    actuator and protects the power supply from high voltage peaks. An
    emergency stop button serves as additional safety measure.</p>
    <fig>
      <caption><p>Electrical setup.
      <styled-content id="figU003Aelectrical_schematic"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/figures/wiring_diagram.png" xlink:title="" />
    </fig>
  </sec>
  <sec id="pendulum-dynamics">
    <title>Pendulum Dynamics</title>
    <p>The motions of a pendulum are described by the following equation
    of motion:</p>
    <p><named-content id="eqU003Aeom" content-type="equation"><disp-formula><alternatives>
    <tex-math><![CDATA[I\ddot{\theta} + b\dot{\theta} + c_f \text{sign}(\dot{\theta}) + mgl \sin(\theta) = \tau
    \label{eq:eom}]]></tex-math>
    <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>I</mml:mi><mml:mover><mml:mi>θ</mml:mi><mml:mo accent="true">̈</mml:mo></mml:mover><mml:mo>+</mml:mo><mml:mi>b</mml:mi><mml:mover><mml:mi>θ</mml:mi><mml:mo accent="true">̇</mml:mo></mml:mover><mml:mo>+</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mtext mathvariant="normal">sign</mml:mtext><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mover><mml:mi>θ</mml:mi><mml:mo accent="true">̇</mml:mo></mml:mover><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>m</mml:mi><mml:mi>g</mml:mi><mml:mi>l</mml:mi><mml:mo>sin</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>τ</mml:mi></mml:mrow></mml:math></alternatives></disp-formula></named-content></p>
    <p>where</p>
    <list list-type="bullet">
      <list-item>
        <p><inline-formula><alternatives>
        <tex-math><![CDATA[\theta]]></tex-math>
        <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>θ</mml:mi></mml:math></alternatives></inline-formula>,
        <inline-formula><alternatives>
        <tex-math><![CDATA[\dot{\theta}]]></tex-math>
        <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mover><mml:mi>θ</mml:mi><mml:mo accent="true">̇</mml:mo></mml:mover></mml:math></alternatives></inline-formula>,
        <inline-formula><alternatives>
        <tex-math><![CDATA[\ddot{\theta}]]></tex-math>
        <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mover><mml:mi>θ</mml:mi><mml:mo accent="true">̈</mml:mo></mml:mover></mml:math></alternatives></inline-formula>
        are the angular displacement, angular velocity and angular
        acceleration of the pendulum in counter-clockwise direction.
        <inline-formula><alternatives>
        <tex-math><![CDATA[\theta=0]]></tex-math>
        <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>θ</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
        means the pendulum is at its stable fixed point (i.e., hanging
        down).</p>
      </list-item>
      <list-item>
        <p><inline-formula><alternatives>
        <tex-math><![CDATA[I]]></tex-math>
        <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>I</mml:mi></mml:math></alternatives></inline-formula>
        is the inertia of the pendulum. For a point mass:
        <inline-formula><alternatives>
        <tex-math><![CDATA[I=ml^2]]></tex-math>
        <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>I</mml:mi><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:msup><mml:mi>l</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></alternatives></inline-formula></p>
      </list-item>
      <list-item>
        <p><inline-formula><alternatives>
        <tex-math><![CDATA[m]]></tex-math>
        <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>m</mml:mi></mml:math></alternatives></inline-formula>
        mass of the pendulum</p>
      </list-item>
      <list-item>
        <p><inline-formula><alternatives>
        <tex-math><![CDATA[l]]></tex-math>
        <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>l</mml:mi></mml:math></alternatives></inline-formula>
        length of the pendulum</p>
      </list-item>
      <list-item>
        <p><inline-formula><alternatives>
        <tex-math><![CDATA[b]]></tex-math>
        <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>b</mml:mi></mml:math></alternatives></inline-formula>
        damping friction coefficient</p>
      </list-item>
      <list-item>
        <p><inline-formula><alternatives>
        <tex-math><![CDATA[c_f]]></tex-math>
        <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>c</mml:mi><mml:mi>f</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
        coulomb friction coefficient</p>
      </list-item>
      <list-item>
        <p><inline-formula><alternatives>
        <tex-math><![CDATA[g]]></tex-math>
        <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>g</mml:mi></mml:math></alternatives></inline-formula>
        gravity (positive direction points down)</p>
      </list-item>
      <list-item>
        <p><inline-formula><alternatives>
        <tex-math><![CDATA[\tau]]></tex-math>
        <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>τ</mml:mi></mml:math></alternatives></inline-formula>
        torque applied by the motor</p>
      </list-item>
    </list>
    <p>We provide a pendulum plant model that can be used for computing
    trajectories and policies without the actual hardware, simulating
    the execution of a controller, as well as simulating the system’s
    response during real time control. Also, a system identification
    method is implemented that can reliably estimate the unknown
    pendulum parameters of the real setup.</p>
  </sec>
  <sec id="control-methods">
    <title>Control Methods</title>
    <p>The swing-up with a limited motor torque
    <inline-formula><alternatives>
    <tex-math><![CDATA[\tau]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>τ</mml:mi></mml:math></alternatives></inline-formula>
    serves as a benchmark for various control algorithms. If the torque
    limit is set low enough, the pendulum is no longer able to simply go
    up to the unstable fixed point but instead, the pendulum has to
    swing and build up energy in the system.</p>
    <fig>
      <caption><p>Control Software Structure.
      <styled-content id="figU003Asoftware_structure"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/figures/controller_overview.png" xlink:title="" />
    </fig>
    <p>The control methods that are currently implemented in this
    library (see also
    <xref alt="Figure 3" rid="figU003Asoftware_structure">Figure 3</xref>)
    can be grouped in four categories:</p>
    <p><bold>Trajectory optimization</bold> tries to find a trajectory
    of control inputs and states that is feasible for the system while
    minimizing a cost function. The cost function can, for example,
    include terms that drive the system to a desired goal state and
    penalize the usage of high torques. The following trajectory
    optimization algorithms are implemented:</p>
    <list list-type="bullet">
      <list-item>
        <p>Direct Collocation
        (<xref alt="Hargraves &amp; Paris, 1987" rid="ref-hargraves1987direct" ref-type="bibr">Hargraves
        &amp; Paris, 1987</xref>)</p>
      </list-item>
      <list-item>
        <p>Iterative Linear Quadratic Regulator (iLQR)
        (<xref alt="Weiwei &amp; Todorov, 2004" rid="ref-weiwei2004iterative" ref-type="bibr">Weiwei
        &amp; Todorov, 2004</xref>)</p>
      </list-item>
      <list-item>
        <p>Feasibility driven Differential Dynamic Programming (FDDP)
        (<xref alt="Mastalli et al., 2020" rid="ref-mastalli2020crocoddyl" ref-type="bibr">Mastalli
        et al., 2020</xref>)</p>
      </list-item>
    </list>
    <p>The optimization is done with a simulation of the pendulum
    dynamics.</p>
    <p><bold>Reinforcement Learning</bold> (RL) can be used to learn a
    policy on the state space of the robot, which then can be used to
    control the robot. The simple pendulum can be formulated as a RL
    problem with two continuous inputs and one continuous output.
    Similar to the cost function in trajectory optimization, the policy
    is trained with a reward function. The following RL algorithms are
    implemented:</p>
    <list list-type="bullet">
      <list-item>
        <p>Soft Actor Critic (SAC)
        (<xref alt="Haarnoja et al., 2018" rid="ref-haarnoja2018soft" ref-type="bibr">Haarnoja
        et al., 2018</xref>)</p>
      </list-item>
      <list-item>
        <p>Deep Deterministic Policy Gradient (DDPG)
        (<xref alt="Lillicrap et al., 2019" rid="ref-lillicrap2019continuous" ref-type="bibr">Lillicrap
        et al., 2019</xref>)</p>
      </list-item>
    </list>
    <p>Both methods are model-free, i.e., they use the dynamics of the
    system as a black box. Currently, learning is possible in the
    simulation environment.</p>
    <p><bold>Trajectory-based Controllers</bold> act on a precomputed
    trajectory and ensure that the system follows the trajectory
    properly. The trajectory-based controllers implemented in this
    project are:</p>
    <list list-type="bullet">
      <list-item>
        <p>Feedforward torque</p>
      </list-item>
      <list-item>
        <p>Proportional-integral-derivative (PID) control</p>
      </list-item>
      <list-item>
        <p>Time-varying Linear Quadratic Regulator (TVLQR)</p>
      </list-item>
      <list-item>
        <p>Model Predictive Control (MPC) with iLQR</p>
      </list-item>
    </list>
    <p>The Feedforward and PID controller are model-independent, while
    the TVLQR and iLQR MPC controllers utilize knowledge about the
    pendulum model. In contrast to the others, the iLQR MPC controller
    optimizes over a predefined horizon at every timestep.</p>
    <p><bold>Policy-based Controllers</bold> take the state of the
    system as input and output a control signal. In contrast to
    trajectory optimization, these controllers do not compute just a
    single trajectory. Instead, they react to the current state of the
    pendulum and because of this, they can cope with perturbations
    during the execution. The following policy-based controllers are
    implemented:</p>
    <list list-type="bullet">
      <list-item>
        <p>Energy Shaping</p>
      </list-item>
      <list-item>
        <p>Linear Quadratic Regulator (LQR)</p>
      </list-item>
      <list-item>
        <p>Gravity Compensation</p>
      </list-item>
    </list>
    <p>All of these controllers utilize model knowledge. Additionally,
    the control policies, obtained by one of the RL methods, fall in the
    category of policy-based control.</p>
    <p>The implementations of direct collocation and TVLQR make use of
    Drake
    (<xref alt="Tedrake &amp; the Drake Development Team, 2019" rid="ref-drake" ref-type="bibr">Tedrake
    &amp; the Drake Development Team, 2019</xref>), iLQR makes use of
    either the symbolic library of Drake or sympy, FDDP makes use of
    Crocoddyl
    (<xref alt="Mastalli et al., 2020" rid="ref-mastalli2020crocoddyl" ref-type="bibr">Mastalli
    et al., 2020</xref>), SAC uses stable-baselines3
    (<xref alt="Raffin et al., 2021" rid="ref-stable-baselines3" ref-type="bibr">Raffin
    et al., 2021</xref>), and DDPG is implemented in TensorFlow
    (<xref alt="Abadi et al., 2016" rid="ref-tensorflow2015-whitepaper" ref-type="bibr">Abadi
    et al., 2016</xref>). The other methods use only standard libraries.
    This repository is designed to welcome contributions in form of
    novel optimization methods/controllers/learning algorithms to extend
    this list.</p>
    <p>To get an understanding of the functionality of the implemented
    controllers, they can be visualized in the pendulum’s state space.
    Example visualizations of the energy shaping controller and the
    policy learned with DDPG are shown in
    <xref alt="Figure 4" rid="figU003Acontroller_plots">Figure 4</xref>.</p>
    <fig>
      <caption><p>Energy Shaping Controller and DDPG Policy.
      <styled-content id="figU003Acontroller_plots"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/figures/energy_and_ddpg.png" xlink:title="" />
    </fig>
    <p>Furthermore, the swing-up controllers can be benchmarked in
    simulation, where how fast, efficient, consistent, stable and
    sensitive the controller is during the swing-up is evaluated. See
    <xref alt="Figure 5" rid="figU003Abenchmark">Figure 5</xref> for a
    comparison of the different controllers’ benchmark results.</p>
    <p>The benchmark criteria are:</p>
    <list list-type="bullet">
      <list-item>
        <p><bold>Frequency</bold>: The inverse of the time the
        controller needs to process state input and return a control
        signal (hardware dependent).</p>
      </list-item>
      <list-item>
        <p><bold>Swing-up time</bold>: The time it takes for the
        controller to swing-up the pendulum from the lower fixed point
        to the upper fixed point.</p>
      </list-item>
      <list-item>
        <p><bold>Energy consumption</bold>: The energy the controller
        uses during the swing-up motion and holding the pendulum in
        position afterwards.</p>
      </list-item>
      <list-item>
        <p><bold>Smoothness</bold>: Measures how much the controller
        changes the control output during execution.</p>
      </list-item>
      <list-item>
        <p><bold>Consistency</bold>: Measures if the controller is able
        to drive the pendulum to the unstable fixed point for varying
        starting positions and velocities.</p>
      </list-item>
      <list-item>
        <p><bold>Robustness</bold>: Tests the controller abilities to
        recover from perturbations during the swing-up motions.</p>
      </list-item>
      <list-item>
        <p><bold>Insensitivity</bold>: The pendulum parameters (mass,
        length, friction, inertia) are modified without using this
        knowledge in the controller.</p>
      </list-item>
      <list-item>
        <p><bold>Reduced torque limit</bold>: The minimal torque limit
        with which the controller is still able to swing-up the
        pendulum.</p>
      </list-item>
    </list>
    <p>The results shown in
    <xref alt="Figure 5" rid="figU003Abenchmark">Figure 5</xref> are the
    average of 100 repetitions for every controller and criterion. In
    the case of consistency, robustness, and insensitivity, the
    percentage refers to the ratio of successful swing-up motions of the
    100 repetitions.</p>
    <fig>
      <caption><p>Benchmark results.
      <styled-content id="figU003Abenchmark"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/figures/benchmark_barplot.png" xlink:title="" />
    </fig>
    <p>Trajectory optimization (iLQR, direct collocation, ddp) produces
    smooth trajectories, which swing up the pendulum relatively quickly.
    But they do require a trajectory-following control loop (PID, TVLQR)
    to make them more consistent, robust, and insensitive. This can
    become a problem for large deviations from the nominal trajectory.
    RL policies perform well on consistency, robustness, insensitivity,
    and are able to perform fast swing-up motions. Their drawback is
    that their output can fluctuate, which can result in rougher
    motions. The model predictive iLQR controller has an overall good
    performance but has the disadvantage that is it comparatively slow
    due to the optimization at every timestep. The energy shaping plus
    LQR controller, despite its simplicity, shows very satisfying
    results in all benchmark categories.</p>
  </sec>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This work has been performed in the VeryHuman project funded by the
  German Aerospace Center (DLR) with federal funds (Grant Number: FKZ
  01IW20004) from the Federal Ministry of Education and Research (BMBF)
  and is additionally supported with project funds from the federal
  state of Bremen for setting up the Underactuated Robotics Lab (Grant
  Number: 201-001-10-3/2021-3-2).</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-hargraves1987direct">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hargraves</surname><given-names>Charles R</given-names></name>
        <name><surname>Paris</surname><given-names>Stephen W</given-names></name>
      </person-group>
      <article-title>Direct Trajectory Optimization Using Nonlinear Programming and Collocation</article-title>
      <source>Journal of guidance, control, and dynamics</source>
      <year iso-8601-date="1987">1987</year>
      <volume>10</volume>
      <issue>4</issue>
      <pub-id pub-id-type="doi">10.2514/6.1986-2000</pub-id>
      <fpage>338</fpage>
      <lpage>342</lpage>
    </element-citation>
  </ref>
  <ref id="ref-weiwei2004iterative">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Weiwei</surname><given-names>Li</given-names></name>
        <name><surname>Todorov</surname><given-names>Emanuel</given-names></name>
      </person-group>
      <article-title>Iterative Linear Quadratic Regulator Design for Nonlinear Biological Movement Systems.</article-title>
      <source>International Conference on Informatics in Control, Automation and Robotics</source>
      <year iso-8601-date="2004">2004</year>
      <pub-id pub-id-type="doi">10.5220/0001143902220229</pub-id>
      <fpage>222</fpage>
      <lpage>229</lpage>
    </element-citation>
  </ref>
  <ref id="ref-haarnoja2018soft">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Haarnoja</surname><given-names>Tuomas</given-names></name>
        <name><surname>Zhou</surname><given-names>Aurick</given-names></name>
        <name><surname>Abbeel</surname><given-names>Pieter</given-names></name>
        <name><surname>Levine</surname><given-names>Sergey</given-names></name>
      </person-group>
      <article-title>Soft Actor-Critic: Off-Policy Maximum Entropy Deep Reinforcement Learning with a Stochastic Actor</article-title>
      <year iso-8601-date="2018">2018</year>
      <uri>https://arxiv.org/abs/1801.01290</uri>
      <pub-id pub-id-type="doi">10.48550/arXiv.1801.01290</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-lillicrap2019continuous">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Lillicrap</surname><given-names>Timothy P.</given-names></name>
        <name><surname>Hunt</surname><given-names>Jonathan J.</given-names></name>
        <name><surname>Pritzel</surname><given-names>Alexander</given-names></name>
        <name><surname>Heess</surname><given-names>Nicolas</given-names></name>
        <name><surname>Erez</surname><given-names>Tom</given-names></name>
        <name><surname>Tassa</surname><given-names>Yuval</given-names></name>
        <name><surname>Silver</surname><given-names>David</given-names></name>
        <name><surname>Wierstra</surname><given-names>Daan</given-names></name>
      </person-group>
      <article-title>Continuous Control with Deep Reinforcement Learning</article-title>
      <year iso-8601-date="2019">2019</year>
      <uri>https://arxiv.org/abs/1509.02971</uri>
      <pub-id pub-id-type="doi">10.48550/arXiv.1509.02971</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-mastalli2020crocoddyl">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Mastalli</surname><given-names>Carlos</given-names></name>
        <name><surname>Budhiraja</surname><given-names>Rohan</given-names></name>
        <name><surname>Merkt</surname><given-names>Wolfgang</given-names></name>
        <name><surname>Saurel</surname><given-names>Guilhem</given-names></name>
        <name><surname>Hammoud</surname><given-names>Bilal</given-names></name>
        <name><surname>Naveau</surname><given-names>Maximilien</given-names></name>
        <name><surname>Carpentier</surname><given-names>Justin</given-names></name>
        <name><surname>Righetti</surname><given-names>Ludovic</given-names></name>
        <name><surname>Vijayakumar</surname><given-names>Sethu</given-names></name>
        <name><surname>Mansard</surname><given-names>Nicolas</given-names></name>
      </person-group>
      <article-title>Crocoddyl: An Efficient and Versatile Framework for Multi-Contact Optimal Control</article-title>
      <source>2020 IEEE international conference on robotics and automation (ICRA)</source>
      <year iso-8601-date="2020">2020</year>
      <volume></volume>
      <pub-id pub-id-type="doi">10.1109/ICRA40945.2020.9196673</pub-id>
      <fpage>2536</fpage>
      <lpage>2542</lpage>
    </element-citation>
  </ref>
  <ref id="ref-drake">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Tedrake</surname><given-names>Russ</given-names></name>
        <string-name>the Drake Development Team</string-name>
      </person-group>
      <article-title>Drake: Model-Based Design and Verification for Robotics</article-title>
      <year iso-8601-date="2019">2019</year>
      <uri>https://drake.mit.edu</uri>
      <pub-id pub-id-type="doi"></pub-id>
    </element-citation>
  </ref>
  <ref id="ref-stable-baselines3">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Raffin</surname><given-names>Antonin</given-names></name>
        <name><surname>Hill</surname><given-names>Ashley</given-names></name>
        <name><surname>Gleave</surname><given-names>Adam</given-names></name>
        <name><surname>Kanervisto</surname><given-names>Anssi</given-names></name>
        <name><surname>Ernestus</surname><given-names>Maximilian</given-names></name>
        <name><surname>Dormann</surname><given-names>Noah</given-names></name>
      </person-group>
      <article-title>Stable-Baselines3: Reliable reinforcement learning implementations</article-title>
      <source>Journal of Machine Learning Research</source>
      <year iso-8601-date="2021">2021</year>
      <volume>22</volume>
      <issue>268</issue>
      <uri>http://jmlr.org/papers/v22/20-1364.html</uri>
      <pub-id pub-id-type="doi"></pub-id>
      <fpage>1</fpage>
      <lpage>8</lpage>
    </element-citation>
  </ref>
  <ref id="ref-tensorflow2015-whitepaper">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Abadi</surname><given-names>Martín</given-names></name>
        <name><surname>Agarwal</surname><given-names>Ashish</given-names></name>
        <name><surname>Barham</surname><given-names>Paul</given-names></name>
        <name><surname>Brevdo</surname><given-names>Eugene</given-names></name>
        <name><surname>Chen</surname><given-names>Zhifeng</given-names></name>
        <name><surname>Citro</surname><given-names>Craig</given-names></name>
        <name><surname>Corrado</surname><given-names>Greg S.</given-names></name>
        <name><surname>Davis</surname><given-names>Andy</given-names></name>
        <name><surname>Dean</surname><given-names>Jeffrey</given-names></name>
        <name><surname>Devin</surname><given-names>Matthieu</given-names></name>
        <name><surname>Ghemawat</surname><given-names>Sanjay</given-names></name>
        <name><surname>Goodfellow</surname><given-names>Ian</given-names></name>
        <name><surname>Harp</surname><given-names>Andrew</given-names></name>
        <name><surname>Irving</surname><given-names>Geoffrey</given-names></name>
        <name><surname>Isard</surname><given-names>Michael</given-names></name>
        <name><surname>Jia</surname><given-names>Yangqing</given-names></name>
        <name><surname>Jozefowicz</surname><given-names>Rafal</given-names></name>
        <name><surname>Kaiser</surname><given-names>Lukasz</given-names></name>
        <name><surname>Kudlur</surname><given-names>Manjunath</given-names></name>
        <name><surname>Levenberg</surname><given-names>Josh</given-names></name>
        <name><surname>Mane</surname><given-names>Dan</given-names></name>
        <name><surname>Monga</surname><given-names>Rajat</given-names></name>
        <name><surname>Moore</surname><given-names>Sherry</given-names></name>
        <name><surname>Murray</surname><given-names>Derek</given-names></name>
        <name><surname>Olah</surname><given-names>Chris</given-names></name>
        <name><surname>Schuster</surname><given-names>Mike</given-names></name>
        <name><surname>Shlens</surname><given-names>Jonathon</given-names></name>
        <name><surname>Steiner</surname><given-names>Benoit</given-names></name>
        <name><surname>Sutskever</surname><given-names>Ilya</given-names></name>
        <name><surname>Talwar</surname><given-names>Kunal</given-names></name>
        <name><surname>Tucker</surname><given-names>Paul</given-names></name>
        <name><surname>Vanhoucke</surname><given-names>Vincent</given-names></name>
        <name><surname>Vasudevan</surname><given-names>Vijay</given-names></name>
        <name><surname>Viegas</surname><given-names>Fernanda</given-names></name>
        <name><surname>Vinyals</surname><given-names>Oriol</given-names></name>
        <name><surname>Warden</surname><given-names>Pete</given-names></name>
        <name><surname>Wattenberg</surname><given-names>Martin</given-names></name>
        <name><surname>Wicke</surname><given-names>Martin</given-names></name>
        <name><surname>Yu</surname><given-names>Yuan</given-names></name>
        <name><surname>Zheng</surname><given-names>Xiaoqiang</given-names></name>
      </person-group>
      <article-title>TensorFlow: Large-scale machine learning on heterogeneous distributed systems</article-title>
      <publisher-name>arXiv</publisher-name>
      <year iso-8601-date="2016">2016</year>
      <uri>https://arxiv.org/abs/1603.04467</uri>
      <pub-id pub-id-type="doi">10.48550/ARXIV.1603.04467</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Brockman2016">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Brockman</surname><given-names>Greg</given-names></name>
        <name><surname>Cheung</surname><given-names>Vicki</given-names></name>
        <name><surname>Pettersson</surname><given-names>Ludwig</given-names></name>
        <name><surname>Schneider</surname><given-names>Jonas</given-names></name>
        <name><surname>Schulman</surname><given-names>John</given-names></name>
        <name><surname>Tang</surname><given-names>Jie</given-names></name>
        <name><surname>Zaremba</surname><given-names>Wojciech</given-names></name>
      </person-group>
      <article-title>OpenAI Gym</article-title>
      <source>CoRR</source>
      <year iso-8601-date="2016">2016</year>
      <volume>abs/1606.01540</volume>
      <uri>http://arxiv.org/abs/1606.01540</uri>
      <pub-id pub-id-type="doi">10.48550/ARXIV.1606.01540</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-tmotors_manual">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>CubeMars</surname></name>
      </person-group>
      <article-title>AK Series Actuator Driver Manual</article-title>
      <year iso-8601-date="2021">2021</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2022-01-26">2022</year><month>01</month><day>26</day></date-in-citation>
      <uri>{https://store.cubemars.com/images/file/20211201/1638329381542610.pdf}</uri>
      <pub-id pub-id-type="doi"></pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
