<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6326</article-id>
<article-id pub-id-type="doi">10.21105/joss.06326</article-id>
<title-group>
<article-title>PyProximal - scalable convex optimization in
Python</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-0020-2721</contrib-id>
<name>
<surname>Ravasi</surname>
<given-names>Matteo</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-8687-227X</contrib-id>
<name>
<surname>√ñrnhag</surname>
<given-names>Marcus Valtonen</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-3307-1748</contrib-id>
<name>
<surname>Luiken</surname>
<given-names>Nick</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-3641-1875</contrib-id>
<name>
<surname>Leblanc</surname>
<given-names>Olivier</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-6849-9088</contrib-id>
<name>
<surname>Uru√±uela</surname>
<given-names>Eneko</given-names>
</name>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Earth Science and Engineering, Physical Sciences and
Engineering (PSE), King Abdullah University of Science and Technology
(KAUST), Thuwal, Kingdom of Saudi Arabia</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Ericsson Research, Lund, Sweden.</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>ISPGroup, INMA/ICTEAM, UCLouvain, Louvain-la-Neuve,
Belgium.</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>Basque Center on Cognition, Brain and Language (BCBL),
Donostia-San Sebasti√°n, Spain.</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-12-19">
<day>19</day>
<month>12</month>
<year>2023</year>
</pub-date>
<volume>9</volume>
<issue>95</issue>
<fpage>6326</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>convex optimization</kwd>
<kwd>proximal</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>A broad class of problems in scientific disciplines ranging from
  image processing and astrophysics, to geophysics and medical imaging
  call for the optimization of convex, non-smooth objective functions.
  Whereas practitioners are usually familiar with gradient-based
  algorithms, commonly used to solve unconstrained, smooth optimization
  problems, proximal algorithms can be viewed as analogous tools for
  non-smooth and possibly constrained versions of such problems. These
  algorithms sit at a higher level of abstraction than gradient-based
  algorithms and require a basic operation to be performed at each
  iteration: the evaluation of the so-called proximal operator of the
  functional to be optimized. <monospace>PyProximal</monospace> is a
  Python-based library aimed at democratizing the application of convex
  optimization to scientific problems; it provides the required building
  blocks (i.e., proximal operators and algorithms) to define and solve
  complex, convex objective functions in a high-level, abstract fashion,
  shielding users away from any unneeded mathematical and implementation
  details.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p><monospace>PyProximal</monospace> is a Python library for convex
  optimization, developed as an integral part of the
  <monospace>PyLops</monospace> framework. It provides practitioners
  with an easy-to-use framework to define and solve composite convex
  objective functions arising in many modern inverse problems. Its API
  is designed to offer a class-based and user-friendly interface to
  proximal operators, coupled with function-based optimizers; because of
  its modular design, researchers in the field of convex optimization
  can also benefit from this library in a number of ways when developing
  new algorithms: first, they can easily include their newly developed
  proximal operators and solvers; second, they can compare these methods
  with state-of-the-art algorithms already provided in the library.</p>
  <p>Several projects in the Python ecosystem provide implementations of
  proximal operators and/or algorithms, which present some overlap with
  those available in <monospace>PyProximal</monospace>. A (possibly not
  exhaustive) list of other projects is composed of
  <italic>proxalgs</italic>
  (<xref alt="Maheswaranathan et al., 2019" rid="ref-Maheswaranathan" ref-type="bibr">Maheswaranathan
  et al., 2019</xref>), <italic>proxmin</italic>
  (<xref alt="Moolekamp &amp; Melchior, 2018" rid="ref-Melchior" ref-type="bibr">Moolekamp
  &amp; Melchior, 2018</xref>), <italic>The Proximity Operator
  Repository</italic>
  (<xref alt="Chierchia et al., 2024" rid="ref-Chierchia" ref-type="bibr">Chierchia
  et al., 2024</xref>), <italic>ProxImaL</italic>
  (<xref alt="Heide et al., 2016" rid="ref-HeideU003A2016" ref-type="bibr">Heide
  et al., 2016</xref>), and <italic>pyxu</italic>
  (<xref alt="Simeoni et al., 2024" rid="ref-pyxu-framework" ref-type="bibr">Simeoni
  et al., 2024</xref>). A key common feature of all of the above
  mentioned packages is to be self-contained; as such, not only proximal
  operators and solvers are provided, but also linear operators that are
  useful for the applications that the package targets. Moreover, to the
  best of our knowledge, all of these packages provide purely CPU-based
  implementations (apart from <italic>pyxu</italic>). On the other hand,
  <monospace>PyProximal</monospace> heavily relies on and seamlessly
  integrates with <monospace>PyLops</monospace>
  (<xref alt="Ravasi &amp; Vasconcelos, 2020" rid="ref-RavasiU003A2020" ref-type="bibr">Ravasi
  &amp; Vasconcelos, 2020</xref>), a Python library for matrix-free
  linear algebra and optimization. As such, it can easily handle
  problems with millions of unknowns and inherits the interchangle
  CPU/GPU backend of PyLops
  (<xref alt="Ravasi, 2021" rid="ref-RavasiU003A2021" ref-type="bibr">Ravasi,
  2021</xref>). More specifically, <monospace>PyLops</monospace> is
  leveraged in the implementation of proximal operators that require
  access to linear operators (e.g., numerical derivatives) and/or
  least-squares solvers (e.g., conjugate gradient). Whilst libraries
  with similar capabilities exist in the Python ecosystem, their design
  usually leads to a tight coupling between linear and proximal
  operators, and their respective solvers. On the other hand, by
  following the Separation of Concerns (SoC) design principle, the
  overlap between <monospace>PyLops</monospace> and
  <monospace>PyProximal</monospace> is reduced to a minimum, easing both
  their development and maintenance, as well as allowing newcomers to
  learn how to solve inverse problems in a step-by-step fashion. As
  such, <monospace>PyProximal</monospace> can be ultimately described as
  a light-weight extension of <monospace>PyLops</monospace> that users
  of the latter can easily learn and adopt with minimal additional
  effort.</p>
</sec>
<sec id="mathematical-framework">
  <title>Mathematical framework</title>
  <p>Convex optimization is routinely used to solve problems of the form
  (<xref alt="Parikh, 2013" rid="ref-ParikhU003A2013" ref-type="bibr">Parikh,
  2013</xref>):</p>
  <p><named-content id="eqU003Aproblem" content-type="equation"><disp-formula><alternatives>
  <tex-math><![CDATA[
  \min_\mathbf{x} f(\mathbf{x}) +g(\mathbf{Lx})]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:munder><mml:mo>min</mml:mo><mml:mi>ùê±</mml:mi></mml:munder><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>ùê±</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>g</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mrow><mml:mi>ùêã</mml:mi><mml:mi>ùê±</mml:mi></mml:mrow><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></disp-formula></named-content></p>
  <p>where <inline-formula><alternatives>
  <tex-math><![CDATA[f]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>f</mml:mi></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[g]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>g</mml:mi></mml:math></alternatives></inline-formula>
  are possibly non-smooth convex functionals and
  <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf{L}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>ùêã</mml:mi></mml:math></alternatives></inline-formula>
  is a linear operator. A special case appearing in many scientific
  applications is represented by <inline-formula><alternatives>
  <tex-math><![CDATA[f=1/2 \Vert \mathbf{y} - \mathcal{A}(\mathbf{x})\Vert_2^2]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>f</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mi>/</mml:mi><mml:mn>2</mml:mn><mml:mo stretchy="false" form="postfix">‚Äñ</mml:mo><mml:mi>ùê≤</mml:mi><mml:mo>‚àí</mml:mo><mml:mi>ùíú</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>ùê±</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:msubsup><mml:mo stretchy="false" form="postfix">‚Äñ</mml:mo><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula>.
  Here, <inline-formula><alternatives>
  <tex-math><![CDATA[\mathcal{A}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>ùíú</mml:mi></mml:math></alternatives></inline-formula>
  is a (possibly non-linear) modeling operator, describing the
  underlying physical process that links the unknown model vector
  <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf{x}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>ùê±</mml:mi></mml:math></alternatives></inline-formula>
  to the vector of observations <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf{y}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>ùê≤</mml:mi></mml:math></alternatives></inline-formula>.
  In this case, we usually refer to <inline-formula><alternatives>
  <tex-math><![CDATA[g]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>g</mml:mi></mml:math></alternatives></inline-formula>
  as the regularizer, where one or multiple functions are added to the
  data misfit term to promote certain features in the sought after
  solution and/or constraint the solution to fall within a given set of
  allowed vectors.</p>
  <p>A common feature of all proximal algorithms is represented by the
  fact that one must be able to repeatedly evaluate the proximal
  operator of <inline-formula><alternatives>
  <tex-math><![CDATA[f]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>f</mml:mi></mml:math></alternatives></inline-formula>
  and/or <inline-formula><alternatives>
  <tex-math><![CDATA[g]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>g</mml:mi></mml:math></alternatives></inline-formula>.
  The proximal operator of a function <inline-formula><alternatives>
  <tex-math><![CDATA[f]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>f</mml:mi></mml:math></alternatives></inline-formula>
  is defined as</p>
  <p><named-content id="eqU003Aprox" content-type="equation"><disp-formula><alternatives>
  <tex-math><![CDATA[
  prox_{\tau f} (\mathbf{x}) = \min_{\mathbf{y}} f(\mathbf{y}) +
          \frac{1}{2 \tau}||\mathbf{y} - \mathbf{x}||^2_2]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>p</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>œÑ</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>ùê±</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>min</mml:mo><mml:mi>ùê≤</mml:mi></mml:munder><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>ùê≤</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mn>2</mml:mn><mml:mi>œÑ</mml:mi></mml:mrow></mml:mfrac><mml:mrow><mml:mo stretchy="true" form="prefix">|</mml:mo><mml:mo stretchy="true" form="postfix">|</mml:mo></mml:mrow><mml:mi>ùê≤</mml:mi><mml:mo>‚àí</mml:mo><mml:mi>ùê±</mml:mi><mml:msubsup><mml:mrow><mml:mo stretchy="true" form="prefix">|</mml:mo><mml:mo stretchy="true" form="postfix">|</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:math></alternatives></disp-formula></named-content></p>
  <p>Whilst evaluating a proximal operator does itself require solving
  an optimization problem, these problems often admit closed form
  solutions or can be solved very efficiently with ad-hoc specialized
  methods. Several of such proximal operators are efficiently
  implemented in the <monospace>PyProximal</monospace> library.</p>
  <p>Finally, there exists three main families of proximal algorithms
  that can be used to solve various flavors of
  <xref alt="Equation¬†1" rid="eqU003Aproblem">Equation¬†1</xref>,
  namely:</p>
  <list list-type="bullet">
    <list-item>
      <p>Proximal Gradient
      (<xref alt="Combettes &amp; Pesquet, 2011" rid="ref-CombettesU003A2011" ref-type="bibr">Combettes
      &amp; Pesquet, 2011</xref>): this method, also commonly referred
      to as the Forward-Backward Splitting (FBS) algorithm, is usually
      the preferred choice when <inline-formula><alternatives>
      <tex-math><![CDATA[\mathbf{L}=\mathbf{I}]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>ùêã</mml:mi><mml:mo>=</mml:mo><mml:mi>ùêà</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
      (i.e.¬†identity operator). Accelerated versions such as the FISTA
      and TwIST algorithms exist and are usually preferred to the
      vanilla FBS method;</p>
    </list-item>
    <list-item>
      <p>Alternating Direction Method of Multipliers
      (<xref alt="Boyd et al., 2011" rid="ref-BoydU003A2011" ref-type="bibr">Boyd
      et al., 2011</xref>): this method is based on a splitting strategy
      and can be used for a broader class of problem than FBS and its
      accelerated versions.</p>
    </list-item>
    <list-item>
      <p>Primal-Dual
      (<xref alt="Chambolle &amp; Pock, 2011" rid="ref-ChambolleU003A2011" ref-type="bibr">Chambolle
      &amp; Pock, 2011</xref>): another popular algorithm able to tackle
      problems in the form of
      <xref alt="Equation¬†1" rid="eqU003Aproblem">Equation¬†1</xref> with
      any choice of <inline-formula><alternatives>
      <tex-math><![CDATA[\mathbf{L}]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>ùêã</mml:mi></mml:math></alternatives></inline-formula>.
      It reformulates the original problem into its primal-dual version
      and solves a saddle optimization problem.</p>
    </list-item>
  </list>
  <p><monospace>PyProximal</monospace> provides implementations for
  these three families of algorithms; moreover, all solvers include
  additional features such as back-tracking for automatic selection of
  step-sizes, logging of the objective function evolution through
  iterations, and possibility to inject custom callbacks.</p>
</sec>
<sec id="code-structure">
  <title>Code structure</title>
  <p><monospace>PyProximal</monospace>‚Äôs modular and easy-to-use
  Application Programming Interface (API) allows scientists to define
  and solve convex objective functions by means of proximal algorithms.
  The API is composed of two main part as shown in Fig. 1.</p>
  <p>The first part contains the entire suite of proximal operators,
  which are class-based objects subclassing the
  <monospace>pylops.ProxOperator</monospace> parent class. For each of
  these operators, the solution to the proximal optimization problem in
  <xref alt="Equation¬†2" rid="eqU003Aprox">Equation¬†2</xref> (and/or the
  dual proximal problem) is implemented in the
  <monospace>prox</monospace> (and/or <monospace>dualprox</monospace>)
  method. As in most cases a closed-form solution exists for such a
  problem, our implementation provides users with the most efficient way
  to evaluate a proximal operator. The second part comprises of
  so-called proximal solvers, optimization algorithms that are suited to
  solve problems of the form in
  <xref alt="Equation¬†1" rid="eqU003Aproblem">Equation¬†1</xref>.
  Finally, some specialized solvers that rely on one or more of the
  previously described optimizers are also provided.</p>
  <fig>
    <caption><p>Schematic representation of the
    <monospace>PyProximal</monospace> API.</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/figs/software.png" />
  </fig>
</sec>
<sec id="representative-pyproximal-use-cases">
  <title>Representative PyProximal Use Cases</title>
  <p>Examples of PyProximal applications in different scientific fields
  include:</p>
  <list list-type="bullet">
    <list-item>
      <p><italic>Joint inversion and segmentation of subsurface
      models</italic>: when inverting geophysical data for subsurface
      priorities, prior information can be provided to inversion process
      in the form of discrete number of rock units; this can be
      parametrized in terms of their expected mean (or most likely
      value). Ravasi &amp; Birnie
      (<xref alt="2022" rid="ref-RavasiU003A2022" ref-type="bibr">2022</xref>)
      and Romero et al.
      (<xref alt="2023" rid="ref-RomeroU003A2023" ref-type="bibr">2023</xref>)
      frame such a problem as a joint inversion and segmentation task,
      where the underlying objective function is optimized in
      alternating fashion using the Primal-Dual algorithm.</p>
    </list-item>
    <list-item>
      <p><italic>Plug-and-Play (PnP) priors</italic>: introduced in 2013
      by Venkatakrishnan et al.
      (<xref alt="2013" rid="ref-VenkatakrishnanU003A2013" ref-type="bibr">2013</xref>),
      the PnP framework lays its foundation on the interpretation of the
      proximal operator as a denoising problem; as such, powerful
      statistical or deep learning based denoisers are used to evaluate
      the proximal operator of implicit regularizers. Romero et al.
      (<xref alt="2022" rid="ref-RomeroU003A2022" ref-type="bibr">2022</xref>)
      applies this concept in the context of seismic inversion,
      achieving results of superior quality in comparison to traditional
      model-based regularization techniques.</p>
    </list-item>
    <list-item>
      <p><italic>Multi-Core Fiber Lensless Imaging</italic> (MCFLI) is a
      computational imaging technique to reconstruct biological samples
      at cellular scale. Leveraging the rank-one projected
      interferometric sensing of the MCFLI has been shown to improve the
      efficiency of the acquisition process
      (<xref alt="Leblanc et al., 2023" rid="ref-LeblancU003A2023" ref-type="bibr">Leblanc
      et al., 2023</xref>); this entails solving a regularized inverse
      problem with the proximal gradient method. Depending on the image
      to be reconstructed, the regularization term may for instance be
      <inline-formula><alternatives>
      <tex-math><![CDATA[L_1]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
      or TV.</p>
    </list-item>
  </list>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-RavasiU003A2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ravasi</surname><given-names>M.</given-names></name>
        <name><surname>Vasconcelos</surname><given-names>I.</given-names></name>
      </person-group>
      <article-title>PyLops - A linear-operator Python library for scalable algebra and optimization</article-title>
      <source>SoftwareX</source>
      <year iso-8601-date="2020">2020</year>
      <volume>11</volume>
      <uri>https://www.sciencedirect.com/science/article/pii/S2352711019301086</uri>
      <pub-id pub-id-type="doi">10.1016/j.softx.2019.100361</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-ParikhU003A2013">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Parikh</surname><given-names>N.</given-names></name>
      </person-group>
      <publisher-name>Foundations; Trends in Optimization</publisher-name>
      <year iso-8601-date="2013">2013</year>
      <uri>https://web.stanford.edu/~boyd/papers/pdf/prox_algs.pdf</uri>
      <pub-id pub-id-type="doi">10.1561/2400000003</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-CombettesU003A2011">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Combettes</surname><given-names>P.</given-names></name>
        <name><surname>Pesquet</surname><given-names>J.-C.</given-names></name>
      </person-group>
      <source>Proximal splitting methods in signal processing</source>
      <publisher-name>Springer Optimization; Its Applications</publisher-name>
      <year iso-8601-date="2011">2011</year>
      <uri>https://link.springer.com/chapter/10.1007/978-1-4419-9569-8_10</uri>
      <pub-id pub-id-type="doi">10.1007/978-1-4419-9569-8_10</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-BoydU003A2011">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Boyd</surname><given-names>S.</given-names></name>
        <name><surname>Parikh</surname><given-names>N.</given-names></name>
        <name><surname>Chu</surname><given-names>E.</given-names></name>
        <name><surname>Peleato</surname><given-names>B.</given-names></name>
        <name><surname>Eckstein</surname><given-names>J.</given-names></name>
      </person-group>
      <article-title>Distributed optimization and statistical learning via the alternating direction method of multipliers</article-title>
      <source>Foundations and Trends in Machine Learning</source>
      <year iso-8601-date="2011">2011</year>
      <volume>3</volume>
      <uri>https://web.stanford.edu/~boyd/papers/pdf/admm_distr_stats.pdf</uri>
      <pub-id pub-id-type="doi">10.1561/2200000016</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-ChambolleU003A2011">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Chambolle</surname><given-names>A.</given-names></name>
        <name><surname>Pock</surname><given-names>T.</given-names></name>
      </person-group>
      <article-title>A first-order primal-dual algorithm for convex problems with applications to imaging</article-title>
      <source>Journal of Mathematical Imaging and Vision</source>
      <year iso-8601-date="2011">2011</year>
      <volume>40</volume>
      <uri>https://link.springer.com/article/10.1007/s10851-010-0251-1</uri>
      <pub-id pub-id-type="doi">10.1007/s10851-010-0251-1</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-RavasiU003A2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ravasi</surname><given-names>M.</given-names></name>
        <name><surname>Birnie</surname><given-names>C.</given-names></name>
      </person-group>
      <article-title>A joint inversion-segmentation approach to assisted seismic interpretation</article-title>
      <source>Geophysical Journal International</source>
      <year iso-8601-date="2022">2022</year>
      <volume>228</volume>
      <uri>https://academic.oup.com/gji/article/228/2/893/6374557</uri>
      <pub-id pub-id-type="doi">10.1093/gji/ggab388</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-VenkatakrishnanU003A2013">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Venkatakrishnan</surname><given-names>S. V</given-names></name>
        <name><surname>Bouman</surname><given-names>C. A.</given-names></name>
        <name><surname>Wohlberg</surname><given-names>B.</given-names></name>
      </person-group>
      <article-title>Plug-and-Play Priors for Model Based Reconstruction</article-title>
      <source>2013 IEEE Global Conference on Signal and Information Processing</source>
      <year iso-8601-date="2013">2013</year>
      <uri>https://ieeexplore.ieee.org/document/6737048</uri>
      <pub-id pub-id-type="doi">10.1109/GlobalSIP.2013.6737048</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-RomeroU003A2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Romero</surname><given-names>J.</given-names></name>
        <name><surname>Luiken</surname><given-names>N.</given-names></name>
        <name><surname>Ravasi</surname><given-names>M.</given-names></name>
      </person-group>
      <article-title>Seeing through the CO2 plume: Joint inversion-segmentation of the Sleipner 4D seismic data set</article-title>
      <source>The Leading Edge</source>
      <year iso-8601-date="2023">2023</year>
      <volume>42</volume>
      <uri>https://library.seg.org/doi/full/10.1190/tle42070457.1</uri>
      <pub-id pub-id-type="doi">10.1190/tle42070457.1</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-RomeroU003A2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Romero</surname><given-names>J.</given-names></name>
        <name><surname>Luiken</surname><given-names>M. Corrales N.</given-names></name>
        <name><surname>Ravasi</surname><given-names>M.</given-names></name>
      </person-group>
      <article-title>Plug and Play Post-Stack Seismic Inversion with CNN-Based Denoisers</article-title>
      <source>Second EAGE Subsurface Intelligence Workshop</source>
      <year iso-8601-date="2022">2022</year>
      <volume>1</volume>
      <uri>https://www.earthdoc.org/content/papers/10.3997/2214-4609.2022616015</uri>
      <pub-id pub-id-type="doi">10.3997/2214-4609.2022616015</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-LeblancU003A2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Leblanc</surname><given-names>O.</given-names></name>
        <name><surname>Hofer</surname><given-names>M.</given-names></name>
        <name><surname>Sivankutty</surname><given-names>S.</given-names></name>
        <name><surname>Rigneault</surname><given-names>H.</given-names></name>
        <name><surname>Jacques</surname><given-names>L.</given-names></name>
      </person-group>
      <article-title>Interferometric Lensless Imaging: Rank-one Projections of Image Frequencies with Speckle Illuminations</article-title>
      <source>ArXiv e-prints</source>
      <year iso-8601-date="2023">2023</year>
      <uri>https://arxiv.org/abs/2306.12698</uri>
      <pub-id pub-id-type="doi">10.1109/tci.2024.3359178</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-RavasiU003A2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ravasi</surname><given-names>M.</given-names></name>
      </person-group>
      <article-title>Leveraging GPUs for matrix-free optimization with PyLops</article-title>
      <source>Fifth EAGE Workshop on High Performance Computing for Upstream</source>
      <year iso-8601-date="2021">2021</year>
      <volume>1</volume>
      <uri>https://www.earthdoc.org/content/papers/10.3997/2214-4609.2021612003</uri>
      <pub-id pub-id-type="doi">10.3997/2214-4609.2021612003</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Maheswaranathan">
    <element-citation publication-type="webpage">
      <person-group person-group-type="author">
        <name><surname>Maheswaranathan</surname><given-names>N.</given-names></name>
        <name><surname>Zapp</surname><given-names>S.</given-names></name>
        <name><surname>Poole</surname><given-names>B.</given-names></name>
      </person-group>
      <article-title>Proxalgs</article-title>
      <year iso-8601-date="2019">2019</year>
      <uri>https://github.com/ganguli-lab/proxalgs/</uri>
    </element-citation>
  </ref>
  <ref id="ref-Melchior">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Moolekamp</surname><given-names>F.</given-names></name>
        <name><surname>Melchior</surname><given-names>P.</given-names></name>
      </person-group>
      <article-title>Block-simultaneous direction method of multipliers: a proximal primal-dual splitting algorithm for nonconvex problems with multiple constraints</article-title>
      <source>Optimization and Engineering</source>
      <year iso-8601-date="2018">2018</year>
      <volume>19</volume>
      <uri>https://link.springer.com/article/10.1007/s11081-018-9380-y</uri>
      <pub-id pub-id-type="doi">10.1007/s11081-018-9380-y</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Chierchia">
    <element-citation publication-type="webpage">
      <person-group person-group-type="author">
        <name><surname>Chierchia</surname><given-names>G.</given-names></name>
        <name><surname>Chouzenoux</surname><given-names>E.</given-names></name>
        <name><surname>Combettes</surname><given-names>P. L.</given-names></name>
        <name><surname>Pesquet</surname><given-names>J.-C.</given-names></name>
      </person-group>
      <article-title>The proximity operator repository</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://proximity-operator.net/</uri>
    </element-citation>
  </ref>
  <ref id="ref-pyxu-framework">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Simeoni</surname><given-names>Matthieu</given-names></name>
        <name><surname>Kashani</surname><given-names>Sepand</given-names></name>
        <name><surname>Ru√©-Queralt</surname><given-names>Joan</given-names></name>
        <name><surname>Developers</surname><given-names>Pyxu</given-names></name>
      </person-group>
      <article-title>Pyxu-org/pyxu: pyxu</article-title>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <uri>https://doi.org/10.5281/zenodo.4486431</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.4486431</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-HeideU003A2016">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Heide</surname><given-names>Felix</given-names></name>
        <name><surname>Diamond</surname><given-names>Steven</given-names></name>
        <name><surname>Nie√üner</surname><given-names>Matthias</given-names></name>
        <name><surname>Ragan-Kelley</surname><given-names>Jonathan</given-names></name>
        <name><surname>Heidrich</surname><given-names>Wolfgang</given-names></name>
        <name><surname>Wetzstein</surname><given-names>Gordon</given-names></name>
      </person-group>
      <article-title>ProxImaL: Efficient image optimization using proximal algorithms</article-title>
      <publisher-name>Association for Computing Machinery</publisher-name>
      <publisher-loc>New York, NY, USA</publisher-loc>
      <year iso-8601-date="2016">2016</year>
      <volume>35</volume>
      <issue>4</issue>
      <pub-id pub-id-type="doi">10.1145/2897824.2925875</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
