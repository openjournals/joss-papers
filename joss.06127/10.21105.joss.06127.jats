<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6127</article-id>
<article-id pub-id-type="doi">10.21105/joss.06127</article-id>
<title-group>
<article-title>PARMESAN: Meteorological Timeseries and Turbulence
Analysis Backed by Symbolic Mathematics</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-2472-2051</contrib-id>
<name>
<surname>Büchau</surname>
<given-names>Yann Georg</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Mashni</surname>
<given-names>Hasan</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Bramati</surname>
<given-names>Matteo</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-9568-1766</contrib-id>
<name>
<surname>Savvakis</surname>
<given-names>Vasileios</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Schäfer</surname>
<given-names>Ines</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Jung</surname>
<given-names>Saskia</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-7127-9529</contrib-id>
<name>
<surname>Miranda-Garcia</surname>
<given-names>Gabriela</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-0784-3759</contrib-id>
<name>
<surname>Hardt</surname>
<given-names>Daniel</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-4075-1573</contrib-id>
<name>
<surname>Bange</surname>
<given-names>Jens</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Eberhard Karls Universität Tübingen, Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Akaflieg Braunschweig e.V., Braunschweig,
Germany</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-08-21">
<day>21</day>
<month>8</month>
<year>2023</year>
</pub-date>
<volume>9</volume>
<issue>94</issue>
<fpage>6127</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>meteorlogy</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>PARMESAN (the <bold>P</bold>ython <bold>A</bold>tmospheric
  <bold>R</bold>esearch Package for <bold>ME</bold>teorological
  Time<bold>S</bold>eries and Turbulence <bold>AN</bold>alysis) is a
  Python package providing common functionality for atmospheric
  scientists doing time series or turbulence analysis. Several
  meteorological quantities such as potential temperature, various
  humidity measures, gas concentrations, wind speed and direction,
  turbulence and stability parameters can be calculated. Furthermore,
  signal processing functionality such as properly normed variance
  spectra for frequency analysis is available. In contrast to existing
  packages with similar goals, its routines for physical quantities are
  derived from symbolic mathematical expressions, enabling inspection,
  automatic rearrangement, reuse and recombination of the underlying
  equations. Building on this, PARMESAN’s functions as well as their
  comprehensive parameter documentation are mostly auto-generated,
  minimizing human error and effort. In addition, sensitivity/error
  propagation analysis is possible as mathematical operations like
  derivations can be applied to the underlying equations. Physical
  consistency in terms of units and value domains are transparently
  ensured for PARMESAN functions. PARMESAN’s approach can be reused to
  simplify implementation of robust routines in other fields of
  physics.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The need to assert properly balanced physical units right from
  within running programs and models has been recognised for a long time
  now
  (<xref alt="Chizeck et al., 2009" rid="ref-chizeck2009errordetectionunit" ref-type="bibr">Chizeck
  et al., 2009</xref>;
  <xref alt="Cooper &amp; McKeever, 2008" rid="ref-cooper2008" ref-type="bibr">Cooper
  &amp; McKeever, 2008</xref>). Unit conversion errors in science and
  engineering have caused costly system failures such as the NASA Mars
  Climate Orbiter crash in 1999
  (<xref alt="NASA, 1999" rid="ref-nasa1999marsclimateorbiter" ref-type="bibr">NASA,
  1999</xref>).</p>
  <p>Nowadays, the Python ecosystem comprises many packages that ease
  specific tasks when performing physical calculations:
  <monospace>numpy</monospace>
  (<xref alt="Harris et al., 2020" rid="ref-numpy" ref-type="bibr">Harris
  et al., 2020</xref>) and <monospace>scipy</monospace>
  (<xref alt="Virtanen et al., 2020" rid="ref-scipy" ref-type="bibr">Virtanen
  et al., 2020</xref>) provide efficient numerical routines,
  <monospace>pandas</monospace>
  (<xref alt="The pandas development team, 2023" rid="ref-pandas" ref-type="bibr">The
  pandas development team, 2023</xref>) and
  <monospace>xarray</monospace>
  (<xref alt="Hoyer &amp; Hamman, 2017" rid="ref-xarray" ref-type="bibr">Hoyer
  &amp; Hamman, 2017</xref>) provide structures to read, write and
  aggregate data, <monospace>pint</monospace>
  (<xref alt="Grecco &amp; Chéron, 2023" rid="ref-pint" ref-type="bibr">Grecco
  &amp; Chéron, 2023</xref>) handles physical units and the
  <monospace>uncertainties</monospace> package
  (<xref alt="Lebigot, 2023" rid="ref-uncertainties" ref-type="bibr">Lebigot,
  2023</xref>) simplifies linear error propagation. Partly based on
  those, collections of routines for atmospheric science exist such as
  <monospace>metpy</monospace>
  (<xref alt="May et al., 2022" rid="ref-metpy" ref-type="bibr">May et
  al., 2022</xref>), <monospace>iris</monospace>
  (<xref alt="Met Office, 2010 - 2023" rid="ref-Iris" ref-type="bibr">Met
  Office, 2010 - 2023</xref>) and <monospace>aoslib</monospace>/PyAOS
  (<xref alt="PyAOS, 2023" rid="ref-PyAOS" ref-type="bibr">PyAOS,
  2023</xref>). However these focus more on gridded, spatial data which
  is common in modelling and remote sensing and have little
  functionality for turbulence analysis. Turbulence plays an important
  role in atmospheric exchange processes, especially in the planetary
  boundary layer
  (<xref alt="Stull, 1988" rid="ref-stull1988introductionboundarylayer" ref-type="bibr">Stull,
  1988</xref>). It is a statistical process and thus mostly quantified
  through high-resolution in-situ measurement techniques
  (<xref alt="Foken, 2021" rid="ref-foken2021springerhandbookatmospheric" ref-type="bibr">Foken,
  2021</xref>). <monospace>metpy</monospace> and
  <monospace>iris</monospace> can both handle units and require the user
  to explicitly specify them. Their physical quantities are calculated
  using hard-coded expressions. In contrast, the
  <monospace>atmos</monospace> package
  (<xref alt="McGibbon, 2023" rid="ref-atmos" ref-type="bibr">McGibbon,
  2023</xref>) has implemented an equation solving system for more
  flexible reusability and less hard-coding of relationships between
  quantities. Its development seems to have stalled since 2020, though.
  None of the above packages have a mechanism for transparently checking
  that input and output values are within reasonable physical
  bounds.</p>
  <p>PARMESAN addresses the aforementioned gaps by providing functions
  for meteorological quantities that are backed by symbolic mathematical
  expressions employing SymPy
  (<xref alt="Meurer et al., 2017" rid="ref-sympy" ref-type="bibr">Meurer
  et al., 2017</xref>), a powerful computer algebra system written
  purely in Python. Inputs and outputs are checked for and potentially
  converted to correct units while asserting that the physical domains
  are not exceeded. It can rearrange its equations and thus flexibly
  increase the number of available functions. PARMESAN has already been
  used successfully in Büchau et al.
  (<xref alt="2022" rid="ref-buchau2022autarkicwirelesssensor" ref-type="bibr">2022</xref>),
  Büchau et al.
  (<xref alt="2023" rid="ref-buchau2023portablelowcost" ref-type="bibr">2023</xref>),
  Wüsteney
  (<xref alt="2023" rid="ref-wusteney2023bodenwassergehaltsmessungtonigen" ref-type="bibr">2023</xref>)
  and Herrmann
  (<xref alt="2023" rid="ref-herrmann2023designreiterationchimney" ref-type="bibr">2023</xref>)
  for data analysis of meteorological measurements.</p>
</sec>
<sec id="structure">
  <title>Structure</title>
  <p>Functions for physical quantities in PARMESAN are based on symbolic
  mathematical equations created using SymPy
  (<xref alt="Meurer et al., 2017" rid="ref-sympy" ref-type="bibr">Meurer
  et al., 2017</xref>). PARMESAN defines a descriptive list of symbols
  (i.e. variables and constants,
  <xref alt="[FIGxSymbolList]" rid="FIGxSymbolList">[FIGxSymbolList]</xref>)
  and relates them to form the common laws of thermodynamics,
  parametrisations and definitions used in atmospheric science.</p>
  <fig>
    <caption><p>Excerpt of auto-generated symbol list in
    <monospace>parmesan.symbols</monospace>. Symbols have metadata such
    as descriptions, units and default values attached. For readability,
    they can be referred to with different variable names, which are
    also available as parameter aliases when calling functions in
    PARMESAN.
    <styled-content id="FIGxSymbolList"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/parmesan.symbols-list.png" />
  </fig>
  <p>This approach has many advantages over the traditional method of
  hard-coding mathematical operations between function inputs using
  language-specific constructs. First of all, information about the
  mathematical relationship between quantities is not lost, but can
  instead be queried and reused. SymPy equations can be rearranged and
  recombined to generate new expressions, enabling the generation of
  many specific functions from a set of base equations. Additionally,
  SymPy expressions are translatable into code for numerous programming
  languages. PARMESAN uses this mechanism to turn its equations into
  executable Python functions that use the efficient
  <monospace>numpy</monospace> package internally
  (<xref alt="Harris et al., 2020" rid="ref-numpy" ref-type="bibr">Harris
  et al., 2020</xref>), so no runtime overhead is introduced and array
  inputs and outputs are supported. Symbolic expressions are
  automatically simplified and terms cancelled accordingly, revealing
  the set of input parameters an equation really depends on. This
  information is then used to automatically generate extensive
  documentation for each individual function
  (<xref alt="[FIGxPotentialTemperatureDocs]" rid="FIGxPotentialTemperatureDocs">[FIGxPotentialTemperatureDocs]</xref>)
  - a great benefit for consistency and minimisation of human effort and
  oversight in the documentation.</p>
  <p>Creating new functions in or from PARMESAN thus often requires only
  very few lines of code. Here is a compacted version of PARMESAN’s
  function for potential temperature specifically for dry air:</p>
  <code language="python">from parmesan.symbols import *   # Import all of PARMESAN's symbols
@from_sympy() # decorator turning SymPy expression into code and documentation
def potential_temperature(): # no arguments necessary, added automatically
    return T * (p_ref / p) ** (R_dryair / c_p_dryair)   
    # SymPy expression - practically equal to typical Python code</code>
  <p>In this case, the resulting quantity is derived from the function’s
  name, documentation is generated
  (<xref alt="[FIGxPotentialTemperatureDocs]" rid="FIGxPotentialTemperatureDocs">[FIGxPotentialTemperatureDocs]</xref>)
  and the equation is immediately checked for units consistency
  employing the <monospace>pint</monospace> package
  (<xref alt="Grecco &amp; Chéron, 2023" rid="ref-pint" ref-type="bibr">Grecco
  &amp; Chéron, 2023</xref>). Each symbol has metadata attached, such as
  a physical unit and a domain
  (<xref alt="[FIGxSymbolList]" rid="FIGxSymbolList">[FIGxSymbolList]</xref>).
  These are available to the resulting function for assertion, so a
  PARMESAN function will check and auto-convert input and output units
  and issue a warning when unphysical values arise such as negative
  absolute temperatures:</p>
  <code language="python"># Implicit Units 
potential_temperature(T=300, p=100000) # K and Pa assumed
# 300.0 K

# Explicit Units
from parmesan.units import units # PARMESAN's predefined units
potential_temperature(T=units.Quantity(20,&quot;°C&quot;), p=950 * units.hPa)
# 297.477188635086 K

# Parameter/Symbol Aliases
potential_temperature(temperature=300, pressure=100000) 
# 300.0 K

# Arrays
import numpy as np
potential_temperature(T=300, p=np.array([950,980,1010]) * units.hPa)
# Magnitude: [304.42830151978785 301.7364178157801 299.14844787358106]
#     Units: K

# Bounds check
potential_temperature(T=-10, p=1010*units.hPa) # temperature out of bounds
# OutOfBoundsWarning: 1 of 1 input values to potential_temperature for 
# argument 'T' are out of bounds defined by 'positive': [-10] at indices [0]
# -9.971614929119369 K

# Units check
potential_temperature(T=300, p=1010*units.degrees) # wrong unit -&gt; error
# DimensionalityError: potential_temperature(): 
#    p=&lt;Quantity(1010, 'degree')&gt; could not be converted to pascal: 
#    Cannot convert from 'degree' (dimensionless) to 'pascal' 
#    ([mass] / [length] / [time] ** 2)</code>
  <fig>
    <caption><p>Auto-generated comprehensive parameter documentation and
    LaTeX-formatted equation for PARMESAN’s
    <monospace>potential_temperature()</monospace> function to calculate
    potential temperature from atmospheric pressure and temperature.
    Parameter aliases, units, defaults and bounds are taken from
    PARMESAN’s symbol library
    (<xref alt="[FIGxSymbolList]" rid="FIGxSymbolList">[FIGxSymbolList]</xref>)
    and used coherently across functions in PARMESAN.
    <styled-content id="FIGxPotentialTemperatureDocs"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/parmesan.gas.temperature.potential_temperature-docs.png" />
  </fig>
  <p>Another benefit of having the underlying symbolic expression for an
  equation available is the possibility to do sensitivity analysis.
  PARMESAN can derive the maximum relative error
  <inline-formula><alternatives>
  <tex-math><![CDATA[\Delta y_\text{max,rel}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>Δ</mml:mi><mml:msub><mml:mi>y</mml:mi><mml:mtext mathvariant="normal">max,rel</mml:mtext></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>
  (<xref alt="Equation 1" rid="EQUATIONxMaximumErrorEquation">Equation 1</xref>)
  for its symbolic functions
  (<xref alt="[FIGxPotentialTemperatureDocsMaxErr]" rid="FIGxPotentialTemperatureDocsMaxErr">[FIGxPotentialTemperatureDocsMaxErr]</xref>):</p>
  <p><named-content id="EQUATIONxMaximumErrorEquation" content-type="equation"><disp-formula><alternatives>
  <tex-math><![CDATA[\begin{split}
          \Delta y_\text{max}(x_1, \dots, x_\text{n})
          &=
          \sum_{i=1}^n
          \left| \frac{\partial y}{\partial x_i} \right|
          \cdot \Delta x_{i_\text{max}}
          \\[1em]
          \Delta y_\text{max,rel}
          &=
          \frac{\Delta y_\text{max}}{\overline{y}}
      \end{split}
      ]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mtable><mml:mtr><mml:mtd columnalign="right" style="text-align: right"><mml:mi>Δ</mml:mi><mml:msub><mml:mi>y</mml:mi><mml:mtext mathvariant="normal">max</mml:mtext></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mtext mathvariant="normal">n</mml:mtext></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left" style="text-align: left"><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:mo stretchy="true" form="prefix">|</mml:mo><mml:mfrac><mml:mrow><mml:mi>∂</mml:mi><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>∂</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mfrac><mml:mo stretchy="true" form="postfix">|</mml:mo></mml:mrow><mml:mo>⋅</mml:mo><mml:mi>Δ</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mtext mathvariant="normal">max</mml:mtext></mml:msub></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right" style="text-align: right"><mml:mi>Δ</mml:mi><mml:msub><mml:mi>y</mml:mi><mml:mtext mathvariant="normal">max,rel</mml:mtext></mml:msub></mml:mtd><mml:mtd columnalign="left" style="text-align: left"><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>Δ</mml:mi><mml:msub><mml:mi>y</mml:mi><mml:mtext mathvariant="normal">max</mml:mtext></mml:msub></mml:mrow><mml:mover><mml:mi>y</mml:mi><mml:mo accent="true">¯</mml:mo></mml:mover></mml:mfrac></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula></named-content></p>
  <p>The maximum relative error is a conservative estimation method for
  the propagation of errors of input quantities
  <inline-formula><alternatives>
  <tex-math><![CDATA[x_i]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  to effective error in the output quantity
  <inline-formula><alternatives>
  <tex-math><![CDATA[y]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>y</mml:mi></mml:math></alternatives></inline-formula>,
  assuming the most severe combination of input quantity deviations
  <inline-formula><alternatives>
  <tex-math><![CDATA[\Delta x_{i_\text{max}}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>Δ</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mtext mathvariant="normal">max</mml:mtext></mml:msub></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>.
  Custom sensitivity analyses can also be implemented based on
  PARMESAN’s equations.</p>
  <fig>
    <caption><p>Auto-generated maximum relative error equation
    (<xref alt="Equation 1" rid="EQUATIONxMaximumErrorEquation">Equation 1</xref>)
    for PARMESAN’s <monospace>potential_temperature()</monospace>
    function
    (<xref alt="[FIGxPotentialTemperatureDocs]" rid="FIGxPotentialTemperatureDocs">[FIGxPotentialTemperatureDocs]</xref>).
    Symbolic PARMESAN functions automatically have a sensitivity
    analysis attached to quantify how a change in input parameters
    affects the output. In this case, the maximum expected relative
    error of potential temperature [%] is the sum of the maximum
    relative errors of temperature and pressure [%], with the pressure
    term scaled by a factor.
    <styled-content id="FIGxPotentialTemperatureDocsMaxErr"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/parmesan.gas.temperature.potential_temperature-maxerr-docs.png" />
  </fig>
  <p>PARMESAN can also rearrange its existing equations
  (<xref alt="[FIGxEquationList]" rid="FIGxEquationList">[FIGxEquationList]</xref>)
  for a quantity of interest by its provided
  <monospace>get_function()</monospace> function:</p>
  <code language="python">from parmesan.symbols import *
# get (or rearrange) functions that calculate mixing ratio
mixing_ratio_functions = list(get_function(result=mixing_ratio)
# get (or rearrange) functions that calculate mixing ratio
# from at least temperature and pressure
mixing_ratio_functions = list(get_function(result=mixing_ratio, inputs=(T, p))</code>
  <p>The functions found can be called as usual or their underlying
  equations can be examined by accessing their
  <monospace>.equation</monospace> attribute. In a Jupyter notebook
  (<xref alt="Kluyver et al., 2016" rid="ref-kluyver2016jupyternotebookspublishing" ref-type="bibr">Kluyver
  et al., 2016</xref>) the equations appear as formatted markup similar
  to what is depicted in
  <xref alt="[FIGxEquationList]" rid="FIGxEquationList">[FIGxEquationList]</xref>.</p>
  <fig>
    <caption><p>Excerpt of auto-generated humidity equation list in
    PARMESAN’s <monospace>humidity</monospace> module. As the underlying
    equations in PARMESAN’s functions are available as symbolic
    expressions, it can provide overviews of all related equations.
    <styled-content id="FIGxEquationList"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/parmesan.gas.humidity-equations.png" />
  </fig>
  <p>Besides physical equations, PARMESAN provides tools often needed
  when analysing timeseries such as calculating second-order moments,
  variance spectrum
  (<xref alt="[FIGxSpectrum]" rid="FIGxSpectrum">[FIGxSpectrum]</xref>),
  autocorrelation, structure function (variogram) and running
  covariance, e.g. for calculating eddy fluxes
  (<xref alt="Foken, 2021" rid="ref-foken2021springerhandbookatmospheric" ref-type="bibr">Foken,
  2021</xref>), backed by the <monospace>scipy</monospace> package
  (<xref alt="Virtanen et al., 2020" rid="ref-scipy" ref-type="bibr">Virtanen
  et al., 2020</xref>) for efficient numerics and
  <monospace>matplotlib</monospace>
  (<xref alt="Hunter, 2007" rid="ref-matplotlib" ref-type="bibr">Hunter,
  2007</xref>) for visualisation. PARMESAN integrates with the common
  <monospace>pandas</monospace> data analysis framework
  (<xref alt="The pandas development team, 2023" rid="ref-pandas" ref-type="bibr">The
  pandas development team, 2023</xref>) by adding a
  <monospace>.parmesan</monospace> accessor to
  <monospace>DataFrame</monospace> and <monospace>Series</monospace>
  objects to apply PARMESAN functions such as a variance spectrum or
  autocorrelation directly to them.</p>
  <fig>
    <caption><p>PARMESAN discrete
    <monospace>variance_spectrum()</monospace> of an artificial wind
    timeseries (random walk overlayed with 2Hz and 3Hz sine waves). Note
    how Parseval’s Theorem
    (<xref alt="Stull, 1988" rid="ref-stull1988introductionboundarylayer" ref-type="bibr">Stull,
    1988</xref>) is correctly fulfilled as the timeseries variance
    equals the sum of discrete spectral variances. A Kolmogorov
    power-law fit
    (<xref alt="Ortiz-Suslow &amp; Wang, 2019" rid="ref-ortizsuslow2019evaluationkolmogorovs" ref-type="bibr">Ortiz-Suslow
    &amp; Wang, 2019</xref>) was optionally added by PARMESAN.
    <styled-content id="FIGxSpectrum"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/spectrum.pdf" />
  </fig>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This software originated in a project funded by the German Research
  Foundation (DFG) under grant number BA 1988/19-1.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-buchau2022autarkicwirelesssensor">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Büchau</surname><given-names>Yann Georg</given-names></name>
        <name><surname>van Kesteren</surname><given-names>Bram</given-names></name>
        <name><surname>Platis</surname><given-names>Andreas</given-names></name>
        <name><surname>Bange</surname><given-names>Jens</given-names></name>
      </person-group>
      <article-title>An Autarkic Wireless Sensor Network to Monitor Atmospheric CO2 Concentrations</article-title>
      <source>Meteorol. Z. (Contrib. Atm. Sci.)</source>
      <publisher-name>Schweizerbart Science Publishers</publisher-name>
      <publisher-loc>Stuttgart, Germany</publisher-loc>
      <year iso-8601-date="2022-06">2022</year><month>06</month>
      <pub-id pub-id-type="doi">10.1127/metz/2022/1125</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-buchau2023portablelowcost">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Büchau</surname><given-names>Yann Georg</given-names></name>
        <name><surname>Leven</surname><given-names>Carsten</given-names></name>
        <name><surname>Bange</surname><given-names>Jens</given-names></name>
      </person-group>
      <article-title>A Portable low-cost Device to Quantify Advective Gas Fluxes from Mofettes into the Lower Atmosphere: First Application to Starzach Mofettes (Germany)</article-title>
      <year iso-8601-date="2023">2023</year>
      <pub-id pub-id-type="doi">10.31223/X5ZX0D</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-matplotlib">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hunter</surname><given-names>J. D.</given-names></name>
      </person-group>
      <article-title>Matplotlib: A 2D graphics environment</article-title>
      <source>Computing in Science &amp; Engineering</source>
      <publisher-name>IEEE COMPUTER SOC</publisher-name>
      <year iso-8601-date="2007">2007</year>
      <volume>9</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1109/MCSE.2007.55</pub-id>
      <fpage>90</fpage>
      <lpage>95</lpage>
    </element-citation>
  </ref>
  <ref id="ref-numpy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>Walt</surname><given-names>Stéfan J. van der</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Wieser</surname><given-names>Eric</given-names></name>
        <name><surname>Taylor</surname><given-names>Julian</given-names></name>
        <name><surname>Berg</surname><given-names>Sebastian</given-names></name>
        <name><surname>Smith</surname><given-names>Nathaniel J.</given-names></name>
        <name><surname>Kern</surname><given-names>Robert</given-names></name>
        <name><surname>Picus</surname><given-names>Matti</given-names></name>
        <name><surname>Hoyer</surname><given-names>Stephan</given-names></name>
        <name><surname>Kerkwijk</surname><given-names>Marten H. van</given-names></name>
        <name><surname>Brett</surname><given-names>Matthew</given-names></name>
        <name><surname>Haldane</surname><given-names>Allan</given-names></name>
        <name><surname>Río</surname><given-names>Jaime Fernández del</given-names></name>
        <name><surname>Wiebe</surname><given-names>Mark</given-names></name>
        <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
        <name><surname>Gérard-Marchant</surname><given-names>Pierre</given-names></name>
        <name><surname>Sheppard</surname><given-names>Kevin</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
        <name><surname>Abbasi</surname><given-names>Hameer</given-names></name>
        <name><surname>Gohlke</surname><given-names>Christoph</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
      </person-group>
      <article-title>Array programming with NumPy</article-title>
      <source>Nature</source>
      <publisher-name>Springer Science; Business Media LLC</publisher-name>
      <year iso-8601-date="2020-09">2020</year><month>09</month>
      <volume>585</volume>
      <issue>7825</issue>
      <uri>10.1038/s41586-020-2649-2</uri>
      <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
      <fpage>357</fpage>
      <lpage>362</lpage>
    </element-citation>
  </ref>
  <ref id="ref-scipy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
        <name><surname>Haberland</surname><given-names>Matt</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Burovski</surname><given-names>Evgeni</given-names></name>
        <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
        <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
        <name><surname>Bright</surname><given-names>Jonathan</given-names></name>
        <name><surname>van der Walt</surname><given-names>Stéfan J.</given-names></name>
        <name><surname>Brett</surname><given-names>Matthew</given-names></name>
        <name><surname>Wilson</surname><given-names>Joshua</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>Mayorov</surname><given-names>Nikolay</given-names></name>
        <name><surname>Nelson</surname><given-names>Andrew R. J.</given-names></name>
        <name><surname>Jones</surname><given-names>Eric</given-names></name>
        <name><surname>Kern</surname><given-names>Robert</given-names></name>
        <name><surname>Larson</surname><given-names>Eric</given-names></name>
        <name><surname>Carey</surname><given-names>C J</given-names></name>
        <name><surname>Polat</surname><given-names>İlhan</given-names></name>
        <name><surname>Feng</surname><given-names>Yu</given-names></name>
        <name><surname>Moore</surname><given-names>Eric W.</given-names></name>
        <name><surname>VanderPlas</surname><given-names>Jake</given-names></name>
        <name><surname>Laxalde</surname><given-names>Denis</given-names></name>
        <name><surname>Perktold</surname><given-names>Josef</given-names></name>
        <name><surname>Cimrman</surname><given-names>Robert</given-names></name>
        <name><surname>Henriksen</surname><given-names>Ian</given-names></name>
        <name><surname>Quintero</surname><given-names>E. A.</given-names></name>
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Archibald</surname><given-names>Anne M.</given-names></name>
        <name><surname>Ribeiro</surname><given-names>Antônio H.</given-names></name>
        <name><surname>Pedregosa</surname><given-names>Fabian</given-names></name>
        <name><surname>van Mulbregt</surname><given-names>Paul</given-names></name>
        <string-name>SciPy 1.0 Contributors</string-name>
      </person-group>
      <article-title>SciPy 1.0: Fundamental Algorithms for Scientific Computing in Python</article-title>
      <source>Nature Methods</source>
      <year iso-8601-date="2020">2020</year>
      <volume>17</volume>
      <pub-id pub-id-type="doi">10.1038/s41592-019-0686-2</pub-id>
      <fpage>261</fpage>
      <lpage>272</lpage>
    </element-citation>
  </ref>
  <ref id="ref-pint">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Grecco</surname><given-names>H.</given-names></name>
        <name><surname>Chéron</surname><given-names>Jules</given-names></name>
      </person-group>
      <article-title>pint: Operate and Manipulate Physical Quantities in Python</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/hgrecco/pint</uri>
    </element-citation>
  </ref>
  <ref id="ref-PyAOS">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>PyAOS</surname></name>
      </person-group>
      <article-title>aoslib: A collection of standard atmospheric and oceanic sciences routines</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/PyAOS/aoslib</uri>
    </element-citation>
  </ref>
  <ref id="ref-atmos">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>McGibbon</surname><given-names>Jeremy</given-names></name>
      </person-group>
      <article-title>aoslib: An atmospheric sciences library for Python</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/atmos-python/atmos</uri>
    </element-citation>
  </ref>
  <ref id="ref-uncertainties">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Lebigot</surname><given-names>Eric O.</given-names></name>
      </person-group>
      <article-title>Uncertainties: a Python package for calculations with uncertainties</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/lebigot/uncertainties/</uri>
    </element-citation>
  </ref>
  <ref id="ref-Iris">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <string-name>Met Office</string-name>
      </person-group>
      <source>Iris: A powerful, format-agnostic, and community-driven Python package for analysing and visualising Earth science data</source>
      <publisher-loc>Exeter, Devon</publisher-loc>
      <edition>v3.6</edition>
      <uri>http://scitools.org.uk/</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.7948293</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-sympy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Meurer</surname><given-names>Aaron</given-names></name>
        <name><surname>Smith</surname><given-names>Christopher P.</given-names></name>
        <name><surname>Paprocki</surname><given-names>Mateusz</given-names></name>
        <name><surname>Čertík</surname><given-names>Ondřej</given-names></name>
        <name><surname>Kirpichev</surname><given-names>Sergey B.</given-names></name>
        <name><surname>Rocklin</surname><given-names>Matthew</given-names></name>
        <name><surname>Kumar</surname><given-names>AMiT</given-names></name>
        <name><surname>Ivanov</surname><given-names>Sergiu</given-names></name>
        <name><surname>Moore</surname><given-names>Jason K.</given-names></name>
        <name><surname>Singh</surname><given-names>Sartaj</given-names></name>
        <name><surname>Rathnayake</surname><given-names>Thilina</given-names></name>
        <name><surname>Vig</surname><given-names>Sean</given-names></name>
        <name><surname>Granger</surname><given-names>Brian E.</given-names></name>
        <name><surname>Muller</surname><given-names>Richard P.</given-names></name>
        <name><surname>Bonazzi</surname><given-names>Francesco</given-names></name>
        <name><surname>Gupta</surname><given-names>Harsh</given-names></name>
        <name><surname>Vats</surname><given-names>Shivam</given-names></name>
        <name><surname>Johansson</surname><given-names>Fredrik</given-names></name>
        <name><surname>Pedregosa</surname><given-names>Fabian</given-names></name>
        <name><surname>Curry</surname><given-names>Matthew J.</given-names></name>
        <name><surname>Terrel</surname><given-names>Andy R.</given-names></name>
        <name><surname>Roučka</surname><given-names>Štěpán</given-names></name>
        <name><surname>Saboo</surname><given-names>Ashutosh</given-names></name>
        <name><surname>Fernando</surname><given-names>Isuru</given-names></name>
        <name><surname>Kulal</surname><given-names>Sumith</given-names></name>
        <name><surname>Cimrman</surname><given-names>Robert</given-names></name>
        <name><surname>Scopatz</surname><given-names>Anthony</given-names></name>
      </person-group>
      <article-title>SymPy: symbolic computing in Python</article-title>
      <source>PeerJ Computer Science</source>
      <year iso-8601-date="2017-01">2017</year><month>01</month>
      <volume>3</volume>
      <issn>2376-5992</issn>
      <uri>https://doi.org/10.7717/peerj-cs.103</uri>
      <pub-id pub-id-type="doi">10.7717/peerj-cs.103</pub-id>
      <fpage>e103</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-pandas">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <string-name>The pandas development team</string-name>
      </person-group>
      <article-title>pandas-dev/pandas: Pandas</article-title>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2023-08">2023</year><month>08</month>
      <uri>https://doi.org/10.5281/zenodo.8239932</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.8239932</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-xarray">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hoyer</surname><given-names>S.</given-names></name>
        <name><surname>Hamman</surname><given-names>J.</given-names></name>
      </person-group>
      <article-title>xarray: N-D labeled arrays and datasets in Python</article-title>
      <source>Journal of Open Research Software</source>
      <publisher-name>Ubiquity Press</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <volume>5</volume>
      <issue>1</issue>
      <uri>https://doi.org/10.5334/jors.148</uri>
      <pub-id pub-id-type="doi">10.5334/jors.148</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-metpy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>May</surname><given-names>Ryan M.</given-names></name>
        <name><surname>Goebbert</surname><given-names>Kevin H.</given-names></name>
        <name><surname>Thielen</surname><given-names>Jonathan E.</given-names></name>
        <name><surname>Leeman</surname><given-names>John R.</given-names></name>
        <name><surname>Camron</surname><given-names>M. Drew</given-names></name>
        <name><surname>Bruick</surname><given-names>Zachary</given-names></name>
        <name><surname>Bruning</surname><given-names>Eric C.</given-names></name>
        <name><surname>Manser</surname><given-names>Russell P.</given-names></name>
        <name><surname>Arms</surname><given-names>Sean C.</given-names></name>
        <name><surname>Marsh</surname><given-names>Patrick T.</given-names></name>
      </person-group>
      <article-title>MetPy: A Meteorological Python Library for Data Analysis and Visualization</article-title>
      <source>Bulletin of the American Meteorological Society</source>
      <publisher-name>American Meteorological Society</publisher-name>
      <publisher-loc>Boston MA, USA</publisher-loc>
      <year iso-8601-date="2022">2022</year>
      <volume>103</volume>
      <issue>10</issue>
      <uri>https://journals.ametsoc.org/view/journals/bams/103/10/BAMS-D-21-0125.1.xml</uri>
      <pub-id pub-id-type="doi">10.1175/BAMS-D-21-0125.1</pub-id>
      <fpage>E2273 </fpage>
      <lpage> E2284</lpage>
    </element-citation>
  </ref>
  <ref id="ref-cooper2008">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Cooper</surname><given-names>Jonathan</given-names></name>
        <name><surname>McKeever</surname><given-names>Steve</given-names></name>
      </person-group>
      <article-title>A model-driven approach to automatic conversion of physical units</article-title>
      <source>Software: Practice and Experience</source>
      <year iso-8601-date="2008">2008</year>
      <volume>38</volume>
      <issue>4</issue>
      <uri>https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.828</uri>
      <pub-id pub-id-type="doi">10.1002/spe.828</pub-id>
      <fpage>337</fpage>
      <lpage>359</lpage>
    </element-citation>
  </ref>
  <ref id="ref-chizeck2009errordetectionunit">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Chizeck</surname><given-names>Howard Jay</given-names></name>
        <name><surname>Butterworth</surname><given-names>Erik</given-names></name>
        <name><surname>Bassingthwaighte</surname><given-names>James B.</given-names></name>
      </person-group>
      <article-title>Error detection and unit conversion</article-title>
      <source>IEEE Engineering in Medicine and Biology Magazine</source>
      <year iso-8601-date="2009">2009</year>
      <volume>28</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1109/MEMB.2009.932477</pub-id>
      <fpage>50</fpage>
      <lpage>58</lpage>
    </element-citation>
  </ref>
  <ref id="ref-nasa1999marsclimateorbiter">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>NASA</surname></name>
      </person-group>
      <article-title>Mars Climate Orbiter Mishap Investigation Board Phase I Report</article-title>
      <person-group person-group-type="editor">
        <string-name>Mars Climate Orbiter Mishap Investigation Board</string-name>
      </person-group>
      <publisher-name>National Aeronautics and Space Administration (NASA)</publisher-name>
      <year iso-8601-date="1999-10">1999</year><month>10</month>
      <uri>https://llis.nasa.gov/llis_lib/pdf/1009464main1_0641-mr.pdf</uri>
    </element-citation>
  </ref>
  <ref id="ref-stull1988introductionboundarylayer">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Stull</surname><given-names>Roland B</given-names></name>
      </person-group>
      <source>An Introduction to Boundary Layer Meteorology</source>
      <publisher-name>Kluwer Academic Publishers</publisher-name>
      <publisher-loc>Dordrecht</publisher-loc>
      <year iso-8601-date="1988">1988</year>
      <pub-id pub-id-type="doi">10.1007/978-94-009-3027-8</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-ortizsuslow2019evaluationkolmogorovs">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ortiz-Suslow</surname><given-names>David G.</given-names></name>
        <name><surname>Wang</surname><given-names>Qing</given-names></name>
      </person-group>
      <article-title>An Evaluation of Kolmogorov’s -5/3 Power Law Observed Within the Turbulent Airflow Above the Ocean</article-title>
      <source>Geophysical Research Letters</source>
      <year iso-8601-date="2019">2019</year>
      <volume>46</volume>
      <issue>24</issue>
      <uri>https://agupubs.onlinelibrary.wiley.com/doi/abs/10.1029/2019GL085083</uri>
      <pub-id pub-id-type="doi">10.1029/2019GL085083</pub-id>
      <fpage>14901</fpage>
      <lpage>14911</lpage>
    </element-citation>
  </ref>
  <ref id="ref-foken2021springerhandbookatmospheric">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Foken</surname><given-names>T.</given-names></name>
      </person-group>
      <source>Springer Handbook of Atmospheric Measurements</source>
      <publisher-name>Springer International Publishing</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <isbn>9783030521714</isbn>
      <pub-id pub-id-type="doi">10.1007/978-3-030-52171-4</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-kluyver2016jupyternotebookspublishing">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Kluyver</surname><given-names>Thomas</given-names></name>
        <name><surname>Ragan-Kelley</surname><given-names>Benjamin</given-names></name>
        <name><surname>Pérez</surname><given-names>Fernando</given-names></name>
        <name><surname>Granger</surname><given-names>Brian</given-names></name>
        <name><surname>Bussonnier</surname><given-names>Matthias</given-names></name>
        <name><surname>Frederic</surname><given-names>Jonathan</given-names></name>
        <name><surname>Kelley</surname><given-names>Kyle</given-names></name>
        <name><surname>Hamrick</surname><given-names>Jessica</given-names></name>
        <name><surname>Grout</surname><given-names>Jason</given-names></name>
        <name><surname>Corlay</surname><given-names>Sylvain</given-names></name>
        <name><surname>Ivanov</surname><given-names>Paul</given-names></name>
        <name><surname>Avila</surname><given-names>Damián</given-names></name>
        <name><surname>Abdalla</surname><given-names>Safia</given-names></name>
        <name><surname>Willing</surname><given-names>Carol</given-names></name>
        <name><surname>team</surname><given-names>Jupyter development</given-names></name>
      </person-group>
      <article-title>Jupyter Notebooks – a publishing format for reproducible computational workflows</article-title>
      <source>Positioning and Power in Academic Publishing: Players, Agents and Agendas</source>
      <person-group person-group-type="editor">
        <name><surname>Loizides</surname><given-names>Fernando</given-names></name>
        <name><surname>Scmidt</surname><given-names>Birgit</given-names></name>
      </person-group>
      <publisher-name>IOS Press</publisher-name>
      <year iso-8601-date="2016">2016</year>
      <uri>https://eprints.soton.ac.uk/403913</uri>
      <pub-id pub-id-type="doi">10.3233/978-1-61499-649-1-87</pub-id>
      <fpage>87</fpage>
      <lpage>90</lpage>
    </element-citation>
  </ref>
  <ref id="ref-wusteney2023bodenwassergehaltsmessungtonigen">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Wüsteney</surname><given-names>Sophia</given-names></name>
      </person-group>
      <article-title>Bodenwassergehalts-Messung in tonigen Böden des Starzacher Mofetten-Gebiets mittels SMT100 Sensoren: Korrektur der Topp-Gleichung</article-title>
      <publisher-name>University of Tübingen, Dept. of Geosciences</publisher-name>
      <publisher-loc>Tübingen</publisher-loc>
      <year iso-8601-date="2023-08">2023</year><month>08</month>
      <pub-id pub-id-type="doi">10.15496/publikation-89327</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-herrmann2023designreiterationchimney">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Herrmann</surname><given-names>Kai</given-names></name>
      </person-group>
      <article-title>Design Reiteration of a Chimney Gas Flowmeter for Natural CO2 Emissions from Mofettes: Differential Pressure Measurement Increases Resolution and Accuracy</article-title>
      <publisher-name>University of Tübingen, Dept. of Geosciences</publisher-name>
      <publisher-loc>Tübingen</publisher-loc>
      <year iso-8601-date="2023-09">2023</year><month>09</month>
      <pub-id pub-id-type="doi">10.15496/publikation-89337</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
