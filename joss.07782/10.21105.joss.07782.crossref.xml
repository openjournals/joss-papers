<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/5.3.1"
           xmlns:ai="http://www.crossref.org/AccessIndicators.xsd"
           xmlns:rel="http://www.crossref.org/relations.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           version="5.3.1"
           xsi:schemaLocation="http://www.crossref.org/schema/5.3.1 http://www.crossref.org/schemas/crossref5.3.1.xsd">
  <head>
    <doi_batch_id>20250401175926-05e57decb105d62f1f5cc25e552a9b903aca176d</doi_batch_id>
    <timestamp>20250401175926</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>https://joss.theoj.org</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>04</month>
          <year>2025</year>
        </publication_date>
        <journal_volume>
          <volume>10</volume>
        </journal_volume>
        <issue>108</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>Executorlib – Up-scaling Python workflows for hierarchical heterogenous high-performance computing</title>
        </titles>
        <contributors>
          <person_name sequence="first" contributor_role="author">
            <given_name>Jan</given_name>
            <surname>Janssen</surname>
            <affiliations>
              <institution><institution_name>Max Planck Institute for Sustainable Materials, Düsseldorf, Germany</institution_name></institution>
              <institution><institution_name>Los Alamos National Laboratory, Los Alamos, NM, United States of America</institution_name></institution>
            </affiliations>
            <ORCID>https://orcid.org/0000-0001-9948-7119</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Michael Gilbert</given_name>
            <surname>Taylor</surname>
            <affiliations>
              <institution><institution_name>Los Alamos National Laboratory, Los Alamos, NM, United States of America</institution_name></institution>
            </affiliations>
            <ORCID>https://orcid.org/0000-0003-4327-2746</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Ping</given_name>
            <surname>Yang</surname>
            <affiliations>
              <institution><institution_name>Los Alamos National Laboratory, Los Alamos, NM, United States of America</institution_name></institution>
            </affiliations>
            <ORCID>https://orcid.org/0000-0003-4726-2860</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Joerg</given_name>
            <surname>Neugebauer</surname>
            <affiliations>
              <institution><institution_name>Max Planck Institute for Sustainable Materials, Düsseldorf, Germany</institution_name></institution>
            </affiliations>
            <ORCID>https://orcid.org/0000-0002-7903-2472</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Danny</given_name>
            <surname>Perez</surname>
            <affiliations>
              <institution><institution_name>Los Alamos National Laboratory, Los Alamos, NM, United States of America</institution_name></institution>
            </affiliations>
            <ORCID>https://orcid.org/0000-0003-3028-5249</ORCID>
          </person_name>
        </contributors>
        <publication_date>
          <month>04</month>
          <day>01</day>
          <year>2025</year>
        </publication_date>
        <pages>
          <first_page>7782</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.07782</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">10.5281/zenodo.15121422</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/7782</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.07782</doi>
          <resource>https://joss.theoj.org/papers/10.21105/joss.07782</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://joss.theoj.org/papers/10.21105/joss.07782.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="workflows">
            <article_title>A community roadmap for scientific workflows research and development</article_title>
            <author>Silva</author>
            <journal_title>2021 IEEE workshop on workflows in support of large-scale science (WORKS)</journal_title>
            <doi>10.1109/WORKS54523.2021.00016</doi>
            <cYear>2021</cYear>
            <unstructured_citation>Silva, R. F. da, Casanova, H., Chard, K., Altintas, I., Badia, R. M., Balis, B., Coleman, T., Coppens, F., Di Natale, F., Enders, B., Fahringer, T., Filgueira, R., Fursin, G., Garijo, D., Goble, C., Howell, D., Jha, S., Katz, D. S., Laney, D., … Wolf, M. (2021). A community roadmap for scientific workflows research and development. 2021 IEEE Workshop on Workflows in Support of Large-Scale Science (WORKS), 81–90. https://doi.org/10.1109/WORKS54523.2021.00016</unstructured_citation>
          </citation>
          <citation key="pythonhpc">
            <article_title>Python workflows on HPC systems</article_title>
            <author>Straßel</author>
            <journal_title>2020 IEEE/ACM 9th workshop on python for high-performance and scientific computing (PyHPC)</journal_title>
            <doi>10.1109/PyHPC51966.2020.00009</doi>
            <cYear>2020</cYear>
            <unstructured_citation>Straßel, D., Reusch, P., &amp; Keuper, J. (2020). Python workflows on HPC systems. 2020 IEEE/ACM 9th Workshop on Python for High-Performance and Scientific Computing (PyHPC), 32–40. https://doi.org/10.1109/PyHPC51966.2020.00009</unstructured_citation>
          </citation>
          <citation key="slurm">
            <article_title>SLURM: Simple Linux utility for resource management</article_title>
            <author>Jette</author>
            <journal_title>In lecture notes in computer science: Proceedings of job scheduling strategies for parallel processing (JSSPP) 2003</journal_title>
            <doi>10.1007/10968987_3</doi>
            <cYear>2002</cYear>
            <unstructured_citation>Jette, M. A., Yoo, A. B., &amp; Grondona, M. (2002). SLURM: Simple Linux utility for resource management. In Lecture Notes in Computer Science: Proceedings of Job Scheduling Strategies for Parallel Processing (JSSPP) 2003, 44–60. https://doi.org/10.1007/10968987_3</unstructured_citation>
          </citation>
          <citation key="fireworks">
            <article_title>FireWorks: A dynamic workflow system designed for high-throughput applications</article_title>
            <author>Jain</author>
            <journal_title>Concurrency and Computation: Practice and Experience</journal_title>
            <issue>17</issue>
            <volume>27</volume>
            <doi>10.1002/cpe.3505</doi>
            <cYear>2015</cYear>
            <unstructured_citation>Jain, A., Ong, S. P., Chen, W., Medasani, B., Qu, X., Kocher, M., Brafman, M., Petretto, G., Rignanese, G.-M., Hautier, G., Gunter, D., &amp; Persson, K. A. (2015). FireWorks: A dynamic workflow system designed for high-throughput applications. Concurrency and Computation: Practice and Experience, 27(17), 5037–5059. https://doi.org/10.1002/cpe.3505</unstructured_citation>
          </citation>
          <citation key="aiida">
            <article_title>AiiDA 1.0, a scalable computational infrastructure for automated reproducible workflows and data provenance</article_title>
            <author>Huber</author>
            <journal_title>Scientific Data</journal_title>
            <issue>1</issue>
            <volume>7</volume>
            <doi>10.1038/s41597-020-00638-4</doi>
            <cYear>2020</cYear>
            <unstructured_citation>Huber, S. P., Zoupanos, S., Uhrin, M., Talirz, L., Kahle, L., Häuselmann, R., Gresch, D., Müller, T., Yakutovich, A. V., Andersen, F. F., Casper W. Ramirez, Adorf, C. S., Gargiulo, F., Kumbhar, S., Passaro, E., Johnston, C., Merkys, A., Cepellotti, A., Mounet, N., Marzari, N., … Pizzi, G. (2020). AiiDA 1.0, a scalable computational infrastructure for automated reproducible workflows and data provenance. Scientific Data, 7(1). https://doi.org/10.1038/s41597-020-00638-4</unstructured_citation>
          </citation>
          <citation key="pyiron">
            <article_title>Pyiron: An integrated development environment for computational materials science</article_title>
            <author>Janssen</author>
            <journal_title>Computational Materials Science</journal_title>
            <volume>163</volume>
            <doi>10.1016/j.commatsci.2018.07.043</doi>
            <issn>0927-0256</issn>
            <cYear>2019</cYear>
            <unstructured_citation>Janssen, J., Surendralal, S., Lysogorskiy, Y., Todorova, M., Hickel, T., Drautz, R., &amp; Neugebauer, J. (2019). Pyiron: An integrated development environment for computational materials science. Computational Materials Science, 163, 24–36. https://doi.org/10.1016/j.commatsci.2018.07.043</unstructured_citation>
          </citation>
          <citation key="myqueue">
            <article_title>MyQueue: Task and workflow scheduling system</article_title>
            <author>Mortensen</author>
            <journal_title>Journal of Open Source Software</journal_title>
            <issue>45</issue>
            <volume>5</volume>
            <doi>10.21105/joss.01844</doi>
            <cYear>2020</cYear>
            <unstructured_citation>Mortensen, J. J., Gjerding, M., &amp; Thygesen, K. S. (2020). MyQueue: Task and workflow scheduling system. Journal of Open Source Software, 5(45), 1844. https://doi.org/10.21105/joss.01844</unstructured_citation>
          </citation>
          <citation key="psij">
            <article_title>PSI/j: A portable interface for submitting, monitoring, and managing jobs</article_title>
            <author>Hategan-Marandiuc</author>
            <journal_title>2023 IEEE 19th international conference on e-science (e-science)</journal_title>
            <doi>10.1109/e-Science58273.2023.10254912</doi>
            <cYear>2023</cYear>
            <unstructured_citation>Hategan-Marandiuc, M., Merzky, A., Collier, N., Maheshwari, K., Ozik, J., Turilli, M., Wilke, A., Wozniak, J. M., Chard, K., Foster, I., Silva, R. F. da, Jha, S., &amp; Laney, D. (2023). PSI/j: A portable interface for submitting, monitoring, and managing jobs. 2023 IEEE 19th International Conference on e-Science (e-Science), 1–10. https://doi.org/10.1109/e-Science58273.2023.10254912</unstructured_citation>
          </citation>
          <citation key="dask">
            <article_title>Dask: Parallel computation with blocked algorithms and task scheduling</article_title>
            <author>Rocklin</author>
            <journal_title>Proceedings of the 14th Python in science conference</journal_title>
            <doi>10.25080/Majora-7b98e3ed-013</doi>
            <cYear>2015</cYear>
            <unstructured_citation>Rocklin, M. (2015). Dask: Parallel computation with blocked algorithms and task scheduling. In K. Huff &amp; J. Bergstra (Eds.), Proceedings of the 14th Python in science conference (pp. 126–132). https://doi.org/10.25080/Majora-7b98e3ed-013</unstructured_citation>
          </citation>
          <citation key="parsl">
            <article_title>Parsl: Pervasive parallel programming in Python</article_title>
            <author>Babuji</author>
            <journal_title>Proceedings of the 28th international symposium on high-performance parallel and distributed computing</journal_title>
            <doi>10.1145/3307681.3325400</doi>
            <isbn>9781450366700</isbn>
            <cYear>2019</cYear>
            <unstructured_citation>Babuji, Y., Woodard, A., Li, Z., Katz, D. S., Clifford, B., Kumar, R., Lacinski, L., Chard, R., Wozniak, J. M., Foster, I., Wilde, M., &amp; Chard, K. (2019). Parsl: Pervasive parallel programming in Python. Proceedings of the 28th International Symposium on High-Performance Parallel and Distributed Computing, 25–36. https://doi.org/10.1145/3307681.3325400</unstructured_citation>
          </citation>
          <citation key="jobflow">
            <article_title>Jobflow: Computational workflows made simple</article_title>
            <author>Rosen</author>
            <journal_title>Journal of Open Source Software</journal_title>
            <issue>93</issue>
            <volume>9</volume>
            <doi>10.21105/joss.05995</doi>
            <cYear>2024</cYear>
            <unstructured_citation>Rosen, A. S., Gallant, M., George, J., Riebesell, J., Sahasrabuddhe, H., Shen, J.-X., Wen, M., Evans, M. L., Petretto, G., Waroquiers, D., Rignanese, G.-M., Persson, K. A., Jain, A., &amp; Ganose, A. M. (2024). Jobflow: Computational workflows made simple. Journal of Open Source Software, 9(93), 5995. https://doi.org/10.21105/joss.05995</unstructured_citation>
          </citation>
          <citation key="flux">
            <article_title>Flux: A next-generation resource management framework for large HPC centers</article_title>
            <author>Ahn</author>
            <journal_title>2014 43rd international conference on parallel processing workshops</journal_title>
            <doi>10.1109/ICPPW.2014.15</doi>
            <cYear>2014</cYear>
            <unstructured_citation>Ahn, D. H., Garlick, J., Grondona, M., Lipari, D., Springmeyer, B., &amp; Schulz, M. (2014). Flux: A next-generation resource management framework for large HPC centers. 2014 43rd International Conference on Parallel Processing Workshops, 9–17. https://doi.org/10.1109/ICPPW.2014.15</unstructured_citation>
          </citation>
          <citation key="mpi4py">
            <article_title>MPI for Python</article_title>
            <author>Dalcín</author>
            <journal_title>Journal of Parallel and Distributed Computing</journal_title>
            <issue>9</issue>
            <volume>65</volume>
            <doi>10.1016/j.jpdc.2005.03.010</doi>
            <issn>0743-7315</issn>
            <cYear>2005</cYear>
            <unstructured_citation>Dalcín, L., Paz, R., &amp; Storti, M. (2005). MPI for Python. Journal of Parallel and Distributed Computing, 65(9), 1108–1115. https://doi.org/10.1016/j.jpdc.2005.03.010</unstructured_citation>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
