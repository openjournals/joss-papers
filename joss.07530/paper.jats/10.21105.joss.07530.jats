<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">7530</article-id>
<article-id pub-id-type="doi">10.21105/joss.07530</article-id>
<title-group>
<article-title>antimeridian: A Python package for correcting geometries
that cross the 180th meridian</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-4877-7217</contrib-id>
<name>
<surname>Gadomski</surname>
<given-names>Peter</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-8293-3706</contrib-id>
<name>
<surname>Hartzell</surname>
<given-names>Preston</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Development Seed, USA</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Element 84, Inc., USA</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-10-10">
<day>10</day>
<month>10</month>
<year>2024</year>
</pub-date>
<volume>10</volume>
<issue>105</issue>
<fpage>7530</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>geospatial</kwd>
<kwd>antimeridian</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Locations on and around planet Earth are commonly represented in a
  geodetic coordinate system with a longitude, a latitude, and a height.
  Longitude is the “horizontal” dimension with a domain from -180° to
  180°, which spans the entire 360° circumference of the planet. Where
  the two domain bounds meet is known as the <italic>180th
  meridian</italic> or the <italic>antimeridian</italic>.</p>
  <fig>
    <caption><p>Earth map centered on the Pacific ocean, with the 180th
    meridian highlighted.</p></caption>
    <graphic mimetype="image" mime-subtype="jpeg" xlink:href="./img/antimeridian.jpg" />
  </fig>
  <p>The GeoJSON specification
  (<xref alt="Butler et al., 2016" rid="ref-10.17487U002FRFC7946" ref-type="bibr">Butler
  et al., 2016</xref>) describes how antimeridian-crossing shapes should
  be split into multiple shapes at the 180th meridian. Real-world
  geometries often do not comply with the specification, typically due
  to projected coordinates being naively reprojected to geodetic
  coordinates. This leads to confusing and unrepresentable geometries.
  Our <bold>antimeridan</bold> package provides Python functions for
  correcting improper geometries, as well as other related
  utilities.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Because of factors such as the relative lack of populated
  settlements along the 180th meridian and the proliferation of British
  maps in the late 19th century, the Prime Meridian (0° longitude) runs
  through Greenwich, England
  (<xref alt="Various, 1884" rid="ref-alma992356353405961" ref-type="bibr">Various,
  1884</xref>). Before the advent of satellite imagery, relatively few
  geospatial products crossed the 180th meridian, and so the problem of
  antimeridian-crossing geometries was usually avoidable. Now, satellite
  systems are producing data over the entire globe at an ever-increasing
  scale, meaning that more and more data exist that cross over the 180th
  meridian. At the same time, the combination of these products with
  interactive online maps has made the antimeridian appear on almost
  anyone’s tablet, web portal, or mapping app. There is a a need to
  create and correct antimeridian-crossing geometries at scale, e.g. for
  large SpatioTemporal Asset Catalog (STAC)
  (<xref alt="STAC Contributors, 2024" rid="ref-STAC_Contributors_SpatioTemporal_Asset_Catalog_2024" ref-type="bibr">STAC
  Contributors, 2024</xref>) catalogs that are used to search and
  discover petabytes of geospatial data. When creating these catalogs,
  improper antimeridian-crossing geometries need to be corrected before
  ingesting to a data store to ensure that queries do not break and
  visualizations do not incorrectly span the entire globe, often with
  chaotic representations. This is the problem for which
  <bold>antimeridian</bold> was designed.</p>
  <p>To the best of our knowledge, the
  <ext-link ext-link-type="uri" xlink:href="https://antimeridian.readthedocs.io/en/stable/the-algorithm.html">algorithm</ext-link>
  underlying <bold>antimeridian</bold> is a novel one. Briefly, it
  breaks each polygon into segments and finds where a segment might
  cross the antimeridian. It splits that segment at the crossing point
  and closes each half of the segment along the antimeridian. This
  results in a multi polygon split on the antimeridian, as the GeoJSON
  specification requires.</p>
  <fig>
    <caption><p>A complex shape that has not been split on the
    antimeridian and incorrectly spans the globe</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="./img/complex-split-uncorrected.png" />
  </fig>
  <fig>
    <caption><p>A complex shape correctly split at the
    antimeridian</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="./img/complex-split.png" />
  </fig>
  <p>Our algorithm has some limitations. While it can handle simple
  geometries that enclose the north or south pole, complex geometries
  can
  <ext-link ext-link-type="uri" xlink:href="https://antimeridian.readthedocs.io/en/stable/failure-modes.html">cause
  failures</ext-link>. Another failure mode occurs when geometries
  contain segments that span more than half of the globe.</p>
  <p>In addition to correcting GeoJSON geometries that cross the
  antimeridian, our library includes utilities for calculating the
  centroid of an antimeridian-crossing geometry and generating valid
  GeoJSON antimeridian-crossing bounding boxes.</p>
</sec>
<sec id="key-references">
  <title>Key references</title>
  <list list-type="bullet">
    <list-item>
      <p>The <bold>antimeridian</bold> package relies on Shapely
      (<xref alt="Gillies et al., 2024" rid="ref-Gillies_Shapely_2024" ref-type="bibr">Gillies
      et al., 2024</xref>) for geometry validation, conversions, and
      other operations.</p>
    </list-item>
    <list-item>
      <p>We use Cartopy
      (<xref alt="Met Office, 2010 - 2015" rid="ref-Cartopy" ref-type="bibr">Met
      Office, 2010 - 2015</xref>) to generate visualizations for our
      documentation.</p>
    </list-item>
    <list-item>
      <p>This library has been ported to Go by another developer at
      <ext-link ext-link-type="uri" xlink:href="https://pkg.go.dev/github.com/go-geospatial/antimeridian">go-geospatial/antimeridian</ext-link>.</p>
    </list-item>
    <list-item>
      <p>GDAL
      (<xref alt="Rouault et al., 2024" rid="ref-Rouault_GDAL_2024" ref-type="bibr">Rouault
      et al., 2024</xref>) can wrap shapes at the dateline
      (<ext-link ext-link-type="uri" xlink:href="https://gdal.org/en/latest/programs/ogr2ogr.html#cmdoption-ogr2ogr-wrapdateline"><monospace>-wrapdateline</monospace></ext-link>)
      and can produce similar outputs to <bold>antimeridian</bold> if
      tuned with the <monospace>-datelineoffset</monospace> flag. We
      created a
      <ext-link ext-link-type="uri" xlink:href="https://www.gadom.ski/antimeridian/v0.3.11/comparison/">notebook</ext-link>
      to compare the two, and found the following:</p>
      <list list-type="bullet">
        <list-item>
          <p>In general, <monospace>antimeridian</monospace> and
          <monospace>ogr2ogr</monospace> perform the same, provided
          <monospace>ogr2ogr</monospace> is correctly tuned with the
          <monospace>-datelineoffset</monospace> flag.</p>
        </list-item>
        <list-item>
          <p><monospace>antimeridian</monospace> outputs the same
          geometry type as the input, whereas
          <monospace>ogr2ogr</monospace> outputs a
          <monospace>FeatureCollection</monospace>.</p>
        </list-item>
        <list-item>
          <p><monospace>antimeridian</monospace> has functionality to
          handle the poles.</p>
        </list-item>
      </list>
    </list-item>
  </list>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We acknowledge Rob Emanuele, Tom Augspurger, and Matt McFarland for
  the technical and financial support they provided us through the
  Planetary Computer program at Microsoft. We also acknowledge our
  employers, Development Seed and Element 84, who support open source
  software through direct funding and developer contribution time.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-10.17487U002FRFC7946">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Butler</surname><given-names>H.</given-names></name>
        <name><surname>Daly</surname><given-names>M.</given-names></name>
        <name><surname>Doyle</surname><given-names>A.</given-names></name>
        <name><surname>Gillies</surname><given-names>S.</given-names></name>
        <name><surname>Hagen</surname><given-names>S.</given-names></name>
        <name><surname>Schaub</surname><given-names>T.</given-names></name>
      </person-group>
      <article-title>RFC 7946: The GeoJSON Format</article-title>
      <publisher-name>RFC Editor</publisher-name>
      <publisher-loc>USA</publisher-loc>
      <year iso-8601-date="2016">2016</year>
    </element-citation>
  </ref>
  <ref id="ref-alma992356353405961">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Various</surname></name>
      </person-group>
      <source>International Conference Held at Washington for the Purpose of Fixing a Prime Meridian and a Universal Day. October, 1884. Protocols of the Proceedings</source>
      <year iso-8601-date="1884">1884</year>
      <uri>https://www.gutenberg.org/files/17759/17759-h/17759-h.htm</uri>
    </element-citation>
  </ref>
  <ref id="ref-STAC_Contributors_SpatioTemporal_Asset_Catalog_2024">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>STAC Contributors</string-name>
      </person-group>
      <article-title>SpatioTemporal Asset Catalog (STAC) specification</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://stacspec.org</uri>
    </element-citation>
  </ref>
  <ref id="ref-Gillies_Shapely_2024">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Gillies</surname><given-names>Sean</given-names></name>
        <name><surname>Wel</surname><given-names>Casper van der</given-names></name>
        <name><surname>Van den Bossche</surname><given-names>Joris</given-names></name>
        <name><surname>Taves</surname><given-names>Mike W.</given-names></name>
        <name><surname>Arnott</surname><given-names>Joshua</given-names></name>
        <name><surname>Ward</surname><given-names>Brendan C.</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Shapely</article-title>
      <year iso-8601-date="2024-08">2024</year><month>08</month>
      <uri>https://github.com/shapely/shapely</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.5597138</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Cartopy">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <string-name>Met Office</string-name>
      </person-group>
      <source>Cartopy: a cartographic python library with a Matplotlib interface</source>
      <publisher-loc>Exeter, Devon</publisher-loc>
      <uri>https://scitools.org.uk/cartopy</uri>
    </element-citation>
  </ref>
  <ref id="ref-Rouault_GDAL_2024">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Rouault</surname><given-names>Even</given-names></name>
        <name><surname>Warmerdam</surname><given-names>Frank</given-names></name>
        <name><surname>Schwehr</surname><given-names>Kurt</given-names></name>
        <name><surname>Kiselev</surname><given-names>Andrey</given-names></name>
        <name><surname>Butler</surname><given-names>Howard</given-names></name>
        <name><surname>Łoskot</surname><given-names>Mateusz</given-names></name>
        <name><surname>Szekeres</surname><given-names>Tamas</given-names></name>
        <name><surname>Tourigny</surname><given-names>Etienne</given-names></name>
        <name><surname>Landa</surname><given-names>Martin</given-names></name>
        <name><surname>Miara</surname><given-names>Idan</given-names></name>
        <name><surname>Elliston</surname><given-names>Ben</given-names></name>
        <name><surname>Chaitanya</surname><given-names>Kumar</given-names></name>
        <name><surname>Plesea</surname><given-names>Lucian</given-names></name>
        <name><surname>Morissette</surname><given-names>Daniel</given-names></name>
        <name><surname>Jolma</surname><given-names>Ari</given-names></name>
        <name><surname>Dawson</surname><given-names>Nyall</given-names></name>
        <name><surname>Baston</surname><given-names>Daniel</given-names></name>
        <name><surname>Stigter</surname><given-names>Craig de</given-names></name>
        <name><surname>Miura</surname><given-names>Hiroshi</given-names></name>
      </person-group>
      <article-title>GDAL</article-title>
      <year iso-8601-date="2024-01">2024</year><month>01</month>
      <uri>https://github.com/OSGeo/gdal/</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.5884351</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
