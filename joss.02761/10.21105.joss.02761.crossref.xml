<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/4.4.0" xmlns:ai="http://www.crossref.org/AccessIndicators.xsd" xmlns:rel="http://www.crossref.org/relations.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="4.4.0" xsi:schemaLocation="http://www.crossref.org/schema/4.4.0 http://www.crossref.org/schemas/crossref4.4.0.xsd">
  <head>
    <doi_batch_id>224388685478916c11b2cd6b6db6b0a1</doi_batch_id>
    <timestamp>20201019205138</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>https://joss.theoj.org</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>10</month>
          <year>2020</year>
        </publication_date>
        <journal_volume>
          <volume>5</volume>
        </journal_volume>
        <issue>54</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>pystiche: A Framework for Neural Style Transfer</title>
        </titles>
        <contributors>
          <person_name sequence="first" contributor_role="author">
            <given_name>Philip</given_name>
            <surname>Meier</surname>
            <ORCID>http://orcid.org/0000-0002-5184-1622</ORCID>
          </person_name>
          <person_name sequence="additional" contributor_role="author">
            <given_name>Volker</given_name>
            <surname>Lohweg</surname>
            <ORCID>http://orcid.org/0000-0002-3325-7887</ORCID>
          </person_name>
        </contributors>
        <publication_date>
          <month>10</month>
          <day>19</day>
          <year>2020</year>
        </publication_date>
        <pages>
          <first_page>2761</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.02761</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">“https://doi.org/10.5281/zenodo.4107044”</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/2761</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.02761</doi>
          <resource>https://joss.theoj.org/papers/10.21105/joss.02761</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://joss.theoj.org/papers/10.21105/joss.02761.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="ref1">
            <doi>10.1109/CVPR.2016.265</doi>
          </citation>
          <citation key="ref2">
            <unstructured_citation>Simonyan, Karen and Zisserman, Andrew, Computing Research Repository (CoRR), Very Deep Convolutional Networks for Large-Scale Image Recognition, 2014, abs/1409, In this work we investigate the effect of the convolutional network depth on its accuracy in the large-scale image recognition setting. Our main contribution is a thorough evaluation of networks of increasing depth using an architecture with very small (3x3) convolution filters, which shows that a significant improvement on the prior-art configurations can be achieved by pushing the depth to 16-19 weight layers. These findings were the basis of our ImageNet Challenge 2014 submission, where our team secured the first and the second places in the localisation and classification tracks respectively. We also show that our representations generalise well to other datasets, where they achieve state-of-the-art results. We have made our two best-performing ConvNet models publicly available to facilitate further research on the use of deep visual representations in computer vision., arXiv, 1409.1556</unstructured_citation>
          </citation>
          <citation key="ref3">
            <doi>10.1109/CVPR.2015.7299155</doi>
          </citation>
          <citation key="ref4">
            <doi>10.1109/CVPR.2016.272</doi>
          </citation>
          <citation key="ref5">
            <doi>10.1145/3092919.3092920</doi>
          </citation>
          <citation key="ref6">
            <unstructured_citation>Krizhevsky, Alex and Sutskever, Ilya and Hinton, Geoffrey E., Advances in Neural Information Processing Systems 25 (NIPS), Imagenet Classification with Deep Convolutional Neural Networks, 2012, We trained a large, deep convolutional neural network to classify the 1.2 million high-resolution images in the ImageNet ILSVRC-2010 contest into the 1000 different classes. On the test data, we achieved top-1 and top-5 error rates of 37.5% and 17.0% which is considerably better than the previous state-of-the-art. The neural network, which has 60 million parameters and 650,000 neurons, consists of five convolutional layers, some of which are followed by max-pooling layers,and three fully-connected layers with a final 1000-way softmax. To make training faster, we used non-saturating neurons and a very efficient GPU implementation of the convolution operation. To reduce overfitting in the fully-connected layers we employed a recently-developed regularization method called “dropout” that proved to be very effective. We also entered a variant of this model in the ILSVRC-2012 competition and achieved a winning top-5 test error rate of 15.3%,compared to 26.2% achieved by the second-best entry., https://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf</unstructured_citation>
          </citation>
          <citation key="ref7">
            <unstructured_citation>Paszke, Adam and Gross, Sam and Massa, Francisco and Lerer, Adam and Bradbury, James and Chanan, Gregory and Killeen, Trevor and Lin, Zeming and Gimelshein, Natalia and Antiga, Luca and Desmaison, Alban and Kopf, Andreas and Yang, Edward and DeVito, Zachary and Raison, Martin and Tejani, Alykhan and Chilamkurthy, Sasank and Steiner, Benoit and Fang, Lu and Bai, Junjie and Chintala, Soumith, Advances in Neural Information Processing Systems 32 (NIPS), PyTorch: An Imperative Style, High-Performance Deep Learning Library, 2019, http://papers.neurips.cc/paper/9015-pytorch-an-imperative-style-high-performance-deep-learning-library.pdf</unstructured_citation>
          </citation>
          <citation key="ref8">
            <unstructured_citation>Gooch, Bruce and Gooch, Amy, A. K. Peters, Ltd., Non-Photorealistic Rendering, 2001, 1568811330</unstructured_citation>
          </citation>
          <citation key="ref9">
            <doi>10.1109/TVCG.2019.2921336</doi>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
