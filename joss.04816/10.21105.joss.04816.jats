<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">4816</article-id>
<article-id pub-id-type="doi">10.21105/joss.04816</article-id>
<title-group>
<article-title>GNOLL: Efficient Multi-Lingual Software for Real-World
Dice Notation and Extensions</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-3408-8138</contrib-id>
<name>
<surname>Hunter</surname>
<given-names>Ian Frederick Vigogne Goodbody</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Independent Researcher</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2022-08-26">
<day>26</day>
<month>8</month>
<year>2022</year>
</pub-date>
<volume>8</volume>
<issue>81</issue>
<fpage>4816</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>Perl</kwd>
<kwd>C</kwd>
<kwd>C++</kwd>
<kwd>Go</kwd>
<kwd>R</kwd>
<kwd>Java</kwd>
<kwd>Julia</kwd>
<kwd>statistics</kwd>
<kwd>board games</kwd>
<kwd>ttrpgs</kwd>
<kwd>game design</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Dice Notation is a system for describing how to roll collections of
  dice. It is often used to assist in understanding the rules of games -
  particularly tabletop roleplaying games (TTRPGs). Existing research
  software in this space has been primarily designed for other
  researchers and statisticians despite the fact that a large population
  of those actually playing these games are young
  (<xref alt="Natalt Design, 2020" rid="ref-DNDDemographics2019" ref-type="bibr">Natalt
  Design, 2020</xref>) or not involved in statistical research.</p>
  <p><monospace>GNOLL</monospace> is an open-source library for parsing
  commonly used dice notations in gaming system research and/or software
  development. <monospace>GNOLL</monospace> is performant, supports most
  popular and obscure notations, has permissive licensing, and is
  integratable into many other systems due to it being written in C. At
  present, the repository has working examples of integration into 13
  different programming languages, such as Go, Java, Julia, Python, Perl
  and R.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>While there are several dice-rolling utilities on the market for
  research/commercial use, there is no current solution that:</p>
  <list list-type="bullet">
    <list-item>
      <p>is open source / permissively licensed.</p>
    </list-item>
    <list-item>
      <p>can be easily integrated into other software despite language
      differences.</p>
    </list-item>
    <list-item>
      <p>provides a reference for other implementations.</p>
    </list-item>
    <list-item>
      <p>supports such a diverse set of dice notation.</p>
    </list-item>
  </list>
  <p>While some solutions may offer one or two of these points, GNOLL
  addresses all of them.</p>
  <p>Without a more extensive project for reference/integration, many
  software developers have created their own dice notation parsers
  (because a parser for a simple subset is not too difficult to
  develop). These are usually sufficient for their immediate needs but
  often create discrepancies in notation standards and do little to
  change this path for future developers.</p>
</sec>
<sec id="related-reading">
  <title>Related Reading</title>
  <p>Few publications specifically discuss dice notation. The most
  prominent papers are named <monospace>ROLL</monospace>
  (<xref alt="T. Mogensen, 2003" rid="ref-ROLL" ref-type="bibr">T.
  Mogensen, 2003</xref>) and <monospace>TROLL</monospace>
  (<xref alt="T. √Ü. Mogensen, 2009" rid="ref-TROLL" ref-type="bibr">T.
  √Ü. Mogensen, 2009</xref>). GNOLL is a recursive acronym expanded from
  ‚ÄúGNOLL‚Äôs Not *OLL‚Äù to distinguish this research and still pay homage
  to the original work. The reason for its distinction is that
  <monospace>GNOLL</monospace>‚Äôs notation is focused on real-world
  gaming usage of dice notation, whereas <monospace>ROLL</monospace> and
  <monospace>TROLL</monospace> are notations targeted at statistics
  research.</p>
</sec>
<sec id="example-notation">
  <title>Example Notation</title>
  <p>There are too many different operations and combinations of dice
  notation to describe within the space constraints of this paper but
  they are discussed at length in the project‚Äôs
  <ext-link ext-link-type="uri" xlink:href="https://ianhunter.ie/GNOLL/">documentation</ext-link>,
  including the rationale for each of the notation choices. We describe
  a sample of the base dice notation below.</p>
  <p>The most basic dice roll in dice notation can be expressed as
  <disp-formula><alternatives>
  <tex-math><![CDATA[ x\textbf{d}y,\ where\ x,y\ \in{} \mathbb{Z}^{+}. ]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>x</mml:mi><mml:mtext mathvariant="bold">ùêù</mml:mtext><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mspace width="0.222em"></mml:mspace><mml:mi>w</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mspace width="0.222em"></mml:mspace><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mspace width="0.222em"></mml:mspace><mml:mo>‚àà</mml:mo><mml:mrow></mml:mrow><mml:msup><mml:mstyle mathvariant="double-struck"><mml:mi>‚Ñ§</mml:mi></mml:mstyle><mml:mo>+</mml:mo></mml:msup><mml:mi>.</mml:mi></mml:mrow></mml:math></alternatives></disp-formula>
  <monospace>x</monospace> dice are rolled with values from 1 to
  <monospace>y</monospace>. Where <monospace>x</monospace> is not
  specified, it is assumed that its value is 1. the exclusion of
  <monospace>y</monospace> produces an error (It is ambiguous to have a
  dice with no sides).</p>
</sec>
<sec id="performance">
  <title>Performance</title>
  <p><monospace>GNOLL</monospace> performs well against other
  dice-rolling libraries available online both in terms of performance
  and functional coverage. In the Figures section below, we show some
  simple benchmarking results against the <monospace>TROLL</monospace>
  system and a C++ parser and also test <monospace>GNOLL</monospace>‚Äôs
  Python interface against popular Python packages, and find that
  <monospace>GNOLL</monospace> is generally more performant.</p>
</sec>
<sec id="figures">
  <title>Figures</title>
  <sec id="figure-1---gnoll-performance-c">
    <title>Figure 1 - GNOLL Performance (C)</title>
    <p>Comparison of <monospace>GNOLL</monospace>‚Äôs performance against
    other C/C++/SmallTalk dice notation parsers -
    <ext-link ext-link-type="uri" xlink:href="http://hjemmesider.diku.dk/~torbenm/Troll/">TROLL</ext-link>
    and
    <ext-link ext-link-type="uri" xlink:href="https://github.com/EBailey67/DiceParser">E
    Bailey‚Äôs ‚ÄòDice Parser‚Äô</ext-link>.</p>
    <fig>
      <caption><p>A graph showing GNOLL‚Äôs performance on different sizes
      of dice rolls. It is faster than TROLL and DiceParser on each
      tick</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/C++.PNG" xlink:title="" />
    </fig>
  </sec>
  <sec id="figure-2---gnoll-performance-python">
    <title>Figure 2 - GNOLL Performance (Python)</title>
    <p>Comparison of <monospace>GNOLL</monospace>‚Äôs performance against
    other Python dice notation parsers. (Chosen from popular dice
    rollers on PyPi
    (<xref alt="Jones, 2002" rid="ref-pep301" ref-type="bibr">Jones,
    2002</xref>) -
    <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/dice/">‚ÄúDice‚Äù</ext-link>,
    <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/rpg-dice/">‚ÄúRPG
    Dice‚Äù</ext-link>,
    <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/python-dice/">‚ÄúPython
    Dice‚Äù</ext-link>,
    <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/d20/">‚Äúd20‚Äù</ext-link>).
    Unplotted points either were non-functional or exceeded a set
    timeout.</p>
    <fig>
      <caption><p>A graph showing GNOLL‚Äôs performance (via Python
      binding) on different sizes of dice rolls. It slightly
      underperforms for small sizes, but is faster than other Python
      libraries for large sizes.</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/py.PNG" xlink:title="" />
    </fig>
  </sec>
</sec>
<sec id="acknowledgments">
  <title>Acknowledgments</title>
  <p>Thanks to my dog for the desk-side companionship and the demand for
  healthy stick-fetching breaks. Thank you also to the various TTRPG
  publishers and online communities for enabling people all over the
  world to play make-believe together.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-DNDDemographics2019">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>Natalt Design</string-name>
      </person-group>
      <article-title>A history check on 2019 | D&amp;D‚Äôs best year ever_2019</article-title>
      <publisher-name>Wizards of The Coast</publisher-name>
      <year iso-8601-date="2020">2020</year>
    </element-citation>
  </ref>
  <ref id="ref-ROLL">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Mogensen</surname><given-names>Torben</given-names></name>
      </person-group>
      <article-title>Roll: A language for specifying die-rolls</article-title>
      <source>Practical aspects of declarative languages</source>
      <publisher-name>Association for Computing Machinery</publisher-name>
      <year iso-8601-date="2003-01">2003</year><month>01</month>
      <volume>2562</volume>
      <isbn>978-3-540-00389-2</isbn>
      <pub-id pub-id-type="doi">10.1007/3-540-36388-2_11</pub-id>
      <fpage>145</fpage>
      <lpage>159</lpage>
    </element-citation>
  </ref>
  <ref id="ref-TROLL">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Mogensen</surname><given-names>Torben √Ügidius</given-names></name>
      </person-group>
      <article-title>Troll, a language for specifying dice-rolls</article-title>
      <source>Proceedings of the 2009 ACM symposium on applied computing</source>
      <publisher-name>Association for Computing Machinery</publisher-name>
      <year iso-8601-date="2009">2009</year>
      <isbn>978-1-60558-166-8</isbn>
      <pub-id pub-id-type="doi">10.1145/1529282.1529708</pub-id>
      <fpage>1910</fpage>
      <lpage>1915</lpage>
    </element-citation>
  </ref>
  <ref id="ref-pep301">
    <element-citation publication-type="report">
      <person-group person-group-type="author">
        <name><surname>Jones</surname><given-names>Richard</given-names></name>
      </person-group>
      <article-title>Package index and metadata for distutils</article-title>
      <year iso-8601-date="2002">2002</year>
      <uri>https://www.python.org/dev/peps/pep-0301/</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
