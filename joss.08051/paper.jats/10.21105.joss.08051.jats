<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">8051</article-id>
<article-id pub-id-type="doi">10.21105/joss.08051</article-id>
<title-group>
<article-title>AquaFetch: A Unified Python Interface for Water Resource
Dataset Acquisition and Harmonization</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-0031-745X</contrib-id>
<name>
<surname>Abbas</surname>
<given-names>Ather</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-7446-6805</contrib-id>
<name>
<surname>Iftikhar</surname>
<given-names>Sara</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-0031-745X</contrib-id>
<name>
<surname>Beck</surname>
<given-names>Hylke E.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>King Abdullah University of Science and Technology, Thuwal,
Saudi Arabia</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2025-01-21">
<day>21</day>
<month>1</month>
<year>2025</year>
</pub-date>
<volume>10</volume>
<issue>112</issue>
<fpage>8051</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>modeling</kwd>
<kwd>hydrology</kwd>
<kwd>data</kwd>
<kwd>water</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>AquaFetch is a Python package designed for the automated
  downloading, parsing, cleaning, and harmonization of freely available
  water resource datasets related to rainfall-runoff processes, surface
  water quality, and wastewater treatment. The package currently
  supports 70 datasets, downloading and transforming raw data into
  consistent, easy-to-use analysis-ready data. This allows users to
  directly access and utilize the data without labor-intensive and
  time-consuming preprocessing.</p>
  <p>The package comprises three submodules, each representing a
  different type of water resource data: <monospace>rr</monospace> for
  rainfall-runoff processes, <monospace>wq</monospace> for surface water
  quality, and <monospace>wwt</monospace> for wastewater treatment. The
  rr submodule offers data for 47,291 catchments from 36 sources
  worldwide, encompassing both dynamic and static features for each
  catchment (<xref alt="[fig1]" rid="fig1">[fig1]</xref>). The dynamic
  features consist of observed streamflow and meteorological time
  series, averaged over the catchment area, available at daily or hourly
  time steps. Static features include constant parameters such as land
  use, soil, topography, and other physiographical characteristics in
  tabular format, along with catchment boundaries as shapefiles. This
  submodule not only provides access to established rainfall-runoff
  datasets such as CAMELS
  (<xref alt="Addor et al., 2017" rid="ref-camels_addor_2017" ref-type="bibr">Addor
  et al., 2017</xref>) and LamaH
  (<xref alt="Klingler et al., 2021" rid="ref-lamahce_klingler" ref-type="bibr">Klingler
  et al., 2021</xref>) but also introduces 10 new datasets compiled for
  the first time from publicly accessible online data sources. The
  <monospace>wq</monospace> submodule offers access to 16 surface water
  quality datasets, each containing various water quality parameters
  measured across different spaces and times
  (<xref alt="[fig2]" rid="fig2">[fig2]</xref>). The
  <monospace>wwt</monospace> submodule provides access to 22,471
  experimental measurements related to wastewater treatment techniques
  such as adsorption, photocatalysis, and sonolysis.</p>
  <p>The development of AquaFetch was inspired by the growing
  availability of diverse water resource datasets in recent years. As a
  community-driven project, the codebase is structured to allow
  contributors to easily add new datasets, ensuring the package
  continues to expand and evolve to meet future needs.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The rapid increase in publicly available spatio-temporal datasets
  in various domains, including water resources, is mainly driven by
  advances in computation and storage as well as demand to develop
  accurate data-driven solutions for challenges like climate change,
  water scarcity, and environmental pollution. However, importing them
  into Python is cumbersome, requiring researchers to navigate multiple
  sources and handle inconsistent formats and units. Many datasets also
  need extensive preprocessing, making its acquisition a complex and
  skill-intensive task before it can be used for analysis or
  modeling.</p>
  <p>These challenges highlight the need for a unified, consistent,
  automated, and reusable framework for extracting hydrological and
  environmental data. The AquaFetch package addresses this gap by
  leveraging data-handling tools such as Pandas
  (<xref alt="McKinney, 2010" rid="ref-Pandas" ref-type="bibr">McKinney,
  2010</xref>), NumPy
  (<xref alt="Harris et al., 2020" rid="ref-NumPy2020" ref-type="bibr">Harris
  et al., 2020</xref>), xarray
  (<xref alt="Hoyer &amp; Hamman, 2017" rid="ref-xarray2017" ref-type="bibr">Hoyer
  &amp; Hamman, 2017</xref>), and netCDF5
  (<xref alt="NSF Unidata et al., 2024" rid="ref-NSF_Unidata_and_Davis_NetCDF-C" ref-type="bibr">NSF
  Unidata et al., 2024</xref>) to offer a streamlined workflow for
  automatic data extraction from multiple sources in various
  formats.</p>
  <p>Several other packages also aim to facilitate the acquisition and
  processing of water resource data. For example, tools like
  dataretrieval
  (<xref alt="Hodson &amp; Horsburgh, 2023" rid="ref-dataretrieval" ref-type="bibr">Hodson
  &amp; Horsburgh, 2023</xref>), hydrofunctions
  (<xref alt="Roberge, 2018" rid="ref-hydrofunctions" ref-type="bibr">Roberge,
  2018</xref>), and harmonize-wq
  (<xref alt="Bousquin &amp; Mullin, 2024" rid="ref-harmozie_wq" ref-type="bibr">Bousquin
  &amp; Mullin, 2024</xref>) provide streamlined access to hydrological
  and water quality data, though they are primarily limited to data from
  U.S. Geological Survey (USGS) and Environmental Protection Agency
  (EPA) stations. Data Retriever
  (<xref alt="Senyondo et al., 2017" rid="ref-retriever_Senyondo2017" ref-type="bibr">Senyondo
  et al., 2017</xref>) offers access to over 200 parameters, including
  water quality, but lacks comprehensive rainfall-runoff datasets and
  wastewater treatment data. Meanwhile, tsp
  (<xref alt="Brown, 2022" rid="ref-tsp" ref-type="bibr">Brown,
  2022</xref>) focuses on managing ground temperature data, and the
  HyRiver suite
  (<xref alt="Taher Chegini1 &amp; Leung, 2021" rid="ref-HyRiver" ref-type="bibr">Taher
  Chegini1 &amp; Leung, 2021</xref>) provides access to hydro-climate
  data exclusively from USGS’s National Water Information Service
  (NWIS). Geodata-Harvester
  (<xref alt="Haan et al., 2023" rid="ref-GeodataHarvester" ref-type="bibr">Haan
  et al., 2023</xref>) offers reusable and automated workflows for
  extracting diverse geospatial and environmental data for
  Australia.</p>
  <p>The Caravan initiative
  (<xref alt="Frederik Kratzert, 2023" rid="ref-Caravan" ref-type="bibr">Frederik
  Kratzert, 2023</xref>) stands out as a global platform for
  hydro-meteorological data with a distinct focus. While it aims to
  create large-sample hydrology datasets globally, AquaFetch facilitates
  access to a broad range of data via a unified interface, including
  processed rainfall-runoff datasets from countries like Japan,
  Thailand, Ireland, and Poland — regions not covered by Caravan.
  Additionally, Caravan emphasizes cloud-based processing using the
  proprietary Google Earth Engine and does not provide a standalone
  Python package, requiring users to upload catchment boundaries for
  extracting static features. This highlights the distinct operational
  focuses of Caravan and AquaFetch.</p>
  <p>Ultimately, we hope this package will foster the development of
  benchmark datasets in hydrological and environmental sciences,
  enhancing the comparability and reproducibility of data-driven
  solutions for water resource management.</p>
  <fig>
    <caption><p>Locations of catchment gauge stations covered by each of
    the 36 rainfall-runoff
    datasets<styled-content id="fig1"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="rr_stations.png" />
  </fig>
</sec>
<sec id="implementation-and-architecture">
  <title>Implementation and Architecture</title>
  <p>The AquaFetch package is structured using both functional and
  Object-Oriented Programming (OOP) designs. The OOP design is employed
  for handling more complex datasets within the
  <monospace>rr</monospace> and <monospace>wq</monospace> submodules,
  while simpler datasets are managed through a functional interface. All
  datasets in the rr submodule can be accessed via the RainfallRunoff
  class, thus offering a unified interface. The package’s code is
  logically organized, with <monospace>rr</monospace>,
  <monospace>wq</monospace>, and <monospace>wwt</monospace>
  subdirectories present in both the source code (aqua_fetch) and tests
  directories. All public classes and functions are accessible from the
  parent directory, allowing for straightforward imports as shown
  below:</p>
  <code language="python">    from aqua_fetch import RainfallRunoff
    from aqua_fetch import SWatCh
    from aqua_fetch import mg_degradation</code>
  <p>Datasets are downloaded upon the first call to the respective
  function or class. The data is saved locally and will not be
  redownloaded unless the user explicitly requests it to be overwritten.
  The package also leverages parallel processing to expedite the
  downloading and parsing of large datasets in the
  <monospace>rr</monospace> submodule, significantly speeding up data
  retrieval when multiple CPU cores are available.</p>
  <fig>
    <caption><p>Locations of measuring stations of water quality
    datasets<styled-content id="fig2"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="wq_stations.png" />
  </fig>
</sec>
<sec id="testing-and-dependencies">
  <title>Testing and dependencies</title>
  <p>The package’s core dependencies include requests
  (<xref alt="Reitz, 2018" rid="ref-requests" ref-type="bibr">Reitz,
  2018</xref>), NumPy, and Pandas. xarray is utilized for saving data in
  netCDF5
  (<xref alt="NSF Unidata et al., 2024" rid="ref-NSF_Unidata_and_Davis_NetCDF-C" ref-type="bibr">NSF
  Unidata et al., 2024</xref>) format, which is efficient for handling
  large datasets; however, this step is an optional dependency. Other
  optional dependencies include Matplotlib
  (<xref alt="Hunter, 2007" rid="ref-matplotlib" ref-type="bibr">Hunter,
  2007</xref>) for plotting and visualization, openpyxl
  (<xref alt="Gazoni &amp; Clark, 2024" rid="ref-openpyxl" ref-type="bibr">Gazoni
  &amp; Clark, 2024</xref>) for parsing Microsoft Excel files, along
  with Fiona
  (<xref alt="Sean et al., 2024" rid="ref-fiona" ref-type="bibr">Sean et
  al., 2024</xref>) for processing shapefiles. Adhering to the ‘unit
  test’ protocol, comprehensive testing has been implemented for all
  data classes and functions. Since downloading the datasets is
  time-consuming, the tests are conducted offline under the assumption
  that the datasets are already downloaded. These unit tests verify the
  number and types of parameters returned by the data functions.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>For part of the analysis, we utilized the Shaheen~III
  supercomputer, managed by the Supercomputing Core Laboratory at King
  Abdullah University of Science and Technology (KAUST) in Thuwal, Saudi
  Arabia. Part of the research was supported by the KAUST/MEWA Strategic
  Partnership Agreement (SPA) for Water, under award numbers 6110 and
  6111.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-Pandas">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>McKinney</surname><given-names>Wes</given-names></name>
      </person-group>
      <article-title>Data structures for statistical computing in python</article-title>
      <source>Proceedings of the 9th python in science conference</source>
      <person-group person-group-type="editor">
        <name><surname>Walt</surname><given-names>Stefan van der</given-names></name>
        <name><surname>Millman</surname><given-names>Jarrod</given-names></name>
      </person-group>
      <year iso-8601-date="2010">2010</year>
      <pub-id pub-id-type="doi">10.25080/Majora-92bf1922-00a</pub-id>
      <fpage>51</fpage>
      <lpage>56</lpage>
    </element-citation>
  </ref>
  <ref id="ref-NumPy2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>Walt</surname><given-names>Stéfan J. van der</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Wieser</surname><given-names>Eric</given-names></name>
        <name><surname>Taylor</surname><given-names>Julian</given-names></name>
        <name><surname>Berg</surname><given-names>Sebastian</given-names></name>
        <name><surname>Smith</surname><given-names>Nathaniel J.</given-names></name>
        <name><surname>Kern</surname><given-names>Robert</given-names></name>
        <name><surname>Picus</surname><given-names>Matti</given-names></name>
        <name><surname>Hoyer</surname><given-names>Stephan</given-names></name>
        <name><surname>Kerkwijk</surname><given-names>Marten H. van</given-names></name>
        <name><surname>Brett</surname><given-names>Matthew</given-names></name>
        <name><surname>Haldane</surname><given-names>Allan</given-names></name>
        <name><surname>Río</surname><given-names>Jaime Fernández del</given-names></name>
        <name><surname>Wiebe</surname><given-names>Mark</given-names></name>
        <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
        <name><surname>Gérard-Marchant</surname><given-names>Pierre</given-names></name>
        <name><surname>Sheppard</surname><given-names>Kevin</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
        <name><surname>Abbasi</surname><given-names>Hameer</given-names></name>
        <name><surname>Gohlke</surname><given-names>Christoph</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
      </person-group>
      <article-title>Array programming with NumPy</article-title>
      <source>Nature</source>
      <publisher-name>Springer Science; Business Media LLC</publisher-name>
      <year iso-8601-date="2020-09">2020</year><month>09</month>
      <volume>585</volume>
      <issue>7825</issue>
      <uri>https://doi.org/10.1038/s41586-020-2649-2</uri>
      <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
      <fpage>357</fpage>
      <lpage>362</lpage>
    </element-citation>
  </ref>
  <ref id="ref-xarray2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hoyer</surname><given-names>S.</given-names></name>
        <name><surname>Hamman</surname><given-names>J.</given-names></name>
      </person-group>
      <article-title>Xarray: N-D labeled arrays and datasets in Python</article-title>
      <source>Journal of Open Research Software</source>
      <publisher-name>Ubiquity Press</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <volume>5</volume>
      <issue>1</issue>
      <uri>https://doi.org/10.5334/jors.148</uri>
      <pub-id pub-id-type="doi">10.5334/jors.148</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-harmozie_wq">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bousquin</surname><given-names>Justin</given-names></name>
        <name><surname>Mullin</surname><given-names>Cristina A.</given-names></name>
      </person-group>
      <article-title>Harmonize-wq: Standardize, clean and wrangle water quality portal data into more analytic-ready formats</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <volume>9</volume>
      <issue>102</issue>
      <uri>https://doi.org/10.21105/joss.07305</uri>
      <pub-id pub-id-type="doi">10.21105/joss.07305</pub-id>
      <fpage>7305</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-retriever_Senyondo2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Senyondo</surname><given-names>Henry</given-names></name>
        <name><surname>Morris</surname><given-names>Benjamin D.</given-names></name>
        <name><surname>Goel</surname><given-names>Akash</given-names></name>
        <name><surname>Zhang</surname><given-names>Andrew</given-names></name>
        <name><surname>Narasimha</surname><given-names>Akshay</given-names></name>
        <name><surname>Negi</surname><given-names>Shivam</given-names></name>
        <name><surname>Harris</surname><given-names>David J.</given-names></name>
        <name><surname>Digges</surname><given-names>Deborah Gertrude</given-names></name>
        <name><surname>Kumar</surname><given-names>Kapil</given-names></name>
        <name><surname>Jain</surname><given-names>Amritanshu</given-names></name>
        <name><surname>Pal</surname><given-names>Kunal</given-names></name>
        <name><surname>Amipara</surname><given-names>Kevinkumar</given-names></name>
        <name><surname>White</surname><given-names>Ethan P.</given-names></name>
      </person-group>
      <article-title>Retriever: Data retrieval tool</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <volume>2</volume>
      <issue>19</issue>
      <uri>https://doi.org/10.21105/joss.00451</uri>
      <pub-id pub-id-type="doi">10.21105/joss.00451</pub-id>
      <fpage>451</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-tsp">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Brown</surname><given-names>Nicholas</given-names></name>
      </person-group>
      <article-title>Tsp (“teaspoon”): A library for ground temperature data</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <volume>7</volume>
      <issue>77</issue>
      <uri>https://doi.org/10.21105/joss.04704</uri>
      <pub-id pub-id-type="doi">10.21105/joss.04704</pub-id>
      <fpage>4704</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-HyRiver">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Taher Chegini1</surname><suffix>Hong-Yi Li1</suffix></name>
        <name><surname>Leung</surname><given-names>L. Ruby</given-names></name>
      </person-group>
      <article-title>HyRiver: Hydroclimate data retriever</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <volume>6</volume>
      <issue>66</issue>
      <uri>https://doi.org/10.21105/joss.03175</uri>
      <pub-id pub-id-type="doi">10.21105/joss.03175</pub-id>
      <fpage>3175</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-GeodataHarvester">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Haan</surname><given-names>Sebastian</given-names></name>
        <name><surname>Harianto</surname><given-names>Januar</given-names></name>
        <name><surname>Butterworth</surname><given-names>Nathaniel</given-names></name>
        <name><surname>Bisho</surname><given-names>Thomas</given-names></name>
      </person-group>
      <article-title>Geodata-harvester: A python package to jumpstart geospatial data extraction and analysis</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <volume>8</volume>
      <issue>89</issue>
      <uri>https://doi.org/10.21105/joss.05205</uri>
      <pub-id pub-id-type="doi">10.21105/joss.05205</pub-id>
      <fpage>5205</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Caravan">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Frederik Kratzert</surname><given-names>Nans Addor</given-names><suffix>Grey Nearing</suffix></name>
      </person-group>
      <article-title>Caravan - a global community dataset for large-sample hydrology</article-title>
      <source>Scientific Data</source>
      <publisher-name>Nature Publishing Group UK London</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <volume>10</volume>
      <issue>61</issue>
      <uri>https://doi.org/10.1038/s41597-023-01975-w</uri>
      <pub-id pub-id-type="doi">10.1038/s41597-023-01975-w</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-camels_addor_2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Addor</surname><given-names>N.</given-names></name>
        <name><surname>Newman</surname><given-names>A. J.</given-names></name>
        <name><surname>Mizukami</surname><given-names>N.</given-names></name>
        <name><surname>Clark</surname><given-names>M. P.</given-names></name>
      </person-group>
      <article-title>The CAMELS data set: Catchment attributes and meteorology for large-sample studies</article-title>
      <source>Hydrology and Earth System Sciences</source>
      <year iso-8601-date="2017">2017</year>
      <volume>21</volume>
      <issue>10</issue>
      <uri>https://hess.copernicus.org/articles/21/5293/2017/</uri>
      <pub-id pub-id-type="doi">10.5194/hess-21-5293-2017</pub-id>
      <fpage>5293</fpage>
      <lpage>5313</lpage>
    </element-citation>
  </ref>
  <ref id="ref-lamahce_klingler">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Klingler</surname><given-names>C.</given-names></name>
        <name><surname>Schulz</surname><given-names>K.</given-names></name>
        <name><surname>Herrnegger</surname><given-names>M.</given-names></name>
      </person-group>
      <article-title>LamaH-CE: LArge-SaMple DAta for hydrology and environmental sciences for central europe</article-title>
      <source>Earth System Science Data</source>
      <year iso-8601-date="2021">2021</year>
      <volume>13</volume>
      <issue>9</issue>
      <uri>https://essd.copernicus.org/articles/13/4529/2021/</uri>
      <pub-id pub-id-type="doi">10.5194/essd-13-4529-2021</pub-id>
      <fpage>4529</fpage>
      <lpage>4565</lpage>
    </element-citation>
  </ref>
  <ref id="ref-requests">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Reitz</surname><given-names>Kenneth</given-names></name>
      </person-group>
      <article-title>Requests: A simple, yet elegant, HTTP library</article-title>
      <publisher-name>https://github.com/psf/requests</publisher-name>
      <year iso-8601-date="2018">2018</year>
    </element-citation>
  </ref>
  <ref id="ref-NSF_Unidata_and_Davis_NetCDF-C">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <string-name>NSF Unidata</string-name>
        <name><surname>Davis</surname><given-names>Glenn</given-names></name>
        <name><surname>Rew</surname><given-names>Russ</given-names></name>
        <name><surname>Heimbigner</surname><given-names>Dennis</given-names></name>
        <name><surname>Hartnett</surname><given-names>Edward</given-names></name>
        <name><surname>Fisher</surname><given-names>Ward</given-names></name>
        <name><surname>Others</surname><given-names>Many</given-names></name>
      </person-group>
      <article-title>NetCDF-C </article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://github.com/Unidata/netcdf-c</uri>
      <pub-id pub-id-type="doi">10.5065/D6H70CW6</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-openpyxl">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Gazoni</surname><given-names>Eric</given-names></name>
        <name><surname>Clark</surname><given-names>Charlie</given-names></name>
      </person-group>
      <article-title>Openpyxl - a python library to read/write excel 2010 xlsx/xlsm files</article-title>
      <publisher-name>https://foss.heptapod.net/openpyxl/openpyxl</publisher-name>
      <year iso-8601-date="2024">2024</year>
    </element-citation>
  </ref>
  <ref id="ref-matplotlib">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hunter</surname><given-names>John D.</given-names></name>
      </person-group>
      <article-title>Matplotlib: A 2D graphics environment</article-title>
      <source>Computing in Science &amp; Engineering</source>
      <year iso-8601-date="2007">2007</year>
      <volume>9</volume>
      <issue>3</issue>
      <uri>
          https://aip.scitation.org/doi/abs/10.1109/MCSE.2007.55
        </uri>
      <pub-id pub-id-type="doi">10.1109/MCSE.2007.55</pub-id>
      <fpage>90</fpage>
      <lpage>95</lpage>
    </element-citation>
  </ref>
  <ref id="ref-dataretrieval">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Hodson</surname><given-names>Hariharan</given-names><suffix>T. O.</suffix></name>
        <name><surname>Horsburgh</surname><given-names>J. S.</given-names></name>
      </person-group>
      <article-title>Dataretrieval (python): A python package for discovering and retrieving water data available from u.s. Federal hydrologic web services: U.s. Geological survey</article-title>
      <publisher-name>https://github.com/DOI-USGS/dataretrieval-python</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <pub-id pub-id-type="doi">10.5066/P94I5TX3</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-hydrofunctions">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Roberge</surname><given-names>Martin</given-names></name>
      </person-group>
      <article-title>Hydrofunctions</article-title>
      <publisher-name>https://github.com/mroberge/hydrofunctions</publisher-name>
      <year iso-8601-date="2018">2018</year>
    </element-citation>
  </ref>
  <ref id="ref-fiona">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Sean</surname><given-names>Gillies</given-names></name>
        <name><surname>Rene</surname><given-names>Buffat</given-names></name>
        <name><surname>Joshua</surname><given-names>Arnott</given-names></name>
        <name><surname>Mike W</surname><given-names>Taves</given-names></name>
        <name><surname>Kevin</surname><given-names>Wurster</given-names></name>
        <name><surname>Alan D</surname><given-names>Snow</given-names></name>
        <name><surname>Micah</surname><given-names>Cochran</given-names></name>
        <name><surname>Others</surname><given-names>Many</given-names></name>
      </person-group>
      <article-title>Fiona</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://github.com/Toblerity/Fiona</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
