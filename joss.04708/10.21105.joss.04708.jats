<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">4708</article-id>
<article-id pub-id-type="doi">10.21105/joss.04708</article-id>
<title-group>
<article-title>Choco-solver: A Java library for constraint
programming</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">0000-0002-4546-9027</contrib-id>
<name>
<surname>Prud’homme</surname>
<given-names>Charles</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-5638-4777</contrib-id>
<name>
<surname>Fages</surname>
<given-names>Jean-Guillaume</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>TASC, IMT-Atlantique, LS2N-CNRS, Nantes,
France</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>COSLING S.A.S., Nantes, France</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2022-08-25">
<day>25</day>
<month>8</month>
<year>2022</year>
</pub-date>
<volume>7</volume>
<issue>78</issue>
<fpage>4708</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Java</kwd>
<kwd>constraint programming</kwd>
<kwd>constraint satisfaction problem</kwd>
<kwd>constraint optimisation problem</kwd>
<kwd>decision making</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Constraint Programming (CP) is a powerful programming paradigm for
  solving combinatorial search problems
  (<xref alt="Rossi et al., 2006" rid="ref-DBLPU003AreferenceU002FfaiU002F2" ref-type="bibr">Rossi
  et al., 2006</xref>). CP is at the intersection of artificial
  intelligence, computer science, operations research, and many other
  fields. One of the strengths of the paradigm is the wide variety of
  constraints it offers. CP is both a rich declarative language for
  describing combinatorial problems and a set of algorithms and
  techniques for solving them automatically.</p>
  <p><monospace>Choco-solver</monospace> is Java library for constraint
  programming which was created in the early 2000s. Since then, the
  library has evolved a great deal, but ease of use has always been a
  guiding principle in its development. The
  <monospace>Choco-solver</monospace> API is designed to reduce entry
  points to a minimum and thus simplifies modelling for users. The wide
  variety of constraints available allows the user to describe his
  problem as naturally as possible. The black-box approach to solving
  allows everyone to focus on modelling. However,
  <monospace>Choco-solver</monospace> is also open and modifiable. The
  implementation of new constraints
  (<xref alt="Ouellet &amp; Quimper, 2022" rid="ref-10.1007U002F978-3-031-08011-1_21" ref-type="bibr">Ouellet
  &amp; Quimper, 2022</xref>) or strategies for exploring the search
  space
  (<xref alt="Fages &amp; Prud’Homme, 2017" rid="ref-fagesU003Ahal-01629182" ref-type="bibr">Fages
  &amp; Prud’Homme, 2017</xref>;
  <xref alt="Li et al., 2021" rid="ref-DBLPU003AconfU002FcpU002FLiYL21" ref-type="bibr">Li
  et al., 2021</xref>) is therefore possible.</p>
  <p>As a result, <monospace>Choco-solver</monospace> is used by the
  academics for teaching and research, on the other hand it is used by
  the industry to solve real-world problems.</p>
  <sec id="cp-in-a-nutshell">
    <title>CP in a nutshell</title>
    <p>Constraint programming provides not only a declarative way for
    users to describe discrete problems, but also techniques for solving
    them automatically. In that sense, it is very close to integer
    linear programming or Boolean satisfaction but is distinguished from
    them with its high-level modeling language and expressiveness.
    Actually, one of the richness’s of the paradigm lies in the wide
    variety of constraints it proposes, which are also central to the
    solving stage. Thus, the objective of CP is twofold: firstly to
    offer a rich declarative language to describe a combinatorial
    problem, and secondly to provide techniques for solving the problem
    automatically. In standard use, a user states a problem using
    variables, their domains (possible values for each variable), and
    constraints which are called predicates that must hold on the
    variables. The wide variety of constraints available allows the
    users to describe their problem as naturally as possible. Each
    constraint ensures that it holds, otherwise a propagator filters the
    values that prevent the satisfiability. It is the combination of the
    selected constraints that defines the problem. The problem is solved
    by alternating space reduction (usually by a depth-first search) and
    propagation, thus ensuring the completeness of the approach. This
    standard usage can be extended in different ways, for example, by
    hybridisation with local search, Boolean satisfiability, or linear
    programming techniques.</p>
  </sec>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>For constraint programming to be used successfully, it is essential
  to have a library that incorporates the latest advances in the field,
  while ensuring reliability, performance, and responsiveness. This was
  also the motivation for the creation of
  <monospace>Choco-solver</monospace>: Providing state-of-the-art
  algorithms and high resolution performance while offering ease of use
  and development, all in a free and open-source library.</p>
  <sec id="achievement">
    <title>Achievement</title>
    <p>With <inline-formula><alternatives>
    <tex-math><![CDATA[20]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>20</mml:mn></mml:math></alternatives></inline-formula>
    years of development, <monospace>Choco-solver</monospace> is now a
    stable, flexible, extensible, powerful, and user-friendly library.
    There is a community of users and contributors who actively
    participate in improving the library. In addition,
    <monospace>Choco-solver</monospace> relies on software quality
    standards (unit and performance tests, continuous integration, code
    review, etc.) and frequent updates are made. Finally, the choice of
    Java as programming language makes the integration of the library
    simple
    into both academic and industrial projects.</p>
  </sec>
</sec>
<sec id="features-and-functionality">
  <title>Features and Functionality</title>
  <sec id="modeling">
    <title>Modeling</title>
    <p><monospace>Choco-solver</monospace> comes with the commonly used
    types of variables: Integer variables, Boolean variables, set
    variables
    (<xref alt="Gervet, 1997" rid="ref-gervet_1997" ref-type="bibr">Gervet,
    1997</xref>), graph variables
    (<xref alt="Dooms et al., 2005" rid="ref-dooms_2005" ref-type="bibr">Dooms
    et al., 2005</xref>;
    <xref alt="Fages, 2015" rid="ref-fages_2015" ref-type="bibr">Fages,
    2015</xref>), and real variables. Views
    (<xref alt="Justeau-Allaire &amp; Prud’homme, 2022" rid="ref-DBLPU003AjournalsU002FconstraintsU002FJusteau-Allaire22" ref-type="bibr">Justeau-Allaire
    &amp; Prud’homme, 2022</xref>;
    <xref alt="Schulte &amp; Tack, 2005" rid="ref-DBLPU003AconfU002FcpU002FSchulteT05" ref-type="bibr">Schulte
    &amp; Tack, 2005</xref>) but also arithmetical, relational and
    logical expressions are supported.</p>
    <p>Up to 100 constraints are provided from classic ones, such as
    arithmetical constraints, to must-have global constraints such as
    <italic>AllDifferent</italic>
    (<xref alt="Régin, 1994" rid="ref-10.5555U002F199288.178024" ref-type="bibr">Régin,
    1994</xref>) or <italic>Cumulative</italic>
    (<xref alt="Aggoun &amp; Beldiceanu, 1993" rid="ref-aggounU003Ahal-00442821" ref-type="bibr">Aggoun
    &amp; Beldiceanu, 1993</xref>), and include less common even though
    useful ones such as <italic>Tree</italic>
    (<xref alt="Beldiceanu et al., 2005" rid="ref-DBLPU003AconfU002FcpaiorU002FBeldiceanuFL05" ref-type="bibr">Beldiceanu
    et al., 2005</xref>) or <italic>StableKeySort</italic>
    (<xref alt="Beldiceanu et al., 2015" rid="ref-beldiceanuU003Ahal-01186680" ref-type="bibr">Beldiceanu
    et al., 2015</xref>). In many cases, the
    <monospace>Choco-solver</monospace> API provides various options in
    addition to the default signature – corresponding to a robust
    implementation – of a constraint. This allows users to experiment
    alternative approaches and tune the model to its instance. The users
    may also pick some existing propagators to compose a new constraint
    or create their own one in a straightforward way by implementing a
    filtering algorithm and a satisfaction checker. Many models are
    available on the
    <ext-link ext-link-type="uri" xlink:href="https://choco-solver.org/tutos/">Choco-solver
    website</ext-link> as modelling tutorials.</p>
  </sec>
  <sec id="solving">
    <title>Solving</title>
    <p><monospace>Choco-solver</monospace> has been carefully designed
    to offer wide range of resolution configurations and good solving
    performances. Backtrackable primitives and structures are based on
    trailing
    (<xref alt="Aggoun &amp; Beldiceanu, 1990" rid="ref-DBLPU003AconfU002FjfplcU002FAggounB90" ref-type="bibr">Aggoun
    &amp; Beldiceanu, 1990</xref>;
    <xref alt="Reischuk et al., 2009" rid="ref-DBLPU003AconfU002FcpU002FReischukSST09" ref-type="bibr">Reischuk
    et al., 2009</xref>). The propagation engine deals with seven
    priority levels
    (<xref alt="Prud’homme, Lorca, Douence, et al., 2014" rid="ref-DBLPU003AjournalsU002FconstraintsU002FPrudhommeLDJ14" ref-type="bibr">Prud’homme,
    Lorca, Douence, et al., 2014</xref>;
    <xref alt="Schulte &amp; Stuckey, 2008" rid="ref-DBLPU003AjournalsU002FtoplasU002FSchulteS08" ref-type="bibr">Schulte
    &amp; Stuckey, 2008</xref>) and manages either fine or coarse grain
    events which enables to get efficient incremental constraint
    propagators.</p>
    <p>The search algorithm relies on three components
    <italic>Propagate</italic>, <italic>Learn</italic>, and
    <italic>Move</italic>
    (<xref alt="Jussien &amp; Lhomme, 2002" rid="ref-Jussien02unifyingsearch" ref-type="bibr">Jussien
    &amp; Lhomme, 2002</xref>). Such a generic search algorithm is then
    instantiated to depth-first search, large neighbourhood search
    (<xref alt="Prud’homme, Lorca, &amp; Jussien, 2014" rid="ref-DBLPU003AjournalsU002FconstraintsU002FPrudhommeLJ14" ref-type="bibr">Prud’homme,
    Lorca, &amp; Jussien, 2014</xref>;
    <xref alt="Shaw, 1998" rid="ref-DBLPU003AconfU002FcpU002FShaw98" ref-type="bibr">Shaw,
    1998</xref>), limited discrepancy search
    (<xref alt="Harvey &amp; Ginsberg, 1995" rid="ref-HarveyU003A1995U003ALDSU003A1625855.1625935" ref-type="bibr">Harvey
    &amp; Ginsberg, 1995</xref>), depth-bounded discrepancy search
    (<xref alt="Walsh, 1997" rid="ref-Walsh97depth-boundeddiscrepancy" ref-type="bibr">Walsh,
    1997</xref>) or hybrid breadth-first search
    (<xref alt="Allouche et al., 2015" rid="ref-alloucheU003Ahal-01198361" ref-type="bibr">Allouche
    et al., 2015</xref>).</p>
    <p>The search process can also be greatly improved by various
    built-in search strategies such as <italic>dom/wdeg</italic>
    (<xref alt="Boussemart et al., 2004" rid="ref-DBLPU003AconfU002FecaiU002FBoussemartHLS04" ref-type="bibr">Boussemart
    et al., 2004</xref>) and its <italic>ca-cd</italic> variant
    (<xref alt="Wattez et al., 2019" rid="ref-DBLPU003AconfU002FictaiU002FWattezLPT19" ref-type="bibr">Wattez
    et al., 2019</xref>), <italic>activity-based search</italic>
    (<xref alt="Michel &amp; Van Hentenryck, 2012" rid="ref-10.1007U002F978-3-642-29828-8_15" ref-type="bibr">Michel
    &amp; Van Hentenryck, 2012</xref>), <italic>failure-based
    searches</italic>
    (<xref alt="Li et al., 2021" rid="ref-DBLPU003AconfU002FcpU002FLiYL21" ref-type="bibr">Li
    et al., 2021</xref>), <italic>bound-impact value selector</italic>
    (<xref alt="Fages &amp; Prud’Homme, 2017" rid="ref-fagesU003Ahal-01629182" ref-type="bibr">Fages
    &amp; Prud’Homme, 2017</xref>), <italic>first-fail</italic>
    (<xref alt="Haralick &amp; Elliott, 1979" rid="ref-HaralickU003A1979U003AITSU003A1624861.1624942" ref-type="bibr">Haralick
    &amp; Elliott, 1979</xref>), and many others. Standard restart
    policies are also available, to take full advantage of the learning
    strategies. Problem-adapted search strategies are also
    supported.</p>
    <p>One can solve a problem by</p>
    <list list-type="bullet">
      <list-item>
        <p>simply checking satisfaction</p>
      </list-item>
      <list-item>
        <p>finding one or all solutions</p>
      </list-item>
      <list-item>
        <p>optimizing one or more objectives</p>
      </list-item>
      <list-item>
        <p>solving on one or more thread.</p>
      </list-item>
    </list>
    <p>The search process itself is observable and extensible.</p>
  </sec>
  <sec id="community-tools-integration">
    <title>Community tools integration</title>
    <p>Several useful extra features are also available such as parsers
    to <ext-link ext-link-type="uri" xlink:href="http://xcsp.org/">XCSP3
    format</ext-link> and
    <ext-link ext-link-type="uri" xlink:href="https://www.minizinc.org/resources.html">MiniZinc
    format</ext-link>. <monospace>Choco-solver</monospace> is also
    embedded in
    <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/pycsp3/">PyCSP3</ext-link>,
    a Python library for modeling and solving combinatorial constrained
    problems. In addition to offering alternatives to modelling in Java,
    it also allows participation in the two major constraint solver
    competitions :
    <ext-link ext-link-type="uri" xlink:href="https://www.minizinc.org/challenge.html">MiniZinc
    Challenge</ext-link> and
    <ext-link ext-link-type="uri" xlink:href="http://www.xcsp.org/competitions/">XCSP3
    Competition</ext-link>.</p>
    <p>Finally, although it is originally designed to solve discrete
    mathematical problems, <monospace>Choco-solver</monospace> also
    supports natively real variables and constraints, and relies on
    <ext-link ext-link-type="uri" xlink:href="http://www.ibex-lib.org/">Ibex-lib</ext-link>
    to solve the continuous part of the problems
    (<xref alt="Fages et al., 2013" rid="ref-fagesU003Ahal-00904069" ref-type="bibr">Fages
    et al., 2013</xref>). Equally, a Boolean satisfaction solver (based
    on
    <ext-link ext-link-type="uri" xlink:href="http://minisat.se/Main.html">MiniSat</ext-link>)
    is integrated to offer better performance on logical
    constraints.</p>
    <p>These aspects consolidate the place of
    <monospace>Choco-solver</monospace> as an important tool in the CP
    community.</p>
    <p>Note that there are a couple of other Java constraint solvers of
    equivalent maturity, like
    <ext-link ext-link-type="uri" xlink:href="https://github.com/radsz/jacop">JaCoP</ext-link>
    and
    <ext-link ext-link-type="uri" xlink:href="https://github.com/xcsp3team/ace">ACE</ext-link>.
    Although the performances of these tools are direclty comparable,
    they are mainly distinguished by the functionalities in terms of
    modelling and resolution. Among the most noteworthy,
    <monospace>Choco-solver</monospace> allows integrating constraints
    which are based on graph variables or real variables, or it can
    parse both MiniZinc and XCSP3 input files.</p>
  </sec>
</sec>
<sec id="industrial-use">
  <title>Industrial use</title>
  <p><monospace>Choco-solver</monospace> is used by the industry to
  solve many real-world problems, such as cryptanalysis
  (<xref alt="Delaune et al., 2021" rid="ref-10.1007U002F978-3-030-78375-4_8" ref-type="bibr">Delaune
  et al., 2021</xref>), construction planning
  (<xref alt="Cañizares et al., 2022" rid="ref-CANIZARES2022116149" ref-type="bibr">Cañizares
  et al., 2022</xref>), automated testing and debugging
  (<xref alt="Le et al., 2021" rid="ref-LE2021100085" ref-type="bibr">Le
  et al., 2021</xref>), scheduling
  (<xref alt="Lorca et al., 2016" rid="ref-10.1007U002F978-3-319-44953-1_40" ref-type="bibr">Lorca
  et al., 2016</xref>), level design
  (<xref alt="Smith et al., 2011" rid="ref-5887401" ref-type="bibr">Smith
  et al., 2011</xref>), placement service
  (<xref alt="Ait Salaht et al., 2019" rid="ref-8814186" ref-type="bibr">Ait
  Salaht et al., 2019</xref>) and many others. In the Railway industry,
  <monospace>Choco-solver</monospace> is used to optimize the rail
  traffic of French train stations, on a daily basis. It is also used at
  a higher level to run simulations for capacity and maintenance
  planning. The underlying mathematical problems, involving
  multi-objective functions with millions of variables and constraints,
  are solved within seconds by the solver. In the defense sector,
  <monospace>Choco-solver</monospace> is used for various applications.
  One publicly known is the long-term maintenance planning of the Mirage
  2000 fleet
  (<xref alt="Grazzini, 2019" rid="ref-OptaForce" ref-type="bibr">Grazzini,
  2019</xref>). This planning and scheduling problem includes various
  capacity constraints, load balancing, and mission covering in an
  over-constrained environment. A fleet of hundred aircraft can be
  planned by <monospace>Choco-solver</monospace> for the next fifteen
  years within a few minutes. Another type of industrial application of
  <monospace>Choco-solver</monospace> is Configuration
  (<xref alt="Charpentier et al., 2021" rid="ref-Charpentier2021COSLINGC" ref-type="bibr">Charpentier
  et al., 2021</xref>) where the solver is used to solve dynamical
  constraint models. The underlying mathematical problems are generally
  simpler than the ones in planning applications and an optimal result
  is expected within milliseconds. This occurs in quotation systems for
  sales automation, but also design automation, and system
  configuration.</p>
  <p>In most of those cases, experts set advanced solution techniques,
  such as specific search strategies, Large Neighborhood Search or
  <italic>ad hoc</italic> global constraints, in order to improve their
  model. <monospace>Choco-solver</monospace> is flexible enough to allow
  such fine-tuning to tackle challenging problems. With the right
  approach, <monospace>Choco-solver</monospace> can come up with nearly
  optimal solutions in a very short time.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We acknowledge contributions from (in alphabetical order) Hadrien
  Cambazard, Arthur Godet, Fabien Hermenier, Narendra Jussien, Dimitri
  Justeau-Allaire, Tanguy Lapègue, Alexandre Lebrun, Jimmy Liang, Xavier
  Lorca, Arnaud Malapert, Guillaume Rochart, João Pedro Schmitt and
  Mohamed Wahbi.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-HaralickU003A1979U003AITSU003A1624861.1624942">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Haralick</surname><given-names>Robert M.</given-names></name>
        <name><surname>Elliott</surname><given-names>Gordon L.</given-names></name>
      </person-group>
      <article-title>Increasing tree search efficiency for constraint satisfaction problems</article-title>
      <source>Proceedings of the 6th international joint conference on artificial intelligence - volume 1</source>
      <publisher-name>Morgan Kaufmann Publishers Inc.</publisher-name>
      <publisher-loc>San Francisco, CA, USA</publisher-loc>
      <year iso-8601-date="1979">1979</year>
      <isbn>0-934613-47-8</isbn>
      <uri>http://dl.acm.org/citation.cfm?id=1624861.1624942</uri>
      <pub-id pub-id-type="doi">10.1016/0004-3702(80)90051-X</pub-id>
      <fpage>356</fpage>
      <lpage>364</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AconfU002FjfplcU002FAggounB90">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Aggoun</surname><given-names>Abderrahmane</given-names></name>
        <name><surname>Beldiceanu</surname><given-names>Nicolas</given-names></name>
      </person-group>
      <article-title>Time stamps techniques for the trailed data in constraint logic programming systems</article-title>
      <source>SPLT’90, 8{}^{\mbox{{\`{e}}me}} séminaire programmation en logique, 16-18 mai 1990, trégastel, france</source>
      <person-group person-group-type="editor">
        <name><surname>Bourgault</surname><given-names>Serge</given-names></name>
        <name><surname>Dincbas</surname><given-names>Mehmet</given-names></name>
      </person-group>
      <year iso-8601-date="1990">1990</year>
      <fpage>487</fpage>
      <lpage>510</lpage>
    </element-citation>
  </ref>
  <ref id="ref-aggounU003Ahal-00442821">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Aggoun</surname><given-names>Abderrahmane</given-names></name>
        <name><surname>Beldiceanu</surname><given-names>Nicolas</given-names></name>
      </person-group>
      <article-title>Extending CHIP in order to Solve Complex Scheduling and Placement Problems</article-title>
      <source>Mathl. Comput. Modelling</source>
      <year iso-8601-date="1993">1993</year>
      <volume>17</volume>
      <issue>7</issue>
      <uri>https://hal.archives-ouvertes.fr/hal-00442821</uri>
      <pub-id pub-id-type="doi">10.1016/0895-7177(93)90068-A</pub-id>
      <fpage>57</fpage>
      <lpage>73</lpage>
    </element-citation>
  </ref>
  <ref id="ref-10.5555U002F199288.178024">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Régin</surname><given-names>Jean-Charles</given-names></name>
      </person-group>
      <article-title>A filtering algorithm for constraints of difference in CSPs</article-title>
      <source>Proceedings of the twelfth national conference on artificial intelligence (vol. 1)</source>
      <publisher-name>American Association for Artificial Intelligence</publisher-name>
      <publisher-loc>USA</publisher-loc>
      <year iso-8601-date="1994">1994</year>
      <isbn>0262611023</isbn>
      <fpage>362</fpage>
      <lpage>367</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Walsh97depth-boundeddiscrepancy">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Walsh</surname><given-names>Toby</given-names></name>
      </person-group>
      <article-title>Depth-bounded discrepancy search</article-title>
      <source>In proceedings of IJCAI-97</source>
      <year iso-8601-date="1997">1997</year>
      <fpage>1388</fpage>
      <lpage>1393</lpage>
    </element-citation>
  </ref>
  <ref id="ref-HarveyU003A1995U003ALDSU003A1625855.1625935">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Harvey</surname><given-names>William D.</given-names></name>
        <name><surname>Ginsberg</surname><given-names>Matthew L.</given-names></name>
      </person-group>
      <article-title>Limited discrepancy search</article-title>
      <source>Proceedings of the 14th international joint conference on artificial intelligence - volume 1</source>
      <publisher-name>Morgan Kaufmann Publishers Inc.</publisher-name>
      <publisher-loc>San Francisco, CA, USA</publisher-loc>
      <year iso-8601-date="1995">1995</year>
      <isbn>978-1-558-60363-9</isbn>
      <uri>http://dl.acm.org/citation.cfm?id=1625855.1625935</uri>
      <fpage>607</fpage>
      <lpage>613</lpage>
    </element-citation>
  </ref>
  <ref id="ref-gervet_1997">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Gervet</surname><given-names>Carmen</given-names></name>
      </person-group>
      <article-title>Interval propagation to reason about sets: Definition and implementation of a practical language</article-title>
      <source>Constraints</source>
      <year iso-8601-date="1997-03">1997</year><month>03</month>
      <volume>1</volume>
      <issue>3</issue>
      <issn>1572-9354</issn>
      <pub-id pub-id-type="doi">10.1007/BF00137870</pub-id>
      <fpage>191</fpage>
      <lpage>244</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AconfU002FcpU002FShaw98">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Shaw</surname><given-names>Paul</given-names></name>
      </person-group>
      <article-title>Using constraint programming and local search methods to solve vehicle routing problems</article-title>
      <source>Principles and practice of constraint programming - CP98, 4th international conference, pisa, italy, october 26-30, 1998, proceedings</source>
      <person-group person-group-type="editor">
        <name><surname>Maher</surname><given-names>Michael J.</given-names></name>
        <name><surname>Puget</surname><given-names>Jean-Francois</given-names></name>
      </person-group>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="1998">1998</year>
      <volume>1520</volume>
      <uri>https://doi.org/10.1007/3-540-49481-2\_30</uri>
      <pub-id pub-id-type="doi">10.1007/3-540-49481-2\_30</pub-id>
      <fpage>417</fpage>
      <lpage>431</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Jussien02unifyingsearch">
    <element-citation publication-type="report">
      <person-group person-group-type="author">
        <name><surname>Jussien</surname><given-names>Narendra</given-names></name>
        <name><surname>Lhomme</surname><given-names>Olivier</given-names></name>
      </person-group>
      <article-title>Unifying search algorithms for CSP</article-title>
      <publisher-name>EMN</publisher-name>
      <year iso-8601-date="2002">2002</year>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AconfU002FecaiU002FBoussemartHLS04">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Boussemart</surname><given-names>Frédéric</given-names></name>
        <name><surname>Hemery</surname><given-names>Fred</given-names></name>
        <name><surname>Lecoutre</surname><given-names>Christophe</given-names></name>
        <name><surname>Sais</surname><given-names>Lakhdar</given-names></name>
      </person-group>
      <article-title>Boosting systematic search by weighting constraints</article-title>
      <source>Proceedings of the 16th eureopean conference on artificial intelligence, ECAI’2004, including prestigious applicants of intelligent systems, PAIS 2004, valencia, spain, august 22-27, 2004</source>
      <year iso-8601-date="2004">2004</year>
      <fpage>146</fpage>
      <lpage>150</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AconfU002FcpU002FSchulteT05">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Schulte</surname><given-names>Christian</given-names></name>
        <name><surname>Tack</surname><given-names>Guido</given-names></name>
      </person-group>
      <article-title>Views and iterators for generic constraint implementations</article-title>
      <source>Principles and practice of constraint programming - CP 2005, 11th international conference, CP 2005, sitges, spain, october 1-5, 2005, proceedings</source>
      <person-group person-group-type="editor">
        <name><surname>Beek</surname><given-names>Peter van</given-names></name>
      </person-group>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2005">2005</year>
      <volume>3709</volume>
      <uri>https://doi.org/10.1007/11564751\_71</uri>
      <pub-id pub-id-type="doi">10.1007/11564751\_71</pub-id>
      <fpage>817</fpage>
      <lpage>821</lpage>
    </element-citation>
  </ref>
  <ref id="ref-dooms_2005">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Dooms</surname><given-names>Gregoire</given-names></name>
        <name><surname>Deville</surname><given-names>Yves</given-names></name>
        <name><surname>Dupont</surname><given-names>Pierre</given-names></name>
      </person-group>
      <article-title>CP(Graph): Introducing a Graph Computation Domain in Constraint Programming</article-title>
      <source>Principles and Practice of Constraint Programming - CP 2005</source>
      <publisher-name>Springer, Berlin, Heidelberg</publisher-name>
      <year iso-8601-date="2005-10">2005</year><month>10</month>
      <isbn>978-3-540-32050-0</isbn>
      <pub-id pub-id-type="doi">10.1007/11564751_18</pub-id>
      <fpage>211</fpage>
      <lpage>225</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AconfU002FcpaiorU002FBeldiceanuFL05">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Beldiceanu</surname><given-names>Nicolas</given-names></name>
        <name><surname>Flener</surname><given-names>Pierre</given-names></name>
        <name><surname>Lorca</surname><given-names>Xavier</given-names></name>
      </person-group>
      <article-title>The tree constraint</article-title>
      <source>Integration of AI and OR techniques in constraint programming for combinatorial optimization problems, second international conference, CPAIOR 2005, prague, czech republic, may 30 - june 1, 2005, proceedings</source>
      <person-group person-group-type="editor">
        <name><surname>Barták</surname><given-names>Roman</given-names></name>
        <name><surname>Milano</surname><given-names>Michela</given-names></name>
      </person-group>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2005">2005</year>
      <volume>3524</volume>
      <uri>https://doi.org/10.1007/11493853\_7</uri>
      <pub-id pub-id-type="doi">10.1007/11493853\_7</pub-id>
      <fpage>64</fpage>
      <lpage>78</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AreferenceU002FfaiU002F2">
    <element-citation publication-type="book">
      <source>Handbook of constraint programming</source>
      <person-group person-group-type="editor">
        <name><surname>Rossi</surname><given-names>Francesca</given-names></name>
        <name><surname>Beek</surname><given-names>Peter van</given-names></name>
        <name><surname>Walsh</surname><given-names>Toby</given-names></name>
      </person-group>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2006">2006</year>
      <volume>2</volume>
      <isbn>978-0-444-52726-4</isbn>
      <uri>https://www.sciencedirect.com/science/bookseries/15746526/2</uri>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AjournalsU002FtoplasU002FSchulteS08">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Schulte</surname><given-names>Christian</given-names></name>
        <name><surname>Stuckey</surname><given-names>Peter J.</given-names></name>
      </person-group>
      <article-title>Efficient constraint propagation engines</article-title>
      <source>ACM Trans. Program. Lang. Syst.</source>
      <year iso-8601-date="2008">2008</year>
      <volume>31</volume>
      <issue>1</issue>
      <uri>https://doi.org/10.1145/1452044.1452046</uri>
      <pub-id pub-id-type="doi">10.1145/1452044.1452046</pub-id>
      <fpage>2:1</fpage>
      <lpage>2:43</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AconfU002FcpU002FReischukSST09">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Reischuk</surname><given-names>Raphael M.</given-names></name>
        <name><surname>Schulte</surname><given-names>Christian</given-names></name>
        <name><surname>Stuckey</surname><given-names>Peter J.</given-names></name>
        <name><surname>Tack</surname><given-names>Guido</given-names></name>
      </person-group>
      <article-title>Maintaining state in propagation solvers</article-title>
      <source>Principles and practice of constraint programming - CP 2009, 15th international conference, CP 2009, lisbon, portugal, september 20-24, 2009, proceedings</source>
      <person-group person-group-type="editor">
        <name><surname>Gent</surname><given-names>Ian P.</given-names></name>
      </person-group>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2009">2009</year>
      <volume>5732</volume>
      <uri>https://doi.org/10.1007/978-3-642-04244-7\_54</uri>
      <pub-id pub-id-type="doi">10.1007/978-3-642-04244-7\_54</pub-id>
      <fpage>692</fpage>
      <lpage>706</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AjournalsU002FconstraintsU002FPrudhommeLJ14">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Prud’homme</surname><given-names>Charles</given-names></name>
        <name><surname>Lorca</surname><given-names>Xavier</given-names></name>
        <name><surname>Jussien</surname><given-names>Narendra</given-names></name>
      </person-group>
      <article-title>Explanation-based large neighborhood search</article-title>
      <source>Constraints</source>
      <year iso-8601-date="2014">2014</year>
      <volume>19</volume>
      <issue>4</issue>
      <uri>http://dx.doi.org/10.1007/s10601-014-9166-6</uri>
      <pub-id pub-id-type="doi">10.1007/s10601-014-9166-6</pub-id>
      <fpage>339</fpage>
      <lpage>379</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AjournalsU002FconstraintsU002FPrudhommeLDJ14">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Prud’homme</surname><given-names>Charles</given-names></name>
        <name><surname>Lorca</surname><given-names>Xavier</given-names></name>
        <name><surname>Douence</surname><given-names>Rémi</given-names></name>
        <name><surname>Jussien</surname><given-names>Narendra</given-names></name>
      </person-group>
      <article-title>Propagation engine prototyping with a domain specific language</article-title>
      <source>Constraints An Int. J.</source>
      <year iso-8601-date="2014">2014</year>
      <volume>19</volume>
      <issue>1</issue>
      <uri>https://doi.org/10.1007/s10601-013-9151-5</uri>
      <pub-id pub-id-type="doi">10.1007/s10601-013-9151-5</pub-id>
      <fpage>57</fpage>
      <lpage>76</lpage>
    </element-citation>
  </ref>
  <ref id="ref-10.1007U002F978-3-642-29828-8_15">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Michel</surname><given-names>Laurent</given-names></name>
        <name><surname>Van Hentenryck</surname><given-names>Pascal</given-names></name>
      </person-group>
      <article-title>Activity-based search for black-box constraint programming solvers</article-title>
      <source>Integration of AI and OR techniques in contraint programming for combinatorial optimzation problems</source>
      <person-group person-group-type="editor">
        <name><surname>Beldiceanu</surname><given-names>Nicolas</given-names></name>
        <name><surname>Jussien</surname><given-names>Narendra</given-names></name>
        <name><surname>Pinson</surname><given-names>Éric</given-names></name>
      </person-group>
      <publisher-name>Springer Berlin Heidelberg</publisher-name>
      <publisher-loc>Berlin, Heidelberg</publisher-loc>
      <year iso-8601-date="2012">2012</year>
      <isbn>978-3-642-29828-8</isbn>
      <pub-id pub-id-type="doi">10.1007/978-3-642-29828-8_15</pub-id>
      <fpage>228</fpage>
      <lpage>243</lpage>
    </element-citation>
  </ref>
  <ref id="ref-5887401">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Smith</surname><given-names>Gillian</given-names></name>
        <name><surname>Whitehead</surname><given-names>Jim</given-names></name>
        <name><surname>Mateas</surname><given-names>Michael</given-names></name>
      </person-group>
      <article-title>Tanagra: Reactive planning and constraint solving for mixed-initiative level design</article-title>
      <source>IEEE Transactions on Computational Intelligence and AI in Games</source>
      <year iso-8601-date="2011">2011</year>
      <volume>3</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1109/TCIAIG.2011.2159716</pub-id>
      <fpage>201</fpage>
      <lpage>215</lpage>
    </element-citation>
  </ref>
  <ref id="ref-fagesU003Ahal-00904069">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Fages</surname><given-names>Jean-Guillaume</given-names></name>
        <name><surname>Chabert</surname><given-names>Gilles</given-names></name>
        <name><surname>Prud’Homme</surname><given-names>Charles</given-names></name>
      </person-group>
      <article-title>Combining finite and continuous solvers Towards a simpler solver maintenance</article-title>
      <source>The 19th International Conference on Principles and Practice of Constraint Programming</source>
      <publisher-loc>Uppsala, Sweden</publisher-loc>
      <year iso-8601-date="2013-09">2013</year><month>09</month>
      <uri>https://hal.archives-ouvertes.fr/hal-00904069</uri>
      <fpage>TRICS’13 Workshop: Techniques foR Implementing Constraint programming Systems</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-beldiceanuU003Ahal-01186680">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Beldiceanu</surname><given-names>Nicolas</given-names></name>
        <name><surname>Carlsson</surname><given-names>Mats</given-names></name>
        <name><surname>Flener</surname><given-names>Pierre</given-names></name>
        <name><surname>Lorca</surname><given-names>Xavier</given-names></name>
        <name><surname>Pearson</surname><given-names>Justin</given-names></name>
        <name><surname>Petit</surname><given-names>Thierry</given-names></name>
        <name><surname>Prud’Homme</surname><given-names>Charles</given-names></name>
      </person-group>
      <article-title>A Modelling Pearl with Sortedness Constraints</article-title>
      <source>Global conference on artificial intelligence</source>
      <publisher-loc>Tbilisi, Georgia</publisher-loc>
      <year iso-8601-date="2015-10">2015</year><month>10</month>
      <uri>https://hal.inria.fr/hal-01186680</uri>
      <pub-id pub-id-type="doi">10.29007/b4dz</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-fages_2015">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Fages</surname><given-names>Jean-Guillaume</given-names></name>
      </person-group>
      <article-title>On the use of graphs within constraint-programming</article-title>
      <source>Constraints</source>
      <year iso-8601-date="2015-10">2015</year><month>10</month>
      <volume>20</volume>
      <issue>4</issue>
      <issn>1383-7133</issn>
      <pub-id pub-id-type="doi">10.1007/s10601-015-9223-9</pub-id>
      <fpage>498</fpage>
      <lpage>499</lpage>
    </element-citation>
  </ref>
  <ref id="ref-alloucheU003Ahal-01198361">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Allouche</surname><given-names>David</given-names></name>
        <name><surname>De Givry</surname><given-names>Simon</given-names></name>
        <name><surname>Katsirelos</surname><given-names>Georgios</given-names></name>
        <name><surname>Schiex</surname><given-names>Thomas</given-names></name>
        <name><surname>Zytnicki</surname><given-names>Matthias</given-names></name>
      </person-group>
      <article-title>Anytime hybrid best-first search with tree decomposition for weighted CSP</article-title>
      <source>CP 2015 - 21st International Conference on Principles and Practice of Constraint Programming</source>
      <publisher-loc>Cork, Ireland</publisher-loc>
      <year iso-8601-date="2015-08">2015</year><month>08</month>
      <uri>https://hal.archives-ouvertes.fr/hal-01198361</uri>
      <pub-id pub-id-type="doi">10.1007/978-3-319-23219-5\_2</pub-id>
      <fpage>17 p.</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-fagesU003Ahal-01629182">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Fages</surname><given-names>Jean-Guillaume</given-names></name>
        <name><surname>Prud’Homme</surname><given-names>Charles</given-names></name>
      </person-group>
      <article-title>Making the first solution good!</article-title>
      <source>ICTAI 2017 29th IEEE International Conference on Tools with Artificial Intelligence</source>
      <publisher-loc>Boston, MA, United States</publisher-loc>
      <year iso-8601-date="2017-11">2017</year><month>11</month>
      <uri>https://hal.archives-ouvertes.fr/hal-01629182</uri>
      <pub-id pub-id-type="doi">10.1109/ictai.2017.00164</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AconfU002FictaiU002FWattezLPT19">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Wattez</surname><given-names>Hugues</given-names></name>
        <name><surname>Lecoutre</surname><given-names>Christophe</given-names></name>
        <name><surname>Paparrizou</surname><given-names>Anastasia</given-names></name>
        <name><surname>Tabary</surname><given-names>Sébastien</given-names></name>
      </person-group>
      <article-title>Refining constraint weighting</article-title>
      <source>31st IEEE international conference on tools with artificial intelligence, ICTAI 2019, portland, OR, USA, november 4-6, 2019</source>
      <publisher-name>IEEE</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <uri>https://doi.org/10.1109/ICTAI.2019.00019</uri>
      <pub-id pub-id-type="doi">10.1109/ICTAI.2019.00019</pub-id>
      <fpage>71</fpage>
      <lpage>77</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AconfU002FcpU002FLiYL21">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Li</surname><given-names>Hongbo</given-names></name>
        <name><surname>Yin</surname><given-names>Minghao</given-names></name>
        <name><surname>Li</surname><given-names>Zhanshan</given-names></name>
      </person-group>
      <article-title>Failure based variable ordering heuristics for solving CSPs (short paper)</article-title>
      <source>27th international conference on principles and practice of constraint programming, CP 2021, montpellier, france (virtual conference), october 25-29, 2021</source>
      <person-group person-group-type="editor">
        <name><surname>Michel</surname><given-names>Laurent D.</given-names></name>
      </person-group>
      <publisher-name>Schloss Dagstuhl - Leibniz-Zentrum für Informatik</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <volume>210</volume>
      <uri>https://doi.org/10.4230/LIPIcs.CP.2021.9</uri>
      <pub-id pub-id-type="doi">10.4230/LIPIcs.CP.2021.9</pub-id>
      <fpage>9:1</fpage>
      <lpage>9:10</lpage>
    </element-citation>
  </ref>
  <ref id="ref-LE2021100085">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Le</surname><given-names>Viet-Man</given-names></name>
        <name><surname>Felfernig</surname><given-names>Alexander</given-names></name>
        <name><surname>Tran</surname><given-names>Thi Ngoc Trang</given-names></name>
        <name><surname>Atas</surname><given-names>MÃŒslÃŒm</given-names></name>
        <name><surname>Uta</surname><given-names>Mathias</given-names></name>
        <name><surname>Benavides</surname><given-names>David</given-names></name>
        <name><surname>Galindo</surname><given-names>JosÃ©</given-names></name>
      </person-group>
      <article-title>DirectDebug: A software package for the automated testing and debugging of feature models</article-title>
      <source>Software Impacts</source>
      <year iso-8601-date="2021">2021</year>
      <volume>9</volume>
      <issn>2665-9638</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S2665963821000300</uri>
      <pub-id pub-id-type="doi">10.1016/j.simpa.2021.100085</pub-id>
      <fpage>100085</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-10.1007U002F978-3-030-78375-4_8">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Delaune</surname><given-names>Stéphanie</given-names></name>
        <name><surname>Derbez</surname><given-names>Patrick</given-names></name>
        <name><surname>Huynh</surname><given-names>Paul</given-names></name>
        <name><surname>Minier</surname><given-names>Marine</given-names></name>
        <name><surname>Mollimard</surname><given-names>Victor</given-names></name>
        <name><surname>Prud’homme</surname><given-names>Charles</given-names></name>
      </person-group>
      <article-title>Efficient methods to search for best differential characteristics on SKINNY</article-title>
      <source>Applied cryptography and network security</source>
      <person-group person-group-type="editor">
        <name><surname>Sako</surname><given-names>Kazue</given-names></name>
        <name><surname>Tippenhauer</surname><given-names>Nils Ole</given-names></name>
      </person-group>
      <publisher-name>Springer International Publishing</publisher-name>
      <publisher-loc>Cham</publisher-loc>
      <year iso-8601-date="2021">2021</year>
      <isbn>978-3-030-78375-4</isbn>
      <pub-id pub-id-type="doi">10.1007/978-3-030-78375-4_8</pub-id>
      <fpage>184</fpage>
      <lpage>207</lpage>
    </element-citation>
  </ref>
  <ref id="ref-10.1007U002F978-3-319-44953-1_40">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Lorca</surname><given-names>Xavier</given-names></name>
        <name><surname>Prud’homme</surname><given-names>Charles</given-names></name>
        <name><surname>Questel</surname><given-names>Aurélien</given-names></name>
        <name><surname>Rottembourg</surname><given-names>Benoît</given-names></name>
      </person-group>
      <article-title>Using constraint programming for the urban transit crew rescheduling problem</article-title>
      <source>Principles and practice of constraint programming</source>
      <person-group person-group-type="editor">
        <name><surname>Rueher</surname><given-names>Michel</given-names></name>
      </person-group>
      <publisher-name>Springer International Publishing</publisher-name>
      <publisher-loc>Cham</publisher-loc>
      <year iso-8601-date="2016">2016</year>
      <isbn>978-3-319-44953-1</isbn>
      <pub-id pub-id-type="doi">10.1007/978-3-319-44953-1_40</pub-id>
      <fpage>636</fpage>
      <lpage>649</lpage>
    </element-citation>
  </ref>
  <ref id="ref-8814186">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Ait Salaht</surname><given-names>Farah</given-names></name>
        <name><surname>Desprez</surname><given-names>Frédéric</given-names></name>
        <name><surname>Lebre</surname><given-names>Adrien</given-names></name>
        <name><surname>Prud’homme</surname><given-names>Charles</given-names></name>
        <name><surname>Abderrahim</surname><given-names>Mohamed</given-names></name>
      </person-group>
      <article-title>Service placement in fog computing using constraint programming</article-title>
      <source>2019 IEEE international conference on services computing (SCC)</source>
      <year iso-8601-date="2019">2019</year>
      <volume></volume>
      <pub-id pub-id-type="doi">10.1109/SCC.2019.00017</pub-id>
      <fpage>19</fpage>
      <lpage>27</lpage>
    </element-citation>
  </ref>
  <ref id="ref-CANIZARES2022116149">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Cañizares</surname><given-names>Pablo C.</given-names></name>
        <name><surname>Estévez-Martín</surname><given-names>Sonia</given-names></name>
        <name><surname>Núñez</surname><given-names>Manuel</given-names></name>
      </person-group>
      <article-title>SINPA: SupportINg the automation of construction PlAnning</article-title>
      <source>Expert Systems with Applications</source>
      <year iso-8601-date="2022">2022</year>
      <volume>190</volume>
      <issn>0957-4174</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S0957417421014755</uri>
      <pub-id pub-id-type="doi">10.1016/j.eswa.2021.116149</pub-id>
      <fpage>116149</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AjournalsU002FconstraintsU002FJusteau-Allaire22">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Justeau-Allaire</surname><given-names>Dimitri</given-names></name>
        <name><surname>Prud’homme</surname><given-names>Charles</given-names></name>
      </person-group>
      <article-title>Global domain views for expressive and cross-domain constraint programming</article-title>
      <source>Constraints An Int. J.</source>
      <year iso-8601-date="2022">2022</year>
      <volume>27</volume>
      <issue>1</issue>
      <uri>https://doi.org/10.1007/s10601-021-09324-7</uri>
      <pub-id pub-id-type="doi">10.1007/s10601-021-09324-7</pub-id>
      <fpage>1</fpage>
      <lpage>7</lpage>
    </element-citation>
  </ref>
  <ref id="ref-10.1007U002F978-3-031-08011-1_21">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Ouellet</surname><given-names>Yanick</given-names></name>
        <name><surname>Quimper</surname><given-names>Claude-Guy</given-names></name>
      </person-group>
      <article-title>A MinCumulative resource constraint</article-title>
      <source>Integration of constraint programming, artificial intelligence, and operations research</source>
      <person-group person-group-type="editor">
        <name><surname>Schaus</surname><given-names>Pierre</given-names></name>
      </person-group>
      <publisher-name>Springer International Publishing</publisher-name>
      <publisher-loc>Cham</publisher-loc>
      <year iso-8601-date="2022">2022</year>
      <isbn>978-3-031-08011-1</isbn>
      <pub-id pub-id-type="doi">10.1007/978-3-031-08011-1_21</pub-id>
      <fpage>318</fpage>
      <lpage>334</lpage>
    </element-citation>
  </ref>
  <ref id="ref-OptaForce">
    <element-citation publication-type="webpage">
      <person-group person-group-type="author">
        <name><surname>Grazzini</surname><given-names>Fabienne</given-names></name>
      </person-group>
      <article-title>Airbus and COSLING provide software solution optaforce for mirage 2000 maintenance</article-title>
      <year iso-8601-date="2019">2019</year>
      <uri>https://www.airbus.com/en/newsroom/press-releases/2019-06-airbus-and-cosling-provide-software-solution-optaforce-for-mirage</uri>
    </element-citation>
  </ref>
  <ref id="ref-Charpentier2021COSLINGC">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Charpentier</surname><given-names>Antoine</given-names></name>
        <name><surname>Fages</surname><given-names>Jean-Guillaume</given-names></name>
        <name><surname>Lapègue</surname><given-names>Tanguy</given-names></name>
      </person-group>
      <article-title>COSLING configurator</article-title>
      <source>ConfWS</source>
      <year iso-8601-date="2021">2021</year>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
