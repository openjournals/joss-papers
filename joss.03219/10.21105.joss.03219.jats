<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">3219</article-id>
<article-id pub-id-type="doi">10.21105/joss.03219</article-id>
<title-group>
<article-title>PySDM v1: particle-based cloud modeling package for
warm-rain microphysics and aqueous chemistry</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-0265-6428</contrib-id>
<name>
<surname>Bartman</surname>
<given-names>Piotr</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-2272-8548</contrib-id>
<name>
<surname>Bulenok</surname>
<given-names>Oleksii</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Górski</surname>
<given-names>Kamil</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-3194-6440</contrib-id>
<name>
<surname>Jaruga</surname>
<given-names>Anna</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-5595-371X</contrib-id>
<name>
<surname>Łazarski</surname>
<given-names>Grzegorz</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-6319-9358</contrib-id>
<name>
<surname>Olesik</surname>
<given-names>Michael A.</given-names>
</name>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Piasecki</surname>
<given-names>Bartosz</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-1708-0997</contrib-id>
<name>
<surname>Singer</surname>
<given-names>Clare E.</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Talar</surname>
<given-names>Aleksandra</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-2361-0082</contrib-id>
<name>
<surname>Arabas</surname>
<given-names>Sylwester</given-names>
</name>
<xref ref-type="aff" rid="aff-5"/>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Faculty of Mathematics and Computer Science, Jagiellonian
University, Kraków, Poland</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Department of Environmental Science and Engineering,
California Institute of Technology, Pasadena, CA, USA</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Faculty of Chemistry, Jagiellonian University, Kraków,
Poland</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>Faculty of Physics, Astronomy and Applied Computer Science,
Jagiellonian University, Kraków, Poland</institution>
</institution-wrap>
</aff>
<aff id="aff-5">
<institution-wrap>
<institution>University of Illinois at Urbana-Champaign, Urbana, IL,
USA</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2021-03-31">
<day>31</day>
<month>3</month>
<year>2021</year>
</pub-date>
<volume>7</volume>
<issue>72</issue>
<fpage>3219</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>physics-simulation</kwd>
<kwd>monte-carlo-simulation</kwd>
<kwd>gpu-computing</kwd>
<kwd>atmospheric-modeling</kwd>
<kwd>particle-system</kwd>
<kwd>numba</kwd>
<kwd>thrust</kwd>
<kwd>nvrtc</kwd>
<kwd>pint</kwd>
<kwd>atmospheric-physics</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="introduction">
  <title>Introduction</title>
  <p><monospace>PySDM</monospace> is an open-source Python package for
  simulating the dynamics of particles undergoing condensational and
  collisional growth, interacting with a fluid flow and subject to
  chemical composition changes. It is intended to serve as a building
  block for process-level as well as computational-fluid dynamics
  simulation systems involving representation of a continuous phase
  (air) and a dispersed phase (aerosol), with
  <monospace>PySDM</monospace> being responsible for representation of
  the dispersed phase. For major version 1 (v1), the development has
  been focused on atmospheric cloud physics applications, in particular
  on modeling the dynamics of particles immersed in moist air using the
  particle-based approach to represent the evolution of the size
  spectrum of aerosol/cloud/rain particles. The particle-based approach
  contrasts the more commonly used bulk and bin methods in which
  atmospheric particles are segregated into multiple categories
  (aerosol, cloud and rain) and their evolution is governed by
  deterministic dynamics solved on the same Eulerian grid as the
  dynamics of the continuous phase. Particle-based methods employ
  discrete computational (super) particles for modeling the dispersed
  phase. Each super particle is associated with a set of
  continuously-valued attributes evolving in Lagrangian manner. Such
  approach is particularly well suited for using probabilistic
  representation of particle collisional growth (coagulation) and for
  representing processes dependent on numerous particle attributes which
  helps to overcome the limitations of bulk and bin methods
  (<xref alt="Morrison et al., 2020" rid="ref-Morrison_et_al_2020" ref-type="bibr">Morrison
  et al., 2020</xref>).</p>
  <p>The <monospace>PySDM</monospace> package core is a Pythonic
  high-performance implementation of the Super-Droplet Method (SDM)
  Monte-Carlo algorithm for representing collisional growth
  (<xref alt="Shima et al., 2009" rid="ref-Shima_et_al_2009" ref-type="bibr">Shima
  et al., 2009</xref>), hence the name. The SDM is a probabilistic
  alternative to the mean-field approach embodied by the Smoluchowski
  equation, for a comparative outline of both approaches see Bartman
  &amp; Arabas
  (<xref alt="2021" rid="ref-Bartman_and_Arabas_2021" ref-type="bibr">2021</xref>).
  In atmospheric aerosol-cloud interactions, particle collisional growth
  is responsible for the formation of rain drops through collisions of
  smaller cloud droplets (warm-rain process) as well as for aerosol
  washout.</p>
  <p>Besides collisional growth, <monospace>PySDM</monospace> includes
  representation of condensation/evaporation of water vapour to/from the
  particles. Furthermore, representation of dissolution and, if
  applicable, dissociation of trace gases (sulfur dioxide, ozone,
  hydrogen peroxide, carbon dioxide, nitric acid, and ammonia) is
  included to model the subsequent aqueous-phase oxidation of the
  dissolved sulfur dioxide. Representation of the chemical processes
  follows the particle-based formulation of Jaruga &amp; Pawlowska
  (<xref alt="2018" rid="ref-Jaruga_and_Pawlowska_2018" ref-type="bibr">2018</xref>).</p>
  <p>The usage examples are built on top of four different
  <monospace>environment</monospace> classes included in
  <monospace>PySDM</monospace> v1 which implement common simple
  atmospheric cloud modeling frameworks: box, adiabatic parcel,
  single-column, and 2D prescribed flow kinematic models.</p>
  <p>In addition, the package ships with tutorial code depicting how
  <monospace>PySDM</monospace> can be used from
  <monospace>Julia</monospace> and <monospace>Matlab</monospace> using
  the <monospace>PyCall.jl</monospace> and the Matlab-bundled Python
  interface, respectively. Two exporter classes are available as of time
  of writing enabling storage of particle attributes and gridded
  products in the VTK format and storage of gridded products in netCDF
  format.</p>
</sec>
<sec id="dependencies-and-supported-platforms">
  <title>Dependencies and supported platforms</title>
  <p>PySDM essential dependencies are: <monospace>NumPy</monospace>,
  <monospace>SciPy</monospace>, <monospace>Numba</monospace>,
  <monospace>Pint</monospace>, and <monospace>ChemPy</monospace> which
  are all free and open-source software available via the PyPI platform.
  <monospace>PySDM</monospace> releases are published at the PyPI Python
  package index allowing installation using the
  <monospace>pip</monospace> package manager (i.e.,
  <monospace>pip install PySDM</monospace>).</p>
  <p><monospace>PySDM</monospace> has two alternative parallel
  number-crunching backends available: multi-threaded CPU backend based
  on <monospace>Numba</monospace>
  (<xref alt="Lam et al., 2015" rid="ref-Numba" ref-type="bibr">Lam et
  al., 2015</xref>) and GPU-resident backend built on top of
  <monospace>ThrustRTC</monospace>
  (<xref alt="Yang, 2020" rid="ref-ThrustRTC" ref-type="bibr">Yang,
  2020</xref>). The optional GPU backend relies on proprietary
  vendor-specific CUDA technology, the accompanying non-free software
  and drivers; <monospace>ThrustRTC</monospace> and
  <monospace>CURandRTC</monospace> packages are released under the
  Anti-996 license.</p>
  <p>The usage examples for <monospace>Python</monospace> were developed
  embracing the <monospace>Jupyter</monospace> interactive platform
  allowing control of the simulations via web browser. All Python
  examples are ready for use with the
  <monospace>mybinder.org</monospace> and the
  <monospace>Google Colab</monospace> platforms.</p>
  <p>Continuous integration infrastructure used in the development of
  PySDM assures the targeted full usability on Linux, macOS, and Windows
  environments. Compatibility with Python versions 3.7 through 3.9 is
  maintained as of the time of writing. Test coverage for PySDM is
  reported using the <monospace>codecov.io</monospace> platform.
  Coverage analysis of the backend code requires execution with
  JIT-compilation disabled for the CPU backend (e.g., using the
  <monospace>NUMBA_DISABLE_JIT=1</monospace> environment variable
  setting). For the GPU backend, a purpose-built
  <monospace>FakeThrust</monospace> class is shipped with
  <monospace>PySDM</monospace> which implements a subset of the
  <monospace>ThrustRTC</monospace> API and translates C++ kernels into
  equivalent <monospace>Numba</monospace> parallel Python code for
  debugging and coverage analysis.</p>
  <p>The <monospace>Pint</monospace> dimensional analysis package is
  used for unit testing. It allows asserting on the dimensionality of
  arithmetic expressions representing physical formulae. In order to
  enable JIT compilation of the formulae for simulation runs, a
  purpose-built <monospace>FakeUnitRegistry</monospace> class that mocks
  the <monospace>Pint</monospace> API reducing its functionality to SI
  prefix handling is used by default outside of tests.</p>
</sec>
<sec id="api-in-brief">
  <title>API in brief</title>
  <p>In order to depict PySDM API with a practical example, the
  following listings provide sample code roughly reproducing the Figure
  2 from the Shima et al.
  (<xref alt="2009" rid="ref-Shima_et_al_2009" ref-type="bibr">2009</xref>)
  paper in which the SDM algorithm was introduced.</p>
  <p>It is a coalescence-only set-up in which the initial particle size
  spectrum is exponential and is deterministically sampled to match the
  condition of each super particle having equal initial multiplicity,
  with the multiplicity denoting the number of real particles
  represented by a single computational particle:</p>
  <code language="python">from PySDM.physics import si
from PySDM.initialisation.sampling import spectral_sampling
from PySDM.initialisation.spectra import Exponential

N_SD = 2 ** 17
initial_spectrum = Exponential(
    norm_factor=8.39e12, scale=1.19e5 * si.um ** 3)
attributes = {}
sampling = spectral_sampling.ConstantMultiplicity(initial_spectrum)
attributes['volume'], attributes['n'] = sampling.sample(N_SD)</code>
  <p>In the above snippet, the <monospace>si</monospace> is an instance
  of the <monospace>FakeUnitRegistry</monospace> class. The exponential
  distribution of particle volumes is sampled at
  <inline-formula><alternatives>
  <tex-math><![CDATA[2^{17}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msup><mml:mn>2</mml:mn><mml:mn>17</mml:mn></mml:msup></mml:math></alternatives></inline-formula>
  points in order to initialize two key attributes of the
  super-droplets, namely their volume and multiplicity. Subsequently, a
  <monospace>Builder</monospace> object is created to orchestrate
  dependency injection while instantiating the
  <monospace>Particulator</monospace> class of
  <monospace>PySDM</monospace>:</p>
  <code language="python">import numpy as np
from PySDM.builder import Builder
from PySDM.environments import Box
from PySDM.dynamics import Coalescence
from PySDM.dynamics.collisions.collision_kernels import Golovin
from PySDM.backends import CPU
from PySDM.products import ParticleVolumeVersusRadiusLogarithmSpectrum

builder = Builder(n_sd=N_SD, backend=CPU())
builder.set_environment(Box(dt=1 * si.s, dv=1e6 * si.m ** 3))
builder.add_dynamic(Coalescence(collision_kernel=Golovin(b=1.5e3 / si.s)))

radius_bins_edges = np.logspace(
    start=np.log10(10 * si.um),
    stop=np.log10(5e3 * si.um),
    num=32
)
products = (ParticleVolumeVersusRadiusLogarithmSpectrum(
    radius_bins_edges=radius_bins_edges,
    name='dv/dlnr'
),)
particulator = builder.build(attributes, products)</code>
  <p>The <monospace>backend</monospace> argument may be set to an
  instance of either <monospace>CPU</monospace> or
  <monospace>GPU</monospace> what translates to choosing the
  multi-threaded <monospace>Numba</monospace>-based backend or the
  <monospace>ThrustRTC-based</monospace> GPU-resident computation mode,
  respectively. The employed <monospace>Box</monospace> environment
  corresponds to a zero-dimensional framework (particle positions are
  neglected). The SDM Monte-Carlo coalescence algorithm is added as the
  only dynamic in the system (other dynamics available as of time of
  writing represent condensational growth, particle displacement,
  aqueous chemistry, ambient thermodynamics, and Eulerian advection).
  Finally, the <monospace>build()</monospace> method is used to obtain
  an instance of the <monospace>Particulator</monospace> class which can
  then be used to control time-stepping and access simulation state
  through the products registered with the builder. A minimal simulation
  example is depicted below with a code snippet and a resultant plot
  (<xref alt="[fig:readme_fig_1]" rid="figU003Areadme_fig_1">[fig:readme_fig_1]</xref>):</p>
  <code language="python">from PySDM.physics.constants_defaults import rho_w
from matplotlib import pyplot

for step in [0, 1200, 2400, 3600]:
    particulator.run(step - particulator.n_steps)
    pyplot.step(
        x=radius_bins_edges[:-1] / si.um,
        y=particulator.products['dv/dlnr'].get().squeeze() * rho_w/si.g,
        where='post', label=f&quot;t = {step}s&quot;)

pyplot.xscale('log')
pyplot.xlabel(r'particle radius [$\mu$ m]')
pyplot.ylabel(&quot;dm/dlnr [g/m$^3$/(unit dr/r)]&quot;)
pyplot.legend()
pyplot.show()</code>
  <fig id="figU003Areadme_fig_1">
    <caption><p>Sample plot generated with the code snippets included in
    the paper.</p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/readme.pdf" xlink:title="" />
  </fig>
</sec>
<sec id="usage-examples">
  <title>Usage examples</title>
  <p>The PySDM examples are shipped in a separate package that can also
  be installed with <monospace>pip</monospace>
  (<monospace>pip install PySDM-examples</monospace>) or conveniently
  experimented with using Colab or mybinder.org platforms (single-click
  launching badges included in the <monospace>PySDM</monospace> README
  file). The examples are based on setups from literature, and the
  package is structured using bibliographic labels (e.g.,
  <monospace>PySDM_examples.Shima_et_al_2009</monospace>).</p>
  <p>All examples feature a <monospace>settings.py</monospace> file with
  simulation parameters, a <monospace>simulation.py</monospace> file
  including logic analogous to the one presented in the code snippets
  above for handling composition of <monospace>PySDM</monospace>
  components using the <monospace>Builder</monospace> class, and a
  Jupyter notebook file with simulation launching code and basic result
  visualisation.</p>
  <sec id="box-environment-examples">
    <title>Box environment examples</title>
    <p>The <monospace>Box</monospace> environment is the simplest one
    available in <monospace>PySDM</monospace>, and the
    <monospace>PySDM-examples</monospace> package ships with two
    examples based on it. The first is an extension of the code
    presented in the snippets in the preceding section and reproduces
    Fig. 2 from the seminal paper of Shima et al.
    (<xref alt="2009" rid="ref-Shima_et_al_2009" ref-type="bibr">2009</xref>).
    Coalescence is the only process considered, and the probabilities of
    collisions of particles are evaluated using the Golovin additive
    kernel, which allows to compare the results with analytical solution
    of the Smoluchowski equation (included in the resultant plots).</p>
    <p>The second example based on the <monospace>Box</monospace>
    environment, also featuring collision-only setup, reproduces several
    figures from the work of Berry
    (<xref alt="1966" rid="ref-Berry_1966" ref-type="bibr">1966</xref>)
    involving more sophisticated collision kernels representing such
    phenomena as the geometric sweep-out and the influence of electric
    field on the probability of collisions.</p>
  </sec>
  <sec id="adiabatic-parcel-examples">
    <title>Adiabatic parcel examples</title>
    <p>The <monospace>Parcel</monospace> environment shares the
    zero-dimensionality of <monospace>Box</monospace> (i.e., no particle
    physical coordinates considered), yet provides a thermodynamic
    evolution of the ambient air mimicking adiabatic displacement of an
    air parcel in hydrostatically stratified atmosphere. Adiabatic
    cooling during the ascent results in supersaturation which triggers
    activation of aerosol particles (condensation nuclei) into cloud
    droplets through condensation. All examples based on the
    <monospace>Parcel</monospace> environment utilize the
    <monospace>Condensation</monospace> and
    <monospace>AmbientThermodynamics</monospace> dynamics.</p>
    <p>The simplest example uses a monodisperse particle spectrum
    represented with a single super-droplet and reproduces simulations
    described in Arabas &amp; Shima
    (<xref alt="2017" rid="ref-Arabas_and_Shima_2017" ref-type="bibr">2017</xref>)
    where an ascent-descent scenario is employed to depict hysteresis
    behaviour of the activation/deactivation phenomena.</p>
    <p>A polydisperse lognormal spectrum represented with multiple
    super-droplets is used in the example based on the work of Yang et
    al.
    (<xref alt="2018" rid="ref-Yang_et_al_2018" ref-type="bibr">2018</xref>).
    Simulations presented involve repeated ascent-descent cycles and
    depict the evolution of partitioning between activated and
    unactivated particles. Similarly, polydisperse lognormal spectra are
    used in the example based on Lowe et al.
    (<xref alt="2019" rid="ref-Lowe_et_al_2019" ref-type="bibr">2019</xref>),
    where additionally each lognormal mode has a different
    hygroscopicity. The Lowe et al.
    (<xref alt="2019" rid="ref-Lowe_et_al_2019" ref-type="bibr">2019</xref>)
    example features representation of droplet surface tension reduction
    by organics.</p>
    <p>Finally, there are two examples featuring adiabatic parcel
    simulations involving representation of the dynamics of chemical
    composition of both ambient air and the droplet-dissolved
    substances, in particular focusing on the oxidation of aqueous-phase
    sulfur. The examples reproduce the simulations discussed in
    Kreidenweis et al.
    (<xref alt="2003" rid="ref-Kreidenweis_et_al_2003" ref-type="bibr">2003</xref>)
    and in Jaruga &amp; Pawlowska
    (<xref alt="2018" rid="ref-Jaruga_and_Pawlowska_2018" ref-type="bibr">2018</xref>).</p>
  </sec>
  <sec id="kinematic-prescribed-flow-examples">
    <title>Kinematic (prescribed-flow) examples</title>
    <p>Coupling of <monospace>PySDM</monospace> with fluid-flow
    simulation is depicted with both 1D and 2D prescribed-flow
    simulations, both dependent on the <monospace>PyMPDATA</monospace>
    package
    (<xref alt="Bartman et al., 2021" rid="ref-Bartman_et_al_2021" ref-type="bibr">Bartman
    et al., 2021</xref>) implementing the MPDATA advection algorithm.
    For a review on MPDATA, see e.g., Smolarkiewicz
    (<xref alt="2006" rid="ref-Smolarkiewicz_2006" ref-type="bibr">2006</xref>).</p>
    <p>Usage of the <monospace>kinematic_1d</monospace> environment is
    depicted in an example based on the work of Shipway &amp; Hill
    (<xref alt="2012" rid="ref-Shipway_and_Hill_2012" ref-type="bibr">2012</xref>).
    The <monospace>kinematic_2d</monospace> environment is showcased
    with an interactive user interface which allows study of
    aerosol-cloud interactions in a drizzling stratocumulus setup based
    on the works of Morrison &amp; Grabowski
    (<xref alt="2007" rid="ref-Morrison_and_Grabowski_2007" ref-type="bibr">2007</xref>)
    and Arabas et al.
    (<xref alt="2015" rid="ref-Arabas_et_al_2015" ref-type="bibr">2015</xref>).</p>
    <p><xref alt="Figure 2" rid="figU003Avirga">Figure 2</xref> presents
    a snapshot from the 2D simulation performed with a setup described
    in detail in Arabas et al.
    (<xref alt="2015" rid="ref-Arabas_et_al_2015" ref-type="bibr">2015</xref>).
    Each plot depicts a 1.5 km by 1.5 km vertical slab of an idealized
    atmosphere in which a prescribed single-eddy non-divergent flow is
    forced (updraft in the left-hand part of the domain, downdraft in
    the right-hand part). The left-hand plot shows the distribution of
    aerosol particles in the air. The upper part of the domain is
    covered with a stratocumulus-like cloud formed on aerosol particles
    above the flat cloud base at the level where relative humidity goes
    above 100%. Within the cloud, the aerosol concentration is thus
    reduced. The middle plot depicts the wet radius of particles.
    Particles larger than 1 micrometre in diameter are considered as
    cloud droplets, particles larger than 50 micrometres in diameter are
    considered as drizzle (unlike in bin or bulk models, such
    categorisation is employed for analysis only and not within the
    particle-based model formulation). Concentration of drizzle
    particles forming through collisions is depicted in the right-hand
    panel. A rain shaft forms in the right part of the domain where the
    downward flow direction amplifies particle sedimentation.
    Precipitating drizzle drops collide with aerosol particles washing
    out the sub-cloud aerosol. Most of the drizzle drops evaporate
    before reaching the bottom of the domain depicting the virga
    phenomenon and the resultant aerosol resuspension.</p>
    <fig>
      <caption><p>Results from a 2D prescribed-flow simulation using the
      Arabas et al.
      (<xref alt="2015" rid="ref-Arabas_et_al_2015" ref-type="bibr">2015</xref>)
      example.<styled-content id="figU003Avirga"></styled-content></p></caption>
      <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/test.pdf" xlink:title="" />
    </fig>
  </sec>
</sec>
<sec id="selected-relevant-recent-open-source-developments">
  <title>Selected relevant recent open-source developments</title>
  <p>The SDM algorithm implementations are part of the following
  open-source packages (of otherwise largely differing
  functionality):</p>
  <list list-type="bullet">
    <list-item>
      <p><monospace>libcloudph++</monospace> in C++
      (<xref alt="Arabas et al., 2015" rid="ref-Arabas_et_al_2015" ref-type="bibr">Arabas
      et al., 2015</xref>;
      <xref alt="Jaruga &amp; Pawlowska, 2018" rid="ref-Jaruga_and_Pawlowska_2018" ref-type="bibr">Jaruga
      &amp; Pawlowska, 2018</xref>) with Python bindings
      (<xref alt="Jarecka et al., 2015" rid="ref-Jarecka_et_al_2015" ref-type="bibr">Jarecka
      et al., 2015</xref>);</p>
    </list-item>
    <list-item>
      <p><monospace>SCALE-SDM</monospace> in Fortran,
      (<xref alt="Sato et al., 2018" rid="ref-Sato_et_al_2018" ref-type="bibr">Sato
      et al., 2018</xref>);</p>
    </list-item>
    <list-item>
      <p><monospace>PALM LES</monospace> in Fortran,
      (<xref alt="Maronga et al., 2020" rid="ref-Maronga_et_al_2020" ref-type="bibr">Maronga
      et al., 2020</xref>);</p>
    </list-item>
    <list-item>
      <p><monospace>LCM1D</monospace> in Python/C,
      (<xref alt="Unterstrasser et al., 2020" rid="ref-Unterstrasser_et_al_2020" ref-type="bibr">Unterstrasser
      et al., 2020</xref>);</p>
    </list-item>
    <list-item>
      <p><monospace>Pencil Code</monospace> in Fortran,
      (<xref alt="Brandenburg et al., 2021" rid="ref-Pencil_2021" ref-type="bibr">Brandenburg
      et al., 2021</xref>);</p>
    </list-item>
    <list-item>
      <p><monospace>NTLP</monospace> in Fortran,
      (<xref alt="Richter et al., 2021" rid="ref-Richter_et_al_2021" ref-type="bibr">Richter
      et al., 2021</xref>).</p>
    </list-item>
    <list-item>
      <p><monospace>superdroplet</monospace> in Python
      (<monospace>Cython</monospace> and <monospace>Numba</monospace>),
      C++, Fortran and Julia
      (<ext-link ext-link-type="uri" xlink:href="https://github.com/darothen/superdroplet">https://github.com/darothen/superdroplet</ext-link>);</p>
    </list-item>
  </list>
  <p>A list of links directing to SDM-related files within the above
  projects’ repositories is included in the <monospace>PySDM</monospace>
  README file.</p>
  <p>Python packages for solving the dynamics of aerosol particles with
  discrete-particle (moving-sectional) representation of the size
  spectrum include (both depend on the <monospace>Assimulo</monospace>
  package for solving ODEs):</p>
  <list list-type="bullet">
    <list-item>
      <p><monospace>pyrcel</monospace>,
      (<xref alt="Rothenberg &amp; Wang, 2017" rid="ref-Rothenberg_and_Wang_2017" ref-type="bibr">Rothenberg
      &amp; Wang, 2017</xref>);</p>
    </list-item>
    <list-item>
      <p><monospace>PyBox</monospace>,
      (<xref alt="Topping et al., 2018" rid="ref-Topping_et_al_2018" ref-type="bibr">Topping
      et al., 2018</xref>).</p>
    </list-item>
  </list>
</sec>
<sec id="summary">
  <title>Summary</title>
  <p>The key goal of the reported endeavour was to equip the cloud
  modeling community with a solution enabling rapid development and
  independent reproducibility of simulations while being free from the
  two-language barrier commonly separating prototype and
  high-performance research code. The key advantages of PySDM stem from
  the characteristics of the employed Python language which enables high
  performance computational modeling without trading off such features
  as:</p>
  <def-list>
    <def-item>
      <term>succinct syntax</term>
      <def>
        <p> – the snippets presented in the paper are arguably close to
        pseudo-code;</p>
      </def>
    </def-item>
    <def-item>
      <term>portability</term>
      <def>
        <p>depicted in PySDM with continuous integration Linux, macOS
        and Windows;</p>
      </def>
    </def-item>
    <def-item>
      <term>interoperability</term>
      <def>
        <p>depicted in PySDM with Matlab and Julia usage examples
        requireing minimal amount of biding-specific code;</p>
      </def>
    </def-item>
    <def-item>
      <term>multifaceted ecosystem</term>
      <def>
        <p>depicted in PySDM with one-click execution of Jupyter
        notebooks on mybinder.org and colab.research.google.com
        platforms;</p>
      </def>
    </def-item>
    <def-item>
      <term>availability of tools for modern hardware</term>
      <def>
        <p>depicted in PySDM with the GPU backend.</p>
      </def>
    </def-item>
  </def-list>
  <p>PySDM together with a set of developed usage examples constitutes a
  tool for research on cloud microphysical processes, and for testing
  and development of novel modeling methods. PySDM is released under the
  GNU GPL v3 license.</p>
</sec>
<sec id="author-contributions">
  <title>Author contributions</title>
  <p>PB had been the architect and lead developer of PySDM v1 with SA
  taking the role of main developer and maintainer over the time. PySDM
  1.0 release accompanied PB’s MSc thesis prepared under the mentorship
  of SA. MO contributed to the development of the condensation solver
  and led the development of relevant examples. GŁ contributed the
  initial draft of the aqueous-chemistry extension which was refactored
  and incorporated into PySDM under guidance from AJ. KG and BP
  contributed to the GPU backend. CS and AT contributed to the examples.
  OB contributed the VTK exporter. The paper was composed by SA and PB
  and is partially based on the content of the PySDM README file and
  PB’s MSc thesis.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We thank Shin-ichiro Shima (University of Hyogo, Japan) for his
  continuous help and support in implementing SDM. We thank Fei Yang
  (https://github.com/fynv/) for creating and supporting ThrustRTC.
  Development of PySDM has been initiated with support from the
  POWROTY/REINTEGRATION programme of the Foundation for Polish Science
  co-financed by the European Union under the European Regional
  Development Fund (POIR.04.04.00-00-5E1C/18). We gratefully acknowledge
  the generous support of Eric and Wendy Schmidt (by recommendation of
  Schmidt Futures), the Heising-Simons Foundation, and the National
  Science Foundation (grant AGS-1835860).</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-Shima_et_al_2009">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Shima</surname><given-names>S.</given-names></name>
        <name><surname>Kusano</surname><given-names>K.</given-names></name>
        <name><surname>Kawano</surname><given-names>A.</given-names></name>
        <name><surname>Sugiyama</surname><given-names>T.</given-names></name>
        <name><surname>Kawahara</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>The super‐droplet method for the numerical simulation of clouds and precipitation: A particle‐based and probabilistic microphysics model coupled with a non‐hydrostatic model</article-title>
      <source>Q. J. Royal Meteorol. Soc.</source>
      <year iso-8601-date="2009">2009</year>
      <pub-id pub-id-type="doi">10.1002/qj.441</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-ThrustRTC">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Yang</surname><given-names>F.</given-names></name>
      </person-group>
      <article-title>ThrustRTC: CUDA tool set for non-C++ languages that provides similar functionality like Thrust, with NVRTC at its core</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <uri>https://github.com/fynv/thrustrtc</uri>
    </element-citation>
  </ref>
  <ref id="ref-Numba">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Lam</surname><given-names>S. K.</given-names></name>
        <name><surname>Pitrou</surname><given-names>A.</given-names></name>
        <name><surname>Seibert</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>Numba: A LLVM-based python JIT compiler</article-title>
      <source>Proceedings of the second workshop on the LLVM compiler infrastructure in HPC</source>
      <publisher-loc>Austin, Texas</publisher-loc>
      <year iso-8601-date="2015">2015</year>
      <pub-id pub-id-type="doi">10.1145/2833157.2833162</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Arabas_and_Shima_2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Arabas</surname><given-names>S.</given-names></name>
        <name><surname>Shima</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>On the CCN (de)activation nonlinearities</article-title>
      <source>Nonlin. Process. Geophys.</source>
      <year iso-8601-date="2017">2017</year>
      <pub-id pub-id-type="doi">10.5194/npg-24-535-2017</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Arabas_et_al_2015">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Arabas</surname><given-names>S.</given-names></name>
        <name><surname>Jaruga</surname><given-names>A.</given-names></name>
        <name><surname>Pawlowska</surname><given-names>H.</given-names></name>
        <name><surname>Grabowski</surname><given-names>W. W.</given-names></name>
      </person-group>
      <article-title>libcloudph++ 1.0: A single-moment bulk, double-moment bulk, and particle-based warm-rain microphysics library in C++</article-title>
      <source>Geosci. Model Dev.</source>
      <year iso-8601-date="2015">2015</year>
      <pub-id pub-id-type="doi">10.5194/gmd-8-1677-2015</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Berry_1966">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Berry</surname><given-names>E. X.</given-names></name>
      </person-group>
      <article-title>Cloud droplet growth by collection</article-title>
      <source>J. Atmos. Sci.</source>
      <year iso-8601-date="1966">1966</year>
      <pub-id pub-id-type="doi">10.1175/1520-0469(1967)024&lt;0688:CDGBC&gt;2.0.CO;2</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Yang_et_al_2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Yang</surname><given-names>F.</given-names></name>
        <name><surname>Kollias</surname><given-names>P.</given-names></name>
        <name><surname>Shaw</surname><given-names>R. A.</given-names></name>
        <name><surname>Vogelmann</surname><given-names>A. M.</given-names></name>
      </person-group>
      <article-title>Cloud droplet size distribution broadening during diffusional growth: Ripening amplified by deactivation and reactivation</article-title>
      <source>Atmos. Chem. Phys.</source>
      <year iso-8601-date="2018">2018</year>
      <pub-id pub-id-type="doi">10.5194/acp-18-7313-2018</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Rothenberg_and_Wang_2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Rothenberg</surname><given-names>D.</given-names></name>
        <name><surname>Wang</surname><given-names>C.</given-names></name>
      </person-group>
      <article-title>An aerosol activation metamodel of v1.2.0 of the pyrcel cloud parcel model: Development and offline assessment for use in an aerosol–climate model</article-title>
      <source>Geosci. Model. Dev.</source>
      <year iso-8601-date="2017">2017</year>
      <pub-id pub-id-type="doi">10.5194/gmd-10-1817-2017</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Topping_et_al_2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Topping</surname><given-names>D.</given-names></name>
        <name><surname>Connolly</surname><given-names>P.</given-names></name>
        <name><surname>Reid</surname><given-names>J.</given-names></name>
      </person-group>
      <article-title>PyBox: An automated box-model generator for atmospheric chemistry and aerosol simulations</article-title>
      <source>J. Open Source Soft.</source>
      <year iso-8601-date="2018">2018</year>
      <pub-id pub-id-type="doi">10.21105/joss.00755</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Sato_et_al_2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Sato</surname><given-names>Y.</given-names></name>
        <name><surname>Shima</surname><given-names>S.</given-names></name>
        <name><surname>Tomita</surname><given-names>H.</given-names></name>
      </person-group>
      <article-title>Numerical convergence of shallow convection cloud field simulations: Comparison between double‐moment Eulerian and particle‐based Lagrangian microphysics coupled to the same dynamical core</article-title>
      <source>J. Adv. Model. Earth Syst.</source>
      <year iso-8601-date="2018">2018</year>
      <pub-id pub-id-type="doi">10.1029/2018MS001285</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Unterstrasser_et_al_2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Unterstrasser</surname><given-names>S.</given-names></name>
        <name><surname>Hoffmann</surname><given-names>F.</given-names></name>
        <name><surname>Lerch</surname><given-names>M.</given-names></name>
      </person-group>
      <article-title>Collisional growth in a particle-based cloud microphysical model: Insights from column model simulations using LCM1D (v1.0)</article-title>
      <source>Geosci. Model Dev.</source>
      <year iso-8601-date="2020">2020</year>
      <pub-id pub-id-type="doi">10.5194/gmd-13-5119-2020</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Maronga_et_al_2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Maronga</surname><given-names>B.</given-names></name>
        <name><surname>Banzhaf</surname><given-names>S.</given-names></name>
        <name><surname>Burmeister</surname><given-names>C.</given-names></name>
        <name><surname>Esch</surname><given-names>T.</given-names></name>
        <name><surname>Forkel</surname><given-names>R.</given-names></name>
        <name><surname>Fröhlich</surname><given-names>D.</given-names></name>
        <name><surname>Fuka</surname><given-names>V.</given-names></name>
        <name><surname>Gehrke</surname><given-names>K.</given-names></name>
        <name><surname>Geletič</surname><given-names>J.</given-names></name>
        <name><surname>Giersch</surname><given-names>S.</given-names></name>
        <name><surname>Gronemeier</surname><given-names>T.</given-names></name>
        <name><surname>Groß</surname><given-names>G.</given-names></name>
        <name><surname>Heldens</surname><given-names>W.</given-names></name>
        <name><surname>Hellsten</surname><given-names>A.</given-names></name>
        <name><surname>Hoffmann</surname><given-names>F.</given-names></name>
        <name><surname>Inagaki</surname><given-names>A.</given-names></name>
        <name><surname>Kadasch</surname><given-names>E.</given-names></name>
        <name><surname>Kanani-Sühring</surname><given-names>F.</given-names></name>
        <name><surname>Ketelsen</surname><given-names>K.</given-names></name>
        <name><surname>Raasch</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>Overview of the PALM model system 6.0</article-title>
      <source>Geosci. Model Dev.</source>
      <year iso-8601-date="2020">2020</year>
      <pub-id pub-id-type="doi">10.5194/gmd-13-1335-2020</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Jarecka_et_al_2015">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Jarecka</surname><given-names>D.</given-names></name>
        <name><surname>Arabas</surname><given-names>S.</given-names></name>
        <name><surname>Del Vento</surname><given-names>D.</given-names></name>
      </person-group>
      <article-title>Python bindings for libcloudph++</article-title>
      <source>ArXiv e-prints</source>
      <year iso-8601-date="2015">2015</year>
      <uri>https://arxiv.org/abs/1504.01161</uri>
    </element-citation>
  </ref>
  <ref id="ref-Jaruga_and_Pawlowska_2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Jaruga</surname><given-names>A.</given-names></name>
        <name><surname>Pawlowska</surname><given-names>H.</given-names></name>
      </person-group>
      <article-title>libcloudph++ 2.0: Aqueous-phase chemistry extension of the particle-based cloud microphysics scheme</article-title>
      <source>Geosci. Model Dev.</source>
      <year iso-8601-date="2018">2018</year>
      <pub-id pub-id-type="doi">10.5194/gmd-11-3623-2018</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Bartman_and_Arabas_2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bartman</surname><given-names>P.</given-names></name>
        <name><surname>Arabas</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>On the design of Monte-Carlo particle coagulation solver interface: A CPU/GPU super-droplet method case study with PySDM</article-title>
      <source>Lect. Notes Comput. Sci.</source>
      <year iso-8601-date="2021">2021</year>
      <volume>12743</volume>
      <pub-id pub-id-type="doi">10.1007/978-3-030-77964-1_2</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Shipway_and_Hill_2012">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Shipway</surname><given-names>B. J.</given-names></name>
        <name><surname>Hill</surname><given-names>A. A.</given-names></name>
      </person-group>
      <article-title>Diagnosis of systematic differences between multiple parametrizations of warm rain microphysics using a kinematic framework</article-title>
      <source>Q. J. Royal Meteorol. Soc.</source>
      <year iso-8601-date="2012">2012</year>
      <pub-id pub-id-type="doi">10.1002/qj.1913</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Kreidenweis_et_al_2003">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kreidenweis</surname><given-names>S. M.</given-names></name>
        <name><surname>Walcek</surname><given-names>C. J.</given-names></name>
        <name><surname>Feingold</surname><given-names>G.</given-names></name>
        <name><surname>Gong</surname><given-names>W.</given-names></name>
        <name><surname>Jacobson</surname><given-names>M. Z.</given-names></name>
        <name><surname>Kim</surname><given-names>C. H.</given-names></name>
        <name><surname>Liu</surname><given-names>X.</given-names></name>
        <name><surname>Penner</surname><given-names>J. E.</given-names></name>
        <name><surname>Nenes</surname><given-names>A.</given-names></name>
        <name><surname>Seinfeld</surname><given-names>J. H.</given-names></name>
      </person-group>
      <article-title>Modification of aerosol mass and size distribution due to aqueous‐phase SO_2 oxidation in clouds: Comparisons of several models</article-title>
      <source>J. Geophys. Res.</source>
      <year iso-8601-date="2003">2003</year>
      <pub-id pub-id-type="doi">10.1029/2002JD002673</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Richter_et_al_2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Richter</surname><given-names>D. H.</given-names></name>
        <name><surname>MacMillan</surname><given-names>T.</given-names></name>
        <name><surname>Wainwright</surname><given-names>C.</given-names></name>
      </person-group>
      <article-title>A Lagrangian cloud model for the study of marine fog</article-title>
      <source>Boundary-Layer Meteorol.</source>
      <year iso-8601-date="2021">2021</year>
      <pub-id pub-id-type="doi">10.1007/s10546-020-00595-w</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Bartman_et_al_2021">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Bartman</surname><given-names>P.</given-names></name>
        <name><surname>Banaśkiewicz</surname><given-names>J.</given-names></name>
        <name><surname>Drenda</surname><given-names>S.</given-names></name>
        <name><surname>Manna</surname><given-names>M.</given-names></name>
        <name><surname>Olesik</surname><given-names>M.</given-names></name>
        <name><surname>Rozwoda</surname><given-names>P.</given-names></name>
        <name><surname>Sadowski</surname><given-names>M.</given-names></name>
        <name><surname>Arabas</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>PyMPDATA v1: Numba-accelerated implementation of MPDATA with examples in Python, Julia and Matlab</article-title>
      <source>J. Open Source Soft. (subm.)</source>
      <year iso-8601-date="2021">2021</year>
      <uri>https://github.com/atmos-cloud-sim-uj/PyMPDATA</uri>
    </element-citation>
  </ref>
  <ref id="ref-Smolarkiewicz_2006">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Smolarkiewicz</surname><given-names>P. K.</given-names></name>
      </person-group>
      <article-title>Multidimensional positive definite advection transport algorithm: An overview.</article-title>
      <source>Int. J. Numer. Methods Fluids</source>
      <year iso-8601-date="2006">2006</year>
      <pub-id pub-id-type="doi">10.1002/fld.1071</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Morrison_et_al_2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Morrison</surname><given-names>H.</given-names></name>
        <name><surname>Lier-Walqui</surname><given-names>M. van</given-names></name>
        <name><surname>Fridlind</surname><given-names>A. M.</given-names></name>
        <name><surname>Grabowski</surname><given-names>W. W.</given-names></name>
        <name><surname>Harrington</surname><given-names>J. Y.</given-names></name>
        <name><surname>Hoose</surname><given-names>C.</given-names></name>
        <name><surname>Korolev</surname><given-names>A.</given-names></name>
        <name><surname>Kumjian</surname><given-names>M. R.</given-names></name>
        <name><surname>Milbrandt</surname><given-names>J. A.</given-names></name>
        <name><surname>Pawlowska</surname><given-names>H.</given-names></name>
        <name><surname>Posselt</surname><given-names>D. J.</given-names></name>
        <name><surname>Prat</surname><given-names>O. P.</given-names></name>
        <name><surname>Reimel</surname><given-names>K. J.</given-names></name>
        <name><surname>Shima</surname><given-names>S.</given-names></name>
        <name><surname>Diedenhoven</surname><given-names>B. van</given-names></name>
        <name><surname>Xue</surname><given-names>L.</given-names></name>
      </person-group>
      <article-title>Confronting the challenge of modeling cloud and precipitation microphysics</article-title>
      <source>J. Adv. Model. Earth Syst.</source>
      <year iso-8601-date="2020">2020</year>
      <pub-id pub-id-type="doi">10.1029/2019MS001689</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Pencil_2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Brandenburg</surname><given-names>Axel</given-names></name>
        <name><surname>Johansen</surname><given-names>Anders</given-names></name>
        <name><surname>Bourdin</surname><given-names>Philippe A.</given-names></name>
        <name><surname>Dobler</surname><given-names>Wolfgang</given-names></name>
        <name><surname>Lyra</surname><given-names>Wladimir</given-names></name>
        <name><surname>Rheinhardt</surname><given-names>Matthias</given-names></name>
        <name><surname>Bingert</surname><given-names>Sven</given-names></name>
        <name><surname>Haugen</surname><given-names>Nils Erland L.</given-names></name>
        <name><surname>Mee</surname><given-names>Antony</given-names></name>
        <name><surname>Gent</surname><given-names>Frederick</given-names></name>
        <name><surname>Babkovskaia</surname><given-names>Natalia</given-names></name>
        <name><surname>Yang</surname><given-names>Chao-Chin</given-names></name>
        <name><surname>Heinemann</surname><given-names>Tobias</given-names></name>
        <name><surname>Dintrans</surname><given-names>Boris</given-names></name>
        <name><surname>Mitra</surname><given-names>Dhrubaditya</given-names></name>
        <name><surname>Candelaresi</surname><given-names>Simon</given-names></name>
        <name><surname>Warnecke</surname><given-names>Jörn</given-names></name>
        <name><surname>Käpylä</surname><given-names>Petri J.</given-names></name>
        <name><surname>Schreiber</surname><given-names>Andreas</given-names></name>
        <name><surname>Chatterjee</surname><given-names>Piyali</given-names></name>
        <name><surname>Käpylä</surname><given-names>Maarit J.</given-names></name>
        <name><surname>Li</surname><given-names>Xiang-Yu</given-names></name>
        <name><surname>Krüger</surname><given-names>Jonas</given-names></name>
        <name><surname>Aarnes</surname><given-names>Jørgen R.</given-names></name>
        <name><surname>Sarson</surname><given-names>Graeme R.</given-names></name>
        <name><surname>Oishi</surname><given-names>Jeffrey S.</given-names></name>
        <name><surname>Schober</surname><given-names>Jennifer</given-names></name>
        <name><surname>Plasson</surname><given-names>Raphaël</given-names></name>
        <name><surname>Sandin</surname><given-names>Christer</given-names></name>
        <name><surname>Karchniwy</surname><given-names>Ewa</given-names></name>
        <name><surname>Rodrigues</surname><given-names>Luiz Felippe S.</given-names></name>
        <name><surname>Hubbard</surname><given-names>Alexander</given-names></name>
        <name><surname>Guerrero</surname><given-names>Gustavo</given-names></name>
        <name><surname>Snodin</surname><given-names>Andrew</given-names></name>
        <name><surname>Losada</surname><given-names>Illa R.</given-names></name>
        <name><surname>Pekkilä</surname><given-names>Johannes</given-names></name>
        <name><surname>Qian</surname><given-names>Chengeng</given-names></name>
      </person-group>
      <article-title>The Pencil Code, a modular MPI code for partial differential equations and particles: Multipurpose and multiuser-maintained</article-title>
      <source>J. Open Source Soft.</source>
      <year iso-8601-date="2021">2021</year>
      <pub-id pub-id-type="doi">10.21105/joss.02807</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Lowe_et_al_2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lowe</surname><given-names>S. J.</given-names></name>
        <name><surname>Partridge</surname><given-names>D. G.</given-names></name>
        <name><surname>Davies</surname><given-names>J. F.</given-names></name>
        <name><surname>Wilson</surname><given-names>K. R.</given-names></name>
        <name><surname>Topping</surname><given-names>D.</given-names></name>
        <name><surname>Riipinen</surname><given-names>I.</given-names></name>
      </person-group>
      <article-title>Key drivers of cloud response to surface-active organics</article-title>
      <source>Nature Comm.</source>
      <year iso-8601-date="2019">2019</year>
      <pub-id pub-id-type="doi">10.1038/s41467-019-12982-0</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Morrison_and_Grabowski_2007">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Morrison</surname><given-names>H.</given-names></name>
        <name><surname>Grabowski</surname><given-names>W. W.</given-names></name>
      </person-group>
      <article-title>Comparison of bulk and bin warm-rain microphysics models using a kinematic framework</article-title>
      <source>J. Atmos. Sci.</source>
      <year iso-8601-date="2007">2007</year>
      <pub-id pub-id-type="doi">10.1175/JAS3980</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
