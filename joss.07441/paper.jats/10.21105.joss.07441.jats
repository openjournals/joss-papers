<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">7441</article-id>
<article-id pub-id-type="doi">10.21105/joss.07441</article-id>
<title-group>
<article-title>XCALibre.jl: A Julia XPU unstructured finite volume
Computational Fluid Dynamics library</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-5691-9292</contrib-id>
<name>
<surname>Medina</surname>
<given-names>Humberto</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-5237-6673</contrib-id>
<name>
<surname>Ellis</surname>
<given-names>Christopher D.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Mazin</surname>
<given-names>Tom</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Osborn</surname>
<given-names>Oscar</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0007-4346-1754</contrib-id>
<name>
<surname>Ward</surname>
<given-names>Timothy</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-5833-4084</contrib-id>
<name>
<surname>Ambrose</surname>
<given-names>Stephen</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-7398-6531</contrib-id>
<name>
<surname>Aleksandrova</surname>
<given-names>Svetlana</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-2503-7232</contrib-id>
<name>
<surname>Rothwell</surname>
<given-names>Benjamin</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-5773-6439</contrib-id>
<name>
<surname>Eastwick</surname>
<given-names>Carol</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>The University of Nottingham, UK</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>The University of Leicester, UK</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-09-18">
<day>18</day>
<month>9</month>
<year>2024</year>
</pub-date>
<volume>10</volume>
<issue>106</issue>
<fpage>7441</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Julia</kwd>
<kwd>Computational Fluid Dynamics</kwd>
<kwd>Finite Volume Method</kwd>
<kwd>Fluid simulation</kwd>
<kwd>CFD Solver</kwd>
<kwd>LES</kwd>
<kwd>RANS</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Understanding the behaviour of fluid flow, such as air over a wing,
  oil lubrication in gas turbines, or cooling air flow in a combustor or
  turbine is crucial in many engineering applications, from designing
  aircraft and automotive components to optimising energy systems.
  Computational Fluid Dynamics (CFD) enables engineers to model
  real-world processes, optimise designs, and predict performance for a
  wide range of scenarios, and it has become a vital part of the modern
  engineering design process for creating efficient, safe, and
  sustainable designs. As engineers seek to develop and optimise new
  designs, particularly in fields where there is a drive to push the
  current state-of-the-art or physical limits of existing design
  solutions, often, new CFD methodologies or physical models are
  required. Therefore, extendable and flexible CFD frameworks are
  needed, for example, to allow seamless integration with machine
  learning models. In this paper, the features of the first release of
  the Julia package XCALibre.jl are presented. Designed with
  extensibility in mind, XCALibre.jl is aiming to facilitate the rapid
  prototyping of new fluid models and to easily integrate with Julia’s
  powerful ecosystem, enabling access to optimisation libraries and
  machine learning frameworks to enhance its functionality and expand
  its application potential, whilst offering multi-threaded performance
  on CPUs and GPU acceleration.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Given the importance of fluid flow simulation in engineering
  applications, it is not surprising that there is a wealth of CFD
  solvers available, both open-source and commercially available. Well
  established open-source codes include: OpenFOAM
  (<xref alt="Foundation, 2024" rid="ref-OpenFOAM" ref-type="bibr">Foundation,
  2024</xref>), SU2
  (<xref alt="University, 2024" rid="ref-SU2" ref-type="bibr">University,
  2024</xref>), CODE_SATURN
  (<xref alt="EDF, 2024" rid="ref-CODE_SATURN" ref-type="bibr">EDF,
  2024</xref>), Basilisk
  (<xref alt="Hooft et al., 2016" rid="ref-Basilisk" ref-type="bibr">Hooft
  et al., 2016</xref>), etc. It is a testament to the open-source
  philosophy, and their developers, that some of these codes offer
  almost feature parity with commercial codes. However, established
  open-source and commercial codes have large codebases and, for
  performance reasons, have been implemented in statically compiled
  languages which makes it difficult to adapt and incorporate recent
  trends in scientific computing, for example, GPU computing and
  interfacing with machine learning frameworks to support the
  development of new models
  (<xref alt="Ellis &amp; Xia, 2023" rid="ref-Ellis1" ref-type="bibr">Ellis
  &amp; Xia, 2023</xref>,
  <xref alt="2024" rid="ref-Ellis2" ref-type="bibr">2024</xref>). As a
  result, the research community has been actively developing new CFD
  codes, which is evident within the Julia ecosystem.</p>
  <p>The Julia programming language offers a fresh approach to
  scientific computing, with the benefits of dynamism whilst retaining
  the performance of statically typed languages thanks to its
  just-in-time compilation approach (using LLVM compiler technology).
  Thus, Julia makes it easy to prototype and test new ideas whilst
  producing performant machine code. This simplicity-performance dualism
  has resulted in a remarkable growth in its ecosystem offering for
  scientific computing, which includes state-of-the-art packages for
  solving differential equations
  e.g. <monospace>DifferentialEquations.jl</monospace>
  (<xref alt="Rackauckas &amp; Nie, 2017" rid="ref-rackauckas2017differentialequations" ref-type="bibr">Rackauckas
  &amp; Nie, 2017</xref>) , building machine learning models such as
  <monospace>Flux.jl</monospace>
  (<xref alt="Innes, 2018" rid="ref-innesU003A2018" ref-type="bibr">Innes,
  2018</xref>), <monospace>Knet.jl</monospace>
  (<xref alt="Yuret &amp; collaborators, 2024" rid="ref-KNET" ref-type="bibr">Yuret
  &amp; collaborators, 2024</xref>) and <monospace>Lux.jl</monospace>
  (<xref alt="Pal, 2023" rid="ref-pal2023lux" ref-type="bibr">Pal,
  2023</xref>), optimisation frameworks
  e.g. <monospace>JUMP.jl</monospace>
  (<xref alt="Lubin et al., 2023" rid="ref-Lubin2023" ref-type="bibr">Lubin
  et al., 2023</xref>) , automatic differentiation, such as
  <monospace>Enzyme.jl</monospace>
  (<xref alt="Moses &amp; Churavy, 2020" rid="ref-NEURIPS2020_9332c513" ref-type="bibr">Moses
  &amp; Churavy, 2020</xref>) , etc. Likewise, excellent CFD packages
  have also been developed, e.g. <monospace>Oceananigans.jl</monospace>
  (<xref alt="Ramadhan et al., 2020" rid="ref-OceananigansJOSS" ref-type="bibr">Ramadhan
  et al., 2020</xref>), which provides tools for ocean modelling,
  <monospace>Trixi.jl</monospace>
  (<xref alt="Schlottke-Lakemper et al., 2021" rid="ref-schlottkelakemper2021purely" ref-type="bibr">Schlottke-Lakemper
  et al., 2021</xref>) which provides high-order solvers using the
  Discontinuous Garlekin method, and
  <monospace>Waterlilly.jl</monospace>
  (<xref alt="Weymouth &amp; Font, 2024" rid="ref-WeymouthFont2024" ref-type="bibr">Weymouth
  &amp; Font, 2024</xref>), which implements the immersed boundary
  method on structured grids using a staggered finite volume method. To
  complement and extend the CFD offering of the Julia ecosystem,
  <monospace>XCALibre.jl</monospace> provides a composable framework
  which enables the aforementioned strengths of the Julia programming
  language to be realised in an unstructured finite volume solver with
  XPU capabilities. The package is intended primarily for researchers
  and students, as well as engineers, who are interested in CFD
  applications using the built-in solvers. Additionally,
  <monospace>XCALibre.jl</monospace> offers developers a user-friendly
  and computationally efficient framework for prototyping cutting-edge
  CFD solvers or methodologies, which can be tested in complex
  geometries relevant to a wide range of engineering applications.</p>
</sec>
<sec id="key-features">
  <title>Key features</title>
  <p>The main features available in the latest release (version
  <monospace>0.4</monospace>) are highlighted here. Users are also
  encouraged to explore the latest version of
  <ext-link ext-link-type="uri" xlink:href="https://mberto79.github.io/XCALibre.jl/stable/">the
  user guide</ext-link> where the public API and current features are
  documented.</p>
  <list list-type="bullet">
    <list-item>
      <p><bold>XPU computation</bold> <monospace>XCALibre.jl</monospace>
      is implemented using <monospace>KernelAbstractions.jl</monospace>
      which allows it to support both multi-threaded CPU and GPU
      calculations.</p>
    </list-item>
    <list-item>
      <p><bold>Unstructured grids and formats</bold>
      <monospace>XCALibre.jl</monospace> is implemented to support
      unstructured meshes using the Finite Volume method for equation
      discretisation. Thus, arbitrary polyhedral cells are supported,
      enabling the representation and simulation of complex geometries.
      <monospace>XCALibre.jl</monospace> provides mesh conversion
      functions to import externally generated grids. Currently, the
      Ideas (<monospace>unv</monospace>) and
      <monospace>OpenFOAM</monospace> mesh formats can be used. The
      <monospace>.unv</monospace> mesh format supports both 2D and 3D
      grids (note that the <monospace>.unv</monospace> format only
      supports prisms, tetrahedral, and hexahedral cells). The
      <monospace>OpenFOAM</monospace> mesh format can be used for 3D
      simulations (this format has no cell restrictions and supports
      arbitrary polyhedral cells).</p>
    </list-item>
    <list-item>
      <p><bold>Flow solvers</bold> Steady and transient solvers are
      available, which use the SIMPLE and PISO algorithms for steady and
      transient simulations, respectively. These solvers support
      simulation of both incompressible and weakly compressible fluids
      (using a sensible energy model).</p>
    </list-item>
    <list-item>
      <p><bold>Turbulence models</bold> RANS and LES turbulence models
      are supported. RANS models available in the current release
      include: the standard Wilcox <inline-formula><alternatives>
      <tex-math><![CDATA[k-\omega]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>k</mml:mi><mml:mo>−</mml:mo><mml:mi>ω</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
      model
      (<xref alt="Wilcox, 1988" rid="ref-Wilcox" ref-type="bibr">Wilcox,
      1988</xref>) and the transitional <inline-formula><alternatives>
      <tex-math><![CDATA[k-\omega]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>k</mml:mi><mml:mo>−</mml:mo><mml:mi>ω</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
      LKE model
      (<xref alt="Medina et al., 2018" rid="ref-HMedina" ref-type="bibr">Medina
      et al., 2018</xref>). For LES simulations the classic
      <monospace>Smagorinsky</monospace> model
      (<xref alt="Smagorinsky, 1963" rid="ref-Smagorinsky" ref-type="bibr">Smagorinsky,
      1963</xref>) is available.</p>
    </list-item>
    <list-item>
      <p><bold>VTK simulation output</bold> Simulation results are
      written to <monospace>vtk</monospace> files for 2D cases and
      <monospace>vtu</monospace> for 3D simulations. This allows to
      perform simulation post-processing in
      <monospace>ParaView</monospace>, which is the leading open-source
      project for scientific visualisation.</p>
    </list-item>
    <list-item>
      <p><bold>Linear solvers and discretisation schemes</bold> Users
      are able to select from a growing range of pre-defined
      discretisation schemes, e.g. <monospace>Upwind</monospace>,
      <monospace>Linear</monospace> and <monospace>LUST</monospace> for
      discretising divergence terms. By design, the choice of
      discretisation strategy is made on a term-by-term basis, offering
      great flexibility. Users must also select and configure the linear
      solvers used to solve the discretised equations. Linear solvers
      are provided by <monospace>Krylov.jl</monospace>
      (<xref alt="Montoison &amp; Orban, 2023" rid="ref-montoison-orban-2023" ref-type="bibr">Montoison
      &amp; Orban, 2023</xref>) and reexported in
      <monospace>XCALibre.jl</monospace> for convenience (please refer
      to the user guide for details on exported solvers).</p>
    </list-item>
  </list>
</sec>
<sec id="examples">
  <title>Examples</title>
  <p>Users are referred to the documentation where examples for using
  <monospace>XCALibre.jl</monospace> are provided, including advanced
  examples showing how it is possible to integrate the Julia ecosystem
  to extend the functionality in XCALibre.jl, with examples that include
  flow optimisation, and integration with the
  <monospace>Flux.jl</monospace> machine learning framework.</p>
  <sec id="verification-laminar-flow-over-a-backward-facing-step">
    <title>Verification: laminar flow over a backward facing
    step</title>
    <p>The use of <monospace>XCALibre.jl</monospace> is now illustrated
    using simple backward-facing step configuration with 4 boundaries as
    depicted in figure
    <xref alt="[fig:domain]" rid="figU003Adomain">[fig:domain]</xref>.
    The flow will be considered as incompressible and laminar. The
    <monospace>:wall</monospace> and <monospace>:top</monospace>
    boundaries will be considered as solid wall boundaries. The inflow
    velocity is 1.5 <inline-formula><alternatives>
    <tex-math><![CDATA[m/s]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>m</mml:mi><mml:mi>/</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>,
    and the outlet boundary is set up as a pressure outlet (i.e. a
    <monospace>Dirichlet</monospace> condition with a reference value of
    0 <inline-formula><alternatives>
    <tex-math><![CDATA[Pa]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>P</mml:mi><mml:mi>a</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>).
    Notice that this case uses a structured grid for simplicity,
    however, in <monospace>XCALibre.jl</monospace> the grid connectivity
    information is unstructured and complex geometries can be used. Here
    the simulation is set up to run on the CPU. The number of CPU
    threads to be used can be specified when launching the Julia
    process, e.g. <monospace>julia --threads 4</monospace>. The steps
    needed to carry out the simulation on GPUs can be found in the
    <ext-link ext-link-type="uri" xlink:href="https://mberto79.github.io/XCALibre.jl/stable/">documentation</ext-link>.</p>
    <fig>
      <caption><p>Computational
      domain<styled-content id="figU003Adomain"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="domain_mesh.png" />
    </fig>
    <p>The corresponding simulation setup is shown below:</p>
    <code language="julia">using XCALibre

# Get path to mesh file
grids_dir = pkgdir(XCALibre, &quot;examples/0_GRIDS&quot;)
grid = &quot;backwardFacingStep_10mm.unv&quot;
mesh_file = joinpath(grids_dir, grid)

# Convert and load mesh
mesh = UNV2D_mesh(mesh_file, scale=0.001)

# Define flow variables &amp; do checks
velocity = [1.5, 0.0, 0.0]; nu = 1e-3; H = 0.1
Re = velocity[1]*H/nu # check Reynolds number

# Define models
model = Physics(
    time = Steady(),
    fluid = Fluid{Incompressible}(nu = nu),
    turbulence = RANS{Laminar}(),
    energy = Energy{Isothermal}(),
    domain = mesh
    )

# Assign boundary conditions
@assign! model momentum U (
    Dirichlet(:inlet, velocity),
    Neumann(:outlet, 0.0),
    Wall(:wall, [0.0, 0.0, 0.0]),
    Wall(:top, [0.0, 0.0, 0.0]),
)

@assign! model momentum p (
    Neumann(:inlet, 0.0),
    Dirichlet(:outlet, 0.0),
    Neumann(:wall, 0.0),
    Neumann(:top, 0.0)
)

# Specify discretisation schemes
schemes = (
    U = set_schemes(divergence = Linear),
    p = set_schemes() # no input provided (will use defaults)
)

# Configuration: linear solvers
solvers = (
    U = set_solver(
        model.momentum.U;
        solver      = BicgstabSolver, 
        preconditioner = Jacobi(), 
        convergence = 1e-7,
        relax       = 0.7,
        rtol = 1e-4,
        atol = 1e-10
    ),
    p = set_solver(
        model.momentum.p;
        solver      = CgSolver, 
        preconditioner = Jacobi(), 
        convergence = 1e-7,
        relax       = 0.7,
        rtol = 1e-4,
        atol = 1e-10
    )
)

# Configuration: runtime and hardware information
runtime = set_runtime(iterations=2000, time_step=1, write_interval=2000)
hardware = set_hardware(backend=CPU(), workgroup=1024)

# Configuration: build Configuration object
config = Configuration(
  solvers=solvers, schemes=schemes, runtime=runtime, hardware=hardware)

# Initialise fields
initialise!(model.momentum.U, velocity)
initialise!(model.momentum.p, 0.0)

# Run simulation
residuals = run!(model, config);</code>
    <p>The velocity and pressure results are verified with those
    obtained using OpenFOAM
    (<xref alt="Foundation, 2024" rid="ref-OpenFOAM" ref-type="bibr">Foundation,
    2024</xref>) and shown in figure
    <xref alt="[fig:comparison]" rid="figU003Acomparison">[fig:comparison]</xref>,
    showing that they are in excellent agreement.</p>
    <fig>
      <caption><p>Comparision with OpenFOAM
      <styled-content id="figU003Acomparison"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="svg+xml" xlink:href="BFS_verification.svg" />
    </fig>
  </sec>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-OpenFOAM">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Foundation</surname><given-names>OpenFOAM</given-names></name>
      </person-group>
      <article-title>Open field operation and manipulation</article-title>
      <source>GitHub repository</source>
      <publisher-name>Github</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <uri>https://github.com/OpenFOAM</uri>
    </element-citation>
  </ref>
  <ref id="ref-SU2">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>University</surname><given-names>Standford</given-names></name>
      </person-group>
      <article-title>SU2</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <uri>https://github.com/su2code/SU2</uri>
    </element-citation>
  </ref>
  <ref id="ref-CODE_SATURN">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>EDF</surname></name>
      </person-group>
      <article-title>CODE_SATURN</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <uri>https://github.com/code-saturne/code_saturne</uri>
    </element-citation>
  </ref>
  <ref id="ref-Basilisk">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hooft et al.</surname><given-names>Antoon van</given-names></name>
      </person-group>
      <article-title>Basilisk</article-title>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2016">2016</year>
      <uri>http://basilisk.fr/</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.1203631</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-rackauckas2017differentialequations">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Rackauckas</surname><given-names>Christopher</given-names></name>
        <name><surname>Nie</surname><given-names>Qing</given-names></name>
      </person-group>
      <article-title>Differentialequations.jl–a performant and feature-rich ecosystem for solving differential equations in julia</article-title>
      <source>Journal of Open Research Software</source>
      <publisher-name>Ubiquity Press</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <volume>5</volume>
      <issue>1</issue>
      <fpage>15</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-innesU003A2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Innes</surname><given-names>Mike</given-names></name>
      </person-group>
      <article-title>Flux: Elegant machine learning with julia</article-title>
      <source>Journal of Open Source Software</source>
      <year iso-8601-date="2018">2018</year>
      <pub-id pub-id-type="doi">10.21105/joss.00602</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-KNET">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Yuret</surname><given-names>Deniz</given-names></name>
        <name><surname>collaborators</surname></name>
      </person-group>
      <article-title>Knet</article-title>
      <source>Giuthub repository</source>
      <publisher-name>Giuthub</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <uri>hhttps://github.com/denizyuret/Knet.jl</uri>
    </element-citation>
  </ref>
  <ref id="ref-pal2023lux">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Pal</surname><given-names>Avik</given-names></name>
      </person-group>
      <article-title>Lux: Explicit parameterization of deep neural networks in julia</article-title>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2023-04">2023</year><month>04</month>
      <uri>https://doi.org/10.5281/zenodo.7808904</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.7808904</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Lubin2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lubin</surname><given-names>Miles</given-names></name>
        <name><surname>Dowson</surname><given-names>Oscar</given-names></name>
        <name><surname>Dias Garcia</surname><given-names>Joaquim</given-names></name>
        <name><surname>Huchette</surname><given-names>Joey</given-names></name>
        <name><surname>Legat</surname><given-names>Benoît</given-names></name>
        <name><surname>Vielma</surname><given-names>Juan Pablo</given-names></name>
      </person-group>
      <article-title>JuMP 1.0: Recent improvements to a modeling language for mathematical optimization</article-title>
      <source>Mathematical Programming Computation</source>
      <year iso-8601-date="2023">2023</year>
      <volume>15</volume>
      <pub-id pub-id-type="doi">10.1007/s12532-023-00239-3</pub-id>
      <fpage>581</fpage>
      <lpage>589</lpage>
    </element-citation>
  </ref>
  <ref id="ref-NEURIPS2020_9332c513">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Moses</surname><given-names>William</given-names></name>
        <name><surname>Churavy</surname><given-names>Valentin</given-names></name>
      </person-group>
      <article-title>Instead of rewriting foreign code for machine learning, automatically synthesize fast gradients</article-title>
      <source>Advances in neural information processing systems</source>
      <person-group person-group-type="editor">
        <name><surname>Larochelle</surname><given-names>H.</given-names></name>
        <name><surname>Ranzato</surname><given-names>M.</given-names></name>
        <name><surname>Hadsell</surname><given-names>R.</given-names></name>
        <name><surname>Balcan</surname><given-names>M. F.</given-names></name>
        <name><surname>Lin</surname><given-names>H.</given-names></name>
      </person-group>
      <publisher-name>Curran Associates, Inc.</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <volume>33</volume>
      <uri>https://proceedings.neurips.cc/paper/2020/file/9332c513ef44b682e9347822c2e457ac-Paper.pdf</uri>
      <fpage>12472</fpage>
      <lpage>12485</lpage>
    </element-citation>
  </ref>
  <ref id="ref-OceananigansJOSS">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ramadhan</surname><given-names>Ali</given-names></name>
        <name><surname>Wagner</surname><given-names>Gregory LeClaire</given-names></name>
        <name><surname>Hill</surname><given-names>Chris</given-names></name>
        <name><surname>Campin</surname><given-names>Jean-Michel</given-names></name>
        <name><surname>Churavy</surname><given-names>Valentin</given-names></name>
        <name><surname>Besard</surname><given-names>Tim</given-names></name>
        <name><surname>Souza</surname><given-names>Andre</given-names></name>
        <name><surname>Edelman</surname><given-names>Alan</given-names></name>
        <name><surname>Ferrari</surname><given-names>Raffaele</given-names></name>
        <name><surname>Marshall</surname><given-names>John</given-names></name>
      </person-group>
      <article-title>Oceananigans.jl: Fast and friendly geophysical fluid dynamics on GPUs</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Journal of Open Source Software</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <volume>5</volume>
      <issue>53</issue>
      <uri>https://doi.org/10.21105/joss.02018</uri>
      <pub-id pub-id-type="doi">10.21105/joss.02018</pub-id>
      <fpage>2018</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-schlottkelakemper2021purely">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Schlottke-Lakemper</surname><given-names>Michael</given-names></name>
        <name><surname>Winters</surname><given-names>Andrew R</given-names></name>
        <name><surname>Ranocha</surname><given-names>Hendrik</given-names></name>
        <name><surname>Gassner</surname><given-names>Gregor J</given-names></name>
      </person-group>
      <article-title>A purely hyperbolic discontinuous Galerkin approach for self-gravitating gas dynamics</article-title>
      <source>Journal of Computational Physics</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2021-06">2021</year><month>06</month>
      <volume>442</volume>
      <uri>https://arxiv.org/abs/2008.10593</uri>
      <pub-id pub-id-type="doi">10.1016/j.jcp.2021.110467</pub-id>
      <fpage>110467</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-WeymouthFont2024">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Weymouth</surname><given-names>Gabriel D.</given-names></name>
        <name><surname>Font</surname><given-names>Bernat</given-names></name>
      </person-group>
      <article-title>WaterLily.jl: A differentiable and backend-agnostic julia solver to simulate incompressible viscous flow and dynamic bodies</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://arxiv.org/abs/2407.16032</uri>
    </element-citation>
  </ref>
  <ref id="ref-HMedina">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Medina</surname><given-names>H.</given-names></name>
        <name><surname>Beechook</surname><given-names>A.</given-names></name>
        <name><surname>Fadhila</surname><given-names>H.</given-names></name>
        <name><surname>Aleksandrova</surname><given-names>S.</given-names></name>
        <name><surname>Benjamin</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>A novel laminar kinetic energy model for the prediction of pretransitional velocity fluctuations and boundary layer transition</article-title>
      <source>International Journal of Heat and Fluid Flow</source>
      <year iso-8601-date="2018">2018</year>
      <volume>69</volume>
      <issn>0142-727X</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S0142727X17306343</uri>
      <pub-id pub-id-type="doi">10.1016/j.ijheatfluidflow.2017.12.008</pub-id>
      <fpage>150</fpage>
      <lpage>163</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Wilcox">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wilcox</surname><given-names>David C.</given-names></name>
      </person-group>
      <article-title>Reassessment of the scale-determining equation for advanced turbulence models</article-title>
      <source>AIAA Journal</source>
      <year iso-8601-date="1988">1988</year>
      <volume>26</volume>
      <issue>11</issue>
      <uri>https://doi.org/10.2514/3.10041</uri>
      <pub-id pub-id-type="doi">10.2514/3.10041</pub-id>
      <fpage>1299</fpage>
      <lpage>1310</lpage>
    </element-citation>
  </ref>
  <ref id="ref-montoison-orban-2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Montoison</surname><given-names>Alexis</given-names></name>
        <name><surname>Orban</surname><given-names>Dominique</given-names></name>
      </person-group>
      <article-title>Krylov.jl: A Julia basket of hand-picked Krylov methods</article-title>
      <source>Journal of Open Source Software</source>
      <year iso-8601-date="2023">2023</year>
      <volume>8</volume>
      <issue>89</issue>
      <pub-id pub-id-type="doi">10.21105/joss.05187</pub-id>
      <fpage>5187</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Ellis1">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ellis</surname><given-names>Christopher</given-names></name>
        <name><surname>Xia</surname><given-names>Hao</given-names></name>
      </person-group>
      <article-title>Data-driven turbulence anisotropy in film and effusion cooling flows</article-title>
      <source>Physics of Fluids</source>
      <year iso-8601-date="2023-10">2023</year><month>10</month>
      <volume>35</volume>
      <pub-id pub-id-type="doi">10.1063/5.0166685</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Ellis2">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ellis</surname><given-names>Christopher</given-names></name>
        <name><surname>Xia</surname><given-names>Hao</given-names></name>
      </person-group>
      <article-title>LES informed data-driven models for RANS simulations of single-hole cooling flows</article-title>
      <source>International Journal of Heat and Mass Transfer</source>
      <year iso-8601-date="2024-09">2024</year><month>09</month>
      <volume>235</volume>
      <pub-id pub-id-type="doi">10.1016/j.ijheatmasstransfer.2024.126150</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Smagorinsky">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Smagorinsky</surname><given-names>J.</given-names></name>
      </person-group>
      <article-title>GENERAL CIRCULATION EXPERIMENTS WITH THE PRIMITIVE EQUATIONS: I. THE BASIC EXPERIMENT</article-title>
      <source>Monthly Weather Review</source>
      <publisher-name>American Meteorological Society</publisher-name>
      <publisher-loc>Boston MA, USA</publisher-loc>
      <year iso-8601-date="1963">1963</year>
      <volume>91</volume>
      <issue>3</issue>
      <uri>https://journals.ametsoc.org/view/journals/mwre/91/3/1520-0493_1963_091_0099_gcewtp_2_3_co_2.xml</uri>
      <pub-id pub-id-type="doi">10.1175/1520-0493(1963)091&lt;0099:GCEWTP&gt;2.3.CO;2</pub-id>
      <fpage>99 </fpage>
      <lpage> 164</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
