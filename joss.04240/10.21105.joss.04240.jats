<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">4240</article-id>
<article-id pub-id-type="doi">10.21105/joss.04240</article-id>
<title-group>
<article-title>swift-emulator: A Python package for emulation of
simulated scaling relations</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-0862-8639</contrib-id>
<name>
<surname>Kugel</surname>
<given-names>Roi</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-1327-1921</contrib-id>
<name>
<surname>Borrow</surname>
<given-names>Josh</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Leiden Observatory, Leiden University, PO Box 9513, NL-2300
RA Leiden, The Netherlands</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Department of Physics, Kavli Institute for Astrophysics and
Space Research, Massachusetts Institute of Technology, Cambridge, MA
02139, USA</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2022-01-28">
<day>28</day>
<month>1</month>
<year>2022</year>
</pub-date>
<volume>7</volume>
<issue>72</issue>
<fpage>4240</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>astronomy</kwd>
<kwd>Simulations</kwd>
<kwd>Cosmology</kwd>
<kwd>Machine Learning</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><monospace>swift-emulator</monospace> is a Python toolkit for using
  Gaussian processes machine learning to emulate scaling relations from
  cosmological simulations. <monospace>swift-emulator</monospace>
  focusses on implementing a clear, easy to use design and API to remove
  the barrier to entry for using emulator techniques.
  <monospace>swift-emulator</monospace> provides tools for every step:
  the design of the parameter sampling, the training of the Gaussian
  process model, and validating and anaylsing the trained emulators. By
  making these techniques easier to use, in particular in combination
  with the SWIFT code
  (<xref alt="Borrow &amp; Borrisov, 2020" rid="ref-Borrow2020" ref-type="bibr">Borrow
  &amp; Borrisov, 2020</xref>;
  <xref alt="Schaller et al., 2018" rid="ref-Schaller2018" ref-type="bibr">Schaller
  et al., 2018</xref>), it will be possible use fitting methods (like
  MCMC) to calibrate and better understand theoretical simulation
  models.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>One of the limits of doing cosmological (hydrodynamical)
  simulations is that any simulation is limited to only a single set of
  parameters, be these choices of cosmology, or the implemented physics
  (e.g., stellar feedback). These parameters need to be tuned to
  calibrate against observational data. At odds with this, cosmological
  simulations are computationally expensive, with the cheapest viable
  runs costing thousands of CPU hours, and running up to tens of
  millions for the largest volumes at the highest resolutions. This
  makes the use of cosmological simulations in state-of-the-art fitting
  pipelines (e.g., MCMC), where tens of thousands to millions of
  evaluations of the model are required to explore the parameter space,
  computationally unfeasable. In order to get a statistical grip on the
  models of cosmology and galaxy formation, a better solution is
  needed.</p>
  <p>This problem is a major limiting factor in “calibration” of the
  sub-resolution (subgrid) models that are often used. Works like
  Illustris
  (<xref alt="Vogelsberger et al., 2014" rid="ref-Vogelsberger2014" ref-type="bibr">Vogelsberger
  et al., 2014</xref>), EAGLE
  (<xref alt="Crain et al., 2015" rid="ref-Crain2015" ref-type="bibr">Crain
  et al., 2015</xref>), BAHAMAS
  (<xref alt="McCarthy et al., 2017" rid="ref-McCarthy2017" ref-type="bibr">McCarthy
  et al., 2017</xref>), and Illustris-TNG
  (<xref alt="Pillepich et al., 2018" rid="ref-Pillepich2018" ref-type="bibr">Pillepich
  et al., 2018</xref>) are able to “match” observed relations by eye,
  but a statistical ground for the chosen parameters is missing. This
  poses a signifcant problem for cosmology, where a deeper understanding
  of our subgrid models will be required to interpret results from
  upcoming surveys like LSST and EUCLID.</p>
  <p>A solution here comes through the use of machine learning
  techniques. Training ‘emulators’ on a limited amount of simulations
  enables the evaluation of a fully continuous model based on changes in
  the underlying parameters. Instead of performing a new simulation for
  each required datapoint, the emulator can predict the results a
  simulation would give for that set of parameters. This makes it
  feasable to use methods like MCMC based purely on simulation
  results.</p>
</sec>
<sec id="emulator-requirements">
  <title>Emulator Requirements</title>
  <p>For emulation in hydro simulations we want to use Gaussian
  processes to emulate scaling relations in the following form:</p>
  <p><disp-formula><alternatives>
  <tex-math><![CDATA[GP(y,x,\vec\theta).]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>G</mml:mi><mml:mi>P</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mover><mml:mi>θ</mml:mi><mml:mo accent="true">⃗</mml:mo></mml:mover><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mi>.</mml:mi></mml:mrow></mml:math></alternatives></disp-formula></p>
  <p>We want to emulate scaling relations between a dependent variable
  <inline-formula><alternatives>
  <tex-math><![CDATA[y]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>y</mml:mi></mml:math></alternatives></inline-formula>,
  as a function of the independent variable
  <inline-formula><alternatives>
  <tex-math><![CDATA[x]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>x</mml:mi></mml:math></alternatives></inline-formula>
  and the model parameters <inline-formula><alternatives>
  <tex-math><![CDATA[\vec\theta]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mover><mml:mi>θ</mml:mi><mml:mo accent="true">⃗</mml:mo></mml:mover></mml:math></alternatives></inline-formula>.
  For each simulation many of these individual scaling relations can be
  calculated, for example the sizes of galaxies relative to their
  stellar mass, or the mass fraction of gas in galaxy clusters as a
  function of their mass. The individual object properties used in
  scaling realtions can be measured from each individual simulation
  using a tool like VELOCIraptor
  (<xref alt="Elahi et al., 2019" rid="ref-Elahi2019" ref-type="bibr">Elahi
  et al., 2019</xref>).</p>
  <p>Between simulations, the underlying parameters
  <inline-formula><alternatives>
  <tex-math><![CDATA[\vec\theta]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mover><mml:mi>θ</mml:mi><mml:mo accent="true">⃗</mml:mo></mml:mover></mml:math></alternatives></inline-formula>
  can change, for instance the energy injected by each supernovae. Using
  an emulator, we want to be able to see how many scaling relations
  change as a function of these parameters like the supernova
  strength.</p>
  <p>Emulators do not make a distinction between the independent
  <inline-formula><alternatives>
  <tex-math><![CDATA[x]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>x</mml:mi></mml:math></alternatives></inline-formula>
  and the model parameters <inline-formula><alternatives>
  <tex-math><![CDATA[\vec\theta]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mover><mml:mi>θ</mml:mi><mml:mo accent="true">⃗</mml:mo></mml:mover></mml:math></alternatives></inline-formula>.
  An emulator will model <inline-formula><alternatives>
  <tex-math><![CDATA[y]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>y</mml:mi></mml:math></alternatives></inline-formula>
  as a function of the combined vector <inline-formula><alternatives>
  <tex-math><![CDATA[\vec\theta'=(x,\vec\theta)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mover><mml:mi>θ</mml:mi><mml:mo accent="true">⃗</mml:mo></mml:mover><mml:mi>′</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mover><mml:mi>θ</mml:mi><mml:mo accent="true">⃗</mml:mo></mml:mover><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>.
  Getting the training data in the correct format can pose a significant
  challenge.</p>
  <p>In order to save computational time, it is important to have an
  efficient sampling of the parameter space represented by
  <inline-formula><alternatives>
  <tex-math><![CDATA[\vec\theta]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mover><mml:mi>θ</mml:mi><mml:mo accent="true">⃗</mml:mo></mml:mover></mml:math></alternatives></inline-formula>.
  It may be more efficient to search the parameter space in a
  transformed coordinate space, like logarithmic space, if the expected
  viable range is over several orders of magnitude.</p>
  <p>Once the emulator is working it can be challenging to perform
  standard tests to validate it. Things like cross-checks or parameter
  sweeps have to be implemented by hand, making proper use of emulators
  more difficult.</p>
</sec>
<sec id="why-swift-emulator">
  <title>Why <monospace>swift-emulator</monospace>?</title>
  <p>Many packages exist for Gausian process emulation, like
  <monospace>george</monospace> (Ambikasaran et al.
  (<xref alt="2015" rid="ref-Ambikasaran2015" ref-type="bibr">2015</xref>);
  this provides the basis for <monospace>swift-emulator</monospace>),
  <monospace>gpytorch</monospace>
  (<xref alt="Gardner et al., 2018" rid="ref-Gardner2018" ref-type="bibr">Gardner
  et al., 2018</xref>) and <monospace>GPy</monospace>
  (<xref alt="GPy, since 2012" rid="ref-gpy2014" ref-type="bibr">GPy,
  since 2012</xref>). Additionally, a package like
  <monospace>pyDOE</monospace>
  (<xref alt="Baudin et al., 2012" rid="ref-pyDOE2012" ref-type="bibr">Baudin
  et al., 2012</xref>) can be used to set up efficient parameter
  samplings. However, most of these packages operate close to theory,
  and create a significant barrier for entry.</p>
  <p>With <monospace>swift-emulator</monospace> we aim to provide a
  single <monospace>python</monospace> package that interfaces with
  available tools at a high level. Additionaly we aim to streamline the
  processes by providing i/o tools for the SWIFT simulation code
  (<xref alt="Borrow &amp; Borrisov, 2020" rid="ref-Borrow2020" ref-type="bibr">Borrow
  &amp; Borrisov, 2020</xref>;
  <xref alt="Schaller et al., 2018" rid="ref-Schaller2018" ref-type="bibr">Schaller
  et al., 2018</xref>). This is done in a modular fashion, giving the
  users the freedom to change any steps along the way.
  <monospace>swift-emulator</monospace> provides many methods that work
  out of the box, removing the barrier to entry, and aim at making
  emulator methods easy to use. The more wide-spread use of emulators
  will boost the potential of future simulation projects.</p>
  <p><monospace>swift-emulator</monospace> combines these tools to
  streamline the complete emulation process. There are tools for
  experimental design, such as producing latin hypercubes or uniform
  samplings of <inline-formula><alternatives>
  <tex-math><![CDATA[n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>-dimensional
  spaces. For simulations performed with SWIFT, parameter files can be
  created and simulation outputs can be loaded in through helper methods
  in the library. The results can then be used to train an emulator that
  can make predictions for the scaling relations in the simulation.
  There are also methods to perform cross-checks to find the accuracy of
  the emulator. In addition, for investigating the impact of individual
  parameters on a given scaling relation, there is a simple method to do
  a parameter sweep implemented. Finally, there are tools for comparing
  the emulated relations with other data, from a simple
  <inline-formula><alternatives>
  <tex-math><![CDATA[\chi^2]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msup><mml:mi>χ</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></alternatives></inline-formula>
  method to complex model discrepancy structures.</p>
  <p><monospace>swift-emulator</monospace> is currently being used for
  two of the flagship simulation projects using the SWIFT simulation
  code, ranging across five orders of magnitude in mass resolution. The
  package is being used to allow modern simulations to reporduce key
  observations with high accuracy.</p>
  <p>Finally <monospace>swift-emulator</monospace> has many options to
  optimise the methods for specific emulation problems. While the focus
  so far has been on integration with SWIFT, the underlying API is
  structured in a simple enough way that using the emulator with a
  different simulation code is easy.
  <monospace>swift-emulator</monospace> is currently being used for
  simulation projects outside of the SWIFT project for the calibration
  of postprocessing models.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We acknowledge support from the SWIFT collaboration whilst
  developing this project, with notable involvement from Richard Bower,
  Ian Vernon, Joop Schaye, and Matthieu Schaller. This work is partly
  funded by Vici grant 639.043.409 from the Dutch Research Council
  (NWO). This work used the DiRAC@Durham facility managed by the
  Institute for Computational Cosmology on behalf of the STFC DiRAC HPC
  Facility (www.dirac.ac.uk). The equipment was funded by BEIS capital
  funding via STFC capital grants ST/K00042X/1, ST/P002293/1,
  ST/R002371/1 and ST/S002502/1, Durham University and STFC operations
  grant ST/R000832/1. DiRAC is part of the National
  e-Infrastructure.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-Ambikasaran2015">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ambikasaran</surname><given-names>Sivaram</given-names></name>
        <name><surname>Foreman-Mackey</surname><given-names>Daniel</given-names></name>
        <name><surname>Greengard</surname><given-names>Leslie</given-names></name>
        <name><surname>Hogg</surname><given-names>David W.</given-names></name>
        <name><surname>O’Neil</surname><given-names>Michael</given-names></name>
      </person-group>
      <article-title>Fast Direct Methods for Gaussian Processes</article-title>
      <source>IEEE Transactions on Pattern Analysis and Machine Intelligence</source>
      <year iso-8601-date="2015-06">2015</year><month>06</month>
      <volume>38</volume>
      <uri>https://arxiv.org/abs/1403.6015</uri>
      <pub-id pub-id-type="doi">10.1109/TPAMI.2015.2448083</pub-id>
      <fpage>252</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Gardner2018">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Gardner</surname><given-names>Jacob</given-names></name>
        <name><surname>Pleiss</surname><given-names>Geoff</given-names></name>
        <name><surname>Weinberger</surname><given-names>Kilian Q</given-names></name>
        <name><surname>Bindel</surname><given-names>David</given-names></name>
        <name><surname>Wilson</surname><given-names>Andrew G</given-names></name>
      </person-group>
      <article-title>GPyTorch: Blackbox matrix-matrix Gaussian process inference with GPU acceleration</article-title>
      <source>Advances in neural information processing systems</source>
      <person-group person-group-type="editor">
        <name><surname>Bengio</surname><given-names>S.</given-names></name>
        <name><surname>Wallach</surname><given-names>H.</given-names></name>
        <name><surname>Larochelle</surname><given-names>H.</given-names></name>
        <name><surname>Grauman</surname><given-names>K.</given-names></name>
        <name><surname>Cesa-Bianchi</surname><given-names>N.</given-names></name>
        <name><surname>Garnett</surname><given-names>R.</given-names></name>
      </person-group>
      <publisher-name>Curran Associates, Inc.</publisher-name>
      <year iso-8601-date="2018">2018</year>
      <volume>31</volume>
      <uri>https://proceedings.neurips.cc/paper/2018/file/27e8e17134dd7083b050476733207ea1-Paper.pdf</uri>
      <fpage></fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Elahi2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Elahi</surname><given-names>Pascal Jahan</given-names></name>
        <name><surname>Poulton</surname><given-names>Rhys</given-names></name>
        <name><surname>Canas</surname><given-names>Rodrigo</given-names></name>
      </person-group>
      <article-title>VELOCIraptor-STF: Six-dimensional Friends-of-Friends phase space halo finder</article-title>
      <source>The Astrophysics Source Code Library</source>
      <year iso-8601-date="2019-11">2019</year><month>11</month>
      <uri>http://ascl.net/1911.020</uri>
      <fpage>ascl:1911.020</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Schaller2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Schaller</surname><given-names>Matthieu</given-names></name>
        <name><surname>Gonnet</surname><given-names>Pedro</given-names></name>
        <name><surname>Draper</surname><given-names>Peter W.</given-names></name>
        <name><surname>Chalk</surname><given-names>Aidan B. G.</given-names></name>
        <name><surname>Bower</surname><given-names>Richard G.</given-names></name>
        <name><surname>Willis</surname><given-names>James</given-names></name>
        <name><surname>Hausammann</surname><given-names>Loı̈c</given-names></name>
      </person-group>
      <article-title>SWIFT: SPH With Inter-dependent Fine-grained Tasking</article-title>
      <source>The Astrophysics Source Code Library</source>
      <year iso-8601-date="2018-05">2018</year><month>05</month>
      <uri>http://ascl.net/1805.020</uri>
      <fpage>ascl:1805.020</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Borrow2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Borrow</surname><given-names>Josh</given-names></name>
        <name><surname>Borrisov</surname><given-names>Alexei</given-names></name>
      </person-group>
      <article-title>swiftsimio: A Python library for reading SWIFT data</article-title>
      <source>The Journal of Open Source Software</source>
      <year iso-8601-date="2020-08">2020</year><month>08</month>
      <volume>5</volume>
      <issue>52</issue>
      <pub-id pub-id-type="doi">10.21105/joss.02430</pub-id>
      <fpage>2430</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Vogelsberger2014">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Vogelsberger</surname><given-names>Mark</given-names></name>
        <name><surname>Genel</surname><given-names>Shy</given-names></name>
        <name><surname>Springel</surname><given-names>Volker</given-names></name>
        <name><surname>Torrey</surname><given-names>Paul</given-names></name>
        <name><surname>Sijacki</surname><given-names>Debora</given-names></name>
        <name><surname>Xu</surname><given-names>Dandan</given-names></name>
        <name><surname>Snyder</surname><given-names>Greg</given-names></name>
        <name><surname>Nelson</surname><given-names>Dylan</given-names></name>
        <name><surname>Hernquist</surname><given-names>Lars</given-names></name>
      </person-group>
      <article-title>Introducing the Illustris Project: simulating the coevolution of dark and visible matter in the Universe</article-title>
      <source>Monthly Notices of the Royal Astronomical Society</source>
      <year iso-8601-date="2014-10">2014</year><month>10</month>
      <volume>444</volume>
      <issue>2</issue>
      <uri>https://arxiv.org/abs/1405.2921</uri>
      <pub-id pub-id-type="doi">10.1093/mnras/stu1536</pub-id>
      <fpage>1518</fpage>
      <lpage>1547</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Crain2015">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Crain</surname><given-names>Robert A.</given-names></name>
        <name><surname>Schaye</surname><given-names>Joop</given-names></name>
        <name><surname>Bower</surname><given-names>Richard G.</given-names></name>
        <name><surname>Furlong</surname><given-names>Michelle</given-names></name>
        <name><surname>Schaller</surname><given-names>Matthieu</given-names></name>
        <name><surname>Theuns</surname><given-names>Tom</given-names></name>
        <name><surname>Dalla Vecchia</surname><given-names>Claudio</given-names></name>
        <name><surname>Frenk</surname><given-names>Carlos S.</given-names></name>
        <name><surname>McCarthy</surname><given-names>Ian G.</given-names></name>
        <name><surname>Helly</surname><given-names>John C.</given-names></name>
        <name><surname>Jenkins</surname><given-names>Adrian</given-names></name>
        <name><surname>Rosas-Guevara</surname><given-names>Yetli M.</given-names></name>
        <name><surname>White</surname><given-names>Simon D. M.</given-names></name>
        <name><surname>Trayford</surname><given-names>James W.</given-names></name>
      </person-group>
      <article-title>The EAGLE simulations of galaxy formation: calibration of subgrid physics and model variations</article-title>
      <source>Monthly Notices of the Royal Astronomical Society</source>
      <year iso-8601-date="2015-06">2015</year><month>06</month>
      <volume>450</volume>
      <issue>2</issue>
      <uri>https://arxiv.org/abs/1501.01311</uri>
      <pub-id pub-id-type="doi">10.1093/mnras/stv725</pub-id>
      <fpage>1937</fpage>
      <lpage>1961</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Pillepich2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Pillepich</surname><given-names>Annalisa</given-names></name>
        <name><surname>Springel</surname><given-names>Volker</given-names></name>
        <name><surname>Nelson</surname><given-names>Dylan</given-names></name>
        <name><surname>Genel</surname><given-names>Shy</given-names></name>
        <name><surname>Naiman</surname><given-names>Jill</given-names></name>
        <name><surname>Pakmor</surname><given-names>Rüdiger</given-names></name>
        <name><surname>Hernquist</surname><given-names>Lars</given-names></name>
        <name><surname>Torrey</surname><given-names>Paul</given-names></name>
        <name><surname>Vogelsberger</surname><given-names>Mark</given-names></name>
        <name><surname>Weinberger</surname><given-names>Rainer</given-names></name>
        <name><surname>Marinacci</surname><given-names>Federico</given-names></name>
      </person-group>
      <article-title>Simulating galaxy formation with the IllustrisTNG model</article-title>
      <source>Monthly Notices of the Royal Astronomical Society</source>
      <year iso-8601-date="2018-01">2018</year><month>01</month>
      <volume>473</volume>
      <issue>3</issue>
      <uri>https://arxiv.org/abs/1703.02970</uri>
      <pub-id pub-id-type="doi">10.1093/mnras/stx2656</pub-id>
      <fpage>4077</fpage>
      <lpage>4106</lpage>
    </element-citation>
  </ref>
  <ref id="ref-McCarthy2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>McCarthy</surname><given-names>Ian G.</given-names></name>
        <name><surname>Schaye</surname><given-names>Joop</given-names></name>
        <name><surname>Bird</surname><given-names>Simeon</given-names></name>
        <name><surname>Le Brun</surname><given-names>Amandine M. C.</given-names></name>
      </person-group>
      <article-title>The BAHAMAS project: calibrated hydrodynamical simulations for large-scale structure cosmology</article-title>
      <source>Monthly Notices of the Royal Astronomical Society</source>
      <year iso-8601-date="2017-03">2017</year><month>03</month>
      <volume>465</volume>
      <issue>3</issue>
      <uri>https://arxiv.org/abs/1603.02702</uri>
      <pub-id pub-id-type="doi">10.1093/mnras/stw2792</pub-id>
      <fpage>2936</fpage>
      <lpage>2965</lpage>
    </element-citation>
  </ref>
  <ref id="ref-gpy2014">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>GPy</string-name>
      </person-group>
      <article-title>GPy: A Gaussian process framework in Python</article-title>
      <publisher-name>http://github.com/SheffieldML/GPy</publisher-name>
    </element-citation>
  </ref>
  <ref id="ref-pyDOE2012">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Baudin</surname><given-names>Michael</given-names></name>
        <name><surname>Christopoulou</surname><given-names>Maria</given-names></name>
        <name><surname>Collette</surname><given-names>Yann</given-names></name>
        <name><surname>Martinez</surname><given-names>Jean-Marc</given-names></name>
      </person-group>
      <article-title>pyDOE: The experimental design package for Python</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2012">2012</year>
      <uri>https://github.com/tisimst/pyDOE</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
