<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">5671</article-id>
<article-id pub-id-type="doi">10.21105/joss.05671</article-id>
<title-group>
<article-title>UQTestFuns: A Python3 library of uncertainty
quantification (UQ) test functions</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-8587-7730</contrib-id>
<name>
<surname>Wicaksono</surname>
<given-names>Damar</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-9214-8253</contrib-id>
<name>
<surname>Hecht</surname>
<given-names>Michael</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Center for Advanced Systems Understanding (CASUS) -
Helmholtz-Zentrum Dresden-Rossendorf (HZDR), Germany</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-06-30">
<day>30</day>
<month>6</month>
<year>2023</year>
</pub-date>
<volume>8</volume>
<issue>90</issue>
<fpage>5671</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>test functions</kwd>
<kwd>benchmark</kwd>
<kwd>uncertainty quantification</kwd>
<kwd>metamodeling</kwd>
<kwd>surrogate modeling</kwd>
<kwd>sensitivity analysis</kwd>
<kwd>reliability analysis</kwd>
<kwd>rare event estimation</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Researchers are continuously developing novel methods and
  algorithms in the field of applied uncertainty quantification (UQ).
  During the development phase of a novel method or algorithm,
  researchers and developers often rely on test functions taken from the
  literature for validation purposes. Afterward, they employ these test
  functions as a fair means to compare the performance of the novel
  method against that of the state-of-the-art methods in terms of
  accuracy and efficiency measures.</p>
  <p><monospace>UQTestFuns</monospace> is an open-source Python3 library
  of test functions commonly used within the applied UQ community.
  Specifically, the package provides:</p>
  <list list-type="bullet">
    <list-item>
      <p>an <bold>implementation with minimal dependencies</bold> (i.e.,
      NumPy and SciPy) <bold>and a common interface</bold> of many test
      functions available in the UQ literature</p>
    </list-item>
    <list-item>
      <p>a <bold>single entry point</bold> collecting test functions
      <italic>and</italic> their probabilistic input specifications in a
      single Python package</p>
    </list-item>
    <list-item>
      <p>an <bold>opportunity for an open-source contribution</bold>,
      supporting the implementation of new test functions and posting
      reference results.</p>
    </list-item>
  </list>
  <p><monospace>UQTestFuns</monospace> aims to save the researchers’ and
  developers’ time from having to reimplement many of the commonly used
  test functions themselves.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The field of uncertainty quantification (UQ) in applied science and
  engineering has grown rapidly in recent years. Novel methods and
  algorithms for metamodeling (surrogate modeling), reliability, and
  sensitivity analysis are being continuously developed. While such
  methods are aimed at addressing real-world problems, often involving
  large-scale complex computer models—from nuclear
  (<xref alt="Wicaksono et al., 2016" rid="ref-Wicaksono2016" ref-type="bibr">Wicaksono
  et al., 2016</xref>) to civil engineering
  (<xref alt="Castellon et al., 2023" rid="ref-Castellon2023" ref-type="bibr">Castellon
  et al., 2023</xref>), from physics
  (<xref alt="Adelmann, 2019" rid="ref-Adelmann2019" ref-type="bibr">Adelmann,
  2019</xref>) to biomedicine
  (<xref alt="Eck et al., 2015" rid="ref-Eck2015" ref-type="bibr">Eck et
  al., 2015</xref>)—researchers and developers may prefer to use the
  so-called UQ test functions for validation and benchmarking
  purposes.</p>
  <p>UQ test functions are mathematical functions taken as black boxes;
  they take a set of input values and produce output values. In a
  typical UQ analysis, the input variables are considered
  <italic>uncertain</italic> and thus modeled probabilistically. The
  results of a UQ analysis, in general, depend not only on the
  computational model under consideration but also on the specification
  of the input variables. Consequently, a UQ test function consists of
  both the specification of the function as well as probabilistic
  distribution specification of the inputs.</p>
  <p>UQ test functions are widely used in the community for several
  reasons:</p>
  <list list-type="bullet">
    <list-item>
      <p>Test functions are <italic>fast to evaluate</italic>, at least
      <italic>faster</italic> than their real-world counterparts.</p>
    </list-item>
    <list-item>
      <p>There are many test functions <italic>available in the
      literature</italic> for various types of analyses.</p>
    </list-item>
    <list-item>
      <p>Although test functions are taken as black boxes, <italic>their
      features are known</italic>; this knowledge enables a thorough
      diagnosis of a UQ method.</p>
    </list-item>
    <list-item>
      <p>Test functions provide a <italic>fair means</italic> for
      comparing the performance of various UQ methods in solving the
      same class of problems.</p>
    </list-item>
  </list>
  <p>Several efforts have been made to provide relevant UQ test
  functions to the community. For instance, researchers may refer to the
  following online resources to obtain UQ test functions (the list is by
  no means exhaustive):</p>
  <list list-type="bullet">
    <list-item>
      <p>The Virtual Library of Simulation Experiments (VLSE)
      (<xref alt="Surjanovic &amp; Bingham, 2013" rid="ref-VLSEU003A2013" ref-type="bibr">Surjanovic
      &amp; Bingham, 2013</xref>): This site is arguably the definitive
      repository for (but not exclusively) UQ test functions. It
      provides over a hundred test functions for numerous applications;
      each test function is described on a dedicated page that includes
      implementations in MATLAB and R.</p>
    </list-item>
    <list-item>
      <p>The Benchmark proposals of GdR
      (<xref alt="GdR MASCOT-NUM, 2008" rid="ref-GdRU003A2008" ref-type="bibr">GdR
      MASCOT-NUM, 2008</xref>): The site provides a series of documents
      that contain test function specifications.</p>
    </list-item>
    <list-item>
      <p>The Benchmark page of UQWorld
      (<xref alt="UQWorld, 2019" rid="ref-UQWorldU003A2019" ref-type="bibr">UQWorld,
      2019</xref>): This community site provides a selection of test
      functions for metamodeling, sensitivity analysis, and reliability
      analysis exercises along with their implementation in MATLAB.</p>
    </list-item>
    <list-item>
      <p>RPrepo—a reliability problems repository
      (<xref alt="Rózsás &amp; Slobbe, 2019" rid="ref-RozsasU003A2019" ref-type="bibr">Rózsás
      &amp; Slobbe, 2019</xref>): This repository contains numerous
      reliability analysis test functions implemented in Python. It is
      not, however, a stand-alone Python package.</p>
    </list-item>
  </list>
  <p>Using these online resources, one either needs to download each
  test function separately<xref ref-type="fn" rid="fn1">1</xref> or
  implement the functions following the provided formula (in the
  programming language of choice).</p>
  <p>As an alternative way for obtaining test functions, UQ analysis
  packages are often shipped with a selection of test functions of their
  own, either for illustration, validation, or benchmarking purposes.
  Examples from the applied UQ community in the Python ecosystem are
  (the numbers are as of 2023-06-30; once again, the list is
  non-exhaustive):</p>
  <list list-type="bullet">
    <list-item>
      <p>SALib
      (<xref alt="Herman &amp; Usher, 2017" rid="ref-Herman2017" ref-type="bibr">Herman
      &amp; Usher, 2017</xref>;
      <xref alt="Iwanaga et al., 2022" rid="ref-Iwanaga2022" ref-type="bibr">Iwanaga
      et al., 2022</xref>): Six test functions mainly for illustrating
      the package capabilities in the examples.</p>
    </list-item>
    <list-item>
      <p>PyApprox
      (<xref alt="Jakeman, 2019" rid="ref-Jakeman2019" ref-type="bibr">Jakeman,
      2019</xref>): 18 test functions, including some non-algebraic
      functions for benchmarking purposes.</p>
    </list-item>
    <list-item>
      <p>Surrogate Modeling Toolbox (SMT)
      (<xref alt="Bouhlel et al., 2019" rid="ref-Bouhlel2019" ref-type="bibr">Bouhlel
      et al., 2019</xref>,
      <xref alt="2023" rid="ref-Bouhlel2023" ref-type="bibr">2023</xref>):
      11 analytical and engineering problems for benchmarking
      purposes.</p>
    </list-item>
    <list-item>
      <p>OpenTURNS
      (<xref alt="Baudin et al., 2017" rid="ref-Baudin2017" ref-type="bibr">Baudin
      et al., 2017</xref>): 37 test functions packaged separately as
      <monospace>otbenchmark</monospace>
      (<xref alt="Baudin et al., 2021" rid="ref-Baudin2021" ref-type="bibr">Baudin
      et al., 2021</xref>;
      <xref alt="Fekhari et al., 2021" rid="ref-Fekhari2021" ref-type="bibr">Fekhari
      et al., 2021</xref>) for benchmarking purposes.</p>
    </list-item>
  </list>
  <p>These open-source packages already provide a wide variety of
  functions implemented in Python. Except for
  <monospace>otbenchmark</monospace>, the problem is that these
  functions are part of the respective package. To get access to the
  test functions belonging to a package, the whole analysis package must
  be installed first. Furthermore, test functions from a given package
  are often implemented in such a way that is tightly coupled with the
  package itself. To use or extend the test functions belonging to an
  analysis package, one may need to first learn some basic usage and
  specific terminologies of the package.</p>
  <p><monospace>UQTestFuns</monospace> aims to solve this problem by
  collecting UQ test functions into a single Python package with a few
  dependencies (i.e., NumPy
  (<xref alt="Harris et al., 2020" rid="ref-Harris2020" ref-type="bibr">Harris
  et al., 2020</xref>) and SciPy
  (<xref alt="Virtanen et al., 2020" rid="ref-Virtanen2020" ref-type="bibr">Virtanen
  et al., 2020</xref>)). The package enables researchers to conveniently
  access commonly used UQ test functions implemented in Python. Thanks
  to a common interface, researchers can use the available test
  functions and extend the package with new test functions with minimal
  overhead.</p>
  <p>Regarding its aim, <monospace>UQTestFuns</monospace> is mostly
  comparable to the package <monospace>otbenchmark</monospace>. Both
  also acknowledge the particularity of UQ test functions that requires
  combining a test function and the corresponding probabilistic input
  specification. There are, however, some major differences:</p>
  <list list-type="bullet">
    <list-item>
      <p>One of the <monospace>otbenchmark</monospace>’s main aims is to
      provide the OpenTURNS development team with a tool for helping
      with the implementation of new algorithms. As such, it is built on
      top of and coupled to OpenTURNS.
      <monospace>UQTestFuns</monospace>, on the other hand, has fewer
      dependencies and is leaner in its implementations; it is more
      agnostic with respect to any particular UQ analysis package.</p>
    </list-item>
    <list-item>
      <p><monospace>UQTestFuns</monospace> is more modest in its scope,
      that is, simply to provide a library of UQ test functions
      implemented in Python with a consistent interface and an online
      reference (similar to that of VLSE
      (<xref alt="Surjanovic &amp; Bingham, 2013" rid="ref-VLSEU003A2013" ref-type="bibr">Surjanovic
      &amp; Bingham, 2013</xref>)), and not, as in the case of
      <monospace>otbenchmark</monospace>, an automated benchmark
      framework<xref ref-type="fn" rid="fn2">2</xref>
      (<xref alt="Fekhari et al., 2021" rid="ref-Fekhari2021" ref-type="bibr">Fekhari
      et al., 2021</xref>).</p>
    </list-item>
  </list>
</sec>
<sec id="package-overview">
  <title>Package overview</title>
  <p>Consider a computational model that is represented as an
  <inline-formula><alternatives>
  <tex-math><![CDATA[M]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>M</mml:mi></mml:math></alternatives></inline-formula>-dimensional
  black-box function: <disp-formula><alternatives>
  <tex-math><![CDATA[
  \mathcal{M}: \mathbf{x} \in \mathcal{D}_{\mathbf{X}} \subseteq \mathbb{R}^M \mapsto y = \mathcal{M}(\mathbf{x}),  
  ]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>ℳ</mml:mi><mml:mo>:</mml:mo><mml:mi>𝐱</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>𝒟</mml:mi><mml:mi>𝐗</mml:mi></mml:msub><mml:mo>⊆</mml:mo><mml:msup><mml:mi>ℝ</mml:mi><mml:mi>M</mml:mi></mml:msup><mml:mo>↦</mml:mo><mml:mi>y</mml:mi><mml:mo>=</mml:mo><mml:mi>ℳ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
  where <inline-formula><alternatives>
  <tex-math><![CDATA[\mathcal{D}_{\mathbf{X}}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>𝒟</mml:mi><mml:mi>𝐗</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[y]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>y</mml:mi></mml:math></alternatives></inline-formula>
  denote the input domain and the quantity of interest (QoI),
  respectively.</p>
  <p>In practice, the exact values of the input variables are not
  exactly known and may be considered uncertain. The ensuing analysis
  involving uncertain input variables can be formalized in the
  uncertainty quantification (UQ) framework following Sudret
  (<xref alt="2007" rid="ref-Sudret2007" ref-type="bibr">2007</xref>) as
  illustrated in
  <xref alt="[fig:uq-framework]" rid="figU003Auq-framework">[fig:uq-framework]</xref>.</p>
  <fig>
    <caption><p>Uncertainty quantification (UQ) framework, adapted from
    Sudret
    (<xref alt="2007" rid="ref-Sudret2007" ref-type="bibr">2007</xref>).<styled-content id="figU003Auq-framework"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/uq-framework.png" />
  </fig>
  <p>The framework starts from the center, with the computational model
  <inline-formula><alternatives>
  <tex-math><![CDATA[\mathcal{M}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>ℳ</mml:mi></mml:math></alternatives></inline-formula>
  taken as a black box as defined above. Then it moves on to the
  probabilistic modeling of the (uncertain) input variables. Under the
  probabilistic modeling, the uncertain input variables are replaced by
  a random vector equipped with a joint probability density function
  (PDF) <inline-formula><alternatives>
  <tex-math><![CDATA[f_{\mathbf{X}}: \mathbf{x} \in \mathcal{D}_{\mathbf{X}} \subseteq \mathbb{R}^M \mapsto \mathbb{R}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>𝐗</mml:mi></mml:msub><mml:mo>:</mml:mo><mml:mi>𝐱</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>𝒟</mml:mi><mml:mi>𝐗</mml:mi></mml:msub><mml:mo>⊆</mml:mo><mml:msup><mml:mi>ℝ</mml:mi><mml:mi>M</mml:mi></mml:msup><mml:mo>↦</mml:mo><mml:mi>ℝ</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>.</p>
  <p>Afterward, the uncertainties of the input variables are propagated
  through the computational model <inline-formula><alternatives>
  <tex-math><![CDATA[\mathcal{M}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>ℳ</mml:mi></mml:math></alternatives></inline-formula>.
  The quantity of interest <inline-formula><alternatives>
  <tex-math><![CDATA[y]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>y</mml:mi></mml:math></alternatives></inline-formula>
  now becomes a random variable: <disp-formula><alternatives>
  <tex-math><![CDATA[  
  Y = \mathcal{M}(\mathbf{X}),\; \mathbf{X} \sim f_{\mathbf{X}}.  
  ]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>Y</mml:mi><mml:mo>=</mml:mo><mml:mi>ℳ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐗</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="0.278em"></mml:mspace><mml:mi>𝐗</mml:mi><mml:mo>∼</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mi>𝐗</mml:mi></mml:msub><mml:mi>.</mml:mi></mml:mrow></mml:math></alternatives></disp-formula>
  This leads to various downstream analyses such as <italic>reliability
  analysis</italic>, <italic>sensitivity analysis</italic>, and
  <italic>metamodeling</italic> (or <italic>surrogate
  modeling</italic>). In <monospace>UQTestFuns</monospace>, these are
  currently the three main classifications of UQ test functions by their
  applications in the
  literature<xref ref-type="fn" rid="fn3">3</xref>.</p>
  <sec id="reliability-analysis">
    <title>Reliability analysis</title>
    <p>To illustrate the test functions included in
    <monospace>UQTestFuns</monospace>, consider the circular pipe crack
    reliability problem, a <inline-formula><alternatives>
    <tex-math><![CDATA[2]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>2</mml:mn></mml:math></alternatives></inline-formula>-dimensional
    function for testing reliability analysis methods
    (<xref alt="Li et al., 2018" rid="ref-Li2018" ref-type="bibr">Li et
    al., 2018</xref>;
    <xref alt="Verma et al., 2015" rid="ref-Verma2015" ref-type="bibr">Verma
    et al., 2015</xref>): <disp-formula><alternatives>
    <tex-math><![CDATA[  
    g(\mathbf{x}; \mathbf{p}) = \mathcal{M}(\mathbf{x}; t, R) - M = 4 t \sigma_f R^2 \left( \cos{\left(\frac{\theta}{2}\right)} - \frac{1}{2} \sin{(\theta)} \right) - M,
    ]]></tex-math>
    <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo>;</mml:mo><mml:mi>𝐩</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>ℳ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo>;</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>R</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mn>4</mml:mn><mml:mi>t</mml:mi><mml:msub><mml:mi>σ</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mo>cos</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mfrac><mml:mi>θ</mml:mi><mml:mn>2</mml:mn></mml:mfrac><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mo>sin</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi>M</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
    where <inline-formula><alternatives>
    <tex-math><![CDATA[\mathbf{x} = \{ \sigma_f, \theta \}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>𝐱</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false" form="prefix">{</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>θ</mml:mi><mml:mo stretchy="false" form="postfix">}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>
    is the two-dimensional vector of input variables probabilistically
    defined further below; and <inline-formula><alternatives>
    <tex-math><![CDATA[\mathbf{p} = \{ t, R, M \}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>𝐩</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false" form="prefix">{</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>R</mml:mi><mml:mo>,</mml:mo><mml:mi>M</mml:mi><mml:mo stretchy="false" form="postfix">}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>
    is the vector of (deterministic) parameters.</p>
    <p>In a reliability analysis problem, a computational model
    <inline-formula><alternatives>
    <tex-math><![CDATA[\mathcal{M}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>ℳ</mml:mi></mml:math></alternatives></inline-formula>
    is often combined with another set of parameters (either uncertain
    or deterministic) to define the so-called <italic>performance
    function</italic> or <italic>limit-state function</italic> of a
    system denoted by <inline-formula><alternatives>
    <tex-math><![CDATA[g]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>g</mml:mi></mml:math></alternatives></inline-formula>.
    The task for a reliability analysis method is to estimate the
    failure probability of the system defined, following Sudret
    (<xref alt="2012" rid="ref-Sudret2012" ref-type="bibr">2012</xref>),
    as:
    <named-content id="eqU003Apf" content-type="equation"><disp-formula><alternatives>
    <tex-math><![CDATA[
    P_f = \mathbb{P}[g(\mathbf{X}; \mathbf{p}) \leq 0] = \int_{\mathcal{D}_f = \{ \mathbf{x} | g(\mathbf{x}; \mathbf{p}) \leq 0 \}} f_{\mathbf{X}} (\mathbf{x}) \; d\mathbf{x},]]></tex-math>
    <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>ℙ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">[</mml:mo><mml:mi>g</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐗</mml:mi><mml:mo>;</mml:mo><mml:mi>𝐩</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>≤</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="true" form="postfix">]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mo>∫</mml:mo><mml:mrow><mml:msub><mml:mi>𝒟</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mo stretchy="false" form="prefix">{</mml:mo><mml:mi>𝐱</mml:mi><mml:mo stretchy="false" form="prefix">|</mml:mo><mml:mi>g</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo>;</mml:mo><mml:mi>𝐩</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>≤</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false" form="postfix">}</mml:mo></mml:mrow></mml:msub><mml:msub><mml:mi>f</mml:mi><mml:mi>𝐗</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mspace width="0.278em"></mml:mspace><mml:mi>d</mml:mi><mml:mi>𝐱</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula></named-content>
    where <inline-formula><alternatives>
    <tex-math><![CDATA[g(\mathbf{x}; \mathbf{p}) \leq 0.0]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo>;</mml:mo><mml:mi>𝐩</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>≤</mml:mo><mml:mn>0.0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
    is defined as a <italic>failure state</italic>. The difficulty of
    evaluating the integral above stems from the fact that the
    integration domain <inline-formula><alternatives>
    <tex-math><![CDATA[D_f]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>D</mml:mi><mml:mi>f</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
    is defined implicitly.</p>
    <p>The circular pipe crack problem can be created in
    <monospace>UQTestFuns</monospace> as follows:</p>
    <code language="python">&gt;&gt;&gt; import uqtestfuns as uqtf
&gt;&gt;&gt; circular_pipe = uqtf.CircularPipeCrack()</code>
    <p>The resulting instance is <italic>callable</italic> and can be
    called with a set of valid input values. The probabilistic input
    model is an integral part of a UQ test function; indeed, according
    to <xref alt="Equation 1" rid="eqU003Apf">Equation 1</xref>, the
    analysis results depend on it. Therefore, in
    <monospace>UQTestFuns</monospace>, the input model following the
    original specification is always attached to the instance of the
    test function:</p>
    <preformat>&gt;&gt;&gt; print(circular_pipe.prob_input)
Name         : CircularPipeCrack-Verma2015
Spatial Dim. : 2
Description  : Input model for the circular pipe crack problem from Verma...
Marginals    :

  No.   Name     Distribution      Parameters          Description
-----  -------  --------------  -----------------  --------------------
    1  sigma_f      normal      [301.079  14.78 ]   flow stress [MNm]
    2   theta       normal        [0.503 0.049]    half crack angle [-]

Copulas      : None</preformat>
    <p>This probabilistic input model instance can be used to transform
    a set of values in a given domain (say, the unit hypercube
    <inline-formula><alternatives>
    <tex-math><![CDATA[[0, 1]^M]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msup><mml:mrow><mml:mo stretchy="true" form="prefix">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="true" form="postfix">]</mml:mo></mml:mrow><mml:mi>M</mml:mi></mml:msup></mml:math></alternatives></inline-formula>)
    to the domain of the test function.</p>
    <p>The limit-state surface (i.e., where
    <inline-formula><alternatives>
    <tex-math><![CDATA[g(\mathbf{x}) = 0]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>)
    for the circular pipe crack problem is shown in
    <xref alt="[fig:reliability]" rid="figU003Areliability">[fig:reliability]</xref>
    (left plot). In the middle plot, <inline-formula><alternatives>
    <tex-math><![CDATA[10^6]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msup><mml:mn>10</mml:mn><mml:mn>6</mml:mn></mml:msup></mml:math></alternatives></inline-formula>
    random sample points are overlaid; each point is classified whether
    it is in failure (red) or safe domain (blue). The histogram (right
    plot) shows the proportion of points that fall in the failure and
    safe domain.</p>
    <fig>
      <caption><p>Illustration of reliability analysis: Circular pipe
      crack
      problem.<styled-content id="figU003Areliability"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/reliability.png" />
    </fig>
    <p>As illustrated in the previous series of plots, the task for a
    reliability analysis method is to estimate the probability where
    <inline-formula><alternatives>
    <tex-math><![CDATA[g(\mathbf{X}) \leq 0]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐗</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>≤</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
    as accurately and with as few model evaluations as possible.
    <monospace>UQTestFuns</monospace> includes test functions used in
    reliability analysis exercises in various dimensions having
    different complexities of the limit-state surface.</p>
  </sec>
  <sec id="sensitivity-analysis">
    <title>Sensitivity analysis</title>
    <p>As another illustration, this time in the context of sensitivity
    analysis, consider the Sobol’-G function, an established sensitivity
    analysis test function
    (<xref alt="Saltelli &amp; Sobol’, 1995" rid="ref-Saltelli1995" ref-type="bibr">Saltelli
    &amp; Sobol’, 1995</xref>) included in
    <monospace>UQTestFuns</monospace>: <disp-formula><alternatives>
    <tex-math><![CDATA[
    \mathcal{M}(\mathbf{x}) = \prod_{m = 1}^M \frac{\lvert 4 x_m - 2 \rvert + a_m}{1 + a_m},
    ]]></tex-math>
    <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>ℳ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover><mml:mfrac><mml:mrow><mml:mo stretchy="false" form="prefix">|</mml:mo><mml:mn>4</mml:mn><mml:msub><mml:mi>x</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false" form="postfix">|</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
    where <inline-formula><alternatives>
    <tex-math><![CDATA[\mathbf{x} = \{ x_1, \ldots, x_M \}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>𝐱</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false" form="prefix">{</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false" form="postfix">}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>
    is the <inline-formula><alternatives>
    <tex-math><![CDATA[M]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>M</mml:mi></mml:math></alternatives></inline-formula>-dimensional
    vector of independent uniform random variables in
    <inline-formula><alternatives>
    <tex-math><![CDATA[[0, 1]^M]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msup><mml:mrow><mml:mo stretchy="true" form="prefix">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="true" form="postfix">]</mml:mo></mml:mrow><mml:mi>M</mml:mi></mml:msup></mml:math></alternatives></inline-formula>;
    and <inline-formula><alternatives>
    <tex-math><![CDATA[\mathbf{a} = \{ a_m = \frac{m - 1}{2.0}, m = 1, \ldots, M \}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>𝐚</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false" form="prefix">{</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>m</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mn>2.0</mml:mn></mml:mfrac><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:mi>M</mml:mi><mml:mo stretchy="false" form="postfix">}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>
    is the set of (deterministic) parameters.</p>
    <p>Unlike the previous test function example, the Sobol’-G test
    function is a variable-dimension test function and can be defined
    for any given dimension. For instance, to create a
    <inline-formula><alternatives>
    <tex-math><![CDATA[6]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>6</mml:mn></mml:math></alternatives></inline-formula>-dimensional
    Sobol’-G function:</p>
    <code language="python">&gt;&gt;&gt; sobol_g = uqtf.SobolG(spatial_dimension=6)  </code>
    <p>As before, the probabilistic input model of the function as
    prescribed in the original specification is attached to the instance
    of the test function (i.e., the <monospace>prob_input</monospace>
    property).</p>
    <p>The task of a sensitivity analysis method is to ascertain either
    qualitatively or quantitatively the most important input variables
    (for <italic>factor prioritization</italic>) or the least important
    input variables (for <italic>factor fixing/screening</italic>) with
    as few model evaluations as possible; for details on this topic,
    please refer to Saltelli et al.
    (<xref alt="2007" rid="ref-Saltelli2007" ref-type="bibr">2007</xref>)
    and Iooss &amp; Lemaı̂tre
    (<xref alt="2015" rid="ref-Iooss2015" ref-type="bibr">2015</xref>).
    <monospace>UQTestFuns</monospace> includes test functions used in
    sensitivity analysis exercises in various dimensions having
    different complexities in terms of the interactions between input
    variables.</p>
  </sec>
  <sec id="metamodeling">
    <title>Metamodeling</title>
    <p>In practice, the computational model
    <inline-formula><alternatives>
    <tex-math><![CDATA[\mathcal{M}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>ℳ</mml:mi></mml:math></alternatives></inline-formula>
    is often complex. Because a UQ analysis typically involves
    evaluating <inline-formula><alternatives>
    <tex-math><![CDATA[\mathcal{M}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>ℳ</mml:mi></mml:math></alternatives></inline-formula>
    numerous times (<inline-formula><alternatives>
    <tex-math><![CDATA[\sim 10^2]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo>∼</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>
    — <inline-formula><alternatives>
    <tex-math><![CDATA[10^6]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msup><mml:mn>10</mml:mn><mml:mn>6</mml:mn></mml:msup></mml:math></alternatives></inline-formula>),
    the analysis may become intractable if
    <inline-formula><alternatives>
    <tex-math><![CDATA[\mathcal{M}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>ℳ</mml:mi></mml:math></alternatives></inline-formula>
    is expensive to evaluate. As a consequence, in many UQ analyses, a
    metamodel (surrogate model) is employed. Based on a limited number
    of model (<inline-formula><alternatives>
    <tex-math><![CDATA[\mathcal{M}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>ℳ</mml:mi></mml:math></alternatives></inline-formula>)
    evaluations, such a metamodel should be able to capture the most
    important aspects of the input/output mapping but having much less
    cost per evaluation; it can, therefore, be used to replace
    <inline-formula><alternatives>
    <tex-math><![CDATA[\mathcal{M}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>ℳ</mml:mi></mml:math></alternatives></inline-formula>
    in the analysis.</p>
    <p>While not a goal of UQ analyses per se, metamodeling is nowadays
    an indispensable component of the UQ framework
    (<xref alt="Sudret et al., 2017" rid="ref-Sudret2017" ref-type="bibr">Sudret
    et al., 2017</xref>). <monospace>UQTestFuns</monospace> also
    includes test functions from the literature that are used as test
    functions in a metamodeling exercise.</p>
  </sec>
  <sec id="documentation">
    <title>Documentation</title>
    <p>The online documentation of <monospace>UQTestFuns</monospace> is
    an important aspect of the project. It includes a detailed
    description of each of the available UQ test functions, their
    references, and when applicable, published results of a UQ analysis
    conducted using the test function. Guides on how to add additional
    test functions as well as to update the documentation are also
    available.</p>
    <p>The package documentation is available on the
    <monospace>UQTestFuns</monospace>
    <ext-link ext-link-type="uri" xlink:href="https://uqtestfuns.readthedocs.io">readthedocs</ext-link>.</p>
  </sec>
</sec>
<sec id="authors-contribution-statement-and-acknowledgments">
  <title>Authors contribution statement and acknowledgments</title>
  <p>The contributions to this paper are listed according to the CRediT
  (Contributor Roles Taxonomy). <bold>Damar Wicaksono</bold>:
  Conceptualization, methodology, software, validation, and writing -
  original draft. <bold>Michael Hecht</bold>: Conceptualization, writing
  - review and editing, project administration, and funding
  acquisition.</p>
  <p>This work was partly funded by the Center for Advanced Systems
  Understanding (CASUS) that is financed by Germany’s Federal Ministry
  of Education and Research (BMBF) and by the Saxony Ministry for
  Science, Culture and Tourism (SMWK) with tax funds on the basis of a
  budget approved by the Saxony State Parliament.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-VLSEU003A2013">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Surjanovic</surname><given-names>S.</given-names></name>
        <name><surname>Bingham</surname><given-names>D.</given-names></name>
      </person-group>
      <article-title>Virtual library of simulation experiments: Test functions and datasets</article-title>
      <publisher-name>Retrieved June 30, 2023, from http://www.sfu.ca/~ssurjano</publisher-name>
      <year iso-8601-date="2013">2013</year>
    </element-citation>
  </ref>
  <ref id="ref-GdRU003A2008">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>GdR MASCOT-NUM</string-name>
      </person-group>
      <article-title>Benchmark proposals of GdR</article-title>
      <publisher-name>Retrieved June 30, 2023, from https://www.gdr-mascotnum.fr/benchmarks.html</publisher-name>
      <year iso-8601-date="2008">2008</year>
    </element-citation>
  </ref>
  <ref id="ref-UQWorldU003A2019">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>UQWorld</surname></name>
      </person-group>
      <article-title>Benchmark page of UQWorld, the applied uncertainty quantification community</article-title>
      <publisher-name>Retrieved June 30, 2023, from https://uqworld.org/c/uq-with-uqlab/benchmarks</publisher-name>
      <year iso-8601-date="2019">2019</year>
    </element-citation>
  </ref>
  <ref id="ref-RozsasU003A2019">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Rózsás</surname><given-names>Árpád</given-names></name>
        <name><surname>Slobbe</surname><given-names>Arthur</given-names></name>
      </person-group>
      <article-title>Repository and black-box reliability challenge 2019</article-title>
      <publisher-name>Retrieved June 30, 2023, from https://gitlab.com/rozsasarpi/rprepo/</publisher-name>
      <year iso-8601-date="2019">2019</year>
    </element-citation>
  </ref>
  <ref id="ref-Fekhari2021">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Fekhari</surname><given-names>Elias</given-names></name>
        <name><surname>Baudin</surname><given-names>Michaël</given-names></name>
        <name><surname>Chabridon</surname><given-names>Vincent</given-names></name>
        <name><surname>Jebroun</surname><given-names>Youssef</given-names></name>
      </person-group>
      <article-title>otbenchmark: An open source Python package for benchmarking and validating uncertainty quantification algorithms</article-title>
      <source>4th international conference on uncertainty quantification in computational sciences and engineering</source>
      <publisher-loc>Athens, Greece</publisher-loc>
      <year iso-8601-date="2021">2021</year>
      <pub-id pub-id-type="doi">10.7712/120221.8034.19093</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Jakeman2019">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Jakeman</surname><given-names>John D.</given-names></name>
      </person-group>
      <article-title>PyApprox</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <uri>https://github.com/sandialabs/pyapprox</uri>
    </element-citation>
  </ref>
  <ref id="ref-Baudin2021">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Baudin</surname><given-names>Michaël</given-names></name>
        <name><surname>Jebroun</surname><given-names>Youssef</given-names></name>
        <name><surname>Fekhari</surname><given-names>Elias</given-names></name>
        <name><surname>Chabridon</surname><given-names>Vincent</given-names></name>
      </person-group>
      <article-title>otbenchmark</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <uri>https://github.com/mbaudin47/otbenchmark</uri>
    </element-citation>
  </ref>
  <ref id="ref-Bouhlel2023">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Bouhlel</surname><given-names>Mohamed Amine</given-names></name>
        <name><surname>Hwang</surname><given-names>John</given-names></name>
        <name><surname>Bartoli</surname><given-names>Nathalie</given-names></name>
        <name><surname>Lafage</surname><given-names>Rémi</given-names></name>
        <name><surname>Morlier</surname><given-names>Joseph</given-names></name>
        <name><surname>Martins</surname><given-names>Joaquim</given-names></name>
      </person-group>
      <article-title>Surrogate Modeling Toolbox</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/SMTorg/smt</uri>
    </element-citation>
  </ref>
  <ref id="ref-Baudin2017">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Baudin</surname><given-names>Michaël</given-names></name>
        <name><surname>Dutfoy</surname><given-names>Anne</given-names></name>
        <name><surname>Iooss</surname><given-names>Bertrand</given-names></name>
        <name><surname>Popelin</surname><given-names>Anne-Laure</given-names></name>
      </person-group>
      <article-title>OpenTURNS: An industrial software for uncertainty quantification in simulation</article-title>
      <source>Handbook of uncertainty quantification</source>
      <publisher-name>Springer International Publishing</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <pub-id pub-id-type="doi">10.1007/978-3-319-12385-1_64</pub-id>
      <fpage>2001</fpage>
      <lpage>2038</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Sudret2017">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Sudret</surname><given-names>Bruno</given-names></name>
        <name><surname>Marelli</surname><given-names>Stefano</given-names></name>
        <name><surname>Wiart</surname><given-names>Joe</given-names></name>
      </person-group>
      <article-title>Surrogate models for uncertainty quantification: An overview</article-title>
      <source>2017 11th european conference on antennas and propagation (EUCAP)</source>
      <publisher-name>IEEE</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <pub-id pub-id-type="doi">10.23919/eucap.2017.7928679</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Sudret2012">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Sudret</surname><given-names>Bruno</given-names></name>
      </person-group>
      <article-title>Meta-models for structural reliability and uncertainty quantification</article-title>
      <source>Proceedings of the 5th asian-pacific symposium on structural reliability and its applications</source>
      <year iso-8601-date="2012">2012</year>
      <pub-id pub-id-type="doi">10.3850/978-981-07-2219-7_p321</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Iooss2015">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Iooss</surname><given-names>Bertrand</given-names></name>
        <name><surname>Lemaı̂tre</surname><given-names>Paul</given-names></name>
      </person-group>
      <article-title>A review on global sensitivity analysis methods</article-title>
      <source>Uncertainty management in simulation-optimization of complex systems</source>
      <publisher-name>Springer US</publisher-name>
      <year iso-8601-date="2015">2015</year>
      <pub-id pub-id-type="doi">10.1007/978-1-4899-7547-8_5</pub-id>
      <fpage>101</fpage>
      <lpage>122</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Sudret2007">
    <element-citation publication-type="thesis">
      <person-group person-group-type="author">
        <name><surname>Sudret</surname><given-names>Bruno</given-names></name>
      </person-group>
      <article-title>Uncertainty propagation and sensitivity analysis in mechanical models  to structural reliability and stochastic spectral methods.</article-title>
      <publisher-name>Université Blaise Pascal - Clermont, France</publisher-name>
      <publisher-loc>Clermont-Ferrand, France</publisher-loc>
      <year iso-8601-date="2007">2007</year>
    </element-citation>
  </ref>
  <ref id="ref-Verma2015">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Verma</surname><given-names>Ajit Kumar</given-names></name>
        <name><surname>Ajit</surname><given-names>Srividya</given-names></name>
        <name><surname>Karanki</surname><given-names>Durga Rao</given-names></name>
      </person-group>
      <article-title>Structural reliability</article-title>
      <source>Springer series in reliability engineering</source>
      <publisher-name>Springer London</publisher-name>
      <year iso-8601-date="2015">2015</year>
      <pub-id pub-id-type="doi">10.1007/978-1-4471-6269-8_8</pub-id>
      <fpage>257</fpage>
      <lpage>292</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Li2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Li</surname><given-names>Xu</given-names></name>
        <name><surname>Gong</surname><given-names>Chunlin</given-names></name>
        <name><surname>Gu</surname><given-names>Liangxian</given-names></name>
        <name><surname>Gao</surname><given-names>Wenkun</given-names></name>
        <name><surname>Jing</surname><given-names>Zhao</given-names></name>
        <name><surname>Su</surname><given-names>Hua</given-names></name>
      </person-group>
      <article-title>A sequential surrogate method for reliability analysis based on radial basis function</article-title>
      <source>Structural Safety</source>
      <year iso-8601-date="2018">2018</year>
      <volume>73</volume>
      <pub-id pub-id-type="doi">10.1016/j.strusafe.2018.02.005</pub-id>
      <fpage>42</fpage>
      <lpage>53</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Saltelli2007">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Saltelli</surname><given-names>Andrea</given-names></name>
        <name><surname>Ratto</surname><given-names>Marco</given-names></name>
        <name><surname>Andres</surname><given-names>Terry</given-names></name>
        <name><surname>Campolongo</surname><given-names>Francesca</given-names></name>
        <name><surname>Cariboni</surname><given-names>Jessica</given-names></name>
        <name><surname>Gatelli</surname><given-names>Debora</given-names></name>
        <name><surname>Saisana</surname><given-names>Michaela</given-names></name>
        <name><surname>Tarantola</surname><given-names>Stefano</given-names></name>
      </person-group>
      <source>Global sensitivity analysis. The primer</source>
      <publisher-name>Wiley</publisher-name>
      <year iso-8601-date="2007">2007</year>
      <pub-id pub-id-type="doi">10.1002/9780470725184</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Bouhlel2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bouhlel</surname><given-names>Mohamed Amine</given-names></name>
        <name><surname>Hwang</surname><given-names>John T.</given-names></name>
        <name><surname>Bartoli</surname><given-names>Nathalie</given-names></name>
        <name><surname>Lafage</surname><given-names>Rémi</given-names></name>
        <name><surname>Morlier</surname><given-names>Joseph</given-names></name>
        <name><surname>Martins</surname><given-names>Joaquim R. R. A.</given-names></name>
      </person-group>
      <article-title>A Python surrogate modeling framework with derivatives</article-title>
      <source>Advances in Engineering Software</source>
      <publisher-name>Elsevier BV</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <volume>135</volume>
      <pub-id pub-id-type="doi">10.1016/j.advengsoft.2019.03.005</pub-id>
      <fpage>102662</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Saltelli1995">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Saltelli</surname><given-names>Andrea</given-names></name>
        <name><surname>Sobol’</surname><given-names>Ilya M.</given-names></name>
      </person-group>
      <article-title>About the use of rank transformation in sensitivity analysis of model output</article-title>
      <source>Reliability Engineering &amp; System Safety</source>
      <year iso-8601-date="1995">1995</year>
      <volume>50</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1016/0951-8320(95)00099-2</pub-id>
      <fpage>225</fpage>
      <lpage>239</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Herman2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Herman</surname><given-names>Jon</given-names></name>
        <name><surname>Usher</surname><given-names>Will</given-names></name>
      </person-group>
      <article-title>SALib: An open-source python library for sensitivity analysis</article-title>
      <source>The Journal of Open Source Software</source>
      <year iso-8601-date="2017">2017</year>
      <volume>2</volume>
      <issue>9</issue>
      <pub-id pub-id-type="doi">10.21105/joss.00097</pub-id>
      <fpage>97</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Iwanaga2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Iwanaga</surname><given-names>Takuya</given-names></name>
        <name><surname>Usher</surname><given-names>William</given-names></name>
        <name><surname>Herman</surname><given-names>Jonathan</given-names></name>
      </person-group>
      <article-title>Toward SALib 2.0: Advancing the accessibility and interpretability of global sensitivity analyses</article-title>
      <source>Socio-Environmental Systems Modelling</source>
      <year iso-8601-date="2022">2022</year>
      <volume>4</volume>
      <pub-id pub-id-type="doi">10.18174/sesmo.18155</pub-id>
      <fpage>18155</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Eck2015">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Eck</surname><given-names>Vinzenz Gregor</given-names></name>
        <name><surname>Donders</surname><given-names>Wouter Paulus</given-names></name>
        <name><surname>Sturdy</surname><given-names>Jacob</given-names></name>
        <name><surname>Feinberg</surname><given-names>Jonathan</given-names></name>
        <name><surname>Delhaas</surname><given-names>Tammo</given-names></name>
        <name><surname>Hellevik</surname><given-names>Leif Rune</given-names></name>
        <name><surname>Huberts</surname><given-names>Wouter</given-names></name>
      </person-group>
      <article-title>A guide to uncertainty quantification and sensitivity analysis for cardiovascular applications</article-title>
      <source>International Journal for Numerical Methods in Biomedical Engineering</source>
      <year iso-8601-date="2015">2015</year>
      <volume>32</volume>
      <issue>8</issue>
      <pub-id pub-id-type="doi">10.1002/cnm.2755</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Wicaksono2016">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wicaksono</surname><given-names>Damar</given-names></name>
        <name><surname>Zerkak</surname><given-names>Omar</given-names></name>
        <name><surname>Pautz</surname><given-names>Andreas</given-names></name>
      </person-group>
      <article-title>Global sensitivity analysis of transient code output applied to a reflood experiment model using the TRACE code</article-title>
      <source>Nuclear Science and Engineering</source>
      <year iso-8601-date="2016">2016</year>
      <volume>184</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.13182/nse16-37</pub-id>
      <fpage>400</fpage>
      <lpage>429</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Adelmann2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Adelmann</surname><given-names>Andreas</given-names></name>
      </person-group>
      <article-title>On nonintrusive uncertainty quantification and surrogate model construction in particle accelerator modeling</article-title>
      <source>SIAM/ASA Journal on Uncertainty Quantification</source>
      <year iso-8601-date="2019">2019</year>
      <volume>7</volume>
      <issue>2</issue>
      <pub-id pub-id-type="doi">10.1137/16m1061928</pub-id>
      <fpage>383</fpage>
      <lpage>416</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Castellon2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Castellon</surname><given-names>Dario Fernandez</given-names></name>
        <name><surname>Fenerci</surname><given-names>Aksel</given-names></name>
        <name><surname>Wiig Petersen</surname></name>
        <name><surname>Øiseth</surname><given-names>Ole</given-names></name>
      </person-group>
      <article-title>Full long-term buffeting analysis of suspension bridges using Gaussian process surrogate modelling and importance sampling Monte Carlo simulations</article-title>
      <source>Reliability Engineering &amp; System Safety</source>
      <year iso-8601-date="2023">2023</year>
      <volume>235</volume>
      <pub-id pub-id-type="doi">10.1016/j.ress.2023.109211</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Virtanen2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
        <name><surname>Haberland</surname><given-names>Matt</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Burovski</surname><given-names>Evgeni</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>SciPy 1.0: Fundamental algorithms for scientific computing in Python</article-title>
      <source>Nature Methods</source>
      <publisher-name>Springer Science; Business Media LLC</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <volume>17</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1038/s41592-019-0686-2</pub-id>
      <fpage>261</fpage>
      <lpage>272</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Harris2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>Walt</surname><given-names>Stéfan J. van der</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Wieser</surname><given-names>Eric</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Array programming with NumPy</article-title>
      <source>Nature</source>
      <year iso-8601-date="2020">2020</year>
      <volume>585</volume>
      <issue>7825</issue>
      <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
      <fpage>357</fpage>
      <lpage>362</lpage>
    </element-citation>
  </ref>
</ref-list>
<fn-group>
  <fn id="fn1">
    <label>1</label><p>except for RPrepo, which allows for downloading
    the whole repository.</p>
  </fn>
  <fn id="fn2">
    <label>2</label><p>A fully functional benchmark suite may, however,
    be in the future built on top of
    <monospace>UQTestFuns</monospace>.</p>
  </fn>
  <fn id="fn3">
    <label>3</label><p>The classifications are not mutually exclusive; a
    given UQ test function may be applied in several contexts.</p>
  </fn>
</fn-group>
</back>
</article>
