<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">5947</article-id>
<article-id pub-id-type="doi">10.21105/joss.05947</article-id>
<title-group>
<article-title>EPyT: An EPANET-Python Toolkit for Smart Water Network
Simulations</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" equal-contrib="yes" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-2324-8661</contrib-id>
<name>
<surname>Kyriakou</surname>
<given-names>Marios S.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-7775-4319</contrib-id>
<name>
<surname>Demetriades</surname>
<given-names>Marios</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-8862-5205</contrib-id>
<name>
<surname>Vrachimis</surname>
<given-names>Stelios G.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-6184-6366</contrib-id>
<name>
<surname>Eliades</surname>
<given-names>Demetrios G.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-6495-9171</contrib-id>
<name>
<surname>Polycarpou</surname>
<given-names>Marios M.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>KIOS Research and Innovation Center of Excellence,
University of Cyprus, Cyprus</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Department of Electrical and Computer Engineering,
University of Cyprus, Cyprus</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-03-15">
<day>15</day>
<month>3</month>
<year>2023</year>
</pub-date>
<volume>8</volume>
<issue>92</issue>
<fpage>5947</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>EPANET</kwd>
<kwd>smart water networks</kwd>
<kwd>hydraulics</kwd>
<kwd>water quality</kwd>
<kwd>simulation</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>This paper introduces EPyT, an open-source Python package for
  providing a Python-based programming interface with the open-source
  hydraulic and quality modeling software EPANET, created by the US
  Environmental Protection Agency. EPyT extends the standard
  capabilities of the EPANET library, through the addition of new
  methods for research purposes. In addition to the extensive
  Application Programming Interface, EPyT is accompanied by a collection
  of water distribution benchmarks and more than 25 code examples that
  researchers can use as a starting point.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The modeling and simulation of drinking water systems under various
  conditions is crucial when studying the key challenges that smart
  water systems are facing, such as, detection and localization of
  leakages, monitoring and control of water quality, energy efficient
  operation, cybersecurity, and emergency management. The open-source
  EPANET library, a simulation engine of hydraulic and water quality
  dynamics developed by the US EPA
  (<xref alt="Rossman, 2000" rid="ref-rossman2000" ref-type="bibr">Rossman,
  2000</xref>) and supported by the <italic>OpenWaterAnalytics
  Community</italic>
  (<xref alt="Salomons et al., 2018" rid="ref-salomons2018" ref-type="bibr">Salomons
  et al., 2018</xref>), is widely used by researchers and practitioners
  in the field, mainly through its desktop interface or through its
  integration with commercial software.</p>
  <p>Researchers can design programs that make calls to the EPANET
  library, directly through programming languages and computing
  environments such as Python, R, C/C++, C#, MATLAB, and Visual Basic.
  The Application Programming Interface (API) of EPANET supports
  extensive parameterization, however, it requires a high level of
  expertise in software engineering (e.g., in coding, data structures,
  etc.). Alternatively, researchers can use “wrapper” functions, which
  provide a basic API for communicating with the library. Recently, the
  concept of plug-ins has started to evolve, further extending the
  capabilities of the wrappers toward more specific research challenges
  (<xref alt="Sela &amp; Housh, 2019" rid="ref-sela2019" ref-type="bibr">Sela
  &amp; Housh, 2019</xref>).</p>
  <sec id="challenge">
    <title>Challenge</title>
    <p>Both methods (direct calls and wrappers) are limited to the
    functions made available in the library and typically require a
    sufficient level of expertise in managing different data types and
    structures. Specifically, the fact that different researchers
    developed different data structures implies that sharing and reusing
    open-source code and releasing reproducible code using a
    standardized framework is not easy. With the increasing popularity
    of Python in both industry and academia, a comprehensive toolkit was
    missing to support a wide area of applications in Smart Water
    Network (SWN) research and development. This paper introduces the
    <monospace>EPANET-Python Toolkit</monospace> (EPyT), for performing
    research-related computations (e.g., simulations) and other types of
    analysis (e.g., graph theory), of drinking water distribution
    systems. Specifically, this software aims to solve the following
    problems:</p>
    <list list-type="order">
      <list-item>
        <p>Provide a standardized framework for researchers working in
        the area of SWN to implement their scientific findings.</p>
      </list-item>
      <list-item>
        <p>Reduce the time and effort needed to establish a connection
        with the EPANET libraries.</p>
      </list-item>
      <list-item>
        <p>Provide code templates for expanding the capabilities of
        EPANET and facilitating smart water systems research, while
        supporting the adoption of open-science and reproducible
        research best practices.</p>
      </list-item>
      <list-item>
        <p>Provide a similar data structure in Python and MATLAB, to
        facilitate translation between the two environments.</p>
      </list-item>
    </list>
  </sec>
  <sec id="state-of-the-field">
    <title>State of the field</title>
    <p>As a precursor of EPyT, the open-source
    <ext-link ext-link-type="uri" xlink:href="https://github.com/OpenWaterAnalytics/EPANET-Matlab-Toolkit">EPANET-MATLAB
    Toolkit</ext-link> (EMT) was released in 2009, and is continuously
    supported by the authors
    (<xref alt="Eliades et al., 2016" rid="ref-eliades2016" ref-type="bibr">Eliades
    et al., 2016</xref>). As a result of serving the needs of smart
    water researchers and the water engineering education community, it
    has been extended significantly. EMT provides extensive
    functionalities beyond the EPANET capabilities, to support the
    design and evaluation of research methodologies. It is currently
    made available under the <italic>OpenWaterAnalytics
    Community</italic>. Moreover, EMT introduced the
    <monospace>epanet</monospace> class, which provides standardized
    data structures and function names which are human-readable and
    self-explanatory. In addition to EPyT, a few other relevant
    Python-based tools connect with EPANET. The most advanced, and
    relevant, is the
    <ext-link ext-link-type="uri" xlink:href="https://github.com/USEPA/WNTR">Water
    Network Tool for Resilience</ext-link> (WNTR), which was developed
    by the US EPA and Sandia National Laboratories, and released under
    the Revised BSD license
    (<xref alt="Klise et al., 2017" rid="ref-klise2017" ref-type="bibr">Klise
    et al., 2017</xref>). <monospace>WNTR</monospace> facilitates the
    simulation of both hydraulic and quality dynamics, and in addition,
    it allows the simulation of various events such as pipe breaks,
    disasters such as earthquakes, power outages, fires, and
    contamination events. At the moment, <monospace>WNTR</monospace>
    includes only a subset of EPANET functions necessary for its
    simulation capabilities. The
    <ext-link ext-link-type="uri" xlink:href="https://github.com/oopnet/oopnet">Object-Oriented
    Pipe Network Analyzer</ext-link> (OOPNET) is a Python package that
    allows modelling and simulating hydraulic water distribution systems
    (<xref alt="Steffelbauer &amp; Fuchs-Hanusch, 2015" rid="ref-steffelbauer2015" ref-type="bibr">Steffelbauer
    &amp; Fuchs-Hanusch, 2015</xref>). A drawback is that, since
    <monospace>OOPNET</monospace> is based on the runtime executable of
    EPANET, it does not provide access to the internal library
    functions. The
    <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/owa-epanet/">OWA-EPANET</ext-link>
    is a SWIG auto-generated “thin” wrapper around the EPANET libraries.
    The goal of this package is to provide a Python interface that
    requires minimal effort to keep up to date with the core library and
    can be used by higher-level applications. Other Python-based EPANET
    toolkits include
    <ext-link ext-link-type="uri" xlink:href="https://github.com/Vitens/epynet">epynet</ext-link>,
    developed by Vitens, and
    <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/EPANETTOOLS/">epanettools</ext-link>
    which supports older versions of the EPANET toolkit. Recently a new
    tool has been published,
    <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/viswaternet/">viswaternet</ext-link>
    which provides a tool for visualizing static and time-varying
    attributes of EPANET-based water distribution systems; this tool can
    be used in parallel with EPyT for visualization purposes
    (<xref alt="Thomas et al., 2023" rid="ref-thomas2023" ref-type="bibr">Thomas
    et al., 2023</xref>).</p>
    <p>A key unique feature of EPyT, is that it captures the complete
    function and parameter space of EPANET. Another important aspect of
    EPyT is that it shares the same function names as the EPANET-MATLAB
    Toolkit. Our motivation is that this will facilitate the transition
    of state-of-the-art code originating from research and academia
    (which typically uses MATLAB) to more industrial applications, which
    typically use Python due to its open-source license and its extended
    set of data analytics modules.</p>
  </sec>
</sec>
<sec id="functionality">
  <title>Functionality</title>
  <p>The EPyT python class, <monospace>epanet</monospace>, includes
  properties of the input network model, static properties, public
  functions, and local functions that directly call the EPANET shared
  object library or the executable. The full API with detailed examples
  is provided in the
  <ext-link ext-link-type="uri" xlink:href="https://epanet-python-toolkit-epyt.readthedocs.io/en/latest/api.html">link</ext-link>.
  In the following paragraphs, we introduce a selection of the
  capabilities of the tool and an illustrative smart water research
  example.</p>
  <p>Through EPyT, users can easily load EPANET network models, as
  demonstrated by importing the module and loading the
  <monospace>L-TOWN.inp</monospace> network in a provided example
  (<xref alt="Vrachimis et al., 2022" rid="ref-vrachimis2022" ref-type="bibr">Vrachimis
  et al., 2022</xref>).</p>
  <code language="python">from epyt import epanet   # Import the module &quot;epanet&quot; from the package &quot;epyt&quot;  
G = epanet('L-TOWN.inp')  # Load the L-Town input file and create the object G</code>
  <p>In this example, <monospace>G</monospace> is an
  <monospace>epanet</monospace> object which can be defined
  mathematically as the set comprised of the network graph topology
  (such as nodes and links), structural parameters (such as pipe
  lengths, diameters, etc.), and functions (such as hydraulic solvers,
  etc.). <monospace>G</monospace> can also be shared between different
  functions as an argument.</p>
  <p>When the object is constructed, the module reads the EPANET input
  network file and populates more than 500 object parameters. To view
  some of the parameters and receive assistance with respect to the
  methods, the user can use the following commands:</p>
  <code language="python">dir(G)                      # Lists all available functions and properties in G
help(G.getNodeElevations)   # Retrieve usage examples for getNodeElevations</code>
  <p>Using object <monospace>G</monospace>, the user can call all the
  public toolkit functions. The toolkit contains a large set of
  functions that allow the user to retrieve or update the network data
  and simulate hydraulic and quality analysis for different scenarios
  using the EPANET libraries. Examples of how to retrieve some common
  network parameter values are provided below:</p>
  <code language="python">diameters = G.getLinkDiameter()     # retrieve Link diameters
elevations = G.getNodeElevations()  # retrieve Node elevations</code>
  <p>Variables <monospace>diameters</monospace> and
  <monospace>elevations</monospace> are two arrays of size 909 and 785
  respectively, corresponding to the number of links, and the number of
  nodes in the <monospace>L-Town</monospace> network, respectively. Note
  that, in case the network model changes, these parameters will be
  updated. This is demonstrated in the following example:</p>
  <code language="python">G.getLinkDiameter([2, 10])  # Link diameter for link indices 2 &amp; 10
G.setLinkDiameter(10, 90)   # Change the link with index 10 diameter to 90mm
G.getLinkDiameter([2, 10])  # Retrieve the diameter of link index 10</code>
  <p>Next, we show how to simulate the water distribution network, such
  as flows/pressures and water quality. Various functions have been
  included in the toolkit to simplify the workflows of solving and
  retrieving the data from the library memory. One way is to solve the
  hydraulics and quality equations using the EPANET library and store
  the results in data structures <monospace>H</monospace> and
  <monospace>Q</monospace>.</p>
  <code language="python">H = G.getComputedHydraulicTimeSeries()  # Solve hydraulics in library
Q = G.getComputedQualityTimeSeries()    # Solve quality dynamics in library</code>
  <p>To access the different values, the user can use the dot notation,
  such as <monospace>H.Head</monospace> to create an array with the
  hydraulic heads and <monospace>Q.NodeQuality</monospace> for the water
  quality at the nodes. It is important to note that the time intervals
  may be different for the hydraulic and quality time series, due to the
  simulation settings; the user can call <monospace>H.Time</monospace>
  and <monospace>Q.Time</monospace> respectively, to retrieve the time
  in seconds.</p>
  <p>Executing the function <monospace>G.plot()</monospace> displays a
  figure of the network along with its components. The nodes i.e.,
  junctions, reservoirs, tanks, and the links, i.e., pipes, valves, and
  pumps, are depicted using different colors and shapes.</p>
  <fig>
    <caption><p>The L-Town network layout using the plot
    function.</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/figures/ltown.png" />
  </fig>
  <p>Moreover, when computing the hydraulic and quality parameters, we
  can use the <monospace>plot_ts</monospace> function which plots the
  different time series. An example is provided below for link indices 1
  and 5.</p>
  <code language="python">## Plot link flows
hrs_time = H.Time / 3600                    # transform seconds into hours
link_indices = [1, 5]                       # select indices to plot
link_names = G.getLinkNameID(link_indices)  # get the ID of the link indices

G.plot_ts(X=hrs_time, 
          Y=R.Flow[:, link_indices], 
          title=f'Flow of links with ID: {link_names}',
          figure_size=[4, 3],
          legend_location='best', 
          xlabel='Time (hrs)', 
          ylabel=f'Flow ($m^3$/hour)', 
          marker=None, 
          color=['r', 'g'],
          fontsize=8,
          fontsize_title=8,
          labels=link_names, 
          save_fig=True, 
          filename='figures/paper_flows')
  </code>
  <fig>
    <caption><p>Example plot of water flows in selected
    pipes.<styled-content id="figU003Afig1"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/figures/paper_flows.png" />
  </fig>
  <p>The user can unload the EPANET dynamic library from Python memory,
  using the <monospace>G.unload()</monospace> method.</p>
  <p>Illustrative examples, as well as use cases on how to use EPyT, are
  provided in the
  <ext-link ext-link-type="uri" xlink:href="https://epanet-python-toolkit-epyt.readthedocs.io/">EPyT
  Documentation</ext-link>.</p>
</sec>
<sec id="conclusions">
  <title>Conclusions</title>
  <p>In this paper, we have introduced the EPANET-Python Toolkit, an
  open-source software that provides a user-friendly and intuitive
  interface for Python with EPANET. This research toolkit was developed
  with the aim of facilitating the transition of MATLAB users to Python,
  while offering a similar set of functions. With the EPyT toolkit,
  users can access EPANET through both the shared object library and the
  binary file. The toolkit can serve as a framework for designing new
  monitoring, control, and fault/event diagnosis algorithms, as well as
  for formulating optimization problems based on water distribution
  network models. Additionally, the EPANET-Python Toolkit is released
  under an open-source license (EUPL), allowing for contributions, issue
  reporting, and suggestions for improvement, in line with the best
  practices of the EPANET Open-Source Initiative. Future work will aim
  to expand the toolkit’s capabilities to include the EPANET-MSX
  library, thus providing multi-species water quality analysis for
  users.</p>
</sec>
<sec id="acknowledgments">
  <title>Acknowledgments</title>
  <p>This work was co-funded by the European Research Council (ERC)
  under the ERC Synergy Grant Water-Futures (Grant agreement
  No. 951424), the European Regional Development Fund, and the Republic
  of Cyprus through the Research and Innovation Foundation under the
  DigiWATER project (Grant agreement ENTERPRISES/0521/0081), and
  supported by the European Union Horizon 2020 programme and the
  Government of the Republic of Cyprus through the Deputy Ministry of
  Research, Innovation and Digital Policy under the KIOS CoE project
  (Grant agreement No. 739551).</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-sela2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Sela</surname><given-names>Lina</given-names></name>
        <name><surname>Housh</surname><given-names>Mashor</given-names></name>
      </person-group>
      <article-title>Increasing usability of water distribution analysis tools through plug-in development in EPANET</article-title>
      <source>Journal of Hydraulic Engineering</source>
      <year iso-8601-date="2019">2019</year>
      <volume>145</volume>
      <issue>5</issue>
      <uri>https://ascelibrary.org/doi/abs/10.1061/%28ASCE%29HY.1943-7900.0001596</uri>
      <pub-id pub-id-type="doi">10.1061/(ASCE)HY.1943-7900.0001596</pub-id>
      <fpage>02519001</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-rossman2000">
    <element-citation publication-type="report">
      <person-group person-group-type="author">
        <name><surname>Rossman</surname><given-names>Lewis A.</given-names></name>
      </person-group>
      <article-title>EPANET 2: Users manual</article-title>
      <publisher-name>US Environmental Protection Agency. Office of Research; Development. National Risk Management Research Laboratory; US Environmental Protection Agency. Office of Research; Development. National Risk Management Research Laboratory</publisher-name>
      <year iso-8601-date="2000">2000</year>
    </element-citation>
  </ref>
  <ref id="ref-salomons2018">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Salomons</surname><given-names>Elad</given-names></name>
        <name><surname>Hatchett</surname><given-names>Sam</given-names></name>
        <name><surname>Eliades</surname><given-names>Demetrios G</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>The EPANET open source initiative</article-title>
      <source>WDSA/CCWI joint conference proceedings</source>
      <year iso-8601-date="2018">2018</year>
      <volume>1</volume>
    </element-citation>
  </ref>
  <ref id="ref-eliades2016">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Eliades</surname><given-names>D. G.</given-names></name>
        <name><surname>Kyriakou</surname><given-names>M.</given-names></name>
        <name><surname>Vrachimis</surname><given-names>S.</given-names></name>
        <name><surname>Polycarpou</surname><given-names>M. M.</given-names></name>
      </person-group>
      <article-title>EPANET-MATLAB toolkit: An open-source software for interfacing EPANET with MATLAB</article-title>
      <source>14th international conference on computing and control for the water industry (CCWI)</source>
      <publisher-name>Amsterdam, the Netherlands</publisher-name>
      <year iso-8601-date="2016">2016</year>
      <fpage>8</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-klise2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Klise</surname><given-names>Katherine A.</given-names></name>
        <name><surname>Bynum</surname><given-names>Michael</given-names></name>
        <name><surname>Moriarty</surname><given-names>Dylan</given-names></name>
        <name><surname>Murray</surname><given-names>Regan</given-names></name>
      </person-group>
      <article-title>A software framework for assessing the resilience of drinking water systems to disasters with an example earthquake case study</article-title>
      <source>Environmental Modelling &amp; Software</source>
      <year iso-8601-date="2017">2017</year>
      <volume>95</volume>
      <issn>1364-8152</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S1364815216309501</uri>
      <pub-id pub-id-type="doi">10.1016/j.envsoft.2017.06.022</pub-id>
      <fpage>420</fpage>
      <lpage>431</lpage>
    </element-citation>
  </ref>
  <ref id="ref-steffelbauer2015">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Steffelbauer</surname><given-names>David</given-names></name>
        <name><surname>Fuchs-Hanusch</surname><given-names>Daniela</given-names></name>
      </person-group>
      <article-title>OOPNET: An object-oriented EPANET in python</article-title>
      <source>Procedia Engineering</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2015">2015</year>
      <volume>119</volume>
      <pub-id pub-id-type="doi">10.1016/j.proeng.2015.08.924</pub-id>
      <fpage>710</fpage>
      <lpage>718</lpage>
    </element-citation>
  </ref>
  <ref id="ref-thomas2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Thomas</surname><given-names>Meghna</given-names></name>
        <name><surname>Trimble</surname><given-names>Tyler</given-names></name>
        <name><surname>Sela</surname><given-names>Lina</given-names></name>
      </person-group>
      <article-title>VisWaterNet: A python package for visualization of water distribution networks</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <volume>8</volume>
      <issue>84</issue>
      <uri>https://doi.org/10.21105/joss.05139</uri>
      <pub-id pub-id-type="doi">10.21105/joss.05139</pub-id>
      <fpage>5139</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-vrachimis2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Vrachimis</surname><given-names>Stelios G.</given-names></name>
        <name><surname>Eliades</surname><given-names>Demetrios G.</given-names></name>
        <name><surname>Taormina</surname><given-names>Riccardo</given-names></name>
        <name><surname>Kapelan</surname><given-names>Zoran</given-names></name>
        <name><surname>Ostfeld</surname><given-names>Avi</given-names></name>
        <name><surname>Liu</surname><given-names>Shuming</given-names></name>
        <name><surname>Kyriakou</surname><given-names>Marios</given-names></name>
        <name><surname>Pavlou</surname><given-names>Pavlos</given-names></name>
        <name><surname>Qiu</surname><given-names>Mengning</given-names></name>
        <name><surname>Polycarpou</surname><given-names>Marios M.</given-names></name>
      </person-group>
      <article-title>Battle of the Leakage Detection and Isolation Methods</article-title>
      <source>Journal of Water Resources Planning and Management</source>
      <year iso-8601-date="2022-06">2022</year><month>06</month>
      <uri>https://doi.org/10.1061/(ASCE)WR.1943-5452.0001601</uri>
      <pub-id pub-id-type="doi">10.1061/(ASCE)WR.1943-5452.0001601</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
