<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6314</article-id>
<article-id pub-id-type="doi">10.21105/joss.06314</article-id>
<title-group>
<article-title>Hyperelastics.jl: A Julia package for hyperelastic
material modelling with a large collection of models</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-0456-8301</contrib-id>
<name>
<surname>Farmer</surname>
<given-names>Carson</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-1014-2275</contrib-id>
<name>
<surname>Medina</surname>
<given-names>Hector</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>School of Engineering, Liberty University, Lynchburg, VA,
United States</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-01-15">
<day>15</day>
<month>1</month>
<year>2024</year>
</pub-date>
<volume>9</volume>
<issue>96</issue>
<fpage>6314</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Julia</kwd>
<kwd>hyperelasticity</kwd>
<kwd>solid mechanics</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><monospace>Hyperelastics.jl</monospace> is a Julia
  (<xref alt="Bezanson et al., 2017" rid="ref-Bezanson2017" ref-type="bibr">Bezanson
  et al., 2017</xref>) implementation for the largest (70+) collection
  of hyperelastic material models in existence. The package provides a
  set of analytical and data-driven strain energy density functions
  (SEDF) and the tools required to calibrate the models to material
  tests. The package is designed to leverage multiple-dispatch to define
  a common set of functions for calculating the SEDF, Second Piola
  Kirchoff stress tensor, and the Cauchy stress tensor. The package
  provides: 1) a material model library that is AD compatible and 2) a
  set of extensible methods for easily defining and testing new material
  models. The package leverages the
  <monospace>ContinuumMechanicsBase.jl</monospace> pacakge for defining
  the continuum scale quantities and their corresponding
  relationships.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>The development of <monospace>Hyperelastics.jl</monospace> began as
  a study of the accuracy for a variety of material models for a set of
  experimental data. Often, researchers rely on custom implementations
  of material models and the data fitting process to find material
  parameters that match their experimental data. Hyperelastic models can
  well represent the nonlinear stress-deformation behavior of many
  biological tissues
  (<xref alt="Wex et al., 2015" rid="ref-wex2015isotropic" ref-type="bibr">Wex
  et al., 2015</xref>) as well as engineering polymeric materials
  (<xref alt="Beda, 2014" rid="ref-beda2014approach" ref-type="bibr">Beda,
  2014</xref>). Such material models find applications in developing new
  materials
  (<xref alt="Zhu et al., 2024" rid="ref-zhu2024comparative" ref-type="bibr">Zhu
  et al., 2024</xref>), understanding biological tissue mechanical
  response
  (<xref alt="Agarwal &amp; Pelegri, 2024" rid="ref-agarwal2024ogden" ref-type="bibr">Agarwal
  &amp; Pelegri, 2024</xref>), and soft robotics
  (<xref alt="Dalklint et al., 2024" rid="ref-dalklint2024simultaneous" ref-type="bibr">Dalklint
  et al., 2024</xref>).</p>
  <p>The SEDFs included in this package cover most (if not all) of the
  available analytical models from the literature to date, from
  constitutive to phenomelogical models. Furthermore, a selection of
  data-driven models are incldued as a starting point for the
  development of new methods.</p>
  <p><monospace>Hyperelastics.jl</monospace> is part of a spinoff
  Multi-Scale Material Modelling (<inline-formula><alternatives>
  <tex-math><![CDATA[M^3]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msup><mml:mi>M</mml:mi><mml:mn>3</mml:mn></mml:msup></mml:math></alternatives></inline-formula>)
  Suite being developed by Vagus LLC (www.vagusllc.com), as a byproduct
  result of ongoing multi-functional material research being carried out
  in the Translational Robotics and Controls Engineering Research
  (TRACER) Lab at Liberty University. A pure Julia implementation allows
  for the use of automatic differentiation (AD) packages to calculate
  the partial derivatives of the SEDF.
  <monospace>Hyperelastics.jl</monospace> is designed to leverage
  multiple-dispatch to define a common set of functions for calculating
  the SED, Second Piola Kirchoff Stress Tensor, and the Cauchy Stress
  Tensor. The package provides a set of hyperelastic models and an
  interface to <monospace>Optimization.jl</monospace>
  (<xref alt="Dixit &amp; Rackauckas, 2023" rid="ref-vaibhav_kumar_dixit_2023_7738525" ref-type="bibr">Dixit
  &amp; Rackauckas, 2023</xref>) for fitting model parameters.</p>
  <p>Currently, most commercial finite element codes only offer a
  limited number, often less than 10, of hyperelastic models which
  limits the extent to which researchers are able to accurately model a
  given material. The closest project to
  <monospace>Hyperelastics.jl</monospace> is the
  <monospace>matADi</monospace> project by Andreas Dutzler
  (<xref alt="Dutzler, 2023" rid="ref-matAdi2023" ref-type="bibr">Dutzler,
  2023</xref>) which has AD support for 18 material models.</p>
</sec>
<sec id="comparison-with-similar-packages">
  <title>Comparison with Similar Packages</title>
  <p>Similar to the <monospace>matADi</monospace> project by Andreas
  Dutzler, <monospace>Hyperelastics.jl</monospace> provides AD
  compatible implementations of hyperelastic models. However,
  <monospace>Hyperelastics.jl</monospace> provides a significantly
  larger set of material models and offers the potential for including
  different compressible material model terms.
  <monospace>matADi</monospace> does include models for anisotropic
  hyperelastic materials which is not support in the current version of
  <monospace>Hyperelastics.jl</monospace>. <monospace>matADi</monospace>
  is focused on python based implementations while
  <monospace>Hyperelastics.jl</monospace> is a pure Julia
  implementation.</p>
  <p>For using material models in a simulation, the leading commercial
  finite element analysis (FEA) programs, such as Abaqus, Ansys, and
  LS-DYNA, provide a significantly smaller set of hyperelastic models
  (often less than 10). Implementing a new model in the commercial
  programs is often a complex and time-consuming process requiring
  explicit definition of different partial derivative terms.
  Furthermore, the model implementations are not compatible between
  commercial programs. To fill the commercial gap, PolymerFEM
  <ext-link ext-link-type="uri" xlink:href="www.polymerfem.com">link</ext-link>
  provides a slightly larger set of models for implementation with a
  focus on visco-elastic and visco-plastic models. From the inital work
  done with <monospace>Hyperelastics.jl</monospace>, it is expected that
  the AD compatibility will allow for a significant improvement in terms
  of model construction for visco-hyperelastic models. More recently,
  Wan et al.
  (<xref alt="Wan et al., 2024" rid="ref-wan2024user" ref-type="bibr">Wan
  et al., 2024</xref>) implemented over 70 hyperelastic material models
  as Abaqus subroutines. The implementation is not AD compatible and is
  limited to the Abaqus FEA software.</p>
  <p>The <monospace>Hyperelastics.jl</monospace> package aims to fill
  the gap of providing an open-source and AD compatible implementation
  of the largest set of Hyperelatic material models available.
  AD-compatibility reduces the time from model selection to
  implementation when compared to implementing a new model in a
  commercial program. Furthermore, the open-source nature allows for the
  models to be accesible to researchers for further study.</p>
  <sec id="use-case-fitting-a-hyperelastic-model-to-experimental-data">
    <title>Use Case: Fitting a Hyperelastic Model to Experimental
    Data</title>
    <p>The common workflow for modelling a new hyperelastic material is
    shown in
    <xref alt="[fig:workflow]" rid="figU003Aworkflow">[fig:workflow]</xref>.
    The package is available for Julia 1.9 and above on all support
    operating systems. The process commonly begins with the user proving
    a set of stress-stretch data for a set of uniaxial and/or biaxial
    tension/compression experiments. The data is loaded into
    <monospace>HyperelasticUniaxialTest</monospace> or
    <monospace>HyperelasticBiaxialTest</monospace> depending on the
    nature of the experiment. If the material is assumed to be
    incompressible, the data for the other principal stretches is
    calculated. The selection of hyperelastic models is based on
    multiple dispatch. The primary functions for computations are:
    <monospace>StrainEnergyDensity</monospace>,
    <monospace>SecondPiolaKirchoffStressTensor</monospace>, and
    <monospace>CauchyStressTensor</monospace>. The Second Piola-Kirchoff
    and Cauchy Stress Tensors are computed by using the partial
    derivatives of the strain energy density function. By using AD, the
    implementation of partial derivatives for the majority of the models
    can be skipped. Furthmore, extensions are provided to load
    compatible AD functions based on the AD-backend selected. Material
    models are considered as <monospace>structs</monospace> and multiple
    dispatch is used to select the correct equation for the given model.
    The model parameters are similarly stored in either
    <monospace>structs</monospace>, <monospace>NamedTuples</monospace>,
    or other field-based data-types such as those in
    <monospace>ComponentArrays.jl</monospace> and
    <monospace>LabelledArrays.jl</monospace>.</p>
    <p>Once a user has their experimental data, model, and model
    parameters, an extension is loaded when
    <monospace>Optimization.jl</monospace> is used to load a function
    for calibrating the material model to the experimental data. The
    <monospace>HyperelasticProblem</monospace> function take the
    experimental data, model, model parameters, and AD-backend and
    creates an <monospace>OptimizationProblem</monospace> for use with
    the solvers from <monospace>Optimization.jl</monospace>. Once the
    model is calibrated, the <monospace>predict</monospace> function is
    used to predict the response of the model to the experimental data.
    The results can then be plotted to compare the experimental data to
    the model prediction.</p>
    <p>Additionally, by leveraging multiple dispatch, a selection of
    data-driven hyperelastic material models have been implemented for
    use with the same interface as the analytical models. This allows
    for rapid development of new models and the inclusion of new
    data-driven models as they become available.</p>
    <p>Lastly, with the optimized model parameters, the material model
    is able to be implemented into a larger simulation or analysis. Some
    examples would include performing a finite element simulation with
    <monospace>Gridap.jl</monospace> or
    <monospace>Ferrite.jl</monospace> or interpreting the model
    parameters in the context of the material microstructure. The
    package is designed to be extensible and to allow for the rapid
    development of new models and the inclusion of new data-driven
    models as they become available.</p>
    <fig>
      <caption><p>The most common use case for
      <monospace>Hyperelastics.jl</monospace> is to go from experimental
      or <italic>ab initio</italic> stress-stretch data for uniaxial or
      biaxial test(s) and proceed to fit and implement the model into a
      larger simulation or analysis. The respective data types used
      throughout the process are shown in the figure.
      <styled-content id="figU003Aworkflow"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/image.png" />
    </fig>
  </sec>
</sec>
<sec id="example-usage">
  <title>Example Usage</title>
  <p>For an example of going from experimental data to fitting a model,
  refer to the package documentation.</p>
</sec>
<sec id="availability">
  <title>Availability</title>
  <p>Hyperelastics.jl can be found on
  <ext-link ext-link-type="uri" xlink:href="https://github.com/TRACER-LULab/Hyperelastics.jl">GitHub</ext-link>.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The TRACER Lab is supported by the School of Engineering and the
  Center for Engineering Research and Education (CERE) at Liberty
  University.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-dalklint2024simultaneous">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Dalklint</surname><given-names>Anna</given-names></name>
        <name><surname>Wallin</surname><given-names>Mathias</given-names></name>
        <name><surname>Tortorelli</surname><given-names>Daniel</given-names></name>
      </person-group>
      <article-title>Simultaneous shape and topology optimization of inflatable soft robots</article-title>
      <source>Computer Methods in Applied Mechanics and Engineering</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <volume>420</volume>
      <pub-id pub-id-type="doi">10.1016/j.cma.2024.116751</pub-id>
      <fpage>116751</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-zhu2024comparative">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Zhu</surname><given-names>Lingrui</given-names></name>
        <name><surname>Zhan</surname><given-names>Lin</given-names></name>
        <name><surname>Xiao</surname><given-names>Rui</given-names></name>
      </person-group>
      <article-title>A comparative study of the entanglement models toward simulating hyperelastic behaviors</article-title>
      <source>Journal of Applied Mechanics</source>
      <publisher-name>American Society of Mechanical Engineers Digital Collection</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <volume>91</volume>
      <issue>2</issue>
      <pub-id pub-id-type="doi">10.1115/1.4063348</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-agarwal2024ogden">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Agarwal</surname><given-names>Mohit</given-names></name>
        <name><surname>Pelegri</surname><given-names>Assimina A</given-names></name>
      </person-group>
      <article-title>An ogden hyperelastic 3D micromechanical model to depict poynting effect in brain white matter</article-title>
      <source>Heliyon</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <pub-id pub-id-type="doi">10.1016/j.heliyon.2024.e25379</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-wan2024user">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wan</surname><given-names>Xianqi</given-names></name>
        <name><surname>Zhang</surname><given-names>Yaru</given-names></name>
        <name><surname>Zhang</surname><given-names>Qiang</given-names></name>
        <name><surname>Zhang</surname><given-names>Liqun</given-names></name>
        <name><surname>Li</surname><given-names>Fanzhu</given-names></name>
      </person-group>
      <article-title>User subroutines platform development for rubber hyperelastic constitutive models and its application in finite element analysis</article-title>
      <source>Computational Materials Science</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <volume>237</volume>
      <pub-id pub-id-type="doi">10.1016/j.commatsci.2024.112885</pub-id>
      <fpage>112885</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-matAdi2023">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Dutzler</surname><given-names>Andreas</given-names></name>
      </person-group>
      <article-title>matADi: Material definition with automatic differentiation</article-title>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/adtzlr/matadi</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.5519971</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-wex2015isotropic">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wex</surname><given-names>Cora</given-names></name>
        <name><surname>Arndt</surname><given-names>Susann</given-names></name>
        <name><surname>Stoll</surname><given-names>Anke</given-names></name>
        <name><surname>Bruns</surname><given-names>Christiane</given-names></name>
        <name><surname>Kupriyanova</surname><given-names>Yuliya</given-names></name>
      </person-group>
      <article-title>Isotropic incompressible hyperelastic models for modelling the mechanical behaviour of biological tissues: A review</article-title>
      <source>Biomedical Engineering/Biomedizinische Technik</source>
      <publisher-name>De Gruyter</publisher-name>
      <year iso-8601-date="2015">2015</year>
      <volume>60</volume>
      <issue>6</issue>
      <pub-id pub-id-type="doi">10.1515/bmt-2014-0146</pub-id>
      <fpage>577</fpage>
      <lpage>592</lpage>
    </element-citation>
  </ref>
  <ref id="ref-beda2014approach">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Beda</surname><given-names>T</given-names></name>
      </person-group>
      <article-title>An approach for hyperelastic model-building and parameters estimation a review of constitutive models</article-title>
      <source>European Polymer Journal</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2014">2014</year>
      <volume>50</volume>
      <pub-id pub-id-type="doi">10.1016/j.eurpolymj.2013.10.006</pub-id>
      <fpage>97</fpage>
      <lpage>108</lpage>
    </element-citation>
  </ref>
  <ref id="ref-vaibhav_kumar_dixit_2023_7738525">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Dixit</surname><given-names>Vaibhav Kumar</given-names></name>
        <name><surname>Rackauckas</surname><given-names>Christopher</given-names></name>
      </person-group>
      <article-title>Optimization.jl: A unified optimization package</article-title>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2023-03">2023</year><month>03</month>
      <uri>https://doi.org/10.5281/zenodo.7738525</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.7738525</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Bezanson2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bezanson</surname><given-names>Jeff</given-names></name>
        <name><surname>Edelman</surname><given-names>Alan</given-names></name>
        <name><surname>Karpinski</surname><given-names>Stefan</given-names></name>
        <name><surname>Shah</surname><given-names>Viral B.</given-names></name>
      </person-group>
      <article-title>Julia: A fresh approach to numerical computing</article-title>
      <source>SIAM Review</source>
      <year iso-8601-date="2017">2017</year>
      <volume>59</volume>
      <issue>1</issue>
      <uri>
                   https://doi.org/10.1137/141000671
                   </uri>
      <pub-id pub-id-type="doi">10.1137/141000671</pub-id>
      <fpage>65</fpage>
      <lpage>98</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
