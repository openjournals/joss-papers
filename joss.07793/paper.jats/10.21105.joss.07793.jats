<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">7793</article-id>
<article-id pub-id-type="doi">10.21105/joss.07793</article-id>
<title-group>
<article-title>EKF_CAL: Extended Kalman Filter-based Calibration and
Localization</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-3051-2213</contrib-id>
<name>
<surname>Hartzer</surname>
<given-names>Jacob</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-3906-7574</contrib-id>
<name>
<surname>Saripalli</surname>
<given-names>Srikanth</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Texas A&amp;M University, USA</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-01-01">
<day>1</day>
<month>1</month>
<year>2023</year>
</pub-date>
<volume>10</volume>
<issue>109</issue>
<fpage>7793</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>C++</kwd>
<kwd>ROS</kwd>
<kwd>Kalman Filtering</kwd>
<kwd>Monte Carlo Simulation</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The increasing complexity of autonomous systems operating in
  challenging environments demands robust and accurate calibration
  methods. Modern autonomous systems use multiple types of sensors to
  handle a wide variety of environments. To improve system robustness in
  these challenging environments, redundant sensors are often used to
  protect against erroneous sensor measurements or outright sensor
  failures. However, the underlying navigation system must be designed
  in such a way as to handle these duplicate measurement streams and the
  addition of each sensor introduces parameters that must be properly
  calibrated before these sensors’ measurements can be effectively used.
  Moreover, these underlying calibration parameters can change, and
  often must be estimated <italic>online</italic>. Kalman filters are a
  common and near-optimal method to estimate a system’s state given a
  series of measurements and transitions through time. Improper tuning
  can lead to filter instability and poor performance . As such, it is
  important to verify a filters performance and stability across a large
  set of runs in the desired operating environment with various initial
  errors in state estimates.</p>
  <p>This software package, <monospace>ekf_cal</monospace>, seeks to
  provide a framework for testing multi-sensor Kalman filters using
  Monte Carlo techniques. By running a given sensor configuration
  through a large sample of runs, each with varying initial conditions
  and errors, stability is verified. By looking at the resulting error
  distributions in any of the system states, the expected system bias
  and error are estimated. In addition to the simulation running
  framework, additional scripts are provided that calculate the
  distribution of errors for a Monte Carlo and generate a report showing
  state values and errors across the run to aid in analysis. The
  Multi-State Constraint Kalman Filter (MSCKF) formulation used in this
  work was originally proposed proposed in
  (<xref alt="Mourikis &amp; Roumeliotis, 2007" rid="ref-MSCKF" ref-type="bibr">Mourikis
  &amp; Roumeliotis, 2007</xref>). Additionally, this work heavily
  utilizes the Eigen
  (<xref alt="Guennebaud et al., 2010" rid="ref-eigen" ref-type="bibr">Guennebaud
  et al., 2010</xref>) and OpenCV libraries
  (<xref alt="Bradski, 2000" rid="ref-opencv" ref-type="bibr">Bradski,
  2000</xref>). Lastly, this software package provides example
  implementations of state-of-the-art Kalman filter-based calibration
  routines and is currently used for ongoing research
  (<xref alt="Hartzer &amp; Saripalli, 2022" rid="ref-2022_Multi_Cam" ref-type="bibr">Hartzer
  &amp; Saripalli, 2022</xref>) and
  (<xref alt="Hartzer &amp; Saripalli, 2023" rid="ref-2023_Multi_IMU" ref-type="bibr">Hartzer
  &amp; Saripalli, 2023</xref>).</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Currently, there are not many software packages for prototyping and
  evaluating Kalman Filter-based calibration and localization
  algorithms. The most popular, which also includes a simulation
  architecture, is Open-VINS
  (<xref alt="Geneva et al., 2020" rid="ref-Geneva2020ICRA" ref-type="bibr">Geneva
  et al., 2020</xref>), which makes use of interpolated B-splines to
  define true motion data. Inertial measurements are sampled from the
  second derivative of the spline path, and bearing camera measurements
  are generated using global fixed features which are projected onto the
  camera sensor frame. The primary limitation of Open-VINS is the
  limited types of sensors available and the constraint to a single IMU
  for filtering.</p>
  <p>There exist other batch-based (offline) calibration packages, such
  as the Matlab Camera Calibration Toolbox
  (<xref alt="Inc., 2024" rid="ref-matlab-cam-calib" ref-type="bibr">Inc.,
  2024</xref>) for mono and stereo camera setups, where the primary
  limitations are the limited sensor types and closed-source codebase.
  Additionally, there are batch-based optimizers such as Kalibr
  (<xref alt="Rehder et al., 2016" rid="ref-Rehder" ref-type="bibr">Rehder
  et al., 2016</xref>) or OpenCalib
  (<xref alt="Yan et al., 2022" rid="ref-opencalib" ref-type="bibr">Yan
  et al., 2022</xref>) that provide tools for performing calibration of
  multi-sensor systems but do not provide these calibrations online.
  These software applications are therefore susceptible to changing
  calibration parameters, such as drifts or shifts in mounting.</p>
  <p>The <monospace>ekf_cal</monospace> package, in contrast, seeks to
  provide additional avenues for testing Kalman filter based calibration
  and localization techniques while supporting multi-IMU filtering, GNSS
  sensors, and fiducial markers. Similar to existing work, this is all
  done on top of a B-spline based truth model and global feature
  points.</p>
  <p>In summary, this package</p>
  <list list-type="bullet">
    <list-item>
      <p>Provides examples of the filtering techniques outlined in
      Hartzer &amp; Saripalli
      (<xref alt="2022" rid="ref-2022_Multi_Cam" ref-type="bibr">2022</xref>)
      and Hartzer &amp; Saripalli
      (<xref alt="2023" rid="ref-2023_Multi_IMU" ref-type="bibr">2023</xref>)</p>
    </list-item>
    <list-item>
      <p>Provides a Monte Carlo architecture for testing filter-based
      calibration techniques</p>
    </list-item>
    <list-item>
      <p>Provides analysis tools for plotting results and evaluating
      performance statistics</p>
    </list-item>
  </list>
</sec>
<sec id="capabilities">
  <title>Capabilities</title>
  <p>The <monospace>ekf_cal</monospace> package supports any number or
  combination of the sensors listed in the following sections. Errors in
  sensor measurements and calibrations are varied across Monte Carlo
  runs, which allow for more robust testing of calibration and
  localization algorithms. The key parameters supported by all sensors
  are</p>
  <table-wrap>
    <table>
      <thead>
        <tr>
          <th>Sensor Parameter</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><monospace>name</monospace></td>
          <td>Identifying sensor name</td>
        </tr>
        <tr>
          <td><monospace>topic</monospace></td>
          <td>ROS topic to subscribe to</td>
        </tr>
        <tr>
          <td><monospace>rate</monospace></td>
          <td>Sensor update rate</td>
        </tr>
        <tr>
          <td><monospace>data_logging_on</monospace></td>
          <td>Flag to enable data logging</td>
        </tr>
        <tr>
          <td><monospace>data_log_rate</monospace></td>
          <td>Data logging rate</td>
        </tr>
        <tr>
          <td><monospace>output_directory</monospace></td>
          <td>Data logging output directory</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <sec id="imu">
    <title>IMU</title>
    <p>The <monospace>ekf_cal</monospace> package supports the use of
    multiple IMU for updating the state estimate of acceleration and
    angular rates. A single IMU can be selected to provide state
    predictions, or all IMU can be used to provide state updates within
    an Extended Kalman Filter framework. The key IMU parameters
    supported are</p>
    <table-wrap>
      <table>
        <thead>
          <tr>
            <th>IMU Parameter</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td><monospace>acc_bias_stability</monospace></td>
            <td>Intrinsic accelerometer bias stability</td>
          </tr>
          <tr>
            <td><monospace>acc_bias</monospace></td>
            <td>Accelerometer bias vector</td>
          </tr>
          <tr>
            <td><monospace>ang_i_to_b</monospace></td>
            <td>IMU Angular offset quaternion in body frame</td>
          </tr>
          <tr>
            <td><monospace>ang_stability</monospace></td>
            <td>Extrinsic angular stability</td>
          </tr>
          <tr>
            <td><monospace>is_extrinsic</monospace></td>
            <td>Flag to enable extrinsic calibration</td>
          </tr>
          <tr>
            <td><monospace>is_intrinsic</monospace></td>
            <td>Flag to enable intrinsic calibration</td>
          </tr>
          <tr>
            <td><monospace>omg_bias_stability</monospace></td>
            <td>Intrinsic gyroscope bias stability</td>
          </tr>
          <tr>
            <td><monospace>omg_bias</monospace></td>
            <td>Gyroscope bias vector</td>
          </tr>
          <tr>
            <td><monospace>pos_i_in_b</monospace></td>
            <td>IMU Position offset vector in body frame</td>
          </tr>
          <tr>
            <td><monospace>pos_stability</monospace></td>
            <td>Extrinsic position stability</td>
          </tr>
          <tr>
            <td><monospace>variance</monospace></td>
            <td>Initial state variance</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
  </sec>
  <sec id="cameras">
    <title>Cameras</title>
    <p>The <monospace>ekf_cal</monospace> package supports the use of
    multiple cameras, which can simultaneously use MSCKF-based feature
    tracking and/or fiducial marker tracking for measurement updates.
    For visual inertial odometry, the package is designed to support the
    use of any feature tracker, descriptor, or matcher made available
    through the OpenCV package
    (<xref alt="Bradski, 2000" rid="ref-opencv" ref-type="bibr">Bradski,
    2000</xref>). For fiducial measurements, the package supports the
    use of Aruco or Charuco grid boards. The key camera parameters
    supported are</p>
    <table-wrap>
      <table>
        <thead>
          <tr>
            <th>Camera Parameter</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td><monospace>ang_c_to_b</monospace></td>
            <td>Camera angular offset quaternion in body frame</td>
          </tr>
          <tr>
            <td><monospace>ang_stability</monospace></td>
            <td>Extrinsic angular stability</td>
          </tr>
          <tr>
            <td><monospace>fiducial</monospace></td>
            <td>Name of Fiducial to load</td>
          </tr>
          <tr>
            <td><monospace>intrinsics</monospace></td>
            <td>Camera intrinsics</td>
          </tr>
          <tr>
            <td><monospace>pos_c_in_b</monospace></td>
            <td>Camera position offset vector in body frame</td>
          </tr>
          <tr>
            <td><monospace>pos_stability</monospace></td>
            <td>Extrinsic position stability</td>
          </tr>
          <tr>
            <td><monospace>tracker</monospace></td>
            <td>Name of Tracker to load</td>
          </tr>
          <tr>
            <td><monospace>variance</monospace></td>
            <td>Initial state variance</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
  </sec>
  <sec id="gps">
    <title>GPS</title>
    <p>The <monospace>ekf_cal</monospace> package supports the use of
    multiple GPS antenna for updating the state estimate of position in
    the global frame. The currently implemented filter can utilize these
    measurements to estimate the initial global to local frame
    transformation as well as provide online estimates of the heading of
    the local frame. The key GPS parameters supported are</p>
    <table-wrap>
      <table>
        <thead>
          <tr>
            <th>GPS Parameter</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td><monospace>ang_l_to_g</monospace></td>
            <td>Local angle to global frame</td>
          </tr>
          <tr>
            <td><monospace>is_extrinsic</monospace></td>
            <td>Flag to enable extrinsic calibration</td>
          </tr>
          <tr>
            <td><monospace>pos_a_in_b</monospace></td>
            <td>GPS antenna position offset vector in body frame</td>
          </tr>
          <tr>
            <td><monospace>pos_l_in_g</monospace></td>
            <td>Local LLA position in global frame</td>
          </tr>
          <tr>
            <td><monospace>pos_stability</monospace></td>
            <td>Extrinsic position stability</td>
          </tr>
          <tr>
            <td><monospace>variance</monospace></td>
            <td>Initial state variance</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
  </sec>
  <sec id="plotting-and-analysis">
    <title>Plotting and Analysis</title>
    <p><monospace>ekf_cal</monospace> provides various tools for
    evaluating the performance of multi-sensor Kalman filters. These
    include Monte Carlo testing, report generation, and statistical
    summary functions that simplify the analysis of algorithm changes
    and development. Perturbations are automatically added to not only
    sensor measurements, but the underlying truth model. This allows for
    variations in paths taken, sensor measurement times, and measurement
    values themselves, among others. An example of perturbations in true
    body positions is shown in Figure
    <xref alt="[pos]" rid="pos">[pos]</xref>.</p>
    <fig>
      <caption><p>Simulated positions generated from spline
      inputs.<styled-content id="pos"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="body-pos.png" />
    </fig>
    <p>The main goal of this software is the evaluation of calibration
    kalman filters for stability and accuracy. Therefore, error plots
    are generated with respect to truth to show convergence over time
    for key parameters such as shown in Figure
    <xref alt="[ant]" rid="ant">[ant]</xref></p>
    <fig>
      <caption><p>Convergence of filtered GPS antenna position over
      course of multiple Monte Carlo
      runs.<styled-content id="ant"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="gps-ant-pos-err.png" />
    </fig>
  </sec>
</sec>
<sec id="conclusion">
  <title>Conclusion</title>
  <p>In conclusion, the <monospace>ekf_cal</monospace> package provides
  a comprehensive framework for testing multi-sensor Kalman filters
  using Monte Carlo techniques. By running a given sensor configuration
  through a large sample of runs, each with varying initial conditions
  and errors, stability is verified. The package’s capabilities include
  the provision of example implementations of state-of-the-art Kalman
  filter-based calibration routines and analysis tools for plotting
  results and evaluating performance statistics. In contrast to existing
  software packages that are limited by their scope or batch-based
  optimization methods, <monospace>ekf_cal</monospace> offers a flexible
  and online calibration framework that can be tailored to specific
  research needs. As demonstrated by its successful application in past
  and ongoing research projects, the <monospace>ekf_cal</monospace>
  package has the potential to significantly improve the robustness and
  accuracy of autonomous systems operating in challenging environments.
  Future work will focus on expanding the package’s capabilities,
  including the integration of new sensors and optimization methods, as
  well as exploring its applications in various domains.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-2022_Multi_Cam">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Hartzer</surname><given-names>Jacob</given-names></name>
        <name><surname>Saripalli</surname><given-names>Srikanth</given-names></name>
      </person-group>
      <article-title>Online multi camera-IMU calibration</article-title>
      <source>2022 IEEE international symposium on safety, security, and rescue robotics (SSRR)</source>
      <year iso-8601-date="2022">2022</year>
      <pub-id pub-id-type="doi">10.1109/SSRR56537.2022.10018692</pub-id>
      <fpage>360</fpage>
      <lpage>365</lpage>
    </element-citation>
  </ref>
  <ref id="ref-2023_Multi_IMU">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Hartzer</surname><given-names>Jacob</given-names></name>
        <name><surname>Saripalli</surname><given-names>Srikanth</given-names></name>
      </person-group>
      <article-title>Online multi-IMU calibration using visual-inertial odometry</article-title>
      <source>2023 IEEE symposium sensor data fusion and international conference on multisensor fusion and integration (SDF-MFI)</source>
      <year iso-8601-date="2023">2023</year>
      <pub-id pub-id-type="doi">10.1109/SDF-MFI59545.2023.10361310</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-eigen">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Guennebaud</surname><given-names>Gaël</given-names></name>
        <name><surname>Jacob</surname><given-names>Benoît</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Eigen v3</article-title>
      <publisher-name>http://eigen.tuxfamily.org</publisher-name>
      <year iso-8601-date="2010">2010</year>
    </element-citation>
  </ref>
  <ref id="ref-Geneva2020ICRA">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Geneva</surname><given-names>Patrick</given-names></name>
        <name><surname>Eckenhoff</surname><given-names>Kevin</given-names></name>
        <name><surname>Lee</surname><given-names>Woosik</given-names></name>
        <name><surname>Yang</surname><given-names>Yulin</given-names></name>
        <name><surname>Huang</surname><given-names>Guoquan</given-names></name>
      </person-group>
      <article-title>OpenVINS: A research platform for visual-inertial estimation</article-title>
      <source>Proc. Of the IEEE international conference on robotics and automation</source>
      <publisher-loc>Paris, France</publisher-loc>
      <year iso-8601-date="2020">2020</year>
      <uri>\url{https://github.com/rpng/open_vins}</uri>
      <pub-id pub-id-type="doi">10.1109/ICRA40945.2020.9196524</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-matlab-cam-calib">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Inc.</surname><given-names>The MathWorks</given-names></name>
      </person-group>
      <article-title>Computer vision toolbox version: 24.1 (R2022b)</article-title>
      <publisher-name>The MathWorks Inc.</publisher-name>
      <publisher-loc>Natick, Massachusetts, United States</publisher-loc>
      <year iso-8601-date="2024">2024</year>
      <uri>https://www.mathworks.com</uri>
    </element-citation>
  </ref>
  <ref id="ref-MSCKF">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Mourikis</surname><given-names>Anastasios I.</given-names></name>
        <name><surname>Roumeliotis</surname><given-names>Stergios I.</given-names></name>
      </person-group>
      <article-title>A multi-state constraint kalman filter for vision-aided inertial navigation</article-title>
      <source>Proceedings 2007 IEEE international conference on robotics and automation</source>
      <year iso-8601-date="2007">2007</year>
      <volume></volume>
      <pub-id pub-id-type="doi">10.1109/ROBOT.2007.364024</pub-id>
      <fpage>3565</fpage>
      <lpage>3572</lpage>
    </element-citation>
  </ref>
  <ref id="ref-opencalib">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Yan</surname><given-names>Guohang</given-names></name>
        <name><surname>Liu</surname><given-names>Zhuochun</given-names></name>
        <name><surname>Wang</surname><given-names>Chengjie</given-names></name>
        <name><surname>Shi</surname><given-names>Chunlei</given-names></name>
        <name><surname>Wei</surname><given-names>Pengjin</given-names></name>
        <name><surname>Cai</surname><given-names>Xinyu</given-names></name>
        <name><surname>Ma</surname><given-names>Tao</given-names></name>
        <name><surname>Liu</surname><given-names>Zhizheng</given-names></name>
        <name><surname>Zhong</surname><given-names>Zebin</given-names></name>
        <name><surname>Liu</surname><given-names>Yuqian</given-names></name>
        <name><surname>Zhao</surname><given-names>Ming</given-names></name>
        <name><surname>Ma</surname><given-names>Zheng</given-names></name>
        <name><surname>Li</surname><given-names>Yikang</given-names></name>
      </person-group>
      <article-title>OpenCalib: A multi-sensor calibration toolbox for autonomous driving</article-title>
      <source>arXiv preprint arXiv:2205.14087</source>
      <year iso-8601-date="2022">2022</year>
      <pub-id pub-id-type="doi">10.48550/arXiv.2205.14087</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-opencv">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bradski</surname><given-names>G.</given-names></name>
      </person-group>
      <article-title>The OpenCV Library</article-title>
      <source>Dr. Dobb’s Journal of Software Tools</source>
      <year iso-8601-date="2000">2000</year>
    </element-citation>
  </ref>
  <ref id="ref-Rehder">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Rehder</surname><given-names>Joern</given-names></name>
        <name><surname>Nikolic</surname><given-names>Janosch</given-names></name>
        <name><surname>Schneider</surname><given-names>Thomas</given-names></name>
        <name><surname>Hinzmann</surname><given-names>Timo</given-names></name>
        <name><surname>Siegwart</surname><given-names>Roland</given-names></name>
      </person-group>
      <article-title>Extending kalibr: Calibrating the extrinsics of multiple IMUs and of individual axes</article-title>
      <source>2016 IEEE international conference on robotics and automation (ICRA)</source>
      <year iso-8601-date="2016">2016</year>
      <pub-id pub-id-type="doi">10.1109/ICRA.2016.7487628</pub-id>
      <fpage>4304</fpage>
      <lpage>4311</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
