<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6802</article-id>
<article-id pub-id-type="doi">10.21105/joss.06802</article-id>
<title-group>
<article-title>chemotools: A Python Package that Integrates Chemometrics
and scikit-learn</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-2372-5082</contrib-id>
<name>
<surname>Lopez</surname>
<given-names>Pau Cabaneros</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Novo Nordisk A/S, Bagsvaerd, Denmark</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-12-01">
<day>1</day>
<month>12</month>
<year>2023</year>
</pub-date>
<volume>9</volume>
<issue>100</issue>
<fpage>6802</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>Chemometrics</kwd>
<kwd>Spectroscopy</kwd>
<kwd>Machine Learning</kwd>
<kwd>scikit-learn</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><monospace>chemotools</monospace> stands as a production-oriented
  versatile Python library, developed to provide a unified platform for
  advancing <italic>chemometric</italic> model development. Integrating
  spectral preprocessing methodologies with the
  <monospace>scikit-learn</monospace> API and the expansive Python
  machine learning ecosystem, this library seeks to standardize and
  simplify the complex process of creating and implementing robust
  <italic>chemometric</italic> and machine learning models of spectral
  data.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Spectroscopy comprises a group of several analytical techniques
  used to understand the composition of materials using light.
  Traditionally, spectroscopic data is analyzed by a discipline called
  <italic>chemometrics</italic>, a branch of machine learning
  specialized on extracting chemical information from multivariate
  spectra. Over the last decades, <italic>chemometricians</italic>, have
  excelled by developing advanced preprocessing methods designed to
  attenuate instrument and measuring noise from the spectra, and to
  enhance the pure chemical information of the samples
  (<xref alt="Rinnan et al., 2009" rid="ref-RINNAN20091201" ref-type="bibr">Rinnan
  et al., 2009</xref>),
  (<xref alt="Mishra et al., 2020" rid="ref-MISHRA2020116045" ref-type="bibr">Mishra
  et al., 2020</xref>).</p>
  <p>Spectroscopic methods are very suited for a wide range of
  applications because they allow analyzing the chemical properties of
  various samples in a fast and simple manner. For this reason, their
  adoption as integral components of Process Analytical Technology (PAT)
  has witnessed significant growth across industries, including
  chemical, biotech, food, and pharmaceuticals. Despite this surge, a
  notable obstacle has been the absence of open-source standardized,
  accessible toolkit for <italic>chemometric</italic> model development
  and deployment. <monospace>chemotools</monospace>, positioned as a
  comprehensive solution, addresses this void by integrating
  <italic>chemometric</italic> methods into the Python machine learning
  ecosystem. By implementing a variety of preprocessing and feature
  selection tools with the <monospace>scikit-learn</monospace> API
  (<xref alt="Pedregosa et al., 2018" rid="ref-pedregosa2018scikitlearn" ref-type="bibr">Pedregosa
  et al., 2018</xref>), <monospace>chemotools</monospace> opens up the
  entire <monospace>scikit-learn</monospace> toolbox to users,
  encompassing features such as:</p>
  <list list-type="bullet">
    <list-item>
      <p>a rich collection of estimators for regression, classification,
      and clustering</p>
    </list-item>
    <list-item>
      <p>cross-validation and hyper-parameter optimization
      algorithms</p>
    </list-item>
    <list-item>
      <p>pipelining for efficient workflows</p>
    </list-item>
    <list-item>
      <p>and model persistence using standardized libraries such as
      <monospace>joblib</monospace> or <monospace>pickle</monospace></p>
    </list-item>
  </list>
  <p>This integration empowers users with a versatile array of tools for
  robust model development and evaluation
  (<xref alt="[fig:1]" rid="figU003A1">[fig:1]</xref>).</p>
  <p>In addition to its foundational capabilities,
  <monospace>chemotools</monospace> not only enables users to preprocess
  data and train models using <monospace>scikit-learn</monospace> but
  also streamlines the transition of these models into a production
  setting. By enabling users with a well defined interface,
  <monospace>chemotools</monospace> facilitates the reception of input
  data and delivery of predictions from the trained model. This can then
  be containerized using Docker, providing an efficient means for the
  distribution and implementation of the model in any Docker-compatible
  environment, facilitating the deployment of models to cloud
  environments. This adaptive capability not only enables organizations
  to scale model usage but also allows them to monitor performance and
  promptly update or rollback the model as necessary.</p>
  <p><monospace>chemotools</monospace> also introduces a practical
  innovation by providing a streamlined framework for data augmentation
  of spectroscopic datasets through the
  <monospace>scikit-learn</monospace> API. This feature offers users a
  straightforward and consistent method to enhance spectral datasets, by
  introducing stochastic artifacts that represent real-world variations.
  By integrating data augmentation into the <italic>chemometric</italic>
  workflow, <monospace>chemotools</monospace> provides users with an
  efficient tool for improving their datasets to generalize the models
  and optimize their performance.</p>
  <fig>
    <caption><p>chemotools in the Python machine learning environment
    .<styled-content id="figU003A1"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="../assets/images/overview_2.png" />
  </fig>
</sec>
<sec id="features-and-functionality">
  <title>Features and functionality</title>
  <p><monospace>chemotools</monospace> implements a collection of
  <monospace>scikit-learn</monospace> transformers and selectors.
  Transformers are divided in preprocessing and augmentation methods.
  Preprocessing functions range from well-established
  <italic>chemometric</italic> methods such as the multiplicative
  scatter correction or the standard normal variate
  (<xref alt="Rinnan et al., 2009" rid="ref-RINNAN20091201" ref-type="bibr">Rinnan
  et al., 2009</xref>), to more recent methods such as the
  asymmetrically reweighted penalized least squares method to remove
  complex baselines
  (<xref alt="Baek et al., 2015" rid="ref-arpls2" ref-type="bibr">Baek
  et al., 2015</xref>). Several preprocessing methods can be
  conveniently concatenated using <monospace>scikit-learn</monospace>
  pipelines (<xref alt="[fig:2]" rid="figU003A2">[fig:2]</xref>). An
  example of code used to create a preprocessing pipeline mixing
  <monospace>scikit-learn</monospace> and
  <monospace>chemotools</monospace> methods is shown in below:</p>
  <fig>
    <caption><p>Overview of the pipelines. A: Preprocessing pipeline. B:
    Augmentation
    pipeline.<styled-content id="figU003A2"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="../assets/images/pipelines.png" />
  </fig>
  <code language="python">from chemotools.baseline import ArPls
from chemotools.smooth import WhittakerSmooth

from sklearn.pipeline import make_pipeline
from sklearn.preprocessing import StandardScaler


pipeline = make_pipeline(
    WhittakerSmooth(),
    ArPls(),
    StandardScaler(with_std=False),
)</code>
  <p>The data augmentation module contains transformers that introduce
  stochastic artifacts to the spectral data to reflect real-world
  variability (e.g.Â instrument-to-instrument variations). These include
  a variety of transformers ranging from adding noise to the spectra
  following a given distribution, to shifts on the spectral peaks or
  changes on the intensity of the peaks. Since the data augmentation
  functions are implemented as transformers, the user can leverage the
  pipelining functions of <monospace>scikit-learn</monospace> to
  concatenate different augmentation methods in pipelines to transform
  their data. An example of an augmentation pipeline is shown in
  <xref alt="[fig:2]" rid="figU003A2">[fig:2]</xref>. An example of code
  to create an augmentation pipeline is shown below:</p>
  <code language="python">from chemotools.augmentation import BaselineShift, IndexShift, NormalNoise
from sklearn.pipeline import make_pipeline

augmentation_pipeline = make_pipeline(
    NormalNoise(scale=0.001),
    BaselineShift(0.001),
    IndexShift(3),
)

spectra_augmented = np.array(
    [augmentation_pipeline.fit_transform(spectrum) for _ in range(5)]
)</code>
  <p><xref alt="[fig:3]" rid="figU003A3">[fig:3]</xref> shows five
  spectra augmented with the pipeline depicted in
  <xref alt="[fig:2]" rid="figU003A2">[fig:2]</xref> and the original
  spectrum.</p>
  <fig>
    <caption><p>Spectral augmentation. Five augmented spectra (in
    magenta) are generated from an original spectrum (in blue) using an
    augmentation
    pipeline.<styled-content id="figU003A3"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="svg+xml" xlink:href="../assets/images/augmentation_pipeline.svg" />
  </fig>
  <p>In addition to the transformers, <monospace>chemotools</monospace>
  also implements selectors. Selectors are mathematical functions used
  to select the relevant features from the spectral dataset based on a
  given criterion. Selectors are used to select the features that
  contain the chemical information of the sample, making the models more
  robust and generalizable.</p>
  <p>Beyond its mathematical features, <monospace>chemotools</monospace>
  goes a step further by providing real-world spectral datasets
  (<xref alt="Cabaneros Lopez et al., 2021" rid="ref-cabaneros1" ref-type="bibr">Cabaneros
  Lopez et al., 2021</xref>). Accompanied by guides demonstrating the
  integration of scikit-learn and <monospace>chemotools</monospace> for
  training regression and classification models, these datasets immerse
  learners in practical applications. This hands-on approach bridges
  theoretical concepts and real-world implementation, nurturing a deeper
  understanding of potential challenges in real-world scenarios.</p>
  <p>The documentation page (https://paucablop.github.io/chemotools/)
  meticulously outlines all available mathematical functions within
  chemotools. This comprehensive resource serves as a guide for users
  exploring the extensive capabilities of the library.</p>
</sec>
<sec id="adoption-and-applications">
  <title>Adoption and applications</title>
  <p>The ultimate objective of developing <italic>chemometric</italic>
  and machine learning models is either to gain insights about complex
  datasets or to train models that can be used in production
  applications (<xref alt="[fig:4]" rid="figU003A4">[fig:4]</xref>).
  From a research and development perspective,
  <monospace>chemotools</monospace> offers a wide range of transformers
  and selectors that, combined with the rest of the Python machine
  learning environment, enables researchers to investigate and
  understand their spectral datasets. From an industrial point of view,
  <monospace>chemotools</monospace> allows users to streamline the
  deployment of their trained models into production environments
  adhering to standard frameworks developed by the machine learning
  community in Python
  (<xref alt="[fig:1]" rid="figU003A1">[fig:1]</xref>).</p>
  <p>Beyond its practical applications,
  <monospace>chemotools</monospace> has been utilized as an educational
  tool at universities for both Masterâs (MSc) and Doctoral (PhD)
  levels. Integrating chemotools into academic curricula using Jupyter
  notebooks, offers students a valuable opportunity to gain hands-on
  experience with real-world datasets, providing practical insights into
  the application of sophisticated techniques for preprocessing and
  analyzing spectral data. The toolâs user friendly interface, coupled
  with comprehensive documentation, has proven an enriching learning
  experience for students pursuing education in fields relate to
  analytical chemistry, process analytical technology, data science or
  <italic>chemometrics</italic>.</p>
  <fig>
    <caption><p>Applications of
    <monospace>chemotools</monospace>.<styled-content id="figU003A4"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="../assets/images/applications.png" />
  </fig>
</sec>
<sec id="author-contribution-statement">
  <title>Author contribution statement</title>
  <p>Conceptualization, coding, developing and paper writing by Pau
  Cabaneros Lopez.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This project has not received any external funding. The author
  would like to express his gratitude to Dr.Â Vitor Hugo da Silva for his
  thorough feedback on the manuscript.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-cabaneros1">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Cabaneros Lopez</surname><given-names>Pau</given-names></name>
        <name><surname>Udugama</surname><given-names>Isuru A.</given-names></name>
        <name><surname>Thomsen</surname><given-names>Sune T.</given-names></name>
        <name><surname>Roslander</surname><given-names>Christian</given-names></name>
        <name><surname>Junicke</surname><given-names>Helena</given-names></name>
        <name><surname>Iglesias</surname><given-names>Miguel M.</given-names></name>
        <name><surname>Gernaey</surname><given-names>Krist V.</given-names></name>
      </person-group>
      <article-title>Transforming data to information: A parallel hybrid model for real-time state estimation in lignocellulosic ethanol fermentation</article-title>
      <source>Biotechnology and Bioengineering</source>
      <year iso-8601-date="2021">2021</year>
      <volume>118</volume>
      <issue>2</issue>
      <uri>https://onlinelibrary.wiley.com/doi/abs/10.1002/bit.27586</uri>
      <pub-id pub-id-type="doi">10.1002/bit.27586</pub-id>
      <fpage>579</fpage>
      <lpage>591</lpage>
    </element-citation>
  </ref>
  <ref id="ref-pedregosa2018scikitlearn">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Pedregosa</surname><given-names>Fabian</given-names></name>
        <name><surname>Varoquaux</surname><given-names>GaÃ«l</given-names></name>
        <name><surname>Gramfort</surname><given-names>Alexandre</given-names></name>
        <name><surname>Michel</surname><given-names>Vincent</given-names></name>
        <name><surname>Thirion</surname><given-names>Bertrand</given-names></name>
        <name><surname>Grisel</surname><given-names>Olivier</given-names></name>
        <name><surname>Blondel</surname><given-names>Mathieu</given-names></name>
        <name><surname>MÃ¼ller</surname><given-names>Andreas</given-names></name>
        <name><surname>Nothman</surname><given-names>Joel</given-names></name>
        <name><surname>Louppe</surname><given-names>Gilles</given-names></name>
        <name><surname>Prettenhofer</surname><given-names>Peter</given-names></name>
        <name><surname>Weiss</surname><given-names>Ron</given-names></name>
        <name><surname>Dubourg</surname><given-names>Vincent</given-names></name>
        <name><surname>Vanderplas</surname><given-names>Jake</given-names></name>
        <name><surname>Passos</surname><given-names>Alexandre</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Brucher</surname><given-names>Matthieu</given-names></name>
        <name><surname>Perrot</surname><given-names>Matthieu</given-names></name>
        <name><surname>Duchesnay</surname><given-names>Ãdouard</given-names></name>
      </person-group>
      <article-title>Scikit-learn: Machine learning in python</article-title>
      <year iso-8601-date="2018">2018</year>
      <uri>https://arxiv.org/abs/1201.0490</uri>
    </element-citation>
  </ref>
  <ref id="ref-arpls2">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Baek</surname><given-names>Sung-June</given-names></name>
        <name><surname>Park</surname><given-names>Aaron</given-names></name>
        <name><surname>Ahn</surname><given-names>Young-Jin</given-names></name>
        <name><surname>Choo</surname><given-names>Jaebum</given-names></name>
      </person-group>
      <article-title>Baseline correction using asymmetrically reweighted penalized least squares smoothing</article-title>
      <source>Analyst</source>
      <publisher-name>Royal Society of Chemistry</publisher-name>
      <year iso-8601-date="2015">2015</year>
      <volume>140</volume>
      <issue>1</issue>
      <uri>https://pubs.rsc.org/en/content/articlelanding/2015/an/c4an01061b</uri>
      <pub-id pub-id-type="doi">10.1039/c4an01061b</pub-id>
      <fpage>250</fpage>
      <lpage>257</lpage>
    </element-citation>
  </ref>
  <ref id="ref-RINNAN20091201">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Rinnan</surname><given-names>Ãsmund</given-names></name>
        <name><surname>Berg</surname><given-names>Frans van den</given-names></name>
        <name><surname>Engelsen</surname><given-names>SÃ¸ren Balling</given-names></name>
      </person-group>
      <article-title>Review of the most common pre-processing techniques for near-infrared spectra</article-title>
      <source>TrAC Trends in Analytical Chemistry</source>
      <year iso-8601-date="2009">2009</year>
      <volume>28</volume>
      <issue>10</issue>
      <issn>0165-9936</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S0165993609001629</uri>
      <pub-id pub-id-type="doi">10.1016/j.trac.2009.07.007</pub-id>
      <fpage>1201</fpage>
      <lpage>1222</lpage>
    </element-citation>
  </ref>
  <ref id="ref-MISHRA2020116045">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Mishra</surname><given-names>Puneet</given-names></name>
        <name><surname>Biancolillo</surname><given-names>Alessandra</given-names></name>
        <name><surname>Roger</surname><given-names>Jean Michel</given-names></name>
        <name><surname>Marini</surname><given-names>Federico</given-names></name>
        <name><surname>Rutledge</surname><given-names>Douglas N.</given-names></name>
      </person-group>
      <article-title>New data preprocessing trends based on ensemble of multiple preprocessing techniques</article-title>
      <source>TrAC Trends in Analytical Chemistry</source>
      <year iso-8601-date="2020">2020</year>
      <volume>132</volume>
      <issn>0165-9936</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S0165993620302740</uri>
      <pub-id pub-id-type="doi">10.1016/j.trac.2020.116045</pub-id>
      <fpage>116045</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
