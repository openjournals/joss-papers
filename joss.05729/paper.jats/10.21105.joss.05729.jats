<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">5729</article-id>
<article-id pub-id-type="doi">10.21105/joss.05729</article-id>
<title-group>
<article-title>Paraqus: Exporting Finite Element Simulation Results from
Abaqus to VTK</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" equal-contrib="yes" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-3337-5891</contrib-id>
<name>
<surname>Furlan</surname>
<given-names>Tim</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-8383-2109</contrib-id>
<name>
<surname>Stollberg</surname>
<given-names>Jonathan</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-7819-9254</contrib-id>
<name>
<surname>Menzel</surname>
<given-names>Andreas</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Institute of Mechanics, Department of Mechanical
Engineering, TU Dortmund University, Leonhard-Euler-Str. 5, 44227
Dortmund, Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Division of Solid Mechanics, Department of Construction
Sciences, Lund University, P.O. Box 118, SE-22100 Lund,
Sweden</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2022-02-02">
<day>2</day>
<month>2</month>
<year>2022</year>
</pub-date>
<volume>10</volume>
<issue>105</issue>
<fpage>5729</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>finite elements</kwd>
<kwd>visualization</kwd>
<kwd>vtk</kwd>
<kwd>abaqus</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The finite element (FE) method is one of the approaches available
  for solving different types of partial differential equations in the
  various fields of physics, such as solid mechanics, heat transfer, and
  electromagnetics. Visualization and manipulation of results play a
  crucial role in the interpretation and analysis of simulation results,
  especially when complex and advanced problems are considered. Paraqus
  is a Python package that exports simulation results from the
  commercial FE software Abaqus to the open VTK file format, allowing
  researchers to use tried and tested pipelines for the visualization,
  and to exchange results in a format that is independent of the
  software they were created with. Paraqus is modular in structure,
  therefore the VTK exporting capability can be used independently of
  Abaqus, and exporters for other FE software can be added as well.
  Since VTK is not limited to FE results, the package could be used to
  export results from other simulation methods, such as CFD simulations,
  by implementing appropriate exporters. The Paraqus documentation is
  available at
  <ext-link ext-link-type="uri" xlink:href="https://paraqus.readthedocs.io">https://paraqus.readthedocs.io</ext-link>.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Abaqus is an example of commercial FE software that is widely used
  in the academic engineering community. ScienceDirect shows more than
  7000 articles tagged with the keyword “Abaqus” and published in 2022.
  Exporting simulation results to the VTK format serves two purposes: -
  the data can be shared with other researchers and users without access
  to expensive software, and - specialized open source software like
  ParaView can be used to create visualizations that would be tedious or
  impossible to generate in the post-processing module of Abaqus.</p>
  <p>Some software packages similar to Paraqus have been released over
  the last years. However, these tools suffer from great limitations and
  are, therefore, not as versatile and straightforward as Paraqus. A
  script to export Abaqus results to VTK format was published in Liu et
  al. (<xref alt="2017" rid="ref-odb2vtk" ref-type="bibr">2017</xref>)
  under the name <monospace>odb2vtk</monospace>. This script offers
  limited options to customize the export data, and supports only a
  subset of the finite elements available in Abaqus.
  <italic>AbaPy</italic> is a Python package that is not aimed solely at
  post-processing, but also at the automatic creation of Abaqus models
  and run of Abaqus simluations
  (<xref alt="Charleux et al., 2016" rid="ref-abapy" ref-type="bibr">Charleux
  et al., 2016</xref>). Although <italic>AbaPy</italic> offers the
  option to export field outputs to VTK format, the wider range of
  applications comes with increased complexity in terms of both
  implementation and usage. Paraqus falls between these existing
  options: it is organized as a package with a small and intuitive API,
  but allows a wide range of customization of exports, and writes the
  more efficient binary version of the VTK format. It also provides
  options to group exports from multiple simulations, time steps, or
  bodies, using ParaView data (PVD) files. Furthermore, Paraqus performs
  exports noticeably faster than <italic>AbaPy</italic>, especially in
  case of large models.</p>
</sec>
<sec id="syntax-example">
  <title>Syntax example</title>
  <p>While extensive examples for the usage of Paraqus can be found in
  the
  <ext-link ext-link-type="uri" xlink:href="https://paraqus.readthedocs.io">documentation</ext-link>,
  a short syntax example is given in this section. After specifying the
  variables for the output file path, instance name and step name, the
  code below can be executed in the Abaqus Python shell or as a script
  file in Abaqus Python. The reader is referred to the examples folder
  of the repository for examples that include directions to create
  example Abaqus output database (ODB) files.</p>
  <preformat># import the Paraqus classes to read Abaqus output and
# to store it as an ASCII-based VTK file
from paraqus.abaqus import OdbReader
from paraqus.writers import AsciiWriter

# set some constants based on the ODB that will be exported
ODB_PATH = &quot;my_abaqus_output.odb&quot;  # path to the Abaqus ODB
MODEL_NAME = &quot;My Model&quot;  # can be chosen freely for the output
INSTANCE_NAMES = [&quot;PART-1-1&quot;]  # choose which instances will be exported
STEP_NAME = &quot;Step-1&quot;  # name of the step that will be exported
FRAME_INDEX = -1  # export the final frame (timestep) of the step

# the class OdbReader is used to read results from Abaqus ODBs
reader = OdbReader(odb_path=ODB_PATH,
                   model_name=MODEL_NAME,
                   instance_names=INSTANCE_NAMES,
                   )

# request output of displacements at node points
reader.add_field_export_request(&quot;U&quot;, field_position=&quot;nodes&quot;)

# request output of temperature at element centroids
reader.add_field_export_request(&quot;TEMP&quot;, field_position=&quot;elements&quot;)

# the class AsciiWriter is used to write results in ASCII-based VTK format
vtk_writer = AsciiWriter(&quot;my_output_directory&quot;, clear_output_dir=True)

# there might be multiple instances, so we create a list of the models
instance_models = list(reader.read_instances(step_name=STEP_NAME,
                                             frame_index=FRAME_INDEX))
instance_model = instance_models[0]  # this is a ParaqusModel instance

# use the writer to write instance_model to disk
vtk_writer.write(instance_model)</preformat>
</sec>
<sec id="contributions">
  <title>Contributions</title>
  <p><bold>Tim Furlan:</bold> Conceptualization; Software - Design,
  Implementation (focus on reading Abaqus ODB files), Documentation;
  Writing - Original Draft; Example generation. <bold>Jonathan
  Stollberg:</bold> Conceptualization; Software - Design, Implementation
  (focus on writing VTK files), Documentation; Writing - Original Draft;
  Example generation. <bold>Andreas Menzel:</bold> Conceptualization;
  Supervision - Project direction; Writing - Review &amp; Editing;
  Example generation</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The authors are grateful to Isabelle Noll and Lennart Sobisch for
  beta-testing Paraqus and providing valuable feedback on the examples
  and documentation. Furthermore, the detailed review of the paper and
  code by Gabriele Ottino (newcleo S.p.A.) is gratefully
  acknowledged.</p>
</sec>
<sec id="funding">
  <title>Funding</title>
  <p>Paraqus was developed in the context of two projects funded by the
  German Research Foundation (DFG) under project IDs 403857741 and
  278868966, which is gratefully acknowledged.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-odb2vtk">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Liu</surname><given-names>Qingbin</given-names></name>
        <name><surname>Li</surname><given-names>Jiang</given-names></name>
        <name><surname>Liu</surname><given-names>Jie</given-names></name>
      </person-group>
      <article-title>ParaView visualization of Abaqus output on the mechanical deformation of complex microstructures</article-title>
      <source>Computers &amp; Geosciences</source>
      <year iso-8601-date="2017">2017</year>
      <volume>99</volume>
      <pub-id pub-id-type="doi">10.1016/j.cageo.2016.11.008</pub-id>
      <fpage>135</fpage>
      <lpage>144</lpage>
    </element-citation>
  </ref>
  <ref id="ref-abapy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Charleux</surname><given-names>Ludovic</given-names></name>
        <name><surname>Bizet</surname><given-names>Laurent</given-names></name>
        <name><surname>Keryvin</surname><given-names>Vincent</given-names></name>
        <name><surname>mousta</surname></name>
      </person-group>
      <article-title>Abapy: abapy_v1.1</article-title>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2016">2016</year>
      <pub-id pub-id-type="doi">10.5281/zenodo.50550</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
