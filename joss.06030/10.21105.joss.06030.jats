<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6030</article-id>
<article-id pub-id-type="doi">10.21105/joss.06030</article-id>
<title-group>
<article-title>Fasten: a toolkit for streaming operations on fastq
files</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-2533-9161</contrib-id>
<name>
<surname>Katz</surname>
<given-names>Lee S.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-4670-2660</contrib-id>
<name>
<surname>Phan</surname>
<given-names>John</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-4086-1580</contrib-id>
<name>
<surname>den Bakker</surname>
<given-names>Henk C.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Enteric Diseases Laboratory Branch (EDLB), Centers for
Disease Control and Prevention, Atlanta, GA, United States of
America</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Center for Food Safety, University of Georgia, Griffin, GA,
United States of America</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>General Dynamics Information Technology Inc., Atlanta, GA,
United States of America</institution>
</institution-wrap>
</aff>
</contrib-group>
<volume>9</volume>
<issue>94</issue>
<fpage>6030</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>command line</kwd>
<kwd>fastq manipulation</kwd>
<kwd>interleaved fastq</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>There are still many gaps in basic command line tools for the
  handling of standard file formats in the field of bioinformatics.
  Bioinformaticians have been able to use many tools to manipulate
  sequence data files in the fastq format, such as
  <monospace>seqkit</monospace>
  (<xref alt="Shen et al., 2016" rid="ref-seqkit" ref-type="bibr">Shen
  et al., 2016</xref>), <monospace>seqtk</monospace>
  (<xref alt="Li, 2023" rid="ref-seqtk" ref-type="bibr">Li,
  2023</xref>), FASTX-Toolkit
  (<xref alt="Gordon, 2014" rid="ref-fastx" ref-type="bibr">Gordon,
  2014</xref>), <monospace>seqfu</monospace>
  (<xref alt="Telatin et al., 2021" rid="ref-seqfu" ref-type="bibr">Telatin
  et al., 2021</xref>), <monospace>jellyfish</monospace>
  (<xref alt="Marcais &amp; Kingsford, 2012" rid="ref-marcais2012jellyfish" ref-type="bibr">Marcais
  &amp; Kingsford, 2012</xref>), or BBTools
  (<xref alt="Bushnell, 2014" rid="ref-bushnell2014bbmap" ref-type="bibr">Bushnell,
  2014</xref>). These tools only accept paired-end (PE) sequence data
  when split into multiple files per sample. Additionally, these tools
  do not always allow for Unix-style pipe file control. Sometimes they
  require explicitly input/output options instead of using
  <monospace>stdin</monospace> and <monospace>stdout</monospace>.
  However, some bioinformaticians prefer to combine PE data from a
  single sample into one file using the interleaved fastq file format,
  but this format is not always well supported in mainstream tools.
  Here, we provide Fasten to the community to address these needs.</p>
</sec>
<sec id="implementation">
  <title>Implementation</title>
  <p>We leveraged the Cargo packaging system in Rust to create a basic
  framework for interleaved fastq file manipulation. Each executable
  reads from <monospace>stdin</monospace> and prints reads to
  <monospace>stdout</monospace> and only performs one function at a
  time. The core executables perform these fundamental functions: 1)
  converting to and from interleaved format, 2) converting to and from
  other sequence file formats, and 3) ‘straightening’ fastq files to a
  more standard 4-line-per-entry format.</p>
  <p>There are 20 executables including but not limited to read metric
  generation, read cleaning, kmer counting, read validation, and regular
  expressions for interleaved fastq files.</p>
</sec>
<sec id="documentation-testing-and-benchmarking">
  <title>Documentation, testing, and benchmarking</title>
  <p>Benchmarking scripts, documentation, the container, and code are
  available at GitHub. Benchmarking results were graphed into
  <xref alt="[fig:benchmarks]" rid="figU003Abenchmarks">[fig:benchmarks]</xref>.
  Analogous subcommands from widely used tools were timed and compared
  against Fasten using the Hyperfine framework
  (<xref alt="Peter, 2023" rid="ref-Peter_hyperfine_2023" ref-type="bibr">Peter,
  2023</xref>). Hyperfine options were kept as default, except using 100
  replicates and 2 burn-ins. We added inline documentation in the Rust
  code, which helped make comprehensive and standardized documentation.
  Continuous integration was implemented in GitHub Actions for unit
  testing. Each executable is tested to make sure the expected output is
  obtained with each <monospace>git push</monospace> event. We also used
  GitHub Actions to automatically create a Docker container which is
  also available on the GitHub repo.</p>
  <fig>
    <caption><p>Benchmarks comparing fasten with other analogous tools.
    From left to right, then to bottom: Trimming with a minimum quality
    score; converting fastq to fasta; interleaving R1 and R2 reads; kmer
    counting; normalizing read depth using kmer coverage; searching for
    a sequence in a fastq file; downsampling reads; sorting fastq
    entries by either sequence or ID; and converting nonstandard fastq
    files to a format whose entries are four lines each, and selecting
    the first
    100.<styled-content id="figU003Abenchmarks"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/benchmarks.png" />
  </fig>
</sec>
<sec id="conclusions">
  <title>Conclusions</title>
  <p>Fasten is a powerful manipulation suite for interleaved fastq
  files, written in Rust. We benchmarked Fasten on several categories.
  It exhibits strengths as shown in Figure 1 but it does not
  consistently hold the fastest position in all cases. Its major
  strengths include its competitive speeds, Unix-style pipes, paired-end
  handling, and the advantages afforded by the Rust language including
  documentation and stability.</p>
  <p>Fasten touts a comprehensive manual, continuous integration, and
  integration into the command line with unix pipes. It is well poised
  to be a crucial module for daily work on the command line.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-Peter_hyperfine_2023">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Peter</surname><given-names>David</given-names></name>
      </person-group>
      <article-title>hyperfine</article-title>
      <year iso-8601-date="2023-03">2023</year><month>03</month>
      <uri>https://github.com/sharkdp/hyperfine</uri>
    </element-citation>
  </ref>
  <ref id="ref-seqkit">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Shen</surname><given-names>Wei</given-names></name>
        <name><surname>Le</surname><given-names>Shuai</given-names></name>
        <name><surname>Li</surname><given-names>Yan</given-names></name>
        <name><surname>Hu</surname><given-names>Fuquan</given-names></name>
      </person-group>
      <article-title>SeqKit: A cross-platform and ultrafast toolkit for FASTA/q file manipulation</article-title>
      <source>PLOS ONE</source>
      <person-group person-group-type="editor">
        <name><surname>Zou</surname><given-names>Quan</given-names></name>
      </person-group>
      <publisher-name>Public Library of Science (PLoS)</publisher-name>
      <year iso-8601-date="2016-10">2016</year><month>10</month>
      <volume>11</volume>
      <issue>10</issue>
      <uri>https://doi.org/10.1371/journal.pone.0163962</uri>
      <pub-id pub-id-type="doi">10.1371/journal.pone.0163962</pub-id>
      <fpage>e0163962</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-seqfu">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Telatin</surname><given-names>Andrea</given-names></name>
        <name><surname>Fariselli</surname><given-names>Piero</given-names></name>
        <name><surname>Birolo</surname><given-names>Giovanni</given-names></name>
      </person-group>
      <article-title>SeqFu: A suite of utilities for the robust and reproducible manipulation of sequence files</article-title>
      <source>Bioengineering</source>
      <publisher-name>MDPI AG</publisher-name>
      <year iso-8601-date="2021-05">2021</year><month>05</month>
      <volume>8</volume>
      <issue>5</issue>
      <uri>https://doi.org/10.3390/bioengineering8050059</uri>
      <pub-id pub-id-type="doi">10.3390/bioengineering8050059</pub-id>
      <fpage>59</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-seqtk">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Li</surname><given-names>Heng</given-names></name>
      </person-group>
      <article-title>seqtk</article-title>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/lh3/seqtk</uri>
    </element-citation>
  </ref>
  <ref id="ref-fastx">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Gordon</surname></name>
      </person-group>
      <article-title>fastx toolkit</article-title>
      <year iso-8601-date="2014">2014</year>
      <uri>http://hannonlab.cshl.edu/fastx_toolkit/index.html</uri>
    </element-citation>
  </ref>
  <ref id="ref-marcais2012jellyfish">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Marcais</surname><given-names>G</given-names></name>
        <name><surname>Kingsford</surname><given-names>C</given-names></name>
      </person-group>
      <article-title>Jellyfish: A fast k-mer counter</article-title>
      <source>Tutorialis e Manuais</source>
      <year iso-8601-date="2012">2012</year>
      <volume>1</volume>
      <fpage>1</fpage>
      <lpage>8</lpage>
    </element-citation>
  </ref>
  <ref id="ref-bushnell2014bbmap">
    <element-citation publication-type="report">
      <person-group person-group-type="author">
        <name><surname>Bushnell</surname><given-names>Brian</given-names></name>
      </person-group>
      <article-title>BBMap: A fast, accurate, splice-aware aligner</article-title>
      <publisher-name>Lawrence Berkeley National Lab.(LBNL), Berkeley, CA (United States)</publisher-name>
      <year iso-8601-date="2014">2014</year>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
