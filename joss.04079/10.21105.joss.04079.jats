<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">4079</article-id>
<article-id pub-id-type="doi">10.21105/joss.04079</article-id>
<title-group>
<article-title>SEEDPOD Ground Risk: A Python application and library for
Uncrewed Aerial Systems ground risk analysis and risk-aware path
finding</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-0023-0300</contrib-id>
<name>
<surname>Pilko</surname>
<given-names>Aliaksei</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-5016-6821</contrib-id>
<name>
<surname>Tait</surname>
<given-names>Zachary</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Faculty of Engineering and the Environment, University of
Southampton</institution>
</institution-wrap>
</aff>
</contrib-group>
<volume>7</volume>
<issue>71</issue>
<fpage>4079</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>python</kwd>
<kwd>uncrewed aerial systems</kwd>
<kwd>unmanned aerial systems</kwd>
<kwd>aviation safety</kwd>
<kwd>risk</kwd>
<kwd>ground risk</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The proliferation of Uncrewed Aerial Systems (UAS) for a wide range
  of use-cases, from logistics to urban air mobility, is increasing. A
  common theme in the majority of use-cases is the operation in and
  around urban areas, where a critical failure of one or more onboard
  systems can result in the UAS departing controlled flight and posing a
  hazard to, amongst other parties not considered here, third parties
  located on the ground in the vicinity of the UAS.</p>
  <p>There are established methods of probabilistically modelling
  onboard failures, such as failure tree analysis
  (<xref alt="Hammer et al., 2017" rid="ref-HammerU003A2017" ref-type="bibr">Hammer
  et al., 2017</xref>), to arrive at an overall probability of the UAS
  departing controlled flight. This can be combined with impact
  probability density modelling
  (<xref alt="Cour-Harbo, 2020" rid="ref-Cour-HarboU003A2020" ref-type="bibr">Cour-Harbo,
  2020</xref>) to assign probabilities to impact a given cell. Once cell
  probabilities are assigned, a population model determines the
  probability of striking a person within each cell. Impact fatality
  models
  (<xref alt="Ancel et al., 2017" rid="ref-AncelU003A2017" ref-type="bibr">Ancel
  et al., 2017</xref>) are further used to transform this to
  probabilities of causing a fatality in each cell.</p>
  <p>A full UAS ground risk map is generated by summing all
  probabilities for a Loss of Control (LoC) occurring at a specified
  altitude for each cell. This represents the probability of causing
  harm or a fatality (depending on the summed probabilities) if the
  aircraft were to fail at that location.</p>
  <p>The general equation is <disp-formula><alternatives>
  <tex-math><![CDATA[P_{\mathrm{harm}}(x,y) = P_{\mathrm{LoC}} P_{\mathrm{strike|LoC}}(x,y) P_
  {\mathrm{harm|strike}}(x,y)]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mstyle mathvariant="normal"><mml:mi>h</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>m</mml:mi></mml:mstyle></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mstyle mathvariant="normal"><mml:mi>L</mml:mi><mml:mi>o</mml:mi><mml:mi>C</mml:mi></mml:mstyle></mml:msub><mml:msub><mml:mi>P</mml:mi><mml:mstyle mathvariant="normal"><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>k</mml:mi><mml:mi>e</mml:mi><mml:mo stretchy="false" form="prefix">|</mml:mo><mml:mi>L</mml:mi><mml:mi>o</mml:mi><mml:mi>C</mml:mi></mml:mstyle></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mstyle mathvariant="normal"><mml:mi>h</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>m</mml:mi><mml:mo stretchy="false" form="prefix">|</mml:mo><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>k</mml:mi><mml:mi>e</mml:mi></mml:mstyle></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></disp-formula>
  where <inline-formula><alternatives>
  <tex-math><![CDATA[x,y]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  are grid indices referring to the location of LoC,
  <inline-formula><alternatives>
  <tex-math><![CDATA[P_{\mathrm{harm}}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>P</mml:mi><mml:mstyle mathvariant="normal"><mml:mi>h</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>m</mml:mi></mml:mstyle></mml:msub></mml:math></alternatives></inline-formula>
  is the probability of causing harm, <inline-formula><alternatives>
  <tex-math><![CDATA[P_{\mathrm{LoC}}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>P</mml:mi><mml:mstyle mathvariant="normal"><mml:mi>L</mml:mi><mml:mi>o</mml:mi><mml:mi>C</mml:mi></mml:mstyle></mml:msub></mml:math></alternatives></inline-formula>
  is the probability of the aircraft entering a LoC state; this can be
  found using aforementioned methods, <inline-formula><alternatives>
  <tex-math><![CDATA[P_{\mathrm{strike|LoC}}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>P</mml:mi><mml:mstyle mathvariant="normal"><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>k</mml:mi><mml:mi>e</mml:mi><mml:mo stretchy="false" form="prefix">|</mml:mo><mml:mi>L</mml:mi><mml:mi>o</mml:mi><mml:mi>C</mml:mi></mml:mstyle></mml:msub></mml:math></alternatives></inline-formula>
  is the probability of striking a person given the LoC has occurred,
  <inline-formula><alternatives>
  <tex-math><![CDATA[P_{\mathrm{harm|strike}}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>P</mml:mi><mml:mstyle mathvariant="normal"><mml:mi>h</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>m</mml:mi><mml:mo stretchy="false" form="prefix">|</mml:mo><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>k</mml:mi><mml:mi>e</mml:mi></mml:mstyle></mml:msub></mml:math></alternatives></inline-formula>
  is the probability of the strike causing a given harm, usually a
  fatality.</p>
  <p>Each probability component is driven by a different set of models,
  however the overall procedure is identical in that every cell in the
  risk map must be iterated over and a LoC modeled at that location,
  then the resultant single point risk map summed to represent the
  overall probability for that LoC location. It is this element of the
  process that can be parallelised without synchronisation between
  threads/processes.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>SEEDPOD Ground Risk is a Python application and package that
  enables the generation of risk maps by implementing fast
  GPU-accelerated routines for the risk calculation as well as being, to
  the authors best knowledge, the first open-source probabilistic ground
  risk assessment tool. Numba is used for all calculation acceleration
  and enable the fallback to JIT-compiled CPU code where a compatible
  NVIDIA GPU is not detected. A common set of scientific and geospatial
  Python packages are used, such as NumPy, SciPy, Pandas, and
  GeoPandas.</p>
  <p>The software is intended to allow for further development and
  testing of different constituent models as part of a holistic ground
  risk assessment process. This enables the exploration of individual
  model effects on the final ground risk map without the
  reimplementation of the remainder of the process and with the benefit
  of the code optimisation already performed.</p>
  <p>The use of the Python programming language allows for rapid
  prototyping due to the interpreted nature of the language as opposed
  to a compiled language. This, however results in lower computational
  performance compared to an equivalent C++ implementation.</p>
  <p>A basic user interface is implemented to allow for non-expert users
  to utilise the tool and promote the safer flight of UAS. This is
  packaged in an installer that ensures all dependencies are installed
  with the package. The user interface exposes much the same
  functionality as the API in a no-code environment.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This work is funded by the Engineering and Physical Sciences
  Research Council as part of the E-Drone project under grant number
  EP/V002619/1. The authors would like to thank András Sóbester, James
  Scanlan, and Mario Ferraro for their guidance and advice on
  theoretical aspects of the work.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-HammerU003A2017">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Hammer</surname><given-names>Jonathan</given-names></name>
          <name><surname>Murray</surname><given-names>Alexander R.</given-names></name>
          <name><surname>Lowman</surname><given-names>Alexa</given-names></name>
        </person-group>
        <article-title>Safety analysis paradigm for UAS: Development and use of a common architecture and fault tree model</article-title>
        <source>2017 IEEE/AIAA 36th digital avionics systems conference (DASC)</source>
        <year iso-8601-date="2017">2017</year>
        <pub-id pub-id-type="doi">10.1109/DASC.2017.8102039</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Cour-HarboU003A2020">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Cour-Harbo</surname><given-names>Anders la</given-names></name>
        </person-group>
        <article-title>Ground impact probability distribution for small unmanned aircraft in ballistic descent</article-title>
        <source>2020 international conference on unmanned aircraft systems (ICUAS)</source>
        <year iso-8601-date="2020">2020</year>
        <pub-id pub-id-type="doi">10.1109/ICUAS48674.2020.9213990</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-AncelU003A2017">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Ancel</surname><given-names>Ersin</given-names></name>
          <name><surname>Capristan</surname><given-names>Francisco M.</given-names></name>
          <name><surname>Foster</surname><given-names>John V.</given-names></name>
          <name><surname>Condotta</surname><given-names>Ryan C.</given-names></name>
        </person-group>
        <article-title>Real-time risk assessment framework for unmanned aircraft system (UAS) traffic management (UTM)</article-title>
        <year iso-8601-date="2017">2017</year>
        <uri>https://arc.aiaa.org/doi/abs/10.2514/6.2017-3273</uri>
        <pub-id pub-id-type="doi">10.2514/6.2017-3273</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
