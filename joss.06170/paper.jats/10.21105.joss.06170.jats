<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6170</article-id>
<article-id pub-id-type="doi">10.21105/joss.06170</article-id>
<title-group>
<article-title>pylattica: a package for prototyping lattice models in
chemistry and materials science</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0008-4099-6144</contrib-id>
<name>
<surname>Gallant</surname>
<given-names>Max C.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-2495-5509</contrib-id>
<name>
<surname>Persson</surname>
<given-names>Kristin A.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Materials Sciences Division, Lawrence Berkeley National
Laboratory, Berkeley, California, United States of America</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Department of Materials Science and Engineering, University
of California, Berkeley, California, United States of
America</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-10-23">
<day>23</day>
<month>10</month>
<year>2023</year>
</pub-date>
<volume>9</volume>
<issue>97</issue>
<fpage>6170</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>chemistry</kwd>
<kwd>materials science</kwd>
<kwd>lattice models</kwd>
<kwd>cellular automaton</kwd>
<kwd>monte carlo</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><monospace>pylattica</monospace> provides a simple and flexible
  framework for prototyping lattice-based simulations such as atomistic
  Monte Carlo simulations or cellular automata. It is differentiated
  from other lattice simulation packages by i) its agnosticism toward
  the form of the update rule, simulation structure, neighborhood
  structure, and simulation state and ii) its interoperability with the
  <monospace>pymatgen</monospace> package which allows modeling of
  arbitrary crystalline systems (i.e. not only two or three dimensional
  square grids), and makes it particularly well suited to applications
  in materials science and chemistry.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Cellular automata
  (<xref alt="Bays, 2010" rid="ref-bays_introduction_2010" ref-type="bibr">Bays,
  2010</xref>), lattice-gas automata
  (<xref alt="Boghosian, 1999" rid="ref-boghosian_lattice_1999" ref-type="bibr">Boghosian,
  1999</xref>), and atomistic Monte Carlo models
  (<xref alt="Andersen et al., 2019" rid="ref-andersen_practical_2019" ref-type="bibr">Andersen
  et al., 2019</xref>) are all simulations in which a system,
  represented by an arrangement of connected sites, evolves over time
  according to an update rule which determines the future state of a
  site by considering its current state and the state of each of its
  neighbors. For example, in the classic “Game of Life” cellular
  automaton
  (<xref alt="Gardner, 1970" rid="ref-gardner_mathematical_1970" ref-type="bibr">Gardner,
  1970</xref>), sites in a 2D square grid switch between “dead” and
  “alive” during each timestep based on the number of living neighbors
  surrounding them. In lattice Monte Carlo simulations for vacancy
  diffusion in crystalline solid materials, atoms move between
  neighboring sites at rates partially determined by the occupancy of
  their neighbors
  (<xref alt="Haley et al., 2006" rid="ref-haley_vacancy_2006" ref-type="bibr">Haley
  et al., 2006</xref>).</p>
  <p>These simulation classes have been implemented many times in
  various programming languages for a range of applications
  (<xref alt="Andersen et al., 2019" rid="ref-andersen_practical_2019" ref-type="bibr">Andersen
  et al., 2019</xref>;
  <xref alt="Raabe, 2002" rid="ref-raabe_cellular_2002" ref-type="bibr">Raabe,
  2002</xref>). However, these implementations typically focus on tuning
  an existing simulation form within a relatively narrow range of focus.
  For instance, <monospace>CellPyLib</monospace>
  (<xref alt="L. Antunes, 2023" rid="ref-antunes_cellpylib_2023" ref-type="bibr">L.
  Antunes, 2023</xref>), <monospace>netomaton</monospace>
  (<xref alt="L. M. Antunes, 2019" rid="ref-antunes_netomaton_2019" ref-type="bibr">L.
  M. Antunes, 2019</xref>), and
  <monospace>cellular_automaton</monospace>
  (<xref alt="Feistenauer, 2021" rid="ref-feistenauer_cellular_automaton_2021" ref-type="bibr">Feistenauer,
  2021</xref>) are all libraries for simulating cellular automata, but
  they each are limited in the simulation geometry, the data type for
  the simulation state, the geometry of the neighborhood, or the
  strategy for applying the update rule. Similarly,
  <monospace>lattice_mc</monospace>
  (<xref alt="Morgan, 2017" rid="ref-Morgan2017" ref-type="bibr">Morgan,
  2017</xref>) is an excellent Monte Carlo program that focuses solely
  on diffusion in ionic solids. While <monospace>KMCLib</monospace>
  (<xref alt="Leetmaa &amp; Skorodumova, 2014" rid="ref-leetmaa_kmclib_2014" ref-type="bibr">Leetmaa
  &amp; Skorodumova, 2014</xref>) is a more generic alternative, it is
  still (appropriately) limited in the form of the state and the update
  rule.</p>
  <p>The goal of <monospace>pylattica</monospace> is to synthesize the
  essential elements of these valuable simulation classes into a
  flexible and user-friendly framework for developing lattice models
  that do not fit neatly into the target use case of one of the existing
  packages. It accomplishes this by providing implementations of common
  lattice model features (e.g. various neighborhoods, methods for
  applying evolution rules, simulation structures, and analysis tools)
  while remaining unopinionated with regard to the ways these pieces are
  used in new models. It is implemented in python to maximize
  accessibility and interoperability with other scientific software
  tools, in particular, <monospace>pymatgen</monospace>, a package
  containing utilities for analysis in materials science
  (<xref alt="Ong et al., 2013" rid="ref-ong_python_2013" ref-type="bibr">Ong
  et al., 2013</xref>).</p>
  <p>Because <monospace>pylattica</monospace> is focused on enabling
  fast iteration on simulation features during development, it
  prioritizes flexibility and application agnosticism over performance.
  Therefore, it is better suited for cases in which the developer needs
  to prototype and experiment with various forms of their simulation as
  opposed to honing in a hardened production model.</p>
</sec>
<sec id="package-overview">
  <title>Package Overview</title>
  <sec id="simulation-representation">
    <title>Simulation representation</title>
    <p>In lattice models, a system is represented by a network of
    connected sites, frequently a two or three dimensional square grid,
    with some state value assigned to each site. In
    <monospace>pylattica</monospace>, this representation is
    accomplished by the combination of three entities, which separate
    the dominant concerns (illustrated schematically in
    <xref alt="[fig_2]" rid="fig_2">[fig_2]</xref>):</p>
    <list list-type="bullet">
      <list-item>
        <p>A <monospace>Structure</monospace>, which enumerates the
        sites and their physical locations with no limitations on
        periodicity or dimensionality</p>
      </list-item>
      <list-item>
        <p>A <monospace>SimulationState</monospace>, which acts as an
        index of sites and stores the state of each site as an arbitrary
        key-value mapping</p>
      </list-item>
      <list-item>
        <p>A <monospace>Neighborhood</monospace>, which encodes the
        connectedness of the sites</p>
      </list-item>
    </list>
    <p>Of these three entities, only a
    <monospace>SimulationState</monospace> is required to run a
    simulation. The user can freely utilize
    <monospace>Structure</monospace>s and
    <monospace>Neighborhood</monospace>s as required by their use case
    in the preparation or evolution of the system.</p>
    <fig>
      <caption><p><styled-content id="fig_2"></styled-content>Schematic
      showing an example state, a structure labeled with site IDs, and a
      possible neighborhood for site 13 in a simulation with a two
      dimensional grid structure.</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="./composite.png" />
    </fig>
  </sec>
  <sec id="constructing-neighborhoods">
    <title>Constructing Neighborhoods</title>
    <p><monospace>pylattica</monospace> supports two and three
    dimensional square grid simulation structures out of the box (though
    any simulation structure can be created), and provides convenience
    methods for building them. Additionally, it provides a number of
    <monospace>NeighborhoodBuilder</monospace> classes which encode
    methods for specifying site neighbors in
    <monospace>Structure</monospace>s. The two most flexible
    <monospace>NeighborhoodBuilder</monospace> classes are the
    <monospace>DistanceNeighborhoodBuilder</monospace> and the
    <monospace>MotifNeighborhoodBuilder</monospace>. Using the
    <monospace>DistanceNeighborhoodBuilder</monospace>, the neighbors of
    a site are defined as all other sites falling within a particular
    cutoff distance. Using the
    <monospace>MotifNeighborhoodBuilder</monospace>, the locations of a
    site’s neighbors are specified by providing a list of offset vectors
    from that site (one for each neighbor). While these two classes can
    be used to construct practically any neighborhood, builder classes
    for the following common neighborhoods are also provided:</p>
    <list list-type="bullet">
      <list-item>
        <p>Moore (square grid)
        (<xref alt="Packard &amp; Wolfram, 1985" rid="ref-packard_two-dimensional_1985" ref-type="bibr">Packard
        &amp; Wolfram, 1985</xref>)</p>
      </list-item>
      <list-item>
        <p>Von Neumann (square grid)
        (<xref alt="Packard &amp; Wolfram, 1985" rid="ref-packard_two-dimensional_1985" ref-type="bibr">Packard
        &amp; Wolfram, 1985</xref>)</p>
      </list-item>
      <list-item>
        <p>Pseudopentagonal (square grid)
        (<xref alt="Sieradzki &amp; Madej, 2013" rid="ref-sieradzki_perceptive_2013" ref-type="bibr">Sieradzki
        &amp; Madej, 2013</xref>)</p>
      </list-item>
      <list-item>
        <p>Pseudohexagonal (square grid)
        (<xref alt="Sieradzki &amp; Madej, 2013" rid="ref-sieradzki_perceptive_2013" ref-type="bibr">Sieradzki
        &amp; Madej, 2013</xref>)</p>
      </list-item>
      <list-item>
        <p>Annular (arbitrary structure)</p>
      </list-item>
    </list>
  </sec>
  <sec id="simulation-execution">
    <title>Simulation Execution</title>
    <p>Running a simulation entails applying an “update rule” to sites
    in the simulation. <monospace>pylattica</monospace> only requires
    that the update rule accept a site identifier and the current
    simulation state as input and provide a collection of intended state
    changes as output. This rule is implemented by the user in the
    <monospace>get_state_update</monospace> method on a
    <monospace>Controller</monospace> class. In most cases, a
    <monospace>Neighborhood</monospace> object will be used to consider
    the state of neighboring sites when calculating the intended
    changes, though this is not required. The flexibility provided by
    this arrangement makes it straightforward to iterate on the
    definition of the rule while developing a simulation.</p>
    <p>The simulation is evolved by providing the
    <monospace>Controller</monospace> and a desired number of steps to
    an instance of the <monospace>Runner</monospace> class. The
    <monospace>Runner</monospace> passes sites to the
    <monospace>Controller</monospace>, and keeps track of updates as
    they are returned and accumulated over the course of the simulation.
    Two modes of evolution are supported by
    <monospace>pylattica</monospace>
    (<xref alt="Fatès, 2013" rid="ref-fates_guided_2013" ref-type="bibr">Fatès,
    2013</xref>):</p>
    <list list-type="bullet">
      <list-item>
        <p>Synchronous - at each simulation step, the rule is applied to
        every site</p>
      </list-item>
      <list-item>
        <p>Asynchronous - at each simulation step, the rule is applied
        to a single random site</p>
      </list-item>
    </list>
    <p>The result of a simulation run is an instance of
    <monospace>SimulationResult</monospace>, which stores the state at
    every step in the simulation as a list of
    <monospace>SimulationState</monospace>s. It can be easily serialized
    for storage on a filesystem or a document store, like MongoDB.</p>
  </sec>
  <sec id="overview">
    <title>Overview</title>
    <fig>
      <caption><p><styled-content id="fig_1"></styled-content>Diagram
      showing relationships between <monospace>pylattica</monospace>
      entities.</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="./flowchart.png" />
    </fig>
    <p><xref alt="[fig_1]" rid="fig_1">[fig_1]</xref> shows the
    relationship between the entities discussed so far, and how they are
    connected in producing a <monospace>SimulationResult</monospace>. To
    summarize, a <monospace>Lattice</monospace> is used to create a
    <monospace>Structure</monospace>, which is paired with an initial
    <monospace>SimulationState</monospace> to create a
    <monospace>Simulation</monospace>, or the starting point for
    simulation execution. The <monospace>Structure</monospace> is also
    fed to a <monospace>NeighborhoodBuilder</monospace> to construct a
    <monospace>Neighborhood</monospace> object, which is used in the
    update rule implemented by the <monospace>Controller</monospace> to
    determine how the simulation evolves. Finally, the
    <monospace>Simulation</monospace> and
    <monospace>Controller</monospace> are passed to a
    <monospace>Runner</monospace>, which applies the update rule
    repeatedly, producing a series of
    <monospace>SimulationState</monospace>s, which are concatenated to
    form a <monospace>SimulationResult</monospace>.</p>
  </sec>
  <sec id="visualization-and-analysis">
    <title>Visualization and Analysis</title>
    <fig>
      <caption><p><styled-content id="fig_3"></styled-content> Example
      visualizations of two and three dimensional square grid simulation
      states.</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="./vizeg.png" />
    </fig>
    <p><monospace>pylattica</monospace> provides basic utilities for
    analyzing the state of the simulation. These tools provide
    functionality for filtering and counting sites in a
    <monospace>SimulationState</monospace> by arbitrary criteria
    (implemented as a function of the site’s state). Further specialized
    support is provided for simulation states in which the state of each
    site is a single discrete label (as is the case in traditional
    cellular automata).</p>
    <p>In the case of simulations with two- and three-dimensional square
    grid structures, <monospace>pylattica</monospace> provides
    visualization tools which convert
    <monospace>SimulationState</monospace>s into PNG images (as shown in
    <xref alt="[fig_3]" rid="fig_3">[fig_3]</xref>) and
    <monospace>SimulationResult</monospace>s into animated GIFs.</p>
  </sec>
  <sec id="crystal-structure-support-and-pymatgen">
    <title>Crystal Structure Support and pymatgen</title>
    <p><monospace>pylattica</monospace> was developed with simulations
    of crystalline materials in mind. As a result, it supports
    simulation <monospace>Structure</monospace>s defined with periodic
    boundaries and lattices with arbitrarily shaped unit cells. These
    <monospace>Structure</monospace>s are supported by a
    <monospace>Lattice</monospace> class which was cloned from
    <monospace>pymatgen</monospace> and then adapted to the needs of
    <monospace>pylattica</monospace>, primarily because
    <monospace>pymatgen</monospace>’s implementation is hard-coded to
    use 3-dimensions, while <monospace>pylattica</monospace> strives for
    generality and enforces no such constraint. In service of developing
    simulations of real crystalline materials,
    <monospace>pylattica</monospace> also provides utility functions for
    defining neighborhoods in periodic space based on displacement
    motifs (e.g. octahedral or tetrahedral neighbors) and supports
    converting <monospace>pymatgen.Structure</monospace> objects to
    <monospace>pylattica</monospace> <monospace>Structure</monospace>s.
    This feature is intended to enable more seamless integration with
    existing materials science workflows.</p>
  </sec>
</sec>
<sec id="acknowledgments">
  <title>Acknowledgments</title>
  <p>This work was primarily funded and intellectually led by the
  Materials Project, which is funded by the U.S. Department of Energy,
  Office of Science, Office of Basic Energy Sciences, Materials Sciences
  and Engineering Division, under Contract no. DE-AC02-05-CH11231:
  Materials Project program KC23MP. It also received support from the
  U.S. Department of Energy, Office of Science, Office of Basic Energy
  Sciences, Materials Sciences and Engineering Division, under Contract
  No. DE-AC02-05CH11231 within the Data Science for Data-Driven
  Synthesis Science grant (KCD2S2). MCG acknowledges Matthew J.
  McDermott and Bryant Li for useful discussions during the development
  of this work.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-sieradzki_perceptive_2013">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Sieradzki</surname><given-names>Lukasz</given-names></name>
        <name><surname>Madej</surname><given-names>Lukasz</given-names></name>
      </person-group>
      <article-title>A perceptive comparison of the cellular automata and Monte Carlo techniques in application to static recrystallization modeling in polycrystalline materials</article-title>
      <source>Computational Materials Science</source>
      <year iso-8601-date="2013-02">2013</year><month>02</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2022-04-15">2022</year><month>04</month><day>15</day></date-in-citation>
      <volume>67</volume>
      <issn>0927-0256</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S0927025612005435</uri>
      <pub-id pub-id-type="doi">10.1016/j.commatsci.2012.08.047</pub-id>
      <fpage>156</fpage>
      <lpage>173</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Morgan2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Morgan</surname><given-names>Benjamin J.</given-names></name>
      </person-group>
      <article-title>Lattice_mc: A python lattice-gas monte carlo module</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <volume>2</volume>
      <issue>13</issue>
      <uri>https://doi.org/10.21105/joss.00247</uri>
      <pub-id pub-id-type="doi">10.21105/joss.00247</pub-id>
      <fpage>247</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-feistenauer_cellular_automaton_2021">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Feistenauer</surname><given-names>Richard</given-names></name>
      </person-group>
      <article-title>Cellular_automaton</article-title>
      <source>GitLab</source>
      <year iso-8601-date="2021-01">2021</year><month>01</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-10-23">2023</year><month>10</month><day>23</day></date-in-citation>
      <uri>https://gitlab.com/DamKoVosh/cellular_automaton</uri>
    </element-citation>
  </ref>
  <ref id="ref-antunes_cellpylib_2023">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Antunes</surname><given-names>Luis</given-names></name>
      </person-group>
      <article-title>CellPyLib</article-title>
      <year iso-8601-date="2023-10">2023</year><month>10</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-10-23">2023</year><month>10</month><day>23</day></date-in-citation>
      <uri>https://github.com/lantunes/cellpylib</uri>
    </element-citation>
  </ref>
  <ref id="ref-antunes_netomaton_2019">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Antunes</surname><given-names>Luis M.</given-names></name>
      </person-group>
      <article-title>Netomaton: A Python Library for working with Network Automata</article-title>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2019-09">2019</year><month>09</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-10-23">2023</year><month>10</month><day>23</day></date-in-citation>
      <uri>https://zenodo.org/record/3893141</uri>
      <pub-id pub-id-type="doi">10.5281/ZENODO.3893141</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-leetmaa_kmclib_2014">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Leetmaa</surname><given-names>Mikael</given-names></name>
        <name><surname>Skorodumova</surname><given-names>Natalia V.</given-names></name>
      </person-group>
      <article-title>KMCLib: A general framework for lattice kinetic Monte Carlo (KMC) simulations</article-title>
      <source>Computer Physics Communications</source>
      <year iso-8601-date="2014-09">2014</year><month>09</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-10-23">2023</year><month>10</month><day>23</day></date-in-citation>
      <volume>185</volume>
      <issue>9</issue>
      <issn>0010-4655</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S0010465514001519</uri>
      <pub-id pub-id-type="doi">10.1016/j.cpc.2014.04.017</pub-id>
      <fpage>2340</fpage>
      <lpage>2349</lpage>
    </element-citation>
  </ref>
  <ref id="ref-haley_vacancy_2006">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Haley</surname><given-names>Benjamin P.</given-names></name>
        <name><surname>Beardmore</surname><given-names>Keith M.</given-names></name>
        <name><surname>Grønbech-Jensen</surname><given-names>Niels</given-names></name>
      </person-group>
      <article-title>Vacancy clustering and diffusion in silicon: Kinetic lattice Monte Carlo simulations</article-title>
      <source>Physical Review B</source>
      <year iso-8601-date="2006-07">2006</year><month>07</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-10-24">2023</year><month>10</month><day>24</day></date-in-citation>
      <volume>74</volume>
      <issue>4</issue>
      <uri>https://link.aps.org/doi/10.1103/PhysRevB.74.045217</uri>
      <pub-id pub-id-type="doi">10.1103/PhysRevB.74.045217</pub-id>
      <fpage>045217</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-bays_introduction_2010">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Bays</surname><given-names>Carter</given-names></name>
      </person-group>
      <article-title>Introduction to Cellular Automata and Conway’s Game of Life</article-title>
      <source>Game of Life Cellular Automata</source>
      <person-group person-group-type="editor">
        <name><surname>Adamatzky</surname><given-names>Andrew</given-names></name>
      </person-group>
      <publisher-name>Springer</publisher-name>
      <publisher-loc>London</publisher-loc>
      <year iso-8601-date="2010">2010</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-10-24">2023</year><month>10</month><day>24</day></date-in-citation>
      <isbn>978-1-84996-217-9</isbn>
      <uri>https://doi.org/10.1007/978-1-84996-217-9_1</uri>
      <pub-id pub-id-type="doi">10.1007/978-1-84996-217-9_1</pub-id>
      <fpage>1</fpage>
      <lpage>7</lpage>
    </element-citation>
  </ref>
  <ref id="ref-ong_python_2013">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ong</surname><given-names>Shyue Ping</given-names></name>
        <name><surname>Richards</surname><given-names>William Davidson</given-names></name>
        <name><surname>Jain</surname><given-names>Anubhav</given-names></name>
        <name><surname>Hautier</surname><given-names>Geoffroy</given-names></name>
        <name><surname>Kocher</surname><given-names>Michael</given-names></name>
        <name><surname>Cholia</surname><given-names>Shreyas</given-names></name>
        <name><surname>Gunter</surname><given-names>Dan</given-names></name>
        <name><surname>Chevrier</surname><given-names>Vincent L.</given-names></name>
        <name><surname>Persson</surname><given-names>Kristin A.</given-names></name>
        <name><surname>Ceder</surname><given-names>Gerbrand</given-names></name>
      </person-group>
      <article-title>Python Materials Genomics (pymatgen): A robust, open-source python library for materials analysis</article-title>
      <source>Computational Materials Science</source>
      <year iso-8601-date="2013-02">2013</year><month>02</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-10-24">2023</year><month>10</month><day>24</day></date-in-citation>
      <volume>68</volume>
      <issn>0927-0256</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S0927025612006295</uri>
      <pub-id pub-id-type="doi">10.1016/j.commatsci.2012.10.028</pub-id>
      <fpage>314</fpage>
      <lpage>319</lpage>
    </element-citation>
  </ref>
  <ref id="ref-packard_two-dimensional_1985">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Packard</surname><given-names>Norman H.</given-names></name>
        <name><surname>Wolfram</surname><given-names>Stephen</given-names></name>
      </person-group>
      <article-title>Two-dimensional cellular automata</article-title>
      <source>Journal of Statistical Physics</source>
      <year iso-8601-date="1985-03">1985</year><month>03</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-10-24">2023</year><month>10</month><day>24</day></date-in-citation>
      <volume>38</volume>
      <issue>5</issue>
      <issn>1572-9613</issn>
      <uri>https://doi.org/10.1007/BF01010423</uri>
      <pub-id pub-id-type="doi">10.1007/BF01010423</pub-id>
      <fpage>901</fpage>
      <lpage>946</lpage>
    </element-citation>
  </ref>
  <ref id="ref-fates_guided_2013">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Fatès</surname><given-names>Nazim</given-names></name>
      </person-group>
      <article-title>A Guided Tour of Asynchronous Cellular Automata</article-title>
      <source>Cellular Automata and Discrete Complex Systems</source>
      <person-group person-group-type="editor">
        <name><surname>Kari</surname><given-names>Jarkko</given-names></name>
        <name><surname>Kutrib</surname><given-names>Martin</given-names></name>
        <name><surname>Malcher</surname><given-names>Andreas</given-names></name>
      </person-group>
      <publisher-name>Springer</publisher-name>
      <publisher-loc>Berlin, Heidelberg</publisher-loc>
      <year iso-8601-date="2013">2013</year>
      <isbn>978-3-642-40867-0</isbn>
      <pub-id pub-id-type="doi">10.1007/978-3-642-40867-0_2</pub-id>
      <fpage>15</fpage>
      <lpage>30</lpage>
    </element-citation>
  </ref>
  <ref id="ref-boghosian_lattice_1999">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Boghosian</surname><given-names>Bruce M.</given-names></name>
      </person-group>
      <article-title>Lattice gases and cellular automata</article-title>
      <source>Future Generation Computer Systems</source>
      <year iso-8601-date="1999-12">1999</year><month>12</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-10-24">2023</year><month>10</month><day>24</day></date-in-citation>
      <volume>16</volume>
      <issue>2</issue>
      <issn>0167-739X</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S0167739X9900045X</uri>
      <pub-id pub-id-type="doi">10.1016/S0167-739X(99)00045-X</pub-id>
      <fpage>171</fpage>
      <lpage>185</lpage>
    </element-citation>
  </ref>
  <ref id="ref-andersen_practical_2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Andersen</surname><given-names>Mie</given-names></name>
        <name><surname>Panosetti</surname><given-names>Chiara</given-names></name>
        <name><surname>Reuter</surname><given-names>Karsten</given-names></name>
      </person-group>
      <article-title>A Practical Guide to Surface Kinetic Monte Carlo Simulations</article-title>
      <source>Frontiers in Chemistry</source>
      <year iso-8601-date="2019">2019</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-10-24">2023</year><month>10</month><day>24</day></date-in-citation>
      <volume>7</volume>
      <issn>2296-2646</issn>
      <uri>https://www.frontiersin.org/articles/10.3389/fchem.2019.00202</uri>
      <pub-id pub-id-type="doi">10.3389/fchem.2019.00202</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-gardner_mathematical_1970">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Gardner</surname><given-names>Martin</given-names></name>
      </person-group>
      <article-title>Mathematical Games</article-title>
      <source>Scientific American</source>
      <year iso-8601-date="1970">1970</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-11-08">2023</year><month>11</month><day>08</day></date-in-citation>
      <volume>223</volume>
      <issue>4</issue>
      <issn>0036-8733</issn>
      <uri>https://www.jstor.org/stable/24927642</uri>
      <fpage>120</fpage>
      <lpage>123</lpage>
    </element-citation>
  </ref>
  <ref id="ref-raabe_cellular_2002">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Raabe</surname><given-names>Dierk</given-names></name>
      </person-group>
      <article-title>Cellular Automata in Materials Science with Particular Reference to Recrystallization Simulation</article-title>
      <source>Annual Review of Materials Research</source>
      <year iso-8601-date="2002">2002</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-11-08">2023</year><month>11</month><day>08</day></date-in-citation>
      <volume>32</volume>
      <issue>1</issue>
      <uri>https://doi.org/10.1146/annurev.matsci.32.090601.152855</uri>
      <pub-id pub-id-type="doi">10.1146/annurev.matsci.32.090601.152855</pub-id>
      <fpage>53</fpage>
      <lpage>76</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
