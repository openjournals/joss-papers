<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">5550</article-id>
<article-id pub-id-type="doi">10.21105/joss.05550</article-id>
<title-group>
<article-title>Biotrade: A Python package to access and analyse the
international trade of bio-based products</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-9073-9826</contrib-id>
<name>
<surname>Rougieux</surname>
<given-names>Paul</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-8601-3336</contrib-id>
<name>
<surname>Patani</surname>
<given-names>Selene</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-3546-8407</contrib-id>
<name>
<surname>Migliavacca</surname>
<given-names>Mirco</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>European Commission, Joint Research Centre, Ispra,
Italy</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>JRC Consultant, ARCADIA SIT s.r.l., Vigevano (PV),
Italy</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<volume>8</volume>
<issue>90</issue>
<fpage>5550</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>python</kwd>
<kwd>life cycle analysis</kwd>
<kwd>forest</kwd>
<kwd>agriculture</kwd>
<kwd>land footprint</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The aim of the <monospace>biotrade</monospace> package is to enable
  regular updates of agriculture, fisheries and forest products trade
  data from the international data sources of FAOSTAT
  (<xref alt="2023" rid="ref-faostat2023" ref-type="bibr">2023</xref>)
  and UN Comtrade
  (<xref alt="2023" rid="ref-comtrade2023" ref-type="bibr">2023</xref>).
  The software provides methods to join data across sources as well as
  to aggregate and rank the most important products and the most
  important countries, as well as geographical areas (e.g.Â continents).
  It also provides tools to assess the quality of the data, by comparing
  for example mirror flows or unit prices of trade. The package allows
  to store and update the collection of macroeconomic time series from
  the World Bank
  (<xref alt="2023" rid="ref-worldbank2023" ref-type="bibr">2023</xref>).</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The production of bio-commodities, agricultural and forest
  products, and international trade of these products is receiving
  increasingly attention because of their potential impacts in terms of
  land use change, and embodied green-house-gas emissions
  (<xref alt="Pendrill et al., 2022" rid="ref-pendrill2022disentangling" ref-type="bibr">Pendrill
  et al., 2022</xref>). Disciplines such as environmental economics or
  Life Cycle Analysis are concerned with research questions such as: (1)
  what is the ecological footprint of bio-commodity production and
  international trade? or (2) how do agricultural market prices react to
  natural disasters? To analyse these questions on a global scale,
  researchers use models based on time series of commodities production
  and trade with data covering many countries and many years in a panel
  format. Every month, or a few times per year, countries update their
  data in a centralised way through international organisations such as
  the United Nations (UN) Food and Agriculture Organisation (FAO) or the
  UN Comtrade. This data is made available in the form of files on a
  public website from which they can be downloaded. In order to
  regularly monitor these datasets, dedicated open-source tools can help
  download data into statistical programming software such as Julia,
  Matlab, Python, R or SAS. The availability of these tools make it
  possible for practitioners and scientists to quickly access the data,
  to re-run an analysis, update the data with the latest release
  quickly, generate plots and model outputs when new data become
  available in a time series. Thus, they facilitate reproducible
  research and the activities of stakeholders. Such download tools to
  access and download data exist already in the R and python packaging
  ecosystems. The R package <monospace>FAOSTAT</monospace>
  (<xref alt="Kao et al., 2017" rid="ref-kao2022faostat" ref-type="bibr">Kao
  et al., 2017</xref>) can download and prepare FAOSTAT data. The R
  package WDI
  (<xref alt="Arel-Bundock &amp; Bacher, 2022" rid="ref-arelbundock2022" ref-type="bibr">Arel-Bundock
  &amp; Bacher, 2022</xref>) downloads data from the World Bank
  including the World Development Indicators. The python package
  <monospace>eurostat</monospace>
  (<xref alt="Cazzaniga, 2022" rid="ref-cazzaniga2022eurostat" ref-type="bibr">Cazzaniga,
  2022</xref>) can download Eurostat data, so does the R package
  <monospace>eurostat</monospace>
  (<xref alt="Lahti et al., 2017" rid="ref-lahti2017retrieval" ref-type="bibr">Lahti
  et al., 2017</xref>).</p>
  <p>However, there is no package that can download from all these
  sources under a common naming scheme. Also, all these packages only
  load data frames and leave it up to the user to save their data for
  later. Here we present the <monospace>biotrade</monospace> package, an
  open-source package that allows for downloading production, land use,
  and trade dataset from FAOSTAT, and trade data from the UN
  Comtrade.</p>
  <p>Unlike the tools already available, the
  <monospace>biotrade</monospace> package creates a local copy inside a
  database that can be easily accessible for further calculations.
  Moreover, the <monospace>biotrade</monospace> package harmonises
  variable names across data sources. Finally, it provides a series of
  methods to assess the quality of the data, and for the calculations of
  statistics and temporal and geographical aggregation of the data,
  ranking the countries with more production or trades of a specific
  products, among others.</p>
  <p>In the following sections we describe: 1) the structure of the
  package and associated database 2) methods for calculations,
  aggregation and comparison of production and trade data.</p>
</sec>
<sec id="data-update-and-package-structure">
  <title>Data update and package structure</title>
  <p>Thanks to the SQL Alchemy
  (<xref alt="Bayer, 2012" rid="ref-bayer2012" ref-type="bibr">Bayer,
  2012</xref>) abstraction layer <monospace>biotrade</monospace> can use
  different database engines. The data is cached in a local database
  which can be either an SQLite database (the default) or a PostGreSQL
  database (user defined through an environment variable). Database
  tables are structured with unique constraints to ensure that there is
  no duplication when data is updated.</p>
  <p>The package is structured by data sources. Each source has a series
  of methods to download and aggregate data. Some functions that perform
  comparison and data aggregation are common to all data sources.</p>
  <p>The following python code updates crop production data by
  downloading it from the FAOSTAT API:</p>
  <preformat>from biotrade.faostat import faostat
faostat.pump.update([&quot;crop_production&quot;])</preformat>
  <p>The following code loads sawnwood other Harmonized System (HS) code
  440799 and soya beans (HS code 120190) trade reported by Italy
  (reporter code 381) in 2020 from the Comtrade API:</p>
  <preformat>from biotrade.comtrade import comtrade
sawnwood99_it = comtrade.pump.download_df(cc = &quot;440799&quot;, r=&quot;381&quot;, ps=&quot;2020&quot;)
soya_beans_it = comtrade.pump.download_df(cc = &quot;120190&quot;, r=&quot;381&quot;, ps=&quot;2020&quot;)</preformat>
  <p>Variable names are harmonized across data sources. The benefit is
  that python or R code become more readable when moving from one data
  source to another, as well as that comparison between data sources are
  straightforward. The table
  <xref alt="[tab:colnames]" rid="tabU003Acolnames">[tab:colnames]</xref>
  shows the naming convention and some of the variable names used across
  different sources.</p>
  <p><styled-content id="tabU003Acolnames"></styled-content></p>
  <table-wrap>
    <table>
      <colgroup>
        <col width="17%" />
        <col width="19%" />
        <col width="24%" />
        <col width="24%" />
        <col width="17%" />
      </colgroup>
      <thead>
        <tr>
          <th>biotrade</th>
          <th>comtrade</th>
          <th>faostat production</th>
          <th>faostat trade</th>
          <th>world_bank</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>year</td>
          <td>year</td>
          <td>year</td>
          <td>year</td>
          <td>year</td>
        </tr>
        <tr>
          <td>reporter</td>
          <td>reporter</td>
          <td>area</td>
          <td>reporter_countries</td>
          <td>country_name</td>
        </tr>
        <tr>
          <td>partner</td>
          <td>partner</td>
          <td></td>
          <td>partner_countries</td>
          <td></td>
        </tr>
        <tr>
          <td>product_code</td>
          <td>commodity_code</td>
          <td>item_code</td>
          <td>item_code</td>
          <td></td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <p>One issue when working with UN Comtrade and FAOSTAT data, is that
  country codes are different between the two sources. The package
  contains a mapping table between country codes in the 2 coding system,
  as well as ISO codes and continent and sub-continent aggregates. In
  addition the UN Comtrade product classification is vastly larger than
  the FAOSTAT product classification. The
  <monospace>biotrade</monospace> package also contains a mapping table
  between FAOSTAT product codes and the Harmonized System classification
  used in Comtrade. The country and product mapping tables make it
  possible to convert UN comtrade data into the FAOSTAT format, so that
  it can be analysed in the same way. Aggregation functions are also
  based on these country and product mapping tables.</p>
</sec>
<sec id="methods-for-calculations-aggregation-and-comparison-of-production-and-trade-data">
  <title>Methods for calculations, aggregation and comparison of
  production and trade data</title>
  <p>Example use of the <monospace>nlargest</monospace> function to
  display the 3 largest wheat producers globally:</p>
  <preformat>from biotrade.faostat import faostat
from biotrade.common.aggregate import nlargest
wheat = faostat.db.select(&quot;crop_production&quot;, product=&quot;wheat&quot;)
wheat_largest =  nlargest(
    # Remove aggregates (continents) and keep only recent years
    wheat.query(&quot;reporter_code &lt; 1000 and year &gt; year.max() - 10&quot;),
    value_vars=&quot;value&quot;,
    agg_groups=[&quot;reporter&quot;, &quot;product&quot;],
    slice_groups=[&quot;element&quot;, &quot;unit&quot;],
    n=5
)
wheat_largest

#    product         element                   reporter    unit        value
# 0    wheat  area_harvested                      India      ha   30205021.0
# 1    wheat  area_harvested         Russian Federation      ha   25698803.1
# 2    wheat  area_harvested                      China      ha   24189501.9
# 3    wheat  area_harvested            China, mainland      ha   24187166.0
# 4    wheat  area_harvested   United States of America      ha   17344652.9
# 5    wheat      production                      China  tonnes  128605992.0
# 6    wheat      production            China, mainland  tonnes  128600610.0
# 7    wheat      production                      India  tonnes   95949997.0
# 8    wheat      production         Russian Federation  tonnes   65938100.0
# 9    wheat      production   United States of America  tonnes   54897588.9
# 10   wheat           yield                    Ireland   hg/ha      91991.6
# 11   wheat           yield                New Zealand   hg/ha      89421.0
# 12   wheat           yield                    Belgium   hg/ha      87399.3
# 13   wheat           yield                Netherlands   hg/ha      87030.2
# 14   wheat           yield United Kingdom of Great...   hg/ha      79164.2</preformat>
  <p>The <monospace>biotrade</monospace> package can also be used from
  the R statistical software, thanks to an interface with python called
  reticulate
  (<xref alt="Ushey et al., 2023" rid="ref-ushey2023" ref-type="bibr">Ushey
  et al., 2023</xref>). Example loading FAOSTAT crop production data
  from within R and ranking countries with the
  <monospace>nlargest</monospace> function. Rows are aggregated by
  <monospace>agg_groups</monospace>, sorted by the first of the
  <monospace>value_vars</monospace> and slicing takes the first 5 rows
  in each slice group:</p>
  <preformat># This is the only R code example in this document
library(reticulate)
library(dplyr)
py_run_string(&quot;from biotrade.faostat import faostat&quot;)
py_run_string(&quot;from biotrade.common.aggregate import nlargest&quot;)
wheat &lt;- py$faostat$db$select(&quot;crop_production&quot;, product=&quot;wheat&quot;)
wheat_largest &lt;- wheat %&gt;%
    # Remove aggregates (continents) and keep only recent years
    filter(reporter_code &lt; 1000 &amp; year &gt; max(year) - 10) %&gt;%
    py$nlargest(value_vars=&quot;value&quot;,
                agg_groups=c(&quot;reporter&quot;, &quot;product&quot;),
                slice_groups=c(&quot;element&quot;, &quot;unit&quot;),
                n=5)
str(wheat_largest)
# 'data.frame':   15 obs. of  5 variables:
#  $ product : chr  &quot;wheat&quot; &quot;wheat&quot; &quot;wheat&quot; &quot;wheat&quot; ...
#  $ unit    : chr  &quot;ha&quot; &quot;ha&quot; &quot;ha&quot; &quot;ha&quot; ...
#  $ element : chr  &quot;area_harvested&quot; &quot;area_harvested&quot; &quot;area_harvested&quot; ...
#  $ reporter: chr  &quot;India&quot; &quot;Russian Federation&quot; &quot;China&quot; &quot;China, mainland&quot; ...
#  $ value   : num  30205021 25698803 24189502 24187166 17344653 ...
#  - attr(*, &quot;pandas.index&quot;)=RangeIndex(start=0, stop=15, step=1)</preformat>
  <p>The following code maps Comtrade to Faostat product codes with the
  function <monospace>merge_faostat_comtrade</monospace> to compare
  trades of the two data sources.</p>
  <preformat>from biotrade.common.compare import merge_faostat_comtrade
import matplotlib.pyplot as plt

df = merge_faostat_comtrade(
    faostat_table=&quot;crop_trade&quot;, comtrade_table=&quot;yearly&quot;, faostat_code=[656]
)
df = df[
    (df.reporter == &quot;Colombia&quot;)
    &amp; (df.partner == &quot;Italy&quot;)
    &amp; (df.element == &quot;export_quantity&quot;)
    &amp; (df.year &gt; 2010)
]
df_pivot = df.pivot(
    index=[&quot;reporter&quot;, &quot;year&quot;, &quot;partner&quot;], columns=&quot;source&quot;, values=&quot;value&quot;
)
fig, ax = plt.subplots()
ax.axline(
    [ax.get_xlim()[0], ax.get_ylim()[0]],
    [ax.get_xlim()[1], ax.get_ylim()[1]],
    color=&quot;r&quot;,
)
ax.scatter(df_pivot.faostat / 1000, df_pivot.comtrade / 1000)
plt.xlabel(&quot;Faostat [tonnes]&quot;)
plt.ylabel(&quot;Comtrade [tonnes]&quot;)
plt.title(&quot;Export quantity of coffee green from Colombia to Italy&quot;)
plt.show()</preformat>
  <fig>
    <caption><p>Figure 1</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/Figure_1.png" xlink:title="Comparison between Faostat and Comtrade data" />
  </fig>
  <p>Aggregate bilateral trade data to 27 European Member States and
  rest of the World as reporter or partners through
  <monospace>agg_trade_eu_row</monospace> function.</p>
  <preformat>from biotrade.common.aggregate import agg_trade_eu_row
from biotrade.faostat import faostat
palm_oil = faostat.db.select(
    table=&quot;crop_trade&quot;,
    product=&quot;palm_oil&quot;,
    reporter=&quot;Indonesia&quot;,
    element=&quot;export_quantity&quot;,
    period_start=2018,
)

palm_oil_agg = agg_trade_eu_row(palm_oil, grouping_side=&quot;partner&quot;)
selected_columns = [&quot;reporter&quot;, &quot;partner&quot;, &quot;product&quot;, &quot;element&quot;]
selected_columns += [&quot;year&quot;, &quot;unit&quot;, &quot;value&quot;]
print(palm_oil_agg[selected_columns])

    reporter partner   product          element  year    unit        value
0  Indonesia      eu  palm_oil  export_quantity  2018  tonnes   3707358.77
1  Indonesia      eu  palm_oil  export_quantity  2019  tonnes   3402457.71
2  Indonesia      eu  palm_oil  export_quantity  2020  tonnes   3326492.32
3  Indonesia      eu  palm_oil  export_quantity  2021  tonnes   2815188.47
4  Indonesia     row  palm_oil  export_quantity  2018  tonnes  24186229.87
5  Indonesia     row  palm_oil  export_quantity  2019  tonnes  24086164.86
6  Indonesia     row  palm_oil  export_quantity  2020  tonnes  22610175.02
7  Indonesia     row  palm_oil  export_quantity  2021  tonnes  22716583.50
  </preformat>
  <p>Compare flows through <monospace>put_mirror_beside</monospace>
  function, which adds a column to the dataframe with the corresponding
  mirror flows.</p>
  <preformat>from biotrade.common.compare import merge_faostat_comtrade
from biotrade.faostat.mirror import put_mirror_beside

df = merge_faostat_comtrade(
    faostat_table=&quot;crop_trade&quot;, comtrade_table=&quot;yearly&quot;, faostat_code=[236]
)
df = df[
    (df.reporter.isin([&quot;Brazil&quot;, &quot;Argentina&quot;]))
    &amp; (df.partner.isin([&quot;Brazil&quot;, &quot;Argentina&quot;]))
    &amp; (df.year == 2021)
    &amp; (df.element.isin([&quot;import_quantity&quot;, &quot;export_quantity&quot;]))
]
df = put_mirror_beside(df)
selected_columns = [&quot;source&quot;, &quot;reporter&quot;, &quot;partner&quot;]
selected_columns += [&quot;element&quot;, &quot;year&quot;, &quot;unit&quot;, &quot;value&quot;, &quot;value_mirror&quot;]
print(df[selected_columns])

  source   reporter    partner  element  year unit        value value_mirror
 faostat     Brazil  Argentina   import  2021   kg    4840840.0    2499580.0
 faostat     Brazil  Argentina   export  2021   kg  218176100.0  218176890.0
 faostat  Argentina     Brazil   import  2021   kg  218176890.0  218176100.0
 faostat  Argentina     Brazil   export  2021   kg    2499580.0    4840840.0
comtrade  Argentina  Argentina   import  2021   kg     689204.0          NaN
comtrade  Argentina     Brazil   export  2021   kg    2499580.0    4840836.0
comtrade  Argentina     Brazil   import  2021   kg  218176890.0  218176103.0
comtrade     Brazil  Argentina   export  2021   kg  218176103.0  218176890.0
comtrade     Brazil  Argentina   import  2021   kg    4840836.0    2499580.0
  </preformat>
</sec>
<sec id="conclusion">
  <title>Conclusion</title>
  <p>The <monospace>biotrade</monospace> package is a preparation tool
  that updates agriculture and forestry production and trade data based
  on global sources. It enforces a naming convention on variables to
  make sure similar variable names are used across data sources. As
  source Application Programming Interfaces (API) tend to change their
  access mechanisms every few years; the goal of the package maintainers
  is to abstract away those changes and provide a unified method to
  update data, that should continue to work with future updates. The
  package provides convenient methods to store intermediate results and
  to select data. We encourage users to install the
  <monospace>biotrade</monospace> package, to test it and to send
  feedback through the
  <ext-link ext-link-type="uri" xlink:href="https://gitlab.com/bioeconomy/forobs/biotrade/-/issues">issues
  page</ext-link>. We believe that the package will be of interest of
  scientist, stakeholders, or practitioners that are interested in
  monitoring production, land use and trade data.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-arelbundock2022">
    <element-citation publication-type="webpage">
      <person-group person-group-type="author">
        <name><surname>Arel-Bundock</surname><given-names>Vincent</given-names></name>
        <name><surname>Bacher</surname><given-names>Etienne</given-names></name>
      </person-group>
      <article-title>WDI: World Development Indicators and Other World Bank Data</article-title>
      <year iso-8601-date="2022">2022</year>
      <uri>https://CRAN.R-project.org/package=WDI</uri>
    </element-citation>
  </ref>
  <ref id="ref-bayer2012">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Bayer</surname><given-names>Michael</given-names></name>
      </person-group>
      <article-title>SQLAlchemy</article-title>
      <source>The Architecture of Open Source Applications Volume II: Structure, Scale, and a Few More Fearless Hacks</source>
      <person-group person-group-type="editor">
        <name><surname>Brown</surname><given-names>Amy</given-names></name>
        <name><surname>Wilson</surname><given-names>Greg</given-names></name>
      </person-group>
      <publisher-name>aosabook.org</publisher-name>
      <year iso-8601-date="2012">2012</year>
      <uri>http://aosabook.org/en/sqlalchemy.html</uri>
    </element-citation>
  </ref>
  <ref id="ref-cazzaniga2022eurostat">
    <element-citation publication-type="webpage">
      <person-group person-group-type="author">
        <name><surname>Cazzaniga</surname><given-names>Noemi</given-names></name>
      </person-group>
      <article-title>Eurostat Python Package</article-title>
      <source>Pypi</source>
      <year iso-8601-date="2022">2022</year>
      <uri>https://pypi.org/project/eurostat/</uri>
    </element-citation>
  </ref>
  <ref id="ref-comtrade2023">
    <element-citation publication-type="webpage">
      <person-group person-group-type="author">
        <string-name>United Nations Statistics Division</string-name>
      </person-group>
      <article-title>The United Nations Comtrade database</article-title>
      <source>United Nations</source>
      <year iso-8601-date="2023">2023</year>
      <uri>https://comtrade.un.org/data/da</uri>
    </element-citation>
  </ref>
  <ref id="ref-faostat2023">
    <element-citation publication-type="webpage">
      <person-group person-group-type="author">
        <name><surname>FAOSTAT</surname></name>
      </person-group>
      <article-title>Food and Agriculture Organization of the United Nations</article-title>
      <year iso-8601-date="2023">2023</year>
      <uri>http://www.fao.org/faostat/</uri>
    </element-citation>
  </ref>
  <ref id="ref-kao2022faostat">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kao</surname><given-names>Michael C. J.</given-names></name>
        <name><surname>Gesmann</surname><given-names>Markus</given-names></name>
        <name><surname>Gheri</surname><given-names>Filippo</given-names></name>
      </person-group>
      <article-title>FAOSTAT: Download Data from the FAOSTAT Database</article-title>
      <source>CRAN</source>
      <year iso-8601-date="2017">2017</year>
      <uri>https://CRAN.R-project.org/package=FAOSTAT</uri>
    </element-citation>
  </ref>
  <ref id="ref-lahti2017retrieval">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lahti</surname><given-names>Leo</given-names></name>
        <name><surname>Huovari</surname><given-names>Janne</given-names></name>
        <name><surname>Kainu</surname><given-names>Markus</given-names></name>
        <name><surname>Biecek</surname><given-names>PrzemysÅaw</given-names></name>
      </person-group>
      <article-title>Retrieval and Analysis of Eurostat Open Data with the eurostat Package</article-title>
      <source>The R Journal</source>
      <year iso-8601-date="2017">2017</year>
      <volume>9</volume>
      <issue>1</issue>
      <uri>https://doi.org/10.32614/RJ-2017-019</uri>
      <pub-id pub-id-type="doi">10.32614/RJ-2017-019</pub-id>
      <fpage>385</fpage>
      <lpage>392</lpage>
    </element-citation>
  </ref>
  <ref id="ref-pendrill2022disentangling">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Pendrill</surname><given-names>Florence</given-names></name>
        <name><surname>Gardner</surname><given-names>Toby A</given-names></name>
        <name><surname>Meyfroidt</surname><given-names>Patrick</given-names></name>
        <name><surname>Persson</surname><given-names>U Martin</given-names></name>
        <name><surname>Adams</surname><given-names>Justin</given-names></name>
        <name><surname>Azevedo</surname><given-names>Tasso</given-names></name>
        <name><surname>Bastos Lima</surname><given-names>Mairon G</given-names></name>
        <name><surname>Baumann</surname><given-names>Matthias</given-names></name>
        <name><surname>Curtis</surname><given-names>Philip G</given-names></name>
        <name><surname>De Sy</surname><given-names>Veronique</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Disentangling the numbers behind agriculture-driven tropical deforestation</article-title>
      <source>Science</source>
      <publisher-name>American Association for the Advancement of Science</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <volume>377</volume>
      <issue>6611</issue>
      <pub-id pub-id-type="doi">10.1126/science.abm9267</pub-id>
      <fpage>eabm9267</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-ushey2023">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Ushey</surname><given-names>Kevin</given-names></name>
        <name><surname>Allaire</surname><given-names>JJ</given-names></name>
        <name><surname>Tang</surname><given-names>Yuan</given-names></name>
      </person-group>
      <source>reticulate: Interface to âPythonâ</source>
      <year iso-8601-date="2023">2023</year>
      <uri>https://rstudio.github.io/reticulate/</uri>
    </element-citation>
  </ref>
  <ref id="ref-worldbank2023">
    <element-citation publication-type="webpage">
      <person-group person-group-type="author">
        <string-name>The World Bank</string-name>
      </person-group>
      <article-title>World Development Indicators</article-title>
      <source>World Bank</source>
      <year iso-8601-date="2023">2023</year>
      <uri>https://datacatalog.worldbank.org/search/dataset/0037712/World-Development-Indicators</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
