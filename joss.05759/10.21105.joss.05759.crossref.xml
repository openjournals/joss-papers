<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/5.3.1"
           xmlns:ai="http://www.crossref.org/AccessIndicators.xsd"
           xmlns:rel="http://www.crossref.org/relations.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           version="5.3.1"
           xsi:schemaLocation="http://www.crossref.org/schema/5.3.1 http://www.crossref.org/schemas/crossref5.3.1.xsd">
  <head>
    <doi_batch_id>20231009T171236-138cc0c542a92013199af4288834c9a51805752c</doi_batch_id>
    <timestamp>20231009171236</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>https://joss.theoj.org</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>10</month>
          <year>2023</year>
        </publication_date>
        <journal_volume>
          <volume>8</volume>
        </journal_volume>
        <issue>90</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>automata: A Python package for simulating and
manipulating automata</title>
        </titles>
        <contributors>
          <person_name sequence="first" contributor_role="author">
            <given_name>Caleb</given_name>
            <surname>Evans</surname>
            <ORCID>https://orcid.org/0009-0000-8896-6800</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Eliot W.</given_name>
            <surname>Robson</surname>
            <ORCID>https://orcid.org/0000-0002-1476-6715</ORCID>
          </person_name>
        </contributors>
        <publication_date>
          <month>10</month>
          <day>09</day>
          <year>2023</year>
        </publication_date>
        <pages>
          <first_page>5759</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.05759</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">10.5281/zenodo.8419571</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/5759</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.05759</doi>
          <resource>https://joss.theoj.org/papers/10.21105/joss.05759</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://joss.theoj.org/papers/10.21105/joss.05759.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="Sutner03">
            <article_title>Automata, a hybrid system for computational
automata theory</article_title>
            <author>Sutner</author>
            <journal_title>Implementation and application of
automata</journal_title>
            <doi>10.1007/3-540-44977-9_21</doi>
            <isbn>978-3-540-44977-5</isbn>
            <cYear>2003</cYear>
            <unstructured_citation>Sutner, K. (2003). Automata, a hybrid
system for computational automata theory. In J.-M. Champarnaud &amp; D.
Maurel (Eds.), Implementation and application of automata (pp. 221–227).
Springer Berlin Heidelberg.
https://doi.org/10.1007/3-540-44977-9_21</unstructured_citation>
          </citation>
          <citation key="brics">
            <article_title>Dk.brics.automaton – finite-state automata
and regular expressions for Java</article_title>
            <author>Møller</author>
            <cYear>2021</cYear>
            <unstructured_citation>Møller, A. (2021). Dk.brics.automaton
– finite-state automata and regular expressions for Java.
https://www.brics.dk/automaton/</unstructured_citation>
          </citation>
          <citation key="AlmeidaMR10">
            <article_title>Testing the equivalence of regular
languages</article_title>
            <author>Almeida</author>
            <journal_title>Journal of Automata, Languages and
Combinatorics</journal_title>
            <issue>1/2</issue>
            <volume>15</volume>
            <doi>10.25596/jalc-2010-007</doi>
            <cYear>2010</cYear>
            <unstructured_citation>Almeida, M., Moreira, N., &amp; Reis,
R. (2010). Testing the equivalence of regular languages. Journal of
Automata, Languages and Combinatorics, 15(1/2), 7–25.
https://doi.org/10.25596/jalc-2010-007</unstructured_citation>
          </citation>
          <citation key="mihov_schulz_2019">
            <article_title>The minimal deterministic finite-state
automaton for a finite language</article_title>
            <author>Mihov</author>
            <journal_title>Finite-state techniques: Automata,
transducers and bimachines</journal_title>
            <doi>10.1017/9781108756945.011</doi>
            <cYear>2019</cYear>
            <unstructured_citation>Mihov, S., &amp; Schulz, K. U.
(2019). The minimal deterministic finite-state automaton for a finite
language. In Finite-state techniques: Automata, transducers and
bimachines (pp. 253–278). Cambridge University Press.
https://doi.org/10.1017/9781108756945.011</unstructured_citation>
          </citation>
          <citation key="AhoSU86">
            <volume_title>Compilers: Principles, techniques, and tools
(2nd edition)</volume_title>
            <author>Aho</author>
            <isbn>0321486811</isbn>
            <cYear>2006</cYear>
            <unstructured_citation>Aho, A. V., Lam, M. S., Sethi, R.,
&amp; Ullman, J. D. (2006). Compilers: Principles, techniques, and tools
(2nd edition) (pp. 152–155). Addison-Wesley Longman Publishing Co., Inc.
ISBN: 0321486811</unstructured_citation>
          </citation>
          <citation key="Hopcroft71">
            <article_title>An n log n algorithm for minimizing states in
a finite automaton</article_title>
            <author>Hopcroft</author>
            <journal_title>Theory of machines and
computations</journal_title>
            <doi>10.1016/B978-0-12-417750-5.50022-1</doi>
            <isbn>978-0-12-417750-5</isbn>
            <cYear>1971</cYear>
            <unstructured_citation>Hopcroft, J. (1971). An n log n
algorithm for minimizing states in a finite automaton. In Z. Kohavi
&amp; A. Paz (Eds.), Theory of machines and computations (pp. 189–196).
Academic Press.
https://doi.org/10.1016/B978-0-12-417750-5.50022-1</unstructured_citation>
          </citation>
          <citation key="Erickson23">
            <article_title>Auto-graded scaffolding exercises for
theoretical computer science</article_title>
            <author>Jeff Erickson</author>
            <journal_title>2023 ASEE annual conference &amp;
exposition</journal_title>
            <cYear>2023</cYear>
            <unstructured_citation>Jeff Erickson, E. W. R., Jason Xia,
&amp; Solomon, B. (2023). Auto-graded scaffolding exercises for
theoretical computer science. 2023 ASEE Annual Conference &amp;
Exposition. https://peer.asee.org/42347</unstructured_citation>
          </citation>
          <citation key="Johnson_2010">
            <article_title>Damn cool algorithms: Levenshtein
automata</article_title>
            <author>Johnson</author>
            <journal_title>Nick’s Blog</journal_title>
            <cYear>2010</cYear>
            <unstructured_citation>Johnson, N. (2010). Damn cool
algorithms: Levenshtein automata. In Nick’s Blog.
http://blog.notdot.net/2010/07/Damn-Cool-Algorithms-Levenshtein-Automata</unstructured_citation>
          </citation>
          <citation key="Knuth77">
            <article_title>Fast pattern matching in
strings</article_title>
            <author>Knuth</author>
            <journal_title>SIAM Journal on Computing</journal_title>
            <issue>2</issue>
            <volume>6</volume>
            <doi>10.1137/0206024</doi>
            <cYear>1977</cYear>
            <unstructured_citation>Knuth, D. E., Morris, J. H., Jr.,
&amp; Pratt, V. R. (1977). Fast pattern matching in strings. SIAM
Journal on Computing, 6(2), 323–350.
https://doi.org/10.1137/0206024</unstructured_citation>
          </citation>
          <citation key="Hopcroft06">
            <volume_title>Introduction to automata theory, languages,
and computation (3rd edition)</volume_title>
            <author>Hopcroft</author>
            <isbn>0321455363</isbn>
            <cYear>2006</cYear>
            <unstructured_citation>Hopcroft, J. E., Motwani, R., &amp;
Ullman, J. D. (2006). Introduction to automata theory, languages, and
computation (3rd edition). Addison-Wesley Longman Publishing Co., Inc.
ISBN: 0321455363</unstructured_citation>
          </citation>
          <citation key="Sipser12">
            <volume_title>Introduction to the theory of
computation</volume_title>
            <author>Sipser</author>
            <isbn>978-1-133-18781-3</isbn>
            <cYear>2012</cYear>
            <unstructured_citation>Sipser, M. (2012). Introduction to
the theory of computation (pp. 45–47). Cengage Learning.
ISBN: 978-1-133-18781-3</unstructured_citation>
          </citation>
          <citation key="Marschall11">
            <article_title>Construction of minimal deterministic finite
automata from biological motifs</article_title>
            <author>Marschall</author>
            <journal_title>Theoretical Computer Science</journal_title>
            <issue>8</issue>
            <volume>412</volume>
            <doi>10.1016/j.tcs.2010.12.003</doi>
            <issn>0304-3975</issn>
            <cYear>2011</cYear>
            <unstructured_citation>Marschall, T. (2011). Construction of
minimal deterministic finite automata from biological motifs.
Theoretical Computer Science, 412(8), 922–930.
https://doi.org/10.1016/j.tcs.2010.12.003</unstructured_citation>
          </citation>
          <citation key="Knuutila01">
            <article_title>Re-describing an algorithm by
Hopcroft</article_title>
            <author>Knuutila</author>
            <journal_title>Theoretical Computer Science</journal_title>
            <issue>1</issue>
            <volume>250</volume>
            <doi>10.1016/S0304-3975(99)00150-4</doi>
            <issn>0304-3975</issn>
            <cYear>2001</cYear>
            <unstructured_citation>Knuutila, T. (2001). Re-describing an
algorithm by Hopcroft. Theoretical Computer Science, 250(1), 333–363.
https://doi.org/10.1016/S0304-3975(99)00150-4</unstructured_citation>
          </citation>
          <citation key="Xu16">
            <article_title>A survey on regular expression matching for
deep packet inspection: Applications, algorithms, and hardware
platforms</article_title>
            <author>Xu</author>
            <journal_title>IEEE Communications Surveys &amp;
Tutorials</journal_title>
            <issue>4</issue>
            <volume>18</volume>
            <doi>10.1109/COMST.2016.2566669</doi>
            <cYear>2016</cYear>
            <unstructured_citation>Xu, C., Chen, S., Su, J., Yiu, S. M.,
&amp; Hui, L. C. K. (2016). A survey on regular expression matching for
deep packet inspection: Applications, algorithms, and hardware
platforms. IEEE Communications Surveys &amp; Tutorials, 18(4),
2991–3029.
https://doi.org/10.1109/COMST.2016.2566669</unstructured_citation>
          </citation>
          <citation key="Rodger06">
            <volume_title>JFLAP: An interactive formal languages and
automata package</volume_title>
            <author>Rodger</author>
            <isbn>0763738344</isbn>
            <cYear>2006</cYear>
            <unstructured_citation>Rodger, S. H. (2006). JFLAP: An
interactive formal languages and automata package. Jones; Bartlett
Publishers, Inc. ISBN: 0763738344</unstructured_citation>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
