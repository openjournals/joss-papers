<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">5142</article-id>
<article-id pub-id-type="doi">10.21105/joss.05142</article-id>
<title-group>
<article-title>BasicTools: a numerical simulation
toolbox</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-0640-5485</contrib-id>
<name>
<surname>Bordeu</surname>
<given-names>Felipe</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-8810-9128</contrib-id>
<name>
<surname>Casenave</surname>
<given-names>Fabien</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-7181-9561</contrib-id>
<name>
<surname>Cortial</surname>
<given-names>Julien</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Safran Tech, Digital Sciences &amp; Technologies
Department, Rue des Jeunes Bois, Châteaufort, 78114 Magny-Les-Hameaux,
France</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-02-05">
<day>5</day>
<month>2</month>
<year>2023</year>
</pub-date>
<volume>8</volume>
<issue>86</issue>
<fpage>5142</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>C++</kwd>
<kwd>mesh</kwd>
<kwd>fields</kwd>
<kwd>finite elements</kwd>
<kwd>post-treatment</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Numerical simulations of physical phenomena can be computed by many
  (commercial/free) software packages, but despite the apparent variety,
  all of them rely on a relatively small set of operations during the
  preparation, exploitation, and post-processing of these simulations,
  e.g., handling and modifying meshes and fields. BasicTools is a Python
  library designed to address these supporting tasks. It features an
  efficient data model for meshes and field objects, as well as
  input/output routines compatible with various formats. A finite
  element engine allows it to assemble abstract variational formulations
  and integrate fields on volumes and surfaces.</p>
  <p>BasicTools is actively used in artificial intelligence and model
  order reduction
  (<xref alt="Akkari et al., 2021" rid="ref-datatargetVAE" ref-type="bibr">Akkari
  et al., 2021</xref>;
  <xref alt="Daniel et al., 2020" rid="ref-ROM-net" ref-type="bibr">Daniel
  et al., 2020</xref>,
  <xref alt="2021" rid="ref-mca26010017" ref-type="bibr">2021</xref>,
  <xref alt="2022" rid="ref-UQindustrialDesign" ref-type="bibr">2022</xref>),
  topology optimization
  (<xref alt="Nardoni et al., 2022" rid="ref-nardoni" ref-type="bibr">Nardoni
  et al., 2022</xref>), and material sciences
  (<xref alt="Proudhon, 2013-present" rid="ref-pymicro" ref-type="bibr">Proudhon,
  2013-present</xref>) projects.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Industrial design tasks often rely on numerical simulation
  workflows involving different software packages, each providing its
  own specific post-processing tools. Common tasks like transferring
  computed fields from one tool to another must be routinely
  implemented, with subtle variations. This limits interoperability and
  increases complexity.</p>
  <p>BasicTools is a solution to these concerns. It introduces a data
  model for meshes and related physical fields that can be populated
  using different readers and exported using various writers: no new
  mesh or solution format is forced upon the user. The data-oriented
  design of BasicTools allows high performance operations using a
  high-level language (Python with NumPy). BasicTools allows users to
  convert meshes to other “in-memory” formats (VTK
  (<xref alt="Schroeder et al., 2006" rid="ref-VTK4" ref-type="bibr">Schroeder
  et al., 2006</xref>), PyVista
  (<xref alt="Sullivan &amp; Kaszynski, 2019" rid="ref-sullivan2019pyvista" ref-type="bibr">Sullivan
  &amp; Kaszynski, 2019</xref>), MeshIO
  (<xref alt="Schlömer, 2015-present" rid="ref-meshio" ref-type="bibr">Schlömer,
  2015-present</xref>), CGNS
  (<xref alt="CGNS contributors, 1994-present" rid="ref-cgns" ref-type="bibr">CGNS
  contributors, 1994-present</xref>), and Gmsh
  (<xref alt="Geuzaine &amp; Remacle, 2009" rid="ref-gmsh" ref-type="bibr">Geuzaine
  &amp; Remacle, 2009</xref>)), enabling mixing (and reusing) the
  various treatments available in other frameworks. Other features
  available in BasicTools include various mesh handling routines, field
  transfer operators, and a flexible finite element engine.</p>
</sec>
<sec id="state-of-the-field">
  <title>State of the field</title>
  <p>In the computational fluid dynamics community, the CFD General
  Notation System (CGNS)
  (<xref alt="CGNS contributors, 1994-present" rid="ref-cgns" ref-type="bibr">CGNS
  contributors, 1994-present</xref>) format is a de-facto standard.
  However, to the authors’ knowledge, no such standard exists for solid
  mechanics. One may consider VTK and MeshIO for mesh manipulation and
  file format conversion, respectively, but the post-processing of
  integration point data, a key requirement in solid mechanics, would
  not be possible. Most available tools implement the simple, but
  potentially dangerous, approach of extrapolating the integration point
  values to the nodes of the mesh or averaging in every cell. This can
  lead to a misinterpretation of the solution and incorrect engineering
  decisions. Also, only a few finite element engines allow assembling
  abstract variational formulations on arbitrary geometries, like
  FreeFem++
  (<xref alt="Hecht, 2012" rid="ref-freefempp" ref-type="bibr">Hecht,
  2012</xref>) or FEniCS
  (<xref alt="Alnæs et al., 2015" rid="ref-fenics" ref-type="bibr">Alnæs
  et al., 2015</xref>), amongst others.</p>
</sec>
<sec id="overview">
  <title>Overview</title>
  <p>The main features of BasicTools are:</p>
  <list list-type="bullet">
    <list-item>
      <p>Meshes (in the <monospace>Containers</monospace> module):
      <monospace>ConstantRectilinearMesh</monospace> and
      <monospace>UnstructuredMesh</monospace> encapsulate respectively
      the data model for constant rectilinear and unstructured mesh
      types. Unstructured meshes are efficient: elements are stored
      using only one array for each element type. Both mesh types can
      feature nodes and element tags. Many functions are available for
      creating, cleaning and modifying meshes (e.g., field projection
      and mesh morphing).</p>
    </list-item>
    <list-item>
      <p>Filters (in the <monospace>Containers</monospace> module):
      Various types of <monospace>ElementFilter</monospace>s and
      <monospace>NodeFilter</monospace>s allow it to handle subparts of
      meshes by selecting element- and node-sets using threshold
      functions, tags, element types, element dimensionality, and masks.
      Filters can be combined using Boolean operations (union,
      complementary, …).</p>
    </list-item>
    <list-item>
      <p>A finite element engine (in the <monospace>FE</monospace>
      module): A general weak formulation engine able to integrate
      fields over parts of the meshes is available. The
      <monospace>FETools</monospace> submodule contains specific
      functions for Lagrange P1 finite elements, including the
      computation of stiffness and mass matrices. The domain of
      integration is defined using
      <monospace>ElementFilter</monospace>s, making the integration
      domain flexible. P0 and P2 Lagrange finite element spaces are
      implemented and tested. The framework is non-isoparametric: the
      user can write weak formulations mixing P0, P1, and P2 fields on
      P1 or P2 meshes.</p>
    </list-item>
    <list-item>
      <p>Input/Output functions (in the <monospace>IO</monospace>
      module): Various readers (alternatively, writers) for importing
      (alternatively, exporting) meshes and solution fields from
      (alternatively, to) BasicTools’ internal data model are available.
      Supported formats include geo/geof (Z-set
      (<xref alt="Mines ParisTech &amp; ONERA the French aerospace lab, 1981-present" rid="ref-zset" ref-type="bibr">Mines
      ParisTech &amp; ONERA the French aerospace lab,
      1981-present</xref>)), VTK, XDMF, SAMCEF, and ABAQUS, and a bridge
      with MeshIO is provided. Readers for the ABAQUS and SAMCEF
      proprietary formats are also enabled when properly licensed
      software is available locally. See
      <ext-link ext-link-type="uri" xlink:href="https://basictools.readthedocs.io/en/latest/_source/BasicTools.IO.html#submodules">BasicTools
      documentation</ext-link> for more details.</p>
    </list-item>
    <list-item>
      <p>Implicit geometry engine (in the
      <monospace>ImplicitGeometry</monospace> module): Arbitrary
      subdomains can be defined using implicit geometries (level-set
      function). Basic shapes (spheres, half-spaces, cylinders, cubes),
      transformations (symmetry, translation, rotation) and binary
      operators (union, difference, and intersection) can be used to
      construct complex shapes. These shapes can be used to select
      elements (using <monospace>ElementFilter</monospace>), or be
      evaluated on point clouds to explicitly construct iso-zero
      surfaces.</p>
    </list-item>
    <list-item>
      <p>Linear algebra functions (in the <monospace>Linalg</monospace>
      module): Some common operations on linear systems for finite
      elements are implemented: penalization, elimination, Lagrange
      multipliers, and the Ainsworth
      (<xref alt="Ainsworth, 2001" rid="ref-AINSWORTH20016323" ref-type="bibr">Ainsworth,
      2001</xref>) method to impose essential boundary conditions or
      linear multi-point constraints. The submodule
      <monospace>LinearSolver</monospace> offers an abstraction layer
      for sparse linear solvers, including: Cholesky of the
      <monospace>sksparse</monospace> package; factorized, CG, lsqr,
      gmres, lgmres of the <monospace>scipy.sparse.linalg</monospace>
      module; CG, LU, BiCGSTAB, SPQR of the C++ Eigen library; and the
      AMG solver of <monospace>pyamg</monospace> package.</p>
    </list-item>
  </list>
  <p>The large majority of functions are illustrated in the same file
  where they are defined, in <monospace>CheckIntegrity</monospace>
  functions.</p>
</sec>
<sec id="examples">
  <title>Examples</title>
  <p>We present two examples; see
  <ext-link ext-link-type="uri" xlink:href="https://basictools.readthedocs.io/en/latest/Examples.html">BasicTools
  documentation</ext-link> for complete details.</p>
  <sec id="prepost-deep-learning">
    <title>Pre/post deep learning</title>
    <p>Convolution-based deep learning algorithms generally rely on
    structured data. BasicTools can be used to transfer a field computed
    on an unstructured mesh using finite elements to a structured grid
    and vice versa. To validate the operation, the error on the final
    field is evaluated with respect to the original field.</p>
    <fig>
      <caption><p>Deep learning workflow coupled to finite element
      simulator a) Initial field on unstructured mesh, b) transferred
      field into regular grid (projection step), c) inverse projection
      into original unstructured mesh, d) projection error on
      unstructured
      mesh.<styled-content id="figU003ADeepLearningPrepost"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/DeepLearningPrepost.png" />
    </fig>
  </sec>
  <sec id="mechanical-analysis-thick-plate-with-two-inclusions">
    <title>Mechanical analysis: Thick plate with two inclusions</title>
    <p>Consider a thick plate with two inclusions, one softer and the
    other stiffer than the base material. The plate is clamped on the
    left side with a constant traction applied on the right side. We
    compute the strain energy on only one inclusion. The linear
    elasticity problem is solved using P1 Lagrange finite elements on an
    unstructured mesh.</p>
    <fig>
      <caption><p>Analysis of a mechanical thick plate with two
      inclusions a) illustration of the mesh with highlighting of the
      two inclusions, b) magnitude of the displacement solution on the
      deformed mesh (with applied traction illustrated), c) strain
      energy in the large inclusion, d) cutaway view of the strain
      energy in the large inclusion (with applied traction
      illustrated).<styled-content id="figU003ATwoInclusions"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/TwoInclusions_img1.png" />
    </fig>
  </sec>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-ROM-net">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Daniel</surname><given-names>T.</given-names></name>
        <name><surname>Casenave</surname><given-names>F.</given-names></name>
        <name><surname>Akkari</surname><given-names>N.</given-names></name>
        <name><surname>Ryckelynck</surname><given-names>D.</given-names></name>
      </person-group>
      <article-title>Model order reduction assisted by deep neural networks (ROM-net)</article-title>
      <source>Adv. Model. and Simul. in Eng. Sci.</source>
      <year iso-8601-date="2020">2020</year>
      <volume>7</volume>
      <issue>16</issue>
      <pub-id pub-id-type="doi">10.1186/s40323-020-00153-6</pub-id>
      <fpage></fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-mca26010017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Daniel</surname><given-names>T.</given-names></name>
        <name><surname>Casenave</surname><given-names>F.</given-names></name>
        <name><surname>Akkari</surname><given-names>N.</given-names></name>
        <name><surname>Ryckelynck</surname><given-names>D.</given-names></name>
      </person-group>
      <article-title>Data augmentation and feature selection for automatic model recommendation in computational physics</article-title>
      <source>Math. Comput. Appl.</source>
      <year iso-8601-date="2021">2021</year>
      <volume>26</volume>
      <issue>1</issue>
      <issn>2297-8747</issn>
      <pub-id pub-id-type="doi">10.3390/mca26010017</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-UQindustrialDesign">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Daniel</surname><given-names>T.</given-names></name>
        <name><surname>Casenave</surname><given-names>F.</given-names></name>
        <name><surname>Akkari</surname><given-names>N.</given-names></name>
        <name><surname>Ryckelynck</surname><given-names>D.</given-names></name>
        <name><surname>Rey</surname><given-names>C.</given-names></name>
      </person-group>
      <article-title>Uncertainty quantification for industrial numerical simulation using dictionaries of reduced order models</article-title>
      <source>Mechanics &amp; Industry</source>
      <year iso-8601-date="2022">2022</year>
      <volume>23</volume>
      <pub-id pub-id-type="doi">10.1051/meca/2022001</pub-id>
      <fpage>3</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-datatargetVAE">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Akkari</surname><given-names>N.</given-names></name>
        <name><surname>Casenave</surname><given-names>F.</given-names></name>
        <name><surname>Daniel</surname><given-names>T.</given-names></name>
        <name><surname>Ryckelynck</surname><given-names>D.</given-names></name>
      </person-group>
      <article-title>Data-targeted prior distribution for variational AutoEncoder</article-title>
      <source>Fluids</source>
      <year iso-8601-date="2021">2021</year>
      <volume>6</volume>
      <issue>10</issue>
      <pub-id pub-id-type="doi">10.3390/fluids6100343</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-nardoni">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Nardoni</surname><given-names>C.</given-names></name>
        <name><surname>Danan</surname><given-names>D.</given-names></name>
        <name><surname>Mang</surname><given-names>C.</given-names></name>
        <name><surname>Bordeu</surname><given-names>F.</given-names></name>
        <name><surname>Cortial</surname><given-names>J.</given-names></name>
      </person-group>
      <article-title>A R&amp;D software platform for shape and topology optimization using body-fitted meshes</article-title>
      <source>Mesh generation and adaptation: Cutting-edge techniques</source>
      <person-group person-group-type="editor">
        <name><surname>Sevilla</surname><given-names>Rubén</given-names></name>
        <name><surname>Perotto</surname><given-names>Simona</given-names></name>
        <name><surname>Morgan</surname><given-names>Kenneth</given-names></name>
      </person-group>
      <publisher-name>Springer International Publishing</publisher-name>
      <publisher-loc>Cham</publisher-loc>
      <year iso-8601-date="2022">2022</year>
      <isbn>978-3-030-92540-6</isbn>
      <pub-id pub-id-type="doi">10.1007/978-3-030-92540-6_2</pub-id>
      <fpage>23</fpage>
      <lpage>39</lpage>
    </element-citation>
  </ref>
  <ref id="ref-gmsh">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Geuzaine</surname><given-names>Christophe</given-names></name>
        <name><surname>Remacle</surname><given-names>Jean-François</given-names></name>
      </person-group>
      <article-title>Gmsh: A 3-d finite element mesh generator with built-in pre- and post-processing facilities</article-title>
      <source>International Journal for Numerical Methods in Engineering</source>
      <year iso-8601-date="2009">2009</year>
      <volume>79</volume>
      <issue>11</issue>
      <uri>https://onlinelibrary.wiley.com/doi/abs/10.1002/nme.2579</uri>
      <pub-id pub-id-type="doi">10.1002/nme.2579</pub-id>
      <fpage>1309</fpage>
      <lpage>1331</lpage>
    </element-citation>
  </ref>
  <ref id="ref-AINSWORTH20016323">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ainsworth</surname><given-names>Mark</given-names></name>
      </person-group>
      <article-title>Essential boundary conditions and multi-point constraints in finite element analysis</article-title>
      <source>Computer Methods in Applied Mechanics and Engineering</source>
      <year iso-8601-date="2001">2001</year>
      <volume>190</volume>
      <issue>48</issue>
      <issn>0045-7825</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S0045782501002365</uri>
      <pub-id pub-id-type="doi">10.1016/S0045-7825(01)00236-5</pub-id>
      <fpage>6323</fpage>
      <lpage>6339</lpage>
    </element-citation>
  </ref>
  <ref id="ref-pymicro">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Proudhon</surname><given-names>H.</given-names></name>
      </person-group>
      <article-title>Pymicro</article-title>
      <uri>https://github.com/heprom/pymicro</uri>
    </element-citation>
  </ref>
  <ref id="ref-cgns">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <string-name>CGNS contributors</string-name>
      </person-group>
      <article-title>CFD general notation system</article-title>
      <uri>http://cgns.github.io/</uri>
    </element-citation>
  </ref>
  <ref id="ref-meshio">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Schlömer</surname><given-names>N.</given-names></name>
      </person-group>
      <article-title>meshio: Tools for mesh files</article-title>
      <uri>https://github.com/nschloe/meshio</uri>
    </element-citation>
  </ref>
  <ref id="ref-freefempp">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hecht</surname><given-names>F.</given-names></name>
      </person-group>
      <article-title>New development in FreeFem++</article-title>
      <source>Journal of Numerical Mathematics</source>
      <year iso-8601-date="2012">2012</year>
      <volume>20</volume>
      <issue>3-4</issue>
      <pub-id pub-id-type="doi">10.1515/jnum-2012-0013</pub-id>
      <fpage>251</fpage>
      <lpage>266</lpage>
    </element-citation>
  </ref>
  <ref id="ref-fenics">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Alnæs</surname><given-names>M.</given-names></name>
        <name><surname>Blechta</surname><given-names>J.</given-names></name>
        <name><surname>Hake</surname><given-names>J.</given-names></name>
        <name><surname>Johansson</surname><given-names>A.</given-names></name>
        <name><surname>Kehlet</surname><given-names>B.</given-names></name>
        <name><surname>Logg</surname><given-names>A.</given-names></name>
        <name><surname>Richardson</surname><given-names>C.</given-names></name>
        <name><surname>Ring</surname><given-names>J.</given-names></name>
        <name><surname>Rognes</surname><given-names>M. E.</given-names></name>
        <name><surname>Wells</surname><given-names>G. N.</given-names></name>
      </person-group>
      <article-title>The FEniCS project version 1.5</article-title>
      <source>Archive of Numerical Software</source>
      <year iso-8601-date="2015">2015</year>
      <volume>3</volume>
      <issue>100</issue>
      <pub-id pub-id-type="doi">10.11588/ans.2015.100.20553</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-zset">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <string-name>Mines ParisTech</string-name>
        <string-name>ONERA the French aerospace lab</string-name>
      </person-group>
      <article-title>Zset: Nonlinear material &amp; structure analysis suite</article-title>
      <uri>http://www.zset-software.com</uri>
    </element-citation>
  </ref>
  <ref id="ref-VTK4">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Schroeder</surname><given-names>Will</given-names></name>
        <name><surname>Martin</surname><given-names>Ken</given-names></name>
        <name><surname>Lorensen</surname><given-names>Bill</given-names></name>
      </person-group>
      <source>Visualization Toolkit: An object-oriented approach to 3D graphics</source>
      <publisher-name>Kitware, Inc.</publisher-name>
      <year iso-8601-date="2006">2006</year>
      <edition>Fourth</edition>
      <uri>https://vtk.org/</uri>
    </element-citation>
  </ref>
  <ref id="ref-sullivan2019pyvista">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Sullivan</surname><given-names>C. Bane</given-names></name>
        <name><surname>Kaszynski</surname><given-names>Alexander</given-names></name>
      </person-group>
      <article-title>PyVista: 3D plotting and mesh analysis through a streamlined interface for the Visualization Toolkit (VTK)</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2019-05">2019</year><month>05</month>
      <volume>4</volume>
      <issue>37</issue>
      <uri>https://doi.org/10.21105/joss.01450</uri>
      <pub-id pub-id-type="doi">10.21105/joss.01450</pub-id>
      <fpage>1450</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
