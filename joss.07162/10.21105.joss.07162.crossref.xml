<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/5.3.1"
           xmlns:ai="http://www.crossref.org/AccessIndicators.xsd"
           xmlns:rel="http://www.crossref.org/relations.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           version="5.3.1"
           xsi:schemaLocation="http://www.crossref.org/schema/5.3.1 http://www.crossref.org/schemas/crossref5.3.1.xsd">
  <head>
    <doi_batch_id>20241005011222-7644b5484f0f380af77f29b758f1765834e1e577</doi_batch_id>
    <timestamp>20241005011222</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>https://joss.theoj.org</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>10</month>
          <year>2024</year>
        </publication_date>
        <journal_volume>
          <volume>9</volume>
        </journal_volume>
        <issue>102</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>GridapSolvers.jl: Scalable multiphysics finite element
solvers in Julia</title>
        </titles>
        <contributors>
          <person_name sequence="first" contributor_role="author">
            <given_name>Jordi</given_name>
            <surname>Manyer</surname>
            <ORCID>https://orcid.org/0000-0002-0178-3890</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Alberto F.</given_name>
            <surname>Martín</surname>
            <ORCID>https://orcid.org/0000-0001-5751-4561</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Santiago</given_name>
            <surname>Badia</surname>
            <ORCID>https://orcid.org/0000-0003-2391-4086</ORCID>
          </person_name>
        </contributors>
        <publication_date>
          <month>10</month>
          <day>05</day>
          <year>2024</year>
        </publication_date>
        <pages>
          <first_page>7162</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.07162</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">10.5281/zenodo.13879549</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/7162</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.07162</doi>
          <resource>https://joss.theoj.org/papers/10.21105/joss.07162</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://joss.theoj.org/papers/10.21105/joss.07162.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="petsc-user-ref">
            <article_title>PETSc/TAO users manual</article_title>
            <author>Balay</author>
            <cYear>2021</cYear>
            <unstructured_citation>Balay, S., Abhyankar, S., Adams, M.
F., Benson, S., Brown, J., Brune, P., Buschelman, K., Constantinescu,
E., Dalcin, L., Dener, A., Eijkhout, V., Gropp, W. D., Hapla, V., Isaac,
T., Jolivet, P., Karpeev, D., Kaushik, D., Knepley, M. G., Kong, F., …
Zhang, J. (2021). PETSc/TAO users manual (ANL-21/39 - Revision 3.16).
Argonne National Laboratory.</unstructured_citation>
          </citation>
          <citation key="mpi40">
            <volume_title>MPI: A message-passing interface standard
version 4.0</volume_title>
            <author>Message Passing Interface Forum</author>
            <cYear>2021</cYear>
            <unstructured_citation>Message Passing Interface Forum.
(2021). MPI: A message-passing interface standard version 4.0.
https://www.mpi-forum.org/docs/mpi-4.0/mpi40-report.pdf</unstructured_citation>
          </citation>
          <citation key="Verdugo2021">
            <article_title>The software design of Gridap: A finite
element package based on the Julia JIT compiler</article_title>
            <author>Verdugo</author>
            <journal_title>Computer Physics
Communications</journal_title>
            <volume>276</volume>
            <doi>10.1016/j.cpc.2022.108341</doi>
            <cYear>2022</cYear>
            <unstructured_citation>Verdugo, F., &amp; Badia, S. (2022).
The software design of Gridap: A finite element package based on the
Julia JIT compiler. Computer Physics Communications, 276, 108341.
https://doi.org/10.1016/j.cpc.2022.108341</unstructured_citation>
          </citation>
          <citation key="gridapetsc">
            <article_title>GridapPETSc</article_title>
            <author>Verdugo</author>
            <journal_title>GitHub repository</journal_title>
            <cYear>2021</cYear>
            <unstructured_citation>Verdugo, F., Sande, V., &amp; Martin,
A. F. (2021). GridapPETSc. In GitHub repository. GitHub.
https://github.com/gridap/GridapPETSc.jl</unstructured_citation>
          </citation>
          <citation key="gridap4est">
            <article_title>GridapP4est</article_title>
            <author>Martin</author>
            <journal_title>GitHub repository</journal_title>
            <cYear>2021</cYear>
            <unstructured_citation>Martin, A. F. (2021). GridapP4est. In
GitHub repository. GitHub.
https://github.com/gridap/GridapP4est.jl</unstructured_citation>
          </citation>
          <citation key="parrays">
            <article_title>PartitionedArrays</article_title>
            <author>Verdugo</author>
            <journal_title>GitHub repository</journal_title>
            <cYear>2021</cYear>
            <unstructured_citation>Verdugo, F. (2021).
PartitionedArrays. In GitHub repository. GitHub.
https://github.com/fverdugo/PartitionedArrays.jl</unstructured_citation>
          </citation>
          <citation key="Bezanson2017">
            <article_title>Julia: A fresh approach to numerical
computing</article_title>
            <author>Bezanson</author>
            <journal_title>SIAM Review</journal_title>
            <issue>1</issue>
            <volume>59</volume>
            <doi>10.1137/141000671</doi>
            <cYear>2017</cYear>
            <unstructured_citation>Bezanson, J., Edelman, A., Karpinski,
S., &amp; Shah, V. B. (2017). Julia: A fresh approach to numerical
computing. SIAM Review, 59(1), 65–98.
https://doi.org/10.1137/141000671</unstructured_citation>
          </citation>
          <citation key="Badia2020">
            <article_title>Gridap: An extensible finite element toolbox
in Julia</article_title>
            <author>Badia</author>
            <journal_title>Journal of Open Source
Software</journal_title>
            <issue>52</issue>
            <volume>5</volume>
            <doi>10.21105/JOSS.02520</doi>
            <issn>2475-9066</issn>
            <cYear>2020</cYear>
            <unstructured_citation>Badia, S., &amp; Verdugo, F. (2020).
Gridap: An extensible finite element toolbox in Julia. Journal of Open
Source Software, 5(52), 2520.
https://doi.org/10.21105/JOSS.02520</unstructured_citation>
          </citation>
          <citation key="p4est">
            <article_title>p4est: Scalable algorithms for parallel
adaptive mesh refinement on forests of octrees</article_title>
            <author>Burstedde</author>
            <journal_title>SIAM Journal on Scientific
Computing</journal_title>
            <issue>3</issue>
            <volume>33</volume>
            <doi>10.1137/100791634</doi>
            <cYear>2011</cYear>
            <unstructured_citation>Burstedde, C., Wilcox, L. C., &amp;
Ghattas, O. (2011). p4est: Scalable algorithms for parallel adaptive
mesh refinement on forests of octrees. SIAM Journal on Scientific
Computing, 33(3), 1103–1133.
https://doi.org/10.1137/100791634</unstructured_citation>
          </citation>
          <citation key="dealII93">
            <article_title>The deal.II library, version
9.3</article_title>
            <author>Arndt</author>
            <journal_title>Journal of Numerical
Mathematics</journal_title>
            <issue>3</issue>
            <volume>29</volume>
            <doi>10.1515/jnma-2021-0081</doi>
            <cYear>2021</cYear>
            <unstructured_citation>Arndt, D., Bangerth, W., Blais, B.,
Fehling, M., Gassmöller, R., Heister, T., Heltai, L., Köcher, U.,
Kronbichler, M., Maier, M., Munch, P., Pelteret, J.-P., Proell, S.,
Simon, K., Turcksin, B., Wells, D., &amp; Zhang, J. (2021). The deal.II
library, version 9.3. Journal of Numerical Mathematics, 29(3), 171–186.
https://doi.org/10.1515/jnma-2021-0081</unstructured_citation>
          </citation>
          <citation key="fenics-book">
            <volume_title>Automated solution of differential equations
by the finite element method</volume_title>
            <doi>10.1007/978-3-642-23099-8</doi>
            <cYear>2012</cYear>
            <unstructured_citation>Logg, A., Mardal, K.-A., &amp; Wells,
G. (Eds.). (2012). Automated solution of differential equations by the
finite element method. Springer Berlin Heidelberg.
https://doi.org/10.1007/978-3-642-23099-8</unstructured_citation>
          </citation>
          <citation key="Elman2014">
            <volume_title>Finite elements and fast iterative solvers:
With applications in incompressible fluid dynamics</volume_title>
            <author>Elman</author>
            <doi>10.1093/acprof:oso/9780199678792.001.0001</doi>
            <isbn>9780199678792</isbn>
            <cYear>2014</cYear>
            <unstructured_citation>Elman, H., Silvester, D., &amp;
Wathen, A. (2014). Finite elements and fast iterative solvers: With
applications in incompressible fluid dynamics. Oxford University Press.
https://doi.org/10.1093/acprof:oso/9780199678792.001.0001</unstructured_citation>
          </citation>
          <citation key="gmg-book">
            <volume_title>A multigrid tutorial, second
edition</volume_title>
            <author>Briggs</author>
            <doi>10.1137/1.9780898719505</doi>
            <cYear>2000</cYear>
            <unstructured_citation>Briggs, W. L., Henson, V. E., &amp;
McCormick, S. F. (2000). A multigrid tutorial, second edition (Second).
Society for Industrial; Applied Mathematics.
https://doi.org/10.1137/1.9780898719505</unstructured_citation>
          </citation>
          <citation key="trilinos">
            <volume_title>The Trilinos project website</volume_title>
            <author>Trilinos Project Team</author>
            <cYear>2020</cYear>
            <unstructured_citation>Trilinos Project Team. (2020). The
Trilinos project website.
https://trilinos.github.io</unstructured_citation>
          </citation>
          <citation key="hypre">
            <article_title>hypre: High performance
preconditioners</article_title>
            <unstructured_citation>hypre: High performance
preconditioners. (n.d.).</unstructured_citation>
          </citation>
          <citation key="PARDISO">
            <article_title>PARDISO</article_title>
            <author>Schenk</author>
            <journal_title>Encyclopedia of parallel
computing</journal_title>
            <doi>10.1007/978-0-387-09766-4_90</doi>
            <isbn>978-0-387-09766-4</isbn>
            <cYear>2011</cYear>
            <unstructured_citation>Schenk, O., &amp; Gärtner, K. (2011).
PARDISO. In D. Padua (Ed.), Encyclopedia of parallel computing (pp.
1458–1464). Springer US.
https://doi.org/10.1007/978-0-387-09766-4_90</unstructured_citation>
          </citation>
          <citation key="MUMPS1">
            <article_title>A fully asynchronous multifrontal solver
using distributed dynamic scheduling</article_title>
            <author>Amestoy</author>
            <journal_title>SIAM Journal on Matrix Analysis and
Applications</journal_title>
            <issue>1</issue>
            <volume>23</volume>
            <doi>10.1137/s0895479899358194</doi>
            <cYear>2001</cYear>
            <unstructured_citation>Amestoy, P. R., Duff, I. S., Koster,
J., &amp; L’Excellent, J.-Y. (2001). A fully asynchronous multifrontal
solver using distributed dynamic scheduling. SIAM Journal on Matrix
Analysis and Applications, 23(1), 15–41.
https://doi.org/10.1137/s0895479899358194</unstructured_citation>
          </citation>
          <citation key="MUMPS2">
            <article_title>Performance and scalability of the block
low-rank multifrontal factorization on multicore
architectures</article_title>
            <author>Amestoy</author>
            <journal_title>ACM Transactions on Mathematical
Software</journal_title>
            <volume>45</volume>
            <doi>10.1145/3242094</doi>
            <cYear>2019</cYear>
            <unstructured_citation>Amestoy, P. R., Buttari, A.,
L’Excellent, J.-Y., &amp; Mary, T. (2019). Performance and scalability
of the block low-rank multifrontal factorization on multicore
architectures. ACM Transactions on Mathematical Software, 45, 2:1–2:26.
https://doi.org/10.1145/3242094</unstructured_citation>
          </citation>
          <citation key="gridapdistributed">
            <article_title>GridapDistributed: A massively parallel
finite element toolbox in Julia</article_title>
            <author>Badia</author>
            <journal_title>Journal of Open Source
Software</journal_title>
            <issue>74</issue>
            <volume>7</volume>
            <doi>10.21105/joss.04157</doi>
            <cYear>2022</cYear>
            <unstructured_citation>Badia, S., Martín, A. F., &amp;
Verdugo, F. (2022). GridapDistributed: A massively parallel finite
element toolbox in Julia. Journal of Open Source Software, 7(74), 4157.
https://doi.org/10.21105/joss.04157</unstructured_citation>
          </citation>
          <citation key="Arnold1">
            <article_title>Preconditing in H(div) and
applications</article_title>
            <author>Arnold</author>
            <doi>10.1090/S0025-5718-97-00826-0</doi>
            <cYear>1997</cYear>
            <unstructured_citation>Arnold, D. N., Falk, R. S., &amp;
Winther, R. (1997). Preconditing in H(div) and applications.
https://doi.org/10.1090/S0025-5718-97-00826-0</unstructured_citation>
          </citation>
          <citation key="Arnold2">
            <article_title>Multigrid in H(div) and
H(curl)</article_title>
            <author>Arnold</author>
            <journal_title>Numerische Mathematik</journal_title>
            <volume>85</volume>
            <doi>10.1007/PL00005386</doi>
            <cYear>2000</cYear>
            <unstructured_citation>Arnold, D. N., Falk, R. S., &amp;
Winther, R. (2000). Multigrid in H(div) and H(curl). Numerische
Mathematik, 85, 197–217.
https://doi.org/10.1007/PL00005386</unstructured_citation>
          </citation>
          <citation key="fenics-patch">
            <article_title>PCPATCH: Software for the topological
construction of multigrid relaxation methods</article_title>
            <author>Farrell</author>
            <journal_title>ACM Transactions on Mathematical
Software</journal_title>
            <issue>3</issue>
            <volume>47</volume>
            <doi>10.1145/3445791</doi>
            <issn>1557-7295</issn>
            <cYear>2021</cYear>
            <unstructured_citation>Farrell, P. E., Knepley, M. G.,
Mitchell, L., &amp; Wechsung, F. (2021). PCPATCH: Software for the
topological construction of multigrid relaxation methods. ACM
Transactions on Mathematical Software, 47(3), 1–22.
https://doi.org/10.1145/3445791</unstructured_citation>
          </citation>
          <citation key="dealII-patch">
            <article_title>An implementation of tensor product patch
smoothers on GPU</article_title>
            <author>Cui</author>
            <doi>10.48550/arXiv.2405.19004</doi>
            <cYear>2024</cYear>
            <unstructured_citation>Cui, C., Grosse-Bley, P., Kanschat,
G., &amp; Strzodka, R. (2024). An implementation of tensor product patch
smoothers on GPU.
https://doi.org/10.48550/arXiv.2405.19004</unstructured_citation>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
