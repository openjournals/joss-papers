<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/5.3.1"
           xmlns:ai="http://www.crossref.org/AccessIndicators.xsd"
           xmlns:rel="http://www.crossref.org/relations.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           version="5.3.1"
           xsi:schemaLocation="http://www.crossref.org/schema/5.3.1 http://www.crossref.org/schemas/crossref5.3.1.xsd">
  <head>
    <doi_batch_id>20251006172124-e31d45a53056a73c6fd481bc78b5b8da03ee2d02</doi_batch_id>
    <timestamp>20251006172124</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>https://joss.theoj.org</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>10</month>
          <year>2025</year>
        </publication_date>
        <journal_volume>
          <volume>10</volume>
        </journal_volume>
        <issue>114</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>CommaSuite: Monitoring and Testing of OpenAPI and AsyncAPI Software Interfaces</title>
        </titles>
        <contributors>
          <person_name sequence="first" contributor_role="author">
            <given_name>Ivan</given_name>
            <surname>Kurtev</surname>
            <affiliations>
              <institution><institution_name>TU/e, The Netherlands</institution_name></institution>
            </affiliations>
            <ORCID>https://orcid.org/0009-0003-3783-405X</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Daan</given_name>
            <surname>van der Munnik</surname>
            <affiliations>
              <institution><institution_name>Philips, The Netherlands</institution_name></institution>
            </affiliations>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Mathijs</given_name>
            <surname>Schuts</surname>
            <affiliations>
              <institution><institution_name>TNO-ESI, The Netherlands</institution_name></institution>
            </affiliations>
            <ORCID>https://orcid.org/0009-0002-4166-288X</ORCID>
          </person_name>
        </contributors>
        <publication_date>
          <month>10</month>
          <day>06</day>
          <year>2025</year>
        </publication_date>
        <pages>
          <first_page>9069</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.09069</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">10.5281/zenodo.17277974</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/9069</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.09069</doi>
          <resource>https://joss.theoj.org/papers/10.21105/joss.09069</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://joss.theoj.org/papers/10.21105/joss.09069.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="kurtev2024model">
            <article_title>Model based component development and analysis with ComMA</article_title>
            <author>Kurtev</author>
            <journal_title>Science of Computer Programming</journal_title>
            <volume>233</volume>
            <doi>10.1016/j.scico.2023.103067</doi>
            <cYear>2024</cYear>
            <unstructured_citation>Kurtev, I., Hooman, J., Schuts, M., &amp; Munnik, D. van der. (2024). Model based component development and analysis with ComMA. Science of Computer Programming, 233, 103067. https://doi.org/10.1016/j.scico.2023.103067</unstructured_citation>
          </citation>
          <citation key="falcone2021taxonomy">
            <article_title>A taxonomy for classifying runtime verification tools</article_title>
            <author>Falcone</author>
            <journal_title>International Journal on Software Tools for Technology Transfer</journal_title>
            <issue>2</issue>
            <volume>23</volume>
            <doi>10.1007/s10009-021-00609-z</doi>
            <cYear>2021</cYear>
            <unstructured_citation>Falcone, Y., Krstić, S., Reger, G., &amp; Traytel, D. (2021). A taxonomy for classifying runtime verification tools. International Journal on Software Tools for Technology Transfer, 23(2), 255–284. https://doi.org/10.1007/s10009-021-00609-z</unstructured_citation>
          </citation>
          <citation key="utting2012taxonomy">
            <article_title>A taxonomy of model-based testing approaches</article_title>
            <author>Utting</author>
            <journal_title>Software testing, verification and reliability</journal_title>
            <issue>5</issue>
            <volume>22</volume>
            <doi>10.1002/stvr.456</doi>
            <cYear>2012</cYear>
            <unstructured_citation>Utting, M., Pretschner, A., &amp; Legeard, B. (2012). A taxonomy of model-based testing approaches. Software Testing, Verification and Reliability, 22(5), 297–312. https://doi.org/10.1002/stvr.456</unstructured_citation>
          </citation>
          <citation key="araujo2023testing">
            <article_title>Testing, validation, and verification of robotic and autonomous systems: A systematic review</article_title>
            <author>Araujo</author>
            <journal_title>ACM Transactions on Software Engineering and Methodology</journal_title>
            <issue>2</issue>
            <volume>32</volume>
            <doi>10.1145/3542945</doi>
            <cYear>2023</cYear>
            <unstructured_citation>Araujo, H., Mousavi, M. R., &amp; Varshosaz, M. (2023). Testing, validation, and verification of robotic and autonomous systems: A systematic review. ACM Transactions on Software Engineering and Methodology, 32(2), 1–61. https://doi.org/10.1145/3542945</unstructured_citation>
          </citation>
          <citation key="caldas2024runtime">
            <article_title>Runtime verification and field-based testing for ROS-based robotic systems</article_title>
            <author>Caldas</author>
            <journal_title>IEEE Transactions on Software Engineering</journal_title>
            <doi>10.1109/tse.2024.3444697</doi>
            <cYear>2024</cYear>
            <unstructured_citation>Caldas, R., Garcı́a, J. A. P., Schiopu, M., Pelliccione, P., Rodrigues, G., &amp; Berger, T. (2024). Runtime verification and field-based testing for ROS-based robotic systems. IEEE Transactions on Software Engineering. https://doi.org/10.1109/tse.2024.3444697</unstructured_citation>
          </citation>
          <citation key="islam2024adam">
            <article_title>Adam: Adaptive monitoring of runtime anomalies in small uncrewed aerial systems</article_title>
            <author>Islam</author>
            <journal_title>Proceedings of the 19th international symposium on software engineering for adaptive and self-managing systems</journal_title>
            <doi>10.1145/3643915.3644092</doi>
            <cYear>2024</cYear>
            <unstructured_citation>Islam, M. N. A., Cleland-Huang, J., &amp; Vierhauser, M. (2024). Adam: Adaptive monitoring of runtime anomalies in small uncrewed aerial systems. Proceedings of the 19th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, 44–55. https://doi.org/10.1145/3643915.3644092</unstructured_citation>
          </citation>
          <citation key="rahman2021run">
            <article_title>Run-time monitoring of machine learning for robotic perception: A survey of emerging trends</article_title>
            <author>Rahman</author>
            <journal_title>IEEE Access</journal_title>
            <volume>9</volume>
            <doi>10.1109/access.2021.3055015</doi>
            <cYear>2021</cYear>
            <unstructured_citation>Rahman, Q. M., Corke, P., &amp; Dayoub, F. (2021). Run-time monitoring of machine learning for robotic perception: A survey of emerging trends. IEEE Access, 9, 20067–20075. https://doi.org/10.1109/access.2021.3055015</unstructured_citation>
          </citation>
          <citation key="karavisileiou2020ontology">
            <article_title>Ontology for openapi rest services descriptions</article_title>
            <author>Karavisileiou</author>
            <journal_title>2020 IEEE 32nd international conference on tools with artificial intelligence (ICTAI)</journal_title>
            <doi>10.1109/ictai50040.2020.00016</doi>
            <cYear>2020</cYear>
            <unstructured_citation>Karavisileiou, A., Mainas, N., &amp; Petrakis, E. G. (2020). Ontology for openapi rest services descriptions. 2020 IEEE 32nd International Conference on Tools with Artificial Intelligence (ICTAI), 35–40. https://doi.org/10.1109/ictai50040.2020.00016</unstructured_citation>
          </citation>
          <citation key="gomez2020model">
            <article_title>A model-based approach for developing event-driven architectures with AsyncAPI</article_title>
            <author>Gómez</author>
            <journal_title>Proceedings of the 23rd ACM/IEEE international conference on model driven engineering languages and systems</journal_title>
            <doi>10.1145/3365438.3410948</doi>
            <cYear>2020</cYear>
            <unstructured_citation>Gómez, A., Iglesias-Urkia, M., Urbieta, A., &amp; Cabot, J. (2020). A model-based approach for developing event-driven architectures with AsyncAPI. Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, 121–131. https://doi.org/10.1145/3365438.3410948</unstructured_citation>
          </citation>
          <citation key="ben2009yaml">
            <article_title>YAML ain’t markup language (YAML™) version 1.2.</article_title>
            <author>Evans</author>
            <cYear>2017</cYear>
            <unstructured_citation>Evans, C., Ben-Kiki, O., &amp; Net, I. döt. (2017). YAML ain’t markup language (YAML™) version 1.2.</unstructured_citation>
          </citation>
          <citation key="kurtev2017runtime">
            <volume_title>Runtime monitoring based on interface specifications</volume_title>
            <author>Kurtev</author>
            <doi>10.1007/978-3-319-68270-9_17</doi>
            <cYear>2017</cYear>
            <unstructured_citation>Kurtev, I., Hooman, J., &amp; Schuts, M. (2017). Runtime monitoring based on interface specifications. Springer. https://doi.org/10.1007/978-3-319-68270-9_17</unstructured_citation>
          </citation>
          <citation key="kurtev2022runtime">
            <article_title>Runtime verification of compound components with ComMA</article_title>
            <author>Kurtev</author>
            <journal_title>A journey from process algebra via timed automata to model learning: Essays dedicated to frits vaandrager on the occasion of his 60th birthday</journal_title>
            <doi>10.1007/978-3-031-15629-8_21</doi>
            <cYear>2022</cYear>
            <unstructured_citation>Kurtev, I., &amp; Hooman, J. (2022). Runtime verification of compound components with ComMA. In A journey from process algebra via timed automata to model learning: Essays dedicated to frits vaandrager on the occasion of his 60th birthday (pp. 382–402). Springer. https://doi.org/10.1007/978-3-031-15629-8_21</unstructured_citation>
          </citation>
          <citation key="schuts2025online">
            <article_title>Online model-based testing reusing multiple design models in an industrial setting</article_title>
            <author>Schuts</author>
            <journal_title>Journal of Object Technology</journal_title>
            <issue>2</issue>
            <volume>24</volume>
            <doi>10.5381/jot.2025.24.2.a6</doi>
            <issn>1660-1769</issn>
            <cYear>2025</cYear>
            <unstructured_citation>Schuts, M., Hooman, J., Kurtev, I., Tlili, I., &amp; Oerlemans, E. (2025). Online model-based testing reusing multiple design models in an industrial setting. Journal of Object Technology, 24(2), 2:1–14. https://doi.org/10.5381/jot.2025.24.2.a6</unstructured_citation>
          </citation>
          <citation key="bock2022learn">
            <volume_title>Introduction to wireshark</volume_title>
            <author>Jain</author>
            <doi>10.1007/978-1-4842-8002-7_1</doi>
            <isbn>978-1-4842-8002-7</isbn>
            <cYear>2022</cYear>
            <unstructured_citation>Jain, V. (2022). Introduction to wireshark (pp. 1–34). Apress. https://doi.org/10.1007/978-1-4842-8002-7_1</unstructured_citation>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
