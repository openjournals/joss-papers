<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">8516</article-id>
<article-id pub-id-type="doi">10.21105/joss.08516</article-id>
<title-group>
<article-title>SpecialFunctions: A C# package of special functions for
scientific computing with MATLAB-compatible API</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-5458-7917</contrib-id>
<name>
<surname>Liu</surname>
<given-names>Jake W.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Electronic Engineering, National Taipei
University of Technology, Taiwan</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2025-06-14">
<day>14</day>
<month>6</month>
<year>2025</year>
</pub-date>
<volume>10</volume>
<issue>113</issue>
<fpage>8516</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>C#</kwd>
<kwd>special functions</kwd>
<kwd>scientific computing</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><monospace>SpecialFunctions</monospace> is a C# library designed
  for scientific computing applications requiring a broad range of
  special functions, such as those found in mathematical physics and
  engineering
  (<xref alt="Abramowitz &amp; Stegun, 1965" rid="ref-abramowitz1965handbook" ref-type="bibr">Abramowitz
  &amp; Stegun, 1965</xref>;
  <xref alt="Arfken et al., 2011" rid="ref-arfken2011mathematical" ref-type="bibr">Arfken
  et al., 2011</xref>). While Math.NET Numerics is the dominant
  open-source library for numerical computing in C#, its support for
  special functions remains incomplete. Furthermore, alternatives like
  ALGLIB are restricted by GPL licensing, making them unsuitable for
  commercial use.</p>
  <p>This package addresses these gaps by offering a more complete set
  of special functions under the permissive MIT license, facilitating
  both academic and commercial adoption. The implementation leverages
  Math.NET Numerics where applicable
  (<xref alt="Math.NET Numerics, n.d." rid="ref-mathnet" ref-type="bibr"><italic>Math.NET
  Numerics</italic>, n.d.</xref>) and incorporates extensions such as
  Legendre functions based on open-source contributions (e.g., AminKH’s
  repository)
  (<xref alt="Legendre-Polynomials, n.d." rid="ref-lp" ref-type="bibr"><italic>Legendre-Polynomials</italic>,
  n.d.</xref>). The API design follows MATLAB conventions to support
  easier transition for users familiar with MATLAB, and includes
  functions like Bessel functions (including spherical variants), Airy
  functions, incomplete gamma functions, error functions, Legendre
  polynomials, and logarithmic derivatives.</p>
  <p>The library is developed to support electromagnetic simulations and
  field transformations—specifically, cylindrical and spherical
  near-to-far-field (NTFF) calculations—in environments where C# is
  frequently used for hardware control. Full documentation and
  MATLAB-style references are provided for user guidance.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The C# ecosystem lacks a comprehensive, permissively licensed
  library that offers a wide range of special functions required in
  scientific and engineering computations. Existing libraries such as
  Math.NET Numerics provide partial coverage but omit important function
  families such as associated Legendre polynomials. Other alternatives
  like ALGLIB include more functionality but are distributed under the
  GPL license, restricting their use in commercial applications.</p>
  <p>This project addresses that gap by providing an open-source,
  MIT-licensed library that combines ease of use with broad coverage of
  special functions. It is designed to support both academic research
  and industrial development, particularly in domains where C# is widely
  adopted, such as real-time control systems and electromagnetic
  simulation software. The implementation adheres to MATLAB-style API
  conventions, facilitating a low-friction transition for users familiar
  with numerical computing in MATLAB.</p>
  <p>By offering consistent naming conventions, support for
  complex-valued inputs, and compatibility with Math.NET Numerics, this
  library serves as a practical and extensible foundation for scientific
  applications—including, but not limited to, near-to-far-field (NTFF)
  transformations, wave propagation modeling, and geodetic
  calculations.</p>
</sec>
<sec id="overview-of-features">
  <title>Overview of features</title>
  <p>The <monospace>SpecialFunctions</monospace> library provides a
  comprehensive set of special functions commonly used in scientific
  computing. The implementation is structured to be extensible, allowing
  for future inclusion of additional functions. Key features are grouped
  into the following families:</p>
  <list list-type="bullet">
    <list-item>
      <p><bold>Bessel Functions</bold>: A comprehensive suite of Bessel
      functions, including the first (<monospace>besselj</monospace>)
      and second (<monospace>bessely</monospace>) kinds, modified
      variants (<monospace>besseli</monospace>,
      <monospace>besselk</monospace>), and Hankel functions
      (<monospace>besselh</monospace>). Spherical Bessel functions
      (<monospace>sbesselj</monospace>, <monospace>sbessely</monospace>,
      <monospace>sbesselh</monospace>) are also supported.</p>
    </list-item>
    <list-item>
      <p><bold>Airy Functions</bold>: Airy functions
      (<monospace>airy</monospace>) and their derivatives for real and
      complex arguments.</p>
    </list-item>
    <list-item>
      <p><bold>Gamma and Beta Functions</bold>: The gamma function
      (<monospace>gamma</monospace>), its logarithm
      (<monospace>gammaln</monospace>), the incomplete gamma function
      (<monospace>gammainc</monospace>), and the digamma function
      (<monospace>psi</monospace>). The beta function
      (<monospace>beta</monospace>) and its logarithm
      (<monospace>betaln</monospace>) are also implemented.</p>
    </list-item>
    <list-item>
      <p><bold>Error Functions</bold>: The error function
      (<monospace>erf</monospace>), its complement
      (<monospace>erfc</monospace>), and their respective inverses
      (<monospace>erfinv</monospace>,
      <monospace>erfcinv</monospace>).</p>
    </list-item>
    <list-item>
      <p><bold>Legendre Polynomials</bold>: Legendre polynomials
      (<monospace>legendre0</monospace>) and associated Legendre
      functions (<monospace>legendre</monospace>) with multiple
      normalization options.</p>
    </list-item>
  </list>
  <p>Each function supports real and complex input variants where
  applicable. The library is implemented as a static class
  (<monospace>SF</monospace>) under the
  <monospace>SpecialFunctions</monospace> namespace.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>Legendre function implementations reference AminKH’s repository.
  The library also relies on selected components from Math.NET
  Numerics.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-abramowitz1965handbook">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Abramowitz</surname><given-names>Milton</given-names></name>
        <name><surname>Stegun</surname><given-names>Irene A</given-names></name>
      </person-group>
      <source>Handbook of mathematical functions: With formulas, graphs, and mathematical tables</source>
      <publisher-name>Courier Corporation</publisher-name>
      <year iso-8601-date="1965">1965</year>
      <volume>55</volume>
    </element-citation>
  </ref>
  <ref id="ref-arfken2011mathematical">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Arfken</surname><given-names>George B</given-names></name>
        <name><surname>Weber</surname><given-names>Hans J</given-names></name>
        <name><surname>Harris</surname><given-names>Frank E</given-names></name>
      </person-group>
      <source>Mathematical methods for physicists: A comprehensive guide</source>
      <publisher-name>Academic press</publisher-name>
      <year iso-8601-date="2011">2011</year>
    </element-citation>
  </ref>
  <ref id="ref-mathnet">
    <element-citation publication-type="software">
      <article-title>Math.NET numerics</article-title>
      <uri>https://github.com/mathnet/mathnet-numerics</uri>
    </element-citation>
  </ref>
  <ref id="ref-lp">
    <element-citation publication-type="software">
      <article-title>Legendre-polynomials</article-title>
      <uri>https://github.com/AminKH/Legendre-Polynomials</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
