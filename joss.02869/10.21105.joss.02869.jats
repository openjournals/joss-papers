<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">2869</article-id>
<article-id pub-id-type="doi">10.21105/joss.02869</article-id>
<title-group>
<article-title>Pyinterpolate: Spatial interpolation in Python for point
measurements and aggregated datasets</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-3525-2104</contrib-id>
<name>
<surname>Moliński</surname>
<given-names>Szymon</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Independent Researcher</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2020-10-20">
<day>20</day>
<month>10</month>
<year>2020</year>
</pub-date>
<volume>7</volume>
<issue>70</issue>
<fpage>2869</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>spatial statistics</kwd>
<kwd>spatial interpolation</kwd>
<kwd>Poisson Kriging</kwd>
<kwd>Semivariogram Deconvolution</kwd>
<kwd>public health</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>We use spatial interpolation techniques to interpolate values at
  unknown locations or filter and smooth existing data sources. Those
  methods work for point observations and areal aggregates. The basic
  idea behind the spatial interpolation algorithms is that every point
  in space can be described as a function of its neighbors’ values
  weighted by the relative distance from the analyzed point. It is known
  as Tobler’s First Law of Geography, which states: <italic>everything
  is related to everything else, but near things are more related than
  distant things</italic>
  (<xref alt="Tobler, 1970" rid="ref-ToblerU003A1970" ref-type="bibr">Tobler,
  1970</xref>).</p>
  <p>The Kriging technique, originally designed for mining applications,
  exploits this statement formally, and nowadays, it has gained a lot of
  attention outside the initial area of interest. Today Kriging is a set
  of methods applied to problems from multiple fields: environmental
  science, hydrogeology, natural resources monitoring, remote sensing,
  epidemiology and ecology, and even computer science
  (<xref alt="Chilès &amp; Desassis, 2018" rid="ref-ChilèsU003A2018" ref-type="bibr">Chilès
  &amp; Desassis, 2018</xref>). Commonly, Kriging is used to interpolate
  values from point measurements or regular block units. However, the
  real-world datasets are often different. Especially challenging is
  data that represents aggregated values over polygons, for example, the
  administrative units
  (<xref alt="Goovaerts, 2007" rid="ref-GoovaertsU003A2007" ref-type="bibr">Goovaerts,
  2007</xref>).</p>
  <p>Pyinterpolate transforms areas of irregular shapes and sizes with
  Area-to-Area and Area-to-Point Poisson Kriging functions. Those
  algorithms make Pyinterpolate beneficial for social, environmental,
  and public health scientists because they usually deal with areal
  counts instead of point measurements. Moreover, the package offers
  basic point Kriging and Inverse Distance Weighting techniques. Those
  algorithms are used in every field of research where geostatistical
  (distance) analysis gives meaningful results. Pyinterpolate merges
  basic Kriging techniques with more sophisticated Area-to-Area and
  Area-to-Point Poisson Kriging methods.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Pyinterpolate is a Python package for spatial interpolation. It
  performs predictions from point measurements and areal aggregates of
  different sizes and shapes. Pyinterpolate automates Kriging
  interpolation, and semivariogram regularization. The package helps
  with data exploration, data preprocessing, and semivariogram analysis.
  A researcher with geostatistical background has control over the basic
  modeling parameters: semivariogram models, nugget, sill, range, and
  the number of neighbors included in the interpolation and Kriging
  type. The thing that makes Pyinterpolate different from other spatial
  interpolation packages is the ability to perform Kriging on areas of
  different shapes and sizes. This type of operation is essential in
  social, medical and ecological sciences
  (<xref alt="Goovaerts, 2007" rid="ref-GoovaertsU003A2007" ref-type="bibr">Goovaerts,
  2007</xref>;
  <xref alt="Goovaerts &amp; Gebreab, 2008" rid="ref-GoovaertsU003A2008" ref-type="bibr">Goovaerts
  &amp; Gebreab, 2008</xref>;
  <xref alt="Kerry et al., 2013" rid="ref-KerryU003A2013" ref-type="bibr">Kerry
  et al., 2013</xref>).</p>
  <sec id="importance-of-areal-block-kriging">
    <title>Importance of areal (block) Kriging</title>
    <p>There are many applications where researchers need to model areal
    data with irregular shapes and sizes. A good example is the public
    health sector, where data is aggregated over administrative units
    for patient protection and policy-making purposes. Unfortunately,
    this transformation makes data analysis and modeling more complex
    for researchers. There are different techniques to deal with this
    kind of data. We can work directly with areal aggregates or fall the
    irregular polygons into their centroids or, finally, transform
    dataset into a regular grid of smaller blocks if the point-support
    model is available. The latter is not a way to <italic>get
    back</italic> original observations but rather a form of lossy
    semivariogram transformation to the point-support scale. There are
    reasons to do it:</p>
    <list list-type="order">
      <list-item>
        <p>The presence of extremely unreliable rates that typically
        occur for sparsely populated areas and rare events. Consider the
        examples with the number of leukemia cases (numerator) per
        population size in a given county (denominator) or the number of
        whales observed in a given area (numerator) per time of
        observation (denominator). In those cases, extreme values may be
        related to the fact that variance for a given area of interest
        is high (low number of samples) and not to the fact that the
        chance of the event is exceptionally high for this region.</p>
      </list-item>
      <list-item>
        <p>The visual bias. People tend to give more importance to large
        blocks in contrary to the small regions.</p>
      </list-item>
      <list-item>
        <p>The mismatch of spatial supports for aggregated data and
        other variables. Data for spatial modeling should have
        harmonized spatial scale and the same extent. The aggregated
        datasets are not an exception. It may lead to the trade-off
        where we must aggregate other variables to build a model.
        Unfortunately, we lost a lot of information in this case. The
        other problem is that administrative regions are artificial
        constructs and aggregation of variables may remove spatial
        trends from data. A downscaling of areal data into filtered
        population blocks may be better suited to risk estimation along
        with remote-sensed data or in-situ observations of correlated
        variables
        (<xref alt="Goovaerts, 2006" rid="ref-GoovaertsU003A2006" ref-type="bibr">Goovaerts,
        2006</xref>).</p>
      </list-item>
    </list>
    <p>In this context, Area-to-Area Poisson Kriging serves as the
    noise-filtering algorithm or areal interpolation model, and
    Area-to-Point Poisson Kriging interpolates and transforms values and
    preserves the prediction coherence (where the disaggregated
    estimates sum is equal to the baseline area value)
    (<xref alt="Goovaerts &amp; Gebreab, 2008" rid="ref-GoovaertsU003A2008" ref-type="bibr">Goovaerts
    &amp; Gebreab, 2008</xref>). The chained-pipelines may utilize
    Area-to-Point Poisson Kriging, especially if scientist needs to
    change the support of variables. The author created a model of this
    type, the machine-learning pipeline with a model based on the
    remote-sensing data was merged with the geostatistical
    population-at-risk model derived from the Area-to-Point Poisson
    Kriging (the research outcomes are not published yet).</p>
    <p>Alternatively to the Area-to-Area and Area-to-Point Poisson
    Kriging, researchers may use centroids and perform point kriging
    over a prepared regular point grid. However, this method has its
    pitfalls. Different sizes and shapes of the baseline units lead to
    the imbalanced number of variogram point pairs per lag. The
    centroid-based approach misses spatial variability of the linked
    variable, for example, population density over an area in the
    context of infection rates.</p>
  </sec>
</sec>
<sec id="methodology">
  <title>Methodology</title>
  <p>Pyinterpolate performs six types of spatial interpolation; inverse
  distance weighting and five types of Kriging:</p>
  <list list-type="order">
    <list-item>
      <p><bold>Ordinary Kriging</bold> is a universal method for point
      interpolation.</p>
    </list-item>
    <list-item>
      <p><bold>Simple Kriging</bold> is a special case of point
      interpolation when the mean of the spatial process is known and
      does not vary spatially in a systematic way.</p>
    </list-item>
    <list-item>
      <p><bold>Centroid-based Poisson Kriging</bold> is used for areal
      interpolation and filtering. We assume that each block can
      collapse into its centroid. It is much faster than Area-to-Area
      and Area-to-Point Poisson Kriging but introduces bias related to
      the area’s transformation into single points.</p>
    </list-item>
    <list-item>
      <p><bold>Area-to-Area Poisson Kriging</bold> is used for areal
      interpolation and filtering. The point-support allows the
      algorithm to filter unreliable rates and makes final areal
      representation of rates smoother.</p>
    </list-item>
    <list-item>
      <p><bold>Area-to-Point Poisson Kriging</bold> where areal support
      is deconvoluted in regards to the point support. Output map has a
      spatial resolution of the point support while coherence of
      analysis is preserved (sum of rates is equal to the output of
      Area-to-Area Poisson Kriging). It is used for point-support
      interpolation and data filtering.</p>
    </list-item>
  </list>
  <p>The theory of Kriging is described in supplementary materials in
  the
  <ext-link ext-link-type="uri" xlink:href="https://github.com/SimonMolinsky/pyinterpolate-paper/blob/main/paper/supplementary%20materials/theory_of_kriging.md">paper
  repository</ext-link> or in more detail in Armstrong
  (<xref alt="1998" rid="ref-ArmstrongU003A1998" ref-type="bibr">1998</xref>).
  Oliver &amp; Webster
  (<xref alt="2015" rid="ref-OliverWebsterU003A2015" ref-type="bibr">2015</xref>)
  point to the practical aspects of Kriging. The procedure of the
  interpolation with Poisson Kriging is presented in Goovaerts
  (<xref alt="2006" rid="ref-GoovaertsU003A2006" ref-type="bibr">2006</xref>)
  and the semivariogram regularization process is described in Goovaerts
  (<xref alt="2007" rid="ref-GoovaertsU003A2007" ref-type="bibr">2007</xref>).</p>
  <p>The comparison to existing software is presented in the
  supplementary document
  <ext-link ext-link-type="uri" xlink:href="https://github.com/SimonMolinsky/pyinterpolate-paper/blob/main/paper/supplementary%20materials/comparison_to_gstat.md">here</ext-link>,
  Ordinary Kriging outcomes are compared for <italic>gstat</italic> and
  Pyinterpolate.</p>
  <sec id="interpolation-steps">
    <title>Interpolation steps</title>
    <p>The user starts with semivariogram exploration and modeling.
    Next, the researcher, or automatically with an algorithm, chooses
    the theoretical model which best fits the semivariogram. If this is
    done automatically, the algorithm tests linear, spherical and
    exponential models with different sills and ranges and the constant
    nugget against the experimental curve. Model performance is measured
    by the root mean squared error between the tested theoretical model
    with the experimental semivariance.</p>
    <p>Areal data interpolation, especially transformation from areal
    aggregates into point support maps, requires deconvolution of areal
    semivariogram. Users may do it without prior knowledge of kriging
    and spatial statistics because an operation is automated. The
    iterative procedure of the semivariogram regularization is described
    in detail in Goovaerts
    (<xref alt="2007" rid="ref-GoovaertsU003A2007" ref-type="bibr">2007</xref>).
    The last step of analysis is a solution of linear Kriging
    equations.</p>
    <p>Predicted data is stored as a <monospace>DataFrame</monospace>
    known from the <italic>Pandas</italic> and
    <italic>GeoPandas</italic> Python packages. Pyinterpolate allows the
    user to transform the point data into a regular Numpy array grid for
    further processing and analysis. Use case with the whole scenario is
    available in the
    <ext-link ext-link-type="uri" xlink:href="https://github.com/szymon-datalions/pyinterpolate-paper">paper
    package repository</ext-link>.</p>
    <p>The package can automatically perform the semivariogram fitting
    step with a derivation of the theoretical semivariogram from the
    experimental curve. The semivariogram regularization is entirely
    automated. The process is described in Goovaerts
    (<xref alt="2007" rid="ref-GoovaertsU003A2007" ref-type="bibr">2007</xref>).
    Users can change the derived theoretical model only by directly
    overwriting the derived semivariogram model parameters (nugget,
    sill, range, model type).</p>
    <p>The initial field of study (epidemiology) was the reason behind
    the automation of the tasks related to semivariogram modeling.
    Pyinterpolate was initially developed for the epidemiological
    research, where areal aggregates of infections were transformed to
    point support population-at-risk maps. It is assumed that users
    without a broad geostatistical background may use Pyinterpolate for
    spatial data modeling and analysis, especially users observing
    processes related to the human population.</p>
    <p>The <xref alt="Figure 1" rid="fig1">Figure 1</xref> is an example
    of a full-scale process of the semivariogram regularization and
    Area-to-Point Poisson Kriging.</p>
    <fig>
      <caption><p>Example use case of Pyinterpolate for the derivation
      of the population-at-risk map for a cancer development from the
      areal aggregates and the population
      blocks.<styled-content id="fig1"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/fig1_example.png" xlink:title="" />
    </fig>
    <p>The repository
    <ext-link ext-link-type="uri" xlink:href="https://github.com/SimonMolinsky/pyinterpolate-paper/">here</ext-link>
    presents an example of Poisson Kriging of cancer rates in
    North-Eastern U.S. step-by-step, with semivariogram regularization
    and Point Poisson Kriging functions. This repository contains three
    documents with additional information:</p>
    <list list-type="order">
      <list-item>
        <p><ext-link ext-link-type="uri" xlink:href="https://github.com/SimonMolinsky/pyinterpolate-paper/blob/main/paper-examples/example-use-case/joss%20paper%20example.ipynb"><italic>IPython</italic>
        notebook with code</ext-link>.</p>
      </list-item>
      <list-item>
        <p><ext-link ext-link-type="uri" xlink:href="https://github.com/SimonMolinsky/pyinterpolate-paper/blob/main/paper/supplementary%20materials/example_use_case.md">Document
        with detailed description of methodology</ext-link>.</p>
      </list-item>
      <list-item>
        <p><ext-link ext-link-type="uri" xlink:href="https://github.com/SimonMolinsky/pyinterpolate-paper/blob/main/paper/supplementary%20materials/areal_data_transformation.md">Document
        that describes the areal data transformation process</ext-link>.
        This procedure follows
        (<xref alt="Goovaerts, 2007" rid="ref-GoovaertsU003A2007" ref-type="bibr">Goovaerts,
        2007</xref>).</p>
      </list-item>
    </list>
  </sec>
  <sec id="modules">
    <title>Modules</title>
    <p>Pyinterpolate has seven modules covering all operations needed to
    perform spatial interpolation: input/output operations, data
    processing, transformation, semivariogram fitting, Kriging
    interpolation. <xref alt="Figure 2" rid="fig2">Figure 2</xref> shows
    the internal package structure.</p>
    <fig>
      <caption><p>Structure of Pyinterpolate
      package.<styled-content id="fig2"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/fig2_modules.png" xlink:title="" />
    </fig>
  </sec>
</sec>
<sec id="comparison-to-existing-software">
  <title>Comparison to Existing Software</title>
  <p>The main difference between Pyinterpolate and other packages is
  that it focuses on areal deconvolution methods and Poisson Kriging
  techniques useful for ecology, social science and public health
  studies. Potential users may choose other packages if they can perform
  their research with the point data interpolation.</p>
  <p>The most similar and significant package from the Python
  environment is <italic>PyKrige</italic>
  (<xref alt="Murphy et al., 2020" rid="ref-benjamin_murphy_2020_3991907" ref-type="bibr">Murphy
  et al., 2020</xref>). PyKrige is designed especially for point
  kriging. PyKrige supports 2D and 3D ordinary and universal Kriging.
  User can incorporate their own semivariogram models and use external
  functions (as an example from <italic>scikit-learn</italic> package
  (<xref alt="Pedregosa et al., 2011" rid="ref-scikit-learn" ref-type="bibr">Pedregosa
  et al., 2011</xref>)) to model drift in universal Kriging. The package
  is actively maintained.</p>
  <p><italic>GRASS GIS</italic>
  (<xref alt="GRASS Development Team, 2020" rid="ref-GRASS_GIS_software" ref-type="bibr">GRASS
  Development Team, 2020</xref>) is a well-established software for
  vector and raster data processing and analysis. GRASS contains
  multiple modules and a user may access them in numerous ways: GUI,
  command line, C API, Python APU, Jupyter Notebooks, web, QGIS or R.
  GRASS has three functions for spatial interpolation:</p>
  <list list-type="bullet">
    <list-item>
      <p><ext-link ext-link-type="uri" xlink:href="https://grass.osgeo.org/grass78/manuals/r.surf.idw.html"><monospace>r.surf.idw</monospace></ext-link>
      and
      <ext-link ext-link-type="uri" xlink:href="https://grass.osgeo.org/grass78/manuals/v.surf.idw.html"><monospace>v.surf.idw</monospace></ext-link>:
      both use Inverse Distance Weighting technique, first interpolates
      raster data and second vectors (points).</p>
    </list-item>
    <list-item>
      <p><ext-link ext-link-type="uri" xlink:href="https://grass.osgeo.org/grass78/manuals/v.surf.rst.html"><monospace>v.surf.rst</monospace></ext-link>
      that performs surface interpolation from vector points map by
      splines. Spline interpolation and Kriging are compared in
      (<xref alt="Dubrule, 1984" rid="ref-DUBRULE1984327" ref-type="bibr">Dubrule,
      1984</xref>).</p>
    </list-item>
  </list>
  <p><italic>PySAL</italic> is the next GIS / geospatial package that is
  used for spatial interpolation. However, PySAL is built upon the
  spatial graph analysis algorithms. The areal analysis is performed
  with the sub-module
  <ext-link ext-link-type="uri" xlink:href="https://github.com/pysal/tobler"><italic>tobler</italic></ext-link>
  (<xref alt="Knaap et al., 2020" rid="ref-eli_knaap_2020_4385980" ref-type="bibr">Knaap
  et al., 2020</xref>). Moreover, the package has functions for
  multisource regression, where raster data is used as auxiliary
  information to enhance interpolation results.</p>
  <p>The R <italic>gstat</italic> package is another option for spatial
  interpolation and spatial modeling
  (<xref alt="Pebesma, 2004" rid="ref-PEBESMA2004683" ref-type="bibr">Pebesma,
  2004</xref>). The package is designed for variogram modeling, simple,
  ordinary and universal point or block kriging (with drift),
  spatio-temporal kriging and sequential Gaussian (co)simulation. Gstat
  is a solid Kriging and spatial interpolation package and has the
  largest number of methods to perform spatial modeling. The main
  difference between gstat and Pyinterpolate is the availability of
  area-to-point Poisson Kriging in the latter and the difference between
  baseline programming languages
  (<xref alt="Goovaerts, 2007" rid="ref-GoovaertsU003A2007" ref-type="bibr">Goovaerts,
  2007</xref>). The functional comparison to gstat is available in the
  <ext-link ext-link-type="uri" xlink:href="https://github.com/SimonMolinsky/pyinterpolate-paper">paper
  repository</ext-link>.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-ArmstrongU003A1998">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Armstrong</surname><given-names>Margaret</given-names></name>
        </person-group>
        <source>Basic linear geostatistics</source>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="1998">1998</year>
        <uri>https://link.springer.com/book/10.1007/978-3-642-58727-6</uri>
        <pub-id pub-id-type="doi">10.1007/978-3-642-58727-6</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-OliverWebsterU003A2015">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Oliver</surname><given-names>Margaret</given-names></name>
          <name><surname>Webster</surname><given-names>Richard</given-names></name>
        </person-group>
        <source>Basic steps in geostatistics: The variogram and kriging</source>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="2015">2015</year>
        <uri>https://link.springer.com/book/10.1007/978-3-319-15865-5#about</uri>
        <pub-id pub-id-type="doi">10.1007/978-3-319-15865-5</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-GoovaertsU003A2006">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Goovaerts</surname><given-names>Pierre</given-names></name>
        </person-group>
        <article-title>Geostatistical analysis of disease data: Accounting for spatial support and population density in the isopleth mapping of cancer mortality risk using area-to-point poisson kriging</article-title>
        <source>International Journal of Health Geographics</source>
        <year iso-8601-date="2006-11">2006</year><month>11</month>
        <date-in-citation content-type="access-date"><year iso-8601-date="2021-03-24">2021</year><month>03</month><day>24</day></date-in-citation>
        <volume>5</volume>
        <pub-id pub-id-type="doi">10.1186/1476-072X-5-52</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-GoovaertsU003A2007">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Goovaerts</surname><given-names>Pierre</given-names></name>
        </person-group>
        <article-title>Kriging and semivariogram deconvolution in the presence of irregular geographical units</article-title>
        <source>Mathematical Geosciences</source>
        <year iso-8601-date="2007-12">2007</year><month>12</month>
        <date-in-citation content-type="access-date"><year iso-8601-date="2020-10-24">2020</year><month>10</month><day>24</day></date-in-citation>
        <volume>40</volume>
        <pub-id pub-id-type="doi">10.1007/s11004-007-9129-1</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-GoovaertsU003A2008">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Goovaerts</surname><given-names>Pierre</given-names></name>
          <name><surname>Gebreab</surname><given-names>Samson</given-names></name>
        </person-group>
        <article-title>How does poisson kriging compare to the popular BYM model for mapping disease risks?</article-title>
        <source>International Journal of Health Geographics</source>
        <year iso-8601-date="2008">2008</year>
        <date-in-citation content-type="access-date"><year iso-8601-date="2020-10-24">2020</year><month>10</month><day>24</day></date-in-citation>
        <volume>7</volume>
        <pub-id pub-id-type="doi">10.1186/1476-072x-7-6</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-KerryU003A2013">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Kerry</surname><given-names>R.</given-names></name>
          <name><surname>Goovaerts</surname><given-names>P.</given-names></name>
          <name><surname>Smit</surname><given-names>I. P. J.</given-names></name>
          <name><surname>Ingram</surname><given-names>B. R.</given-names></name>
        </person-group>
        <article-title>A comparison of multiple indicator kriging and area-to-point poisson kriging for mapping patterns of herbivore species abundance in kruger national park, south africa</article-title>
        <source>International Journal of Geographical Information Science</source>
        <year iso-8601-date="2013-01">2013</year><month>01</month>
        <date-in-citation content-type="access-date"><year iso-8601-date="2020-10-24">2020</year><month>10</month><day>24</day></date-in-citation>
        <volume>27</volume>
        <pub-id pub-id-type="doi">10.1080/13658816.2012.663917</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-ToblerU003A1970">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Tobler</surname><given-names>W. R.</given-names></name>
        </person-group>
        <article-title>A computer movie simulating urban growth in the detroit region</article-title>
        <source>Economic Geography</source>
        <year iso-8601-date="1970-06">1970</year><month>06</month>
        <volume>46</volume>
        <pub-id pub-id-type="doi">10.2307/143141</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-ChilèsU003A2018">
      <element-citation publication-type="chapter">
        <person-group person-group-type="author">
          <name><surname>Chilès</surname><given-names>Jean-Paul</given-names></name>
          <name><surname>Desassis</surname><given-names>Nicolas</given-names></name>
        </person-group>
        <article-title>Fifty years of kriging</article-title>
        <source>Handbook of mathematical geosciences: Fifty years of IAMG</source>
        <person-group person-group-type="editor">
          <name><surname>Daya Sagar</surname><given-names>B. S.</given-names></name>
          <name><surname>Cheng</surname><given-names>Qiuming</given-names></name>
          <name><surname>Agterberg</surname><given-names>Frits</given-names></name>
        </person-group>
        <publisher-name>Springer International Publishing</publisher-name>
        <publisher-loc>Cham</publisher-loc>
        <year iso-8601-date="2018">2018</year>
        <isbn>978-3-319-78999-6</isbn>
        <uri>https://doi.org/10.1007/978-3-319-78999-6_29</uri>
        <pub-id pub-id-type="doi">10.1007/978-3-319-78999-6_29</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-benjamin_murphy_2020_3991907">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Murphy</surname><given-names>Benjamin</given-names></name>
          <name><surname>Müller</surname><given-names>Sebastian</given-names></name>
          <name><surname>Yurchak</surname><given-names>Roman</given-names></name>
        </person-group>
        <source>GeoStat-framework/PyKrige v1.5.1</source>
        <publisher-name>Zenodo</publisher-name>
        <year iso-8601-date="2020-08">2020</year><month>08</month>
        <uri>https://doi.org/10.5281/zenodo.3991907</uri>
        <pub-id pub-id-type="doi">10.5281/zenodo.3991907</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-scikit-learn">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Pedregosa</surname><given-names>F.</given-names></name>
          <name><surname>Varoquaux</surname><given-names>G.</given-names></name>
          <name><surname>Gramfort</surname><given-names>A.</given-names></name>
          <name><surname>Michel</surname><given-names>V.</given-names></name>
          <name><surname>Thirion</surname><given-names>B.</given-names></name>
          <name><surname>Grisel</surname><given-names>O.</given-names></name>
          <name><surname>Blondel</surname><given-names>M.</given-names></name>
          <name><surname>Prettenhofer</surname><given-names>P.</given-names></name>
          <name><surname>Weiss</surname><given-names>R.</given-names></name>
          <name><surname>Dubourg</surname><given-names>V.</given-names></name>
          <name><surname>Vanderplas</surname><given-names>J.</given-names></name>
          <name><surname>Passos</surname><given-names>A.</given-names></name>
          <name><surname>Cournapeau</surname><given-names>D.</given-names></name>
          <name><surname>Brucher</surname><given-names>M.</given-names></name>
          <name><surname>Perrot</surname><given-names>M.</given-names></name>
          <name><surname>Duchesnay</surname><given-names>E.</given-names></name>
        </person-group>
        <article-title>Scikit-learn: Machine learning in Python</article-title>
        <source>Journal of Machine Learning Research</source>
        <year iso-8601-date="2011">2011</year>
        <volume>12</volume>
      </element-citation>
    </ref>
    <ref id="ref-GRASS_GIS_software">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <string-name>GRASS Development Team</string-name>
        </person-group>
        <source>Geographic resources analysis support system (GRASS GIS) software</source>
        <publisher-name>Open Source Geospatial Foundation</publisher-name>
        <publisher-loc>USA</publisher-loc>
        <year iso-8601-date="2020">2020</year>
        <uri>https://grass.osgeo.org</uri>
      </element-citation>
    </ref>
    <ref id="ref-eli_knaap_2020_4385980">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Knaap</surname><given-names>Eli</given-names></name>
          <name><surname>Cortes</surname><given-names>Renan Xavier</given-names></name>
          <name><surname>Rey</surname><given-names>Sergio</given-names></name>
          <name><surname>Gaboardi</surname><given-names>James</given-names></name>
          <name><surname>Frontiera</surname><given-names>Patty</given-names></name>
        </person-group>
        <source>Pysal/tobler: Release v0.5.4</source>
        <publisher-name>Zenodo</publisher-name>
        <year iso-8601-date="2020-12">2020</year><month>12</month>
        <uri>https://doi.org/10.5281/zenodo.4385980</uri>
        <pub-id pub-id-type="doi">10.5281/zenodo.4385980</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-PEBESMA2004683">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Pebesma</surname><given-names>Edzer J</given-names></name>
        </person-group>
        <article-title>Multivariable geostatistics in s: The gstat package</article-title>
        <source>Computers &amp; Geosciences</source>
        <year iso-8601-date="2004">2004</year>
        <volume>30</volume>
        <issue>7</issue>
        <issn>0098-3004</issn>
        <uri>http://www.sciencedirect.com/science/article/pii/S0098300404000676</uri>
        <pub-id pub-id-type="doi">10.1016/j.cageo.2004.03.012</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-DUBRULE1984327">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Dubrule</surname><given-names>Olivier</given-names></name>
        </person-group>
        <article-title>Comparing splines and kriging</article-title>
        <source>Computers &amp; Geosciences</source>
        <year iso-8601-date="1984">1984</year>
        <volume>10</volume>
        <issue>2</issue>
        <issn>0098-3004</issn>
        <uri>https://www.sciencedirect.com/science/article/pii/009830048490030X</uri>
        <pub-id pub-id-type="doi">10.1016/0098-3004(84)90030-X</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
