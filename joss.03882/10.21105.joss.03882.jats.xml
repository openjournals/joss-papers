<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">3882</article-id>
<article-id pub-id-type="doi">10.21105/joss.03882</article-id>
<title-group>
<article-title>Simframe: A Python Framework for Scientific
Simulations</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">0000-0002-1589-1796</contrib-id>
<name>
<surname>Stammler</surname>
<given-names>Sebastian M.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-1899-8783</contrib-id>
<name>
<surname>Birnstiel</surname>
<given-names>Tilman</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>University Observatory, Faculty of Physics,
Ludwig-Maximilians-Universität München, Scheinerstr. 1, 81679 Munich,
Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Exzellenzcluster ORIGINS, Boltzmannstr. 2, D-85748
Garching, Germany</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2021-08-11">
<day>11</day>
<month>8</month>
<year>2021</year>
</pub-date>
<volume>7</volume>
<issue>69</issue>
<fpage>3882</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>Jupyter Notebook</kwd>
<kwd>NumPy</kwd>
<kwd>SciPy</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><monospace>Simframe</monospace> is a Python framework to facilitate
  scientific simulations. The scope of the software is to provide a
  framework which can hold data fields, which can be used to integrate
  differential equations, and which can read and write data files.</p>
  <p>Conceptually, upon initialization <monospace>Simframe</monospace>
  is an empty frame that can be filled with
  <monospace>Field</monospace>s containing data.
  <monospace>Field</monospace>s are derived from
  <monospace>numpy.ndarray</monospace>s
  (<xref alt="Harris et al., 2020" rid="ref-HarrisU003A2020" ref-type="bibr">Harris
  et al., 2020</xref>), but with extended functionality. The user can
  then specify differential equations to those data fields and can set
  up an integrator which is integrating those fields according the given
  differential equations. Therefore, <monospace>Simframe</monospace> can
  only work with data, that can be stored in
  <monospace>NumPy</monospace> arrays.</p>
  <p>Data fields that should not be integrated themselves, but are still
  required for the model, can have an update function assigned to them,
  according to which they will be updated once per integration step.</p>
  <p><monospace>Simframe</monospace> contains a number of integration
  schemes of different orders, both for explicit and implicit
  integration. Furthermore, <monospace>Simframe</monospace> includes
  methods to read and write output files.</p>
  <p>Due to its modular structure, <monospace>Simframe</monospace> can
  be extended at will, for example, by implementing new integration
  schemes and/or user-defined output formats.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Solving differential equations is part of the daily work of
  scientists. <monospace>Simframe</monospace> facilitates this by
  providing the infrastructure: Data structures, integration schemes,
  and methods to write and read output files.</p>
  <p>On one hand, <monospace>Simframe</monospace> can be used to quickly
  solve small scientific problems, and, on the other hand, it can be
  easily extended to larger projects due to its versatility and modular
  structure.</p>
  <p>Furthermore, <monospace>Simframe</monospace> is ideal for beginners
  without programming experience who are taking their first steps in
  solving differential equations. It can therefore be used to design
  lectures or practical courses at schools and universities, as it
  allows students to concentrate on the essentials without having to
  write larger programs on their own.</p>
  <p>Plenty of ODE solver packages already exist for Python, like
  <monospace>solve_ivp</monospace> or <monospace>odeint</monospace> in
  <monospace>SciPy</monospace>’s <monospace>integrate</monospace>
  module, however, these do not provide data structures, nor
  input/output capabilities. <monospace>Simframe</monospace> offers a
  flexible framework to define, group, and describe data, define how it
  is updated, use existing integrators or define new ones, and to handle
  writing of data or serializing the entire simulation object, all in
  one modular package. Existing integrators like
  <monospace>solve_ivp</monospace> or <monospace>odeint</monospace> can
  be used within <monospace>Simframe</monospace> by simply adding them
  to an integration scheme.</p>
</sec>
<sec id="features">
  <title>Features</title>
  <sec id="data-fields">
    <title>Data fields</title>
    <p>The data fields of <monospace>Simframe</monospace> are subclassed
    <monospace>NumPy</monospace> <monospace>ndarray</monospace>s. The
    full <monospace>NumPy</monospace> functionality can therefore be
    used on <monospace>Simframe</monospace> data fields. The
    <monospace>ndarray</monospace>s have been extended to store
    additional information about differential equations or update
    functions and a string description of the field. The data fields can
    be arranged in groups to facilitate a clear structure within the
    data frame.</p>
  </sec>
  <sec id="integration-schemes">
    <title>Integration schemes</title>
    <p><monospace>Simframe</monospace> includes a number of basic
    integration schemes by default
    (<xref alt="Hairer et al., 1993" rid="ref-HairerU003A1993" ref-type="bibr">Hairer
    et al., 1993</xref>). All of the implemented schemes are Runge-Kutta
    methods of different orders. Some of the methods are adaptive, i.e.,
    they are embedded Runge-Kutta methods, that return an optimal step
    size for the integration variable, such that the desired accuracy is
    achieved. The implicit methods require a matrix inversion that is
    either done directly by <monospace>NumPy</monospace> or by using the
    GMRES solver provided by <monospace>SciPy</monospace>
    (<xref alt="Virtanen et al., 2020" rid="ref-VirtanenU003A2020" ref-type="bibr">Virtanen
    et al., 2020</xref>).</p>
    <p>Here is a list of all implemented integration schemes:</p>
    <table-wrap>
      <table>
        <thead>
          <tr>
            <th align="center">Order</th>
            <th>Scheme</th>
            <th align="center"></th>
            <th align="center"></th>
            <th>solver</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="center">1</td>
            <td>Euler</td>
            <td align="center">explicit</td>
            <td align="center"></td>
            <td></td>
          </tr>
          <tr>
            <td align="center">1</td>
            <td>Euler</td>
            <td align="center">implicit</td>
            <td align="center"></td>
            <td>direct</td>
          </tr>
          <tr>
            <td align="center">1</td>
            <td>Euler</td>
            <td align="center">implicit</td>
            <td align="center"></td>
            <td>GMRES</td>
          </tr>
          <tr>
            <td align="center">2</td>
            <td>Fehlberg</td>
            <td align="center">explicit</td>
            <td align="center">adaptive</td>
            <td></td>
          </tr>
          <tr>
            <td align="center">2</td>
            <td>Heun</td>
            <td align="center">explicit</td>
            <td align="center"></td>
            <td></td>
          </tr>
          <tr>
            <td align="center">2</td>
            <td>Heun-Euler</td>
            <td align="center">explicit</td>
            <td align="center">adaptive</td>
            <td></td>
          </tr>
          <tr>
            <td align="center">2</td>
            <td>midpoint</td>
            <td align="center">explicit</td>
            <td align="center"></td>
            <td></td>
          </tr>
          <tr>
            <td align="center">2</td>
            <td>midpoint</td>
            <td align="center">implicit</td>
            <td align="center"></td>
            <td>direct</td>
          </tr>
          <tr>
            <td align="center">2</td>
            <td>Ralston</td>
            <td align="center">explicit</td>
            <td align="center"></td>
            <td></td>
          </tr>
          <tr>
            <td align="center">3</td>
            <td>Bogacki-Shampine</td>
            <td align="center">explicit</td>
            <td align="center">adaptive</td>
            <td></td>
          </tr>
          <tr>
            <td align="center">3</td>
            <td>Gottlieb-Shu</td>
            <td align="center">explicit</td>
            <td align="center">adaptive</td>
            <td></td>
          </tr>
          <tr>
            <td align="center">3</td>
            <td>Heun</td>
            <td align="center">explicit</td>
            <td align="center"></td>
            <td></td>
          </tr>
          <tr>
            <td align="center">3</td>
            <td>Kutta</td>
            <td align="center">explicit</td>
            <td align="center"></td>
            <td></td>
          </tr>
          <tr>
            <td align="center">3</td>
            <td>Ralston</td>
            <td align="center">explicit</td>
            <td align="center"></td>
            <td></td>
          </tr>
          <tr>
            <td align="center">3</td>
            <td>Strong Stability Preserving</td>
            <td align="center">explicit</td>
            <td align="center"></td>
            <td></td>
          </tr>
          <tr>
            <td align="center">4</td>
            <td>3/8 rule</td>
            <td align="center">explicit</td>
            <td align="center"></td>
            <td></td>
          </tr>
          <tr>
            <td align="center">4</td>
            <td>Ralston</td>
            <td align="center">explicit</td>
            <td align="center"></td>
            <td></td>
          </tr>
          <tr>
            <td align="center">4</td>
            <td>Runge-Kutta</td>
            <td align="center">explicit</td>
            <td align="center"></td>
            <td></td>
          </tr>
          <tr>
            <td align="center">5</td>
            <td>Cash-Karp</td>
            <td align="center">explicit</td>
            <td align="center">adaptive</td>
            <td></td>
          </tr>
          <tr>
            <td align="center">5</td>
            <td>Dormand-Prince</td>
            <td align="center">explicit</td>
            <td align="center">adaptive</td>
            <td></td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
  </sec>
  <sec id="io">
    <title>I/O</title>
    <p>By default <monospace>Simframe</monospace> has two options for
    storing simulation results. One is by storing the data in a separate
    namespace within the <monospace>Simframe</monospace> object itself,
    useful for small simulations to access results without
    writing/reading data files. Another one is by storing the data in
    HDF5 data files using the <monospace>h5py</monospace> package
    (<xref alt="Collette, 2013" rid="ref-ColletteU003A2014" ref-type="bibr">Collette,
    2013</xref>).</p>
    <p>If configured by the user, <monospace>Simframe</monospace> is
    writing dump files, from which the simulation can be resumed, in
    case the program crashed unexpectedly. These dump files are
    serialized <monospace>Simframe</monospace> objects using the
    <monospace>dill</monospace> package
    (<xref alt="McKerns et al., 2012" rid="ref-McKernsU003A2012" ref-type="bibr">McKerns
    et al., 2012</xref>).</p>
  </sec>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The authors acknowledge funding from the European Research Council
  (ERC) under the European Union’s Horizon 2020 research and innovation
  programme under grant agreement No 714769 and funding by the Deutsche
  Forschungsgemeinschaft (DFG, German Research Foundation) under grants
  361140270, 325594231, and Germany’s Excellence Strategy - EXC-2094 -
  390783311.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-HairerU003A1993">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Hairer</surname><given-names>Ernst</given-names></name>
        <name><surname>Paul</surname><given-names>Nørsett Syvert</given-names></name>
        <name><surname>Wanner</surname><given-names>Gerhard</given-names></name>
      </person-group>
      <source>Solving ordinary differential equations i</source>
      <publisher-name>Springer, Berlin, Heidelberg</publisher-name>
      <year iso-8601-date="1993">1993</year>
      <pub-id pub-id-type="doi">10.1007/978-3-540-78862-1</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-HarrisU003A2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>van der Walt</surname><given-names>Stéfan J.</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Wieser</surname><given-names>Eric</given-names></name>
        <name><surname>Taylor</surname><given-names>Julian</given-names></name>
        <name><surname>Berg</surname><given-names>Sebastian</given-names></name>
        <name><surname>Smith</surname><given-names>Nathaniel J.</given-names></name>
        <name><surname>Kern</surname><given-names>Robert</given-names></name>
        <name><surname>Picus</surname><given-names>Matti</given-names></name>
        <name><surname>Hoyer</surname><given-names>Stephan</given-names></name>
        <name><surname>van Kerkwijk</surname><given-names>Marten H.</given-names></name>
        <name><surname>Brett</surname><given-names>Matthew</given-names></name>
        <name><surname>Haldane</surname><given-names>Allan</given-names></name>
        <name><surname>del Rı́o</surname><given-names>Jaime Fernández</given-names></name>
        <name><surname>Wiebe</surname><given-names>Mark</given-names></name>
        <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
        <name><surname>Gérard-Marchant</surname><given-names>Pierre</given-names></name>
        <name><surname>Sheppard</surname><given-names>Kevin</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
        <name><surname>Abbasi</surname><given-names>Hameer</given-names></name>
        <name><surname>Gohlke</surname><given-names>Christoph</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
      </person-group>
      <article-title>Array programming with NumPy</article-title>
      <source>Nature</source>
      <year iso-8601-date="2020-03">2020</year><month>03</month>
      <uri>https://ui.adsabs.harvard.edu/abs/2020Natur.585..357H</uri>
      <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-VirtanenU003A2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
        <name><surname>Haberland</surname><given-names>Matt</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Burovski</surname><given-names>Evgeni</given-names></name>
        <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
        <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
        <name><surname>Bright</surname><given-names>Jonathan</given-names></name>
        <name><surname>van der Walt</surname><given-names>Stéfan J.</given-names></name>
        <name><surname>Brett</surname><given-names>Matthew</given-names></name>
        <name><surname>Wilson</surname><given-names>Joshua</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>Mayorov</surname><given-names>Nikolay</given-names></name>
        <name><surname>Nelson</surname><given-names>Andrew R. J.</given-names></name>
        <name><surname>Jones</surname><given-names>Eric</given-names></name>
        <name><surname>Kern</surname><given-names>Robert</given-names></name>
        <name><surname>Larson</surname><given-names>Eric</given-names></name>
        <name><surname>Carey</surname><given-names>C. J.</given-names></name>
        <name><surname>Polat</surname><given-names>İlhan</given-names></name>
        <name><surname>Feng</surname><given-names>Yu</given-names></name>
        <name><surname>Moore</surname><given-names>Eric W.</given-names></name>
        <name><surname>VanderPlas</surname><given-names>Jake</given-names></name>
        <name><surname>Laxalde</surname><given-names>Denis</given-names></name>
        <name><surname>Perktold</surname><given-names>Josef</given-names></name>
        <name><surname>Cimrman</surname><given-names>Robert</given-names></name>
        <name><surname>Henriksen</surname><given-names>Ian</given-names></name>
        <name><surname>Quintero</surname><given-names>E. A.</given-names></name>
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Archibald</surname><given-names>Anne M.</given-names></name>
        <name><surname>Ribeiro</surname><given-names>Antônio H.</given-names></name>
        <name><surname>Pedregosa</surname><given-names>Fabian</given-names></name>
        <name><surname>van Mulbregt</surname><given-names>Paul</given-names></name>
        <string-name>SciPy 1. 0 Contributors</string-name>
      </person-group>
      <article-title>SciPy 1.0: fundamental algorithms for scientific computing in Python</article-title>
      <source>Nature</source>
      <year iso-8601-date="2020-02">2020</year><month>02</month>
      <uri>https://ui.adsabs.harvard.edu/abs/2020NatMe..17..261V</uri>
      <pub-id pub-id-type="doi">10.1038/s41592-019-0686-2</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-ColletteU003A2014">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Collette</surname><given-names>Andrew</given-names></name>
      </person-group>
      <source>Python and HDF5</source>
      <publisher-name>O’Reilly</publisher-name>
      <year iso-8601-date="2013">2013</year>
    </element-citation>
  </ref>
  <ref id="ref-McKernsU003A2012">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>McKerns</surname><given-names>Michael M.</given-names></name>
        <name><surname>Strand</surname><given-names>Leif</given-names></name>
        <name><surname>Sullivan</surname><given-names>Tim</given-names></name>
        <name><surname>Fang</surname><given-names>Alta</given-names></name>
        <name><surname>Aivazis</surname><given-names>Michael A. G.</given-names></name>
      </person-group>
      <article-title>Building a framework for predictive science</article-title>
      <year iso-8601-date="2012">2012</year>
      <uri>https://arxiv.org/abs/1202.1056</uri>
      <pub-id pub-id-type="doi">10.25080/majora-ebaa42b7-00d</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
