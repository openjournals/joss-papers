<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">4902</article-id>
<article-id pub-id-type="doi">10.21105/joss.04902</article-id>
<title-group>
<article-title>Quil√´: C++ genetic algorithms scientific
library</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-6071-9389</contrib-id>
<name>
<surname>Tarkowski</surname>
<given-names>Tomasz</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Chair of Complex Systems Modelling, Institute of
Theoretical Physics, Faculty of Physics, University of Warsaw, Pasteura
5, PL-02093 Warszawa, Poland</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2022-10-18">
<day>18</day>
<month>10</month>
<year>2022</year>
</pub-date>
<volume>8</volume>
<issue>82</issue>
<fpage>4902</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>C++</kwd>
<kwd>genetic algorithm</kwd>
<kwd>header-only library</kwd>
<kwd>scientific library</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>This work discusses a general-purpose genetic algorithms
  (<xref alt="Holland, 1975" rid="ref-Holland1975" ref-type="bibr">Holland,
  1975</xref>) scientific header-only library named Quil√´. The software
  is written in C++20 and has been released under the terms of the MIT
  license. It is available at
  <ext-link ext-link-type="uri" xlink:href="https://github.com/ttarkowski/quile/">https://github.com/ttarkowski/quile/</ext-link>.
  The name of the library come from the fictional language Neo-Quenya
  and means ‚Äúcolor‚Äù (cf.¬†origin of the word
  <italic>chromosome</italic>).</p>
  <p>Genetic algorithms, or more broadly, <italic>evolutionary
  computations</italic>, is a field of computer science devoted to
  population-based, trial-and-error methods of problem solving.
  Evolutionary computation was invented by Alan Turing by noting that
  the principles of biological evolution and genetics can be applied to
  optimization problems
  (<xref alt="Turing, 1948" rid="ref-Turing1948" ref-type="bibr">Turing,
  1948</xref>,
  <xref alt="1950" rid="ref-Turing1950" ref-type="bibr">1950</xref>).
  One of the first evolutionary computations performed on a computer was
  done by Nils A. Barricelli
  (<xref alt="Barricelli, 1962" rid="ref-Barricelli1962" ref-type="bibr">Barricelli,
  1962</xref>;
  <xref alt="Galloway, 2011" rid="ref-Galloway2011" ref-type="bibr">Galloway,
  2011</xref>). Evolutionary computations have found wide applications
  in many disciplines
  (<xref alt="Drachal &amp; Paw≈Çowski, 2021" rid="ref-Drachal2021" ref-type="bibr">Drachal
  &amp; Paw≈Çowski, 2021</xref>;
  <xref alt="Ghaheri et al., 2015" rid="ref-Ghaheri2015" ref-type="bibr">Ghaheri
  et al., 2015</xref>;
  <xref alt="Goudos et al., 2016" rid="ref-Goudos2016" ref-type="bibr">Goudos
  et al., 2016</xref>;
  <xref alt="Katoch et al., 2021" rid="ref-Katoch2021" ref-type="bibr">Katoch
  et al., 2021</xref>;
  <xref alt="Kudjo et al., 2017" rid="ref-Kudjo2017" ref-type="bibr">Kudjo
  et al., 2017</xref>;
  <xref alt="Lee, 2018" rid="ref-Lee2018" ref-type="bibr">Lee,
  2018</xref>).</p>
  <p>The genetic algorithm is a conceptually simple procedure. The aim
  is to find the most optimal solution of a given optimization problem.
  First, one begins with some sampling of the space of potential
  solutions; this can be done randomly or <italic>ad hoc</italic>. This
  procedure forms the first population of the evolutionary process,
  i.e., its first iteration. Each candidate solution from the population
  is evaluated in terms of its ‚Äúfitness‚Äù. A ‚Äúfitter‚Äù candidate solution
  has a greater probability of becoming a parent and entering the next
  population of the evolution‚Äôs subsequent iteration. However, less
  ‚Äúfit‚Äù individuals still can propagate, albeit with lower probability.
  This trait of evolutionary computations helps preventing premature
  optimization to the wrong local optimum. Iterations of the evolution
  continue as long as the termination condition is not met. One example
  of a termination condition is reaching the fitness function
  <italic>plateau</italic>.</p>
</sec>
<sec id="overview">
  <title>Overview</title>
  <p><italic>Nature of problem:</italic> Floating-point, integer,
  binary, or permutation single-objective constrained finite-dimensional
  optimization problems of arbitrary nature, i.e., maximization of
  <inline-formula><alternatives>
  <tex-math><![CDATA[f\colon G \rightarrow \mathbb{R}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>f</mml:mi><mml:mo>:</mml:mo><mml:mi>G</mml:mi><mml:mo>‚Üí</mml:mo><mml:mstyle mathvariant="double-struck"><mml:mi>‚Ñù</mml:mi></mml:mstyle></mml:mrow></mml:math></alternatives></inline-formula>,
  where <inline-formula><alternatives>
  <tex-math><![CDATA[G \subseteq \prod_{i=0}^{c-1} X_i]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>G</mml:mi><mml:mo>‚äÜ</mml:mo><mml:msubsup><mml:mo>‚àè</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mo>‚àí</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>,
  where <inline-formula><alternatives>
  <tex-math><![CDATA[X_i]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  is equal to set of logical values <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbb{B}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mstyle mathvariant="double-struck"><mml:mi>ùîπ</mml:mi></mml:mstyle></mml:math></alternatives></inline-formula>
  (i.e.¬†false and true) or is bounded subset of set of real numbers
  <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbb{R}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mstyle mathvariant="double-struck"><mml:mi>‚Ñù</mml:mi></mml:mstyle></mml:math></alternatives></inline-formula>
  or integer numbers <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbb{Z}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mstyle mathvariant="double-struck"><mml:mi>‚Ñ§</mml:mi></mml:mstyle></mml:math></alternatives></inline-formula>.</p>
  <p><italic>Solution method:</italic> Single-objective constrained
  genetic algorithm with pure floating-point, integer, binary, and
  permutation representation with set of exchangeable components (e.g.,
  variation operators, selection probability functions, selection
  mechanisms, termination conditions).</p>
  <p><italic>Unique features:</italic> Header-only and easy-to-deploy
  genetic algorithms C++20 library tailored for problems with
  computationally expensive fitness functions.</p>
  <p><italic>Functionality:</italic></p>
  <list list-type="bullet">
    <list-item>
      <p>Floating-point, integer, binary, and permutation genotype
      representations.</p>
    </list-item>
    <list-item>
      <p>Automatic compile-time representation/variation compatibility
      checks.</p>
    </list-item>
    <list-item>
      <p>Mutation operators: Gaussian, self-adaptive, swap,
      random-reset, and bit-flipping.</p>
    </list-item>
    <list-item>
      <p>Recombination operators: arithmetic, single arithmetic,
      one-point crossover, and cut-and-crossfill.</p>
    </list-item>
    <list-item>
      <p>Canonical composition of mutation and recombination is
      available.</p>
    </list-item>
    <list-item>
      <p>Variations can be applied stochastically.</p>
    </list-item>
    <list-item>
      <p>Selection mechanisms: stochastic universal sampling, roulette
      wheel algorithm, and generational selection.</p>
    </list-item>
    <list-item>
      <p>Selection probability functions: fitness proportionate
      selection with windowing procedure, linear and exponential
      pressure ranking selection.</p>
    </list-item>
    <list-item>
      <p>Termination conditions: reaching the fitness function
      <italic>plateau</italic>, reaching the maximum number of
      iterations, reaching the given fitness function value, reaching
      some user defined threshold.</p>
    </list-item>
    <list-item>
      <p>Conjunction and disjunction of termination conditions are
      supported.</p>
    </list-item>
    <list-item>
      <p>Possibility of addition of new variation operators, selection
      mechanisms, selection probability functions, and termination
      conditions at client-side code.</p>
    </list-item>
  </list>
  <p><italic>Limitations:</italic></p>
  <list list-type="bullet">
    <list-item>
      <p>Client-side program compilation time is comparatively long due
      to <italic>header-only</italic> nature of the library and the use
      of templates.</p>
    </list-item>
    <list-item>
      <p>Set of variation operators is limited. In case of
      floating-point representation alone, the popular BLX recombination
      (<xref alt="Eshelman &amp; Schaffer, 1993" rid="ref-Eshelman1993" ref-type="bibr">Eshelman
      &amp; Schaffer, 1993</xref>) is not implemented.</p>
    </list-item>
    <list-item>
      <p>Very popular mechanisms of selection to the next generation,
      e.g., <inline-formula><alternatives>
      <tex-math><![CDATA[(\mu + \lambda )]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>Œº</mml:mi><mml:mo>+</mml:mo><mml:mi>Œª</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>-selection
      and <inline-formula><alternatives>
      <tex-math><![CDATA[(\mu , \lambda )]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>Œº</mml:mi><mml:mo>,</mml:mo><mml:mi>Œª</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>-selection,
      are not implemented.</p>
    </list-item>
    <list-item>
      <p>Recombination with number of parents different than 2 is not
      supported.</p>
    </list-item>
  </list>
  <p><italic>Note</italic>: For information about API documentation,
  tutorial, installation instructions, test suite, code statistics,
  reporting problems with the library, support inquiries, and feature
  requests, please see the <italic>README</italic> file in the software
  archive.</p>
  <p><italic>Scholarly publications and research projects using the
  software:</italic></p>
  <list list-type="bullet">
    <list-item>
      <p>research project in computational materials science (cf.
      <xref alt="Acknowledgements" rid="acknowledgements">Acknowledgements</xref>
      section)</p>
    </list-item>
    <list-item>
      <p>PhD thesis
      (<xref alt="Tarkowski, 2022b" rid="ref-Tarkowski2022b" ref-type="bibr">Tarkowski,
      2022b</xref>)</p>
    </list-item>
    <list-item>
      <p>1 report and 2 articles
      (<xref alt="Tarkowski, 2022a" rid="ref-Tarkowski2022a" ref-type="bibr">Tarkowski,
      2022a</xref>;
      <xref alt="Tarkowski &amp; Gonzalez Szwacki, 2022" rid="ref-Tarkowski2022" ref-type="bibr">Tarkowski
      &amp; Gonzalez Szwacki, 2022</xref>,
      <xref alt="2023" rid="ref-Tarkowski2023" ref-type="bibr">2023</xref>)</p>
    </list-item>
  </list>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Scientific use of C++ genetic algorithms libraries seems to be
  dominated by four software packages: GAlib
  (<xref alt="Wall, n.d." rid="ref-Wall" ref-type="bibr">Wall,
  n.d.</xref>), Evolving Objects
  (<xref alt="Keijzer et al., 2002" rid="ref-Keijzer2002" ref-type="bibr">Keijzer
  et al., 2002</xref>), OpenBEAGLE
  (<xref alt="Gagn√© &amp; Parizeau, 2006" rid="ref-Gagne2006" ref-type="bibr">Gagn√©
  &amp; Parizeau, 2006</xref>), and Evolutionary Computation Framework
  (ECF)
  (<xref alt="Jakoboviƒá, n.d." rid="ref-Jakobovic" ref-type="bibr">Jakoboviƒá,
  n.d.</xref>). Evolving Objects, OpenBEAGLE, and ECF are written in the
  C++98 standard of the language, while GAlib is written in a
  pre-standard version of it. Those libraries, which are written in
  C++98, while being comprehensive and feature-rich, also tend to be
  relatively hard to use for the novice user inclined toward scientific
  computation. The reason is the comparatively complex installation
  process or complexity of the library itself.</p>
  <p>The Quil√´ library tries to fill the niche of easy-to-use,
  high-performance genetic algorithms scientific libraries by
  implementing the features using the modern C++20 standard of the
  language. The software provides an easy starting point for researchers
  and academic teachers who need genetic algorithms and use C++ for
  their work. The library is available as a header-only (one file)
  implementation that can be installed by simply copying its source
  code. The user can run the accompanying examples in matter of mere
  minutes. On the other hand, the library also intentionally strives to
  be minimal, so only a limited set of use cases is covered.</p>
  <p>The library is implemented in generic (template metaprogramming)
  and partly in functional programming style with elements of
  concurrency. Modern elements of C++ are used, e.g.,
  <italic>concepts</italic>
  (<xref alt="Sutton, 2017" rid="ref-Sutton2017" ref-type="bibr">Sutton,
  2017</xref>), alongside established constructs, e.g., substitution
  failure is not an error (SFINAE)
  (<xref alt="Vandevoorde &amp; Josuttis, 2002" rid="ref-Vandevoorde2002" ref-type="bibr">Vandevoorde
  &amp; Josuttis, 2002</xref>). In order to compile programs developed
  with the library, a C++ compiler supporting the C++20 standard of the
  language is needed.</p>
  <p>The library employs a database of already-computed fitness function
  values. The software is therefore well suited for optimization tasks
  with fitness functions calculated from simulation codes like
  <italic>ab initio</italic> (condensed matter physics) or finite
  element method calculations. This feature, however, does not exclude
  the use of inexpensive fitness functions. For the sake of convenience
  the database itself is available through the intermediary objects,
  which are responsible for database cohesion and lifetime management.
  The intermediary object type is implemented with the use of the smart
  pointer <italic>std::shared_ptr</italic>
  (<xref alt="Alexandrescu, 2001" rid="ref-Alexandrescu2001" ref-type="bibr">Alexandrescu,
  2001</xref>). Calculations of fitness function values not yet
  available in the database are computed concurrently in order to speed
  up the whole evolutionary process; thread pool design pattern is used
  to optimally balance the load on CPU cores
  (<xref alt="Williams, 2019" rid="ref-Williams2019" ref-type="bibr">Williams,
  2019</xref>).</p>
  <p>Example usage of the library features is outlined in the
  <italic>tutorial/tutorial.txt</italic> file in the software archive.
  Example results obtained with the use of the library are shown in
  <xref alt="Figure¬†1" rid="fig1">Figure¬†1</xref> and in
  <xref alt="Figure¬†2" rid="fig2">Figure¬†2</xref>.</p>
  <fig>
    <caption><p>Genetic drift over function
    <inline-formula><alternatives>
    <tex-math><![CDATA[f(x, y) = \cos \frac{r(x, y)}{4} + e]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo>cos</mml:mo><mml:mfrac><mml:mrow><mml:mi>r</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow><mml:mn>4</mml:mn></mml:mfrac><mml:mo>+</mml:mo><mml:mi>e</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>,
    where <inline-formula><alternatives>
    <tex-math><![CDATA[r(x, y) = \sqrt{x^2 + y^2}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>r</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:msup><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mi>y</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:msqrt></mml:mrow></mml:math></alternatives></inline-formula>,
    on domain <inline-formula><alternatives>
    <tex-math><![CDATA[[-10, 10]^2]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msup><mml:mrow><mml:mo stretchy="true" form="prefix">[</mml:mo><mml:mo>‚àí</mml:mo><mml:mn>10</mml:mn><mml:mo>,</mml:mo><mml:mn>10</mml:mn><mml:mo stretchy="true" form="postfix">]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:math></alternatives></inline-formula>.
    Three genotype generations were presented: the first one (#0), in
    half of the evolution (#6) and at the end (#12). Each generation has
    the same size. This figure can be reproduced by running
    <italic>examples/example_1</italic> example from the software
    archive. <styled-content id="fig1"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/fig1.pdf" xlink:title="" />
  </fig>
  <fig>
    <caption><p>The <inline-formula><alternatives>
    <tex-math><![CDATA[n]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>
    queens puzzle: time of genetic program execution
    <inline-formula><alternatives>
    <tex-math><![CDATA[\Delta t]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>Œî</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
    and problem complexity <inline-formula><alternatives>
    <tex-math><![CDATA[\xi]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>Œæ</mml:mi></mml:math></alternatives></inline-formula>.
    Calculations were performed on low-spec CPU (<italic>thermal design
    power</italic> 6 W) for sample size of 10 per measurement point.
    Number of <inline-formula><alternatives>
    <tex-math><![CDATA[n]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>
    queens puzzle solutions can be taken from
    (<xref alt="A000170 ‚Äì Number of Ways of Placing n Nonattacking Queens on an n \times n Board, n.d." rid="ref-oeisA000170" ref-type="bibr"><italic>A000170
    ‚Äì Number of Ways of Placing <inline-formula><alternatives>
    <tex-math><![CDATA[n]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>
    Nonattacking Queens on an <inline-formula><alternatives>
    <tex-math><![CDATA[n \times n]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>n</mml:mi><mml:mo>√ó</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
    Board</italic>, n.d.</xref>). Inset: Sample solution
    <italic>4Q3/Q7/7Q/5Q2/2Q5/6Q1/1Q6/3Q4 w - - 0 0</italic> for eight
    queens puzzle reached after creation of 56 unique genotypes in
    evolution (on average 123.61 with standard deviation 111.69 for
    sample size 100). This figure can be reproduced by running
    <italic>examples/example_2/time</italic> example from the software
    archive. <styled-content id="fig2"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/fig2.pdf" xlink:title="" />
  </fig>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This work is a result of projects funded by the National Science
  Centre of Poland (Twardowskiego 16, PL-30312 Krak√≥w, Poland,
  <ext-link ext-link-type="uri" xlink:href="http://www.ncn.gov.pl/">http://www.ncn.gov.pl/</ext-link>)
  under grant number
  <ext-link ext-link-type="uri" xlink:href="https://projekty.ncn.gov.pl/en/index.php?projekt_id=359039">UMO-2016/23/B/ST3/03575</ext-link>.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-oeisA000170">
    <element-citation>
      <article-title>A000170 ‚Äì number of ways of placing n nonattacking queens on an n \times n board</article-title>
      <uri>https://oeis.org/A000170</uri>
    </element-citation>
  </ref>
  <ref id="ref-Alexandrescu2001">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Alexandrescu</surname><given-names>Andrei</given-names></name>
      </person-group>
      <source>Modern C++ design: Generic programming and design patterns applied</source>
      <publisher-name>Addison-Wesley</publisher-name>
      <year iso-8601-date="2001">2001</year>
    </element-citation>
  </ref>
  <ref id="ref-Barricelli1962">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Barricelli</surname><given-names>Nils Aall</given-names></name>
      </person-group>
      <article-title>Numerical testing of evolution theories</article-title>
      <source>Acta Biotheoretica</source>
      <year iso-8601-date="1962">1962</year>
      <volume>16</volume>
      <pub-id pub-id-type="doi">10.1007/BF01556771</pub-id>
      <fpage>69</fpage>
      <lpage>98</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Drachal2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Drachal</surname><given-names>Krzysztof</given-names></name>
        <name><surname>Paw≈Çowski</surname><given-names>Micha≈Ç</given-names></name>
      </person-group>
      <article-title>A review of the applications of genetic algorithms to forecasting prices of commodities</article-title>
      <source>Economies</source>
      <year iso-8601-date="2021">2021</year>
      <volume>9</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.3390/economies9010006</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Eshelman1993">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Eshelman</surname><given-names>Larry J.</given-names></name>
        <name><surname>Schaffer</surname><given-names>J. David</given-names></name>
      </person-group>
      <article-title>Real-coded genetic algorithms and interval-schemata</article-title>
      <source>Foundations of genetic algorithms</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="1993">1993</year>
      <volume>2</volume>
      <pub-id pub-id-type="doi">10.1016/B978-0-08-094832-4.50018-0</pub-id>
      <fpage>187</fpage>
      <lpage>202</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Gagne2006">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Gagn√©</surname><given-names>Christian</given-names></name>
        <name><surname>Parizeau</surname><given-names>Marc</given-names></name>
      </person-group>
      <article-title>Genericity in evolutionary computation software tools: Principles and case study</article-title>
      <source>International Journal on Artificial Intelligence Tools</source>
      <year iso-8601-date="2006">2006</year>
      <volume>15</volume>
      <issue>02</issue>
      <pub-id pub-id-type="doi">10.1142/S021821300600262X</pub-id>
      <fpage>173</fpage>
      <lpage>194</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Galloway2011">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Galloway</surname><given-names>Alexander R.</given-names></name>
      </person-group>
      <article-title>Creative evolution</article-title>
      <source>Cabinet. A quarterly of art and culture</source>
      <publisher-name>Immaterial Incorporated</publisher-name>
      <year iso-8601-date="2011">2011</year>
      <volume>42</volume>
      <fpage>45</fpage>
      <lpage>50</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Ghaheri2015">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ghaheri</surname><given-names>Ali</given-names></name>
        <name><surname>Shoar</surname><given-names>Saeed</given-names></name>
        <name><surname>Naderan</surname><given-names>Mohammad</given-names></name>
        <name><surname>Hoseini</surname><given-names>Sayed Shahabuddin</given-names></name>
      </person-group>
      <article-title>The applications of genetic algorithms in medicine</article-title>
      <source>Oman Medical Journal</source>
      <year iso-8601-date="2015">2015</year>
      <volume>30</volume>
      <issue>6</issue>
      <pub-id pub-id-type="doi">10.5001/omj.2015.82</pub-id>
      <fpage>406</fpage>
      <lpage>416</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Goudos2016">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Goudos</surname><given-names>Sotirios K.</given-names></name>
        <name><surname>Kalialakis</surname><given-names>Christos</given-names></name>
        <name><surname>Mittra</surname><given-names>Raj</given-names></name>
      </person-group>
      <article-title>Evolutionary algorithms applied to antennas and propagation: A review of state of the art</article-title>
      <source>International Journal of Antennas and Propagation</source>
      <year iso-8601-date="2016">2016</year>
      <volume>2016</volume>
      <pub-id pub-id-type="doi">10.1155/2016/1010459</pub-id>
      <fpage>1010459</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Holland1975">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Holland</surname><given-names>John H.</given-names></name>
      </person-group>
      <source>Adaptation in natural and artificial systems</source>
      <publisher-name>University of Michigan Press</publisher-name>
      <publisher-loc>Ann Arbor, MI, US</publisher-loc>
      <year iso-8601-date="1975">1975</year>
    </element-citation>
  </ref>
  <ref id="ref-Jakobovic">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Jakoboviƒá</surname><given-names>Domagoj</given-names></name>
      </person-group>
      <article-title>ECF ‚Äì Evolutionary Computation Framework</article-title>
      <uri>http://ecf.zemris.fer.hr/</uri>
    </element-citation>
  </ref>
  <ref id="ref-Katoch2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Katoch</surname><given-names>Sourabh</given-names></name>
        <name><surname>Chauhan</surname><given-names>Sumit Singh</given-names></name>
        <name><surname>Kumar</surname><given-names>Vijay</given-names></name>
      </person-group>
      <article-title>A review on genetic algorithm: Past, present, and future</article-title>
      <source>Multimedia Tools and Applications</source>
      <year iso-8601-date="2021">2021</year>
      <volume>80</volume>
      <pub-id pub-id-type="doi">10.1007/s11042-020-10139-6</pub-id>
      <fpage>8091</fpage>
      <lpage>8126</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Keijzer2002">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Keijzer</surname><given-names>Maarten</given-names></name>
        <name><surname>Merelo</surname><given-names>J. J.</given-names></name>
        <name><surname>Romero</surname><given-names>G.</given-names></name>
        <name><surname>Schoenauer</surname><given-names>Marc</given-names></name>
      </person-group>
      <article-title>Evolving Objects: A general purpose evolutionary computation library</article-title>
      <source>Artificial evolution ‚Äì 5th international conference</source>
      <publisher-name>Springer</publisher-name>
      <publisher-loc>Berlin, Heidelberg, Germany</publisher-loc>
      <year iso-8601-date="2002">2002</year>
      <pub-id pub-id-type="doi">10.1007/3-540-46033-0_19</pub-id>
      <fpage>231</fpage>
      <lpage>242</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Kudjo2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kudjo</surname><given-names>Patrick Kwaku</given-names></name>
        <name><surname>Ocquaye</surname><given-names>Elias Nii Noi</given-names></name>
        <name><surname>Ametepe</surname><given-names>Wolali</given-names></name>
      </person-group>
      <article-title>Review of genetic algorithm and application in software testing</article-title>
      <source>International Journal of Computer Applications</source>
      <year iso-8601-date="2017">2017</year>
      <volume>160</volume>
      <issue>2</issue>
      <pub-id pub-id-type="doi">10.5120/ijca2017912965</pub-id>
      <fpage>1</fpage>
      <lpage>6</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Lee2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lee</surname><given-names>C. K. H.</given-names></name>
      </person-group>
      <article-title>A review of applications of genetic algorithms in operations management</article-title>
      <source>Engineering Applications of Artificial Intelligence</source>
      <year iso-8601-date="2018">2018</year>
      <volume>76</volume>
      <pub-id pub-id-type="doi">10.1016/j.engappai.2018.08.011</pub-id>
      <fpage>1</fpage>
      <lpage>12</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Sutton2017">
    <element-citation publication-type="report">
      <person-group person-group-type="author">
        <name><surname>Sutton</surname><given-names>Andrew</given-names></name>
      </person-group>
      <article-title>Wording paper, C++ extensions for Concepts</article-title>
      <publisher-name>International Organization for Standardization</publisher-name>
      <publisher-loc>Geneva, Switzerland</publisher-loc>
      <year iso-8601-date="2017">2017</year>
    </element-citation>
  </ref>
  <ref id="ref-Tarkowski2022">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Tarkowski</surname><given-names>Tomasz</given-names></name>
        <name><surname>Gonzalez Szwacki</surname><given-names>Nevill</given-names></name>
      </person-group>
      <article-title>The structure of thin boron nanowires predicted using evolutionary computations</article-title>
      <publisher-name>arXiv</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <pub-id pub-id-type="doi">10.48550/ARXIV.2211.11901</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Tarkowski2022a">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Tarkowski</surname><given-names>Tomasz</given-names></name>
      </person-group>
      <article-title>Genetic algorithm formulation and tuning with use of test functions</article-title>
      <publisher-name>arXiv</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <pub-id pub-id-type="doi">10.48550/ARXIV.2210.03217</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Tarkowski2022b">
    <element-citation publication-type="thesis">
      <person-group person-group-type="author">
        <name><surname>Tarkowski</surname><given-names>Tomasz</given-names></name>
      </person-group>
      <article-title>Przewidywanie struktury krystalicznej nanodrut√≥w z¬†u≈ºyciem oblicze≈Ñ ewolucyjnych (Crystal structure prediction of nanowires using evolutionary computations)</article-title>
      <publisher-name>Faculty of Physics, University of Warsaw</publisher-name>
      <publisher-loc>Warszawa, Poland</publisher-loc>
      <year iso-8601-date="2022">2022</year>
      <uri>https://depotuw.ceon.pl/bitstream/handle/item/4452/0000-DR-95841-praca.pdf?sequence=1</uri>
    </element-citation>
  </ref>
  <ref id="ref-Tarkowski2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Tarkowski</surname><given-names>Tomasz</given-names></name>
        <name><surname>Gonzalez Szwacki</surname><given-names>Nevill</given-names></name>
      </person-group>
      <article-title>Boron nanotube structure explored by evolutionary computations</article-title>
      <source>Crystals</source>
      <year iso-8601-date="2023">2023</year>
      <volume>13</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.3390/cryst13010019</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Turing1948">
    <element-citation publication-type="report">
      <person-group person-group-type="author">
        <name><surname>Turing</surname><given-names>Alan M.</given-names></name>
      </person-group>
      <article-title>Intelligent machinery</article-title>
      <publisher-name>National Physical Laboratory</publisher-name>
      <publisher-loc>Teddington, England, Great Britain</publisher-loc>
      <year iso-8601-date="1948">1948</year>
    </element-citation>
  </ref>
  <ref id="ref-Turing1950">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Turing</surname><given-names>Alan M.</given-names></name>
      </person-group>
      <article-title>Computing machinery and intelligence</article-title>
      <source>Mind</source>
      <publisher-name>Oxford University Press, Mind Association</publisher-name>
      <year iso-8601-date="1950">1950</year>
      <volume>59</volume>
      <issue>236</issue>
      <fpage>433</fpage>
      <lpage>460</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Vandevoorde2002">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Vandevoorde</surname><given-names>David</given-names></name>
        <name><surname>Josuttis</surname><given-names>Nicolai M.</given-names></name>
      </person-group>
      <source>C++ templates: The complete guide</source>
      <publisher-name>Addison-Wesley</publisher-name>
      <year iso-8601-date="2002">2002</year>
    </element-citation>
  </ref>
  <ref id="ref-Wall">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Wall</surname><given-names>Matthew</given-names></name>
      </person-group>
      <article-title>GAlib ‚Äì a C++ library of genetic algorithm components</article-title>
      <uri>http://lancet.mit.edu/ga/</uri>
    </element-citation>
  </ref>
  <ref id="ref-Williams2019">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Williams</surname><given-names>Anthony</given-names></name>
      </person-group>
      <source>C++ concurrency in action</source>
      <publisher-name>Manning Publications</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <edition>Second edition</edition>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
