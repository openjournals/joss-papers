<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">4363</article-id>
<article-id pub-id-type="doi">10.21105/joss.04363</article-id>
<title-group>
<article-title><monospace>RedOak</monospace>: a reference-free and
alignment-free structure for indexing a collection of similar
genomes</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">0000-0002-7404-7253</contrib-id>
<name>
<surname>Agret</surname>
<given-names>Clément</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="aff" rid="aff-5"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-4760-8171</contrib-id>
<name>
<surname>Chateau</surname>
<given-names>Annie</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-1849-1269</contrib-id>
<name>
<surname>Droc</surname>
<given-names>Gaetan</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-5179-972X</contrib-id>
<name>
<surname>Sarah</surname>
<given-names>Gautier</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-8153-276X</contrib-id>
<name>
<surname>Ruiz</surname>
<given-names>Manuel</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-9249-7592</contrib-id>
<name>
<surname>Mancheron</surname>
<given-names>Alban</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>LIRMM, Univ Montpellier, CNRS, Montpellier,
France</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Cirad, UMR AGAP, Avenue Agropolis, Montpellier,
France</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>INRA, UMR AGAP, 2 Place Pierre Viala, Montpellier,
France</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>Institut de Biologie Computationnelle, Montpellier,
France</institution>
</institution-wrap>
</aff>
<aff id="aff-5">
<institution-wrap>
<institution>CRIStAL, Centre de Recherche en Informatique Signal et
Automatique de Lille, Lille, France</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2022-02-14">
<day>14</day>
<month>2</month>
<year>2022</year>
</pub-date>
<volume>7</volume>
<issue>80</issue>
<fpage>4363</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>C/C++</kwd>
<kwd>Bioinformatic</kwd>
<kwd>k-mers</kwd>
<kwd>Genomes</kwd>
<kwd>Index</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Here we present <monospace>RedOak</monospace>, a reference-free and
  alignment-free software package that allows for the indexing of a
  large collection of similar genomes. <monospace>RedOak</monospace> can
  also be applied to reads from unassembled genomes, and it provides a
  nucleotide sequence query function. Our method is about the analysis
  of complete genomes from the 3000 rice genomes sequencing project, but
  our indexing structure is generic enough to be used in similar
  projects. This software is based on a <italic>k</italic>-mer approach
  and has been developed to be heavily parallelized and distributed on
  several nodes of a cluster. The source code of our
  <monospace>RedOak</monospace> algorithm is available at
  <ext-link ext-link-type="uri" xlink:href="https://gite.lirmm.fr/doccy/RedOak">RedOak</ext-link>.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p><monospace>RedOak</monospace> may be really useful for biologists
  and bioinformaticians expecting to extract information from large
  sequence datasets.</p>
  <p>The indexation of complete genomes is an important stage in the
  exploration and understanding of data from living organisms. Complete
  genomes, or at least a set of sequences representing whole genomes,
  <italic>i.e.</italic>, draft genomes, are becoming increasingly easy
  to obtain through the intensive use of high-throughput sequencing. A
  new genomic era is coming, therein not only being focused on the
  analyses of specific genes and sequences regulating them but moving
  toward studies using from ten to several thousands of complete genomes
  per species. Such a collection is usually called a pan-genome
  [Computational Pan-Genomics
  (<xref alt="2016" rid="ref-RN1792" ref-type="bibr">2016</xref>)](<xref alt="Golicz et al., 2016" rid="ref-RN1932" ref-type="bibr">Golicz
  et al., 2016</xref>). Within pan-genomes, large portions of genomes
  are shared between individuals. This feature could be exploited to
  reduce the storage cost of the genomes.</p>
  <p>Based on this idea, this paper introduces an efficient data
  structure to index a collection of similar genomes in a reference- and
  alignment-free manner. A reference-free and alignment-free approach
  avoids the loss of information about genetic variation not found in
  the direct mapping of short sequence reads onto a reference genome
  (<xref alt="Computational Pan-Genomics, 2016" rid="ref-RN1792" ref-type="bibr">Computational
  Pan-Genomics, 2016</xref>). Furthermore, the method presented in this
  paper can be applied to next-generation sequencing (NGS) reads of
  unassembled genomes. The method enables the easy and fast exploration
  of the presence-absence variation (PAV) of genes among individuals
  without needing the time-consuming step of <italic>de novo</italic>
  genome assembly nor the step of mapping to a reference sequence.</p>
</sec>
<sec id="complexity">
  <title>Complexity</title>
  <p>In this part, we present the time and space complexity of the
  algorithm, using the notations below: Total number of distinct
  <italic>k</italic>-mers: <inline-formula><alternatives>
  <tex-math><![CDATA[N = K]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  Total number of core <italic>k</italic>-mers:
  <inline-formula><alternatives>
  <tex-math><![CDATA[N^*= K^*]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msup><mml:mi>N</mml:mi><mml:mo>*</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mi>K</mml:mi><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>
  Total number of shell <italic>k</italic>-mers:
  <inline-formula><alternatives>
  <tex-math><![CDATA[N^+= K^+]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msup><mml:mi>N</mml:mi><mml:mo>+</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mi>K</mml:mi><mml:mo>+</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>
  Total number of cloud <italic>k</italic>-mers:
  <inline-formula><alternatives>
  <tex-math><![CDATA[N^-= K^-]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msup><mml:mi>N</mml:mi><mml:mo>−</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mi>K</mml:mi><mml:mo>−</mml:mo></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>
  Number of instances running in parallel:
  <inline-formula><alternatives>
  <tex-math><![CDATA[np]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>n</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  Size in bits of a memory word: <inline-formula><alternatives>
  <tex-math><![CDATA[u]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>u</mml:mi></mml:math></alternatives></inline-formula></p>
  <p>Theorem1. The space needed for indexing
  <inline-formula><alternatives>
  <tex-math><![CDATA[n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>
  genomes is equal to <inline-formula><alternatives>
  <tex-math><![CDATA[2k_2N + N^+(n+u) + O(4^{k_1}n)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mn>2</mml:mn><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mi>N</mml:mi><mml:mo>+</mml:mo><mml:msup><mml:mi>N</mml:mi><mml:mo>+</mml:mo></mml:msup><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>O</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msup><mml:mn>4</mml:mn><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msup><mml:mi>n</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  bits.</p>
  <p>If <inline-formula><alternatives>
  <tex-math><![CDATA[k_1]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
  is defined as <inline-formula><alternatives>
  <tex-math><![CDATA[k_1 = \frac{\log(N) - \log(\log(N)) + O(1)}{2}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mo>log</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>N</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mo>log</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mo>log</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>N</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>O</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:math></alternatives></inline-formula>,then
  the memory space required by <monospace>RedOak</monospace> to index
  the <italic>k</italic>-mers of <inline-formula><alternatives>
  <tex-math><![CDATA[n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>
  genomes is increased by <inline-formula><alternatives>
  <tex-math><![CDATA[N(2,k_2 + n) + o(n,N)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>N</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>o</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  bits.</p>
  <p>Theorem 2. The time needed to index the
  <inline-formula><alternatives>
  <tex-math><![CDATA[N]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>N</mml:mi></mml:math></alternatives></inline-formula>
  distinct <italic>k</italic>-mers of <inline-formula><alternatives>
  <tex-math><![CDATA[n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>
  genomes is <inline-formula><alternatives>
  <tex-math><![CDATA[O(nNk)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>O</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>n</mml:mi><mml:mi>N</mml:mi><mml:mi>k</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>.</p>
  <p>Theorem 3 Assuming that the number of genomes per indexed
  <italic>k</italic>-mer follows a Poisson distribution of parameter
  <inline-formula><alternatives>
  <tex-math><![CDATA[\lambda]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>λ</mml:mi></mml:math></alternatives></inline-formula>
  (where <inline-formula><alternatives>
  <tex-math><![CDATA[\lambda]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>λ</mml:mi></mml:math></alternatives></inline-formula>
  is the average number of genome sharing a <italic>k</italic>-mer), the
  size of <inline-formula><alternatives>
  <tex-math><![CDATA[N]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>N</mml:mi></mml:math></alternatives></inline-formula>
  is <inline-formula><alternatives>
  <tex-math><![CDATA[O(\frac{nm}{\lambda})]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>O</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mfrac><mml:mrow><mml:mi>n</mml:mi><mml:mi>m</mml:mi></mml:mrow><mml:mi>λ</mml:mi></mml:mfrac><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>.</p>
  <p>Proof Since the run time clearly depends on the number of indexed
  <italic>k</italic>-mers, let us use a simple model to approximate the
  time complexity. Suppose that each genome has
  <inline-formula><alternatives>
  <tex-math><![CDATA[m]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>m</mml:mi></mml:math></alternatives></inline-formula>
  distinct <italic>k</italic>-mers and that each <italic>k</italic>-mer
  has a fixed probability <inline-formula><alternatives>
  <tex-math><![CDATA[p_i]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  to be shared exactly by <inline-formula><alternatives>
  <tex-math><![CDATA[i]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>i</mml:mi></mml:math></alternatives></inline-formula>
  genomes out of <inline-formula><alternatives>
  <tex-math><![CDATA[n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>.
  The total number of indexed <italic>k</italic>-mers is then
  <disp-formula><alternatives>
  <tex-math><![CDATA[
  N=n \sum_{i=1}^n \frac{p_i m}{i} = nm \sum_{i=1}^n \frac{p_i}{i}
  ]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mi>n</mml:mi><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mfrac><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>m</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:mfrac><mml:mo>=</mml:mo><mml:mi>n</mml:mi><mml:mi>m</mml:mi><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mfrac><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>i</mml:mi></mml:mfrac></mml:mrow></mml:math></alternatives></disp-formula>.</p>
</sec>
<sec id="implementation">
  <title>Implementation</title>
  <p><monospace>RedOak</monospace> is implemented in C++ and its
  construction relies on parallelized data processing. A preliminary
  step, before indexing genomes, is performing an analysis of the
  composition in <italic>k</italic>-mers of the different genomes.
  During this step, <italic>k</italic>-mer counting tools could be
  involved and their performance is crucial in the whole
  process(<xref alt="Manekar &amp; Sathe, 2018" rid="ref-BenchKmer" ref-type="bibr">Manekar
  &amp; Sathe, 2018</xref>). We looked for a library allowing us to
  handle a large collection of genomes or reads, zipped or not, working
  in RAM memory, and providing a sorted output. Indeed,
  <monospace>RedOak</monospace> uses libGkArrays-MPI from private
  communication, Mancheron et al. which is based on the Gk Arrays
  library
  (<xref alt="Nicolas Philippe et al., 2011" rid="ref-libGkArrays" ref-type="bibr">Nicolas
  Philippe et al., 2011</xref>). The Gk array library and
  libGkArrays-MPI are available under CeCILL license (GPL compliant).
  The libGkArrays-MPI library is highly parallelized with both Open~MPI
  and OpenMP.</p>
  <p>To manipulate <italic>k</italic>-mers, the closest method is
  <monospace>Jellyfish</monospace>
  (<xref alt="Marcais &amp; Kingsford, 2011" rid="ref-JellyFish" ref-type="bibr">Marcais
  &amp; Kingsford, 2011</xref>). This approach is not based on disk but
  uses memory and allows the addition of genomes to an existing index.
  However, we did not use it because in the output,
  <italic>k</italic>-mers are in “fairly pseudo-random” order and “no
  guarantee is made about the actual randomness of this order” (see the
  <monospace>Jellyfish</monospace> documentation).</p>
  <p>Value of <inline-formula><alternatives>
  <tex-math><![CDATA[k]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>k</mml:mi></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[k_1]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></alternatives></inline-formula>,
  in most of the <italic>k</italic>-mer based studies, the
  <italic>k</italic>-mer size varies between 25 (with reference genome)
  and 40 (without reference genome). The value of this parameter can be
  statistically estimated as stated in
  (<xref alt="N. Philippe et al., 2009" rid="ref-KmerSize" ref-type="bibr">N.
  Philippe et al., 2009</xref>).</p>
  <p>The <inline-formula><alternatives>
  <tex-math><![CDATA[k_1]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
  prefix length in our experiments has been defined on the basis of
  analytic considerations presented in
  (<xref alt="Park et al., 2009" rid="ref-gpark" ref-type="bibr">Park et
  al., 2009</xref>) but can be arbitrarily fixed to some value between
  <inline-formula><alternatives>
  <tex-math><![CDATA[10]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>10</mml:mn></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[16]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>16</mml:mn></mml:math></alternatives></inline-formula>,
  which respectively leads to an initial memory allocation from
  <inline-formula><alternatives>
  <tex-math><![CDATA[8]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>8</mml:mn></mml:math></alternatives></inline-formula>MiB
  to <inline-formula><alternatives>
  <tex-math><![CDATA[32]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>32</mml:mn></mml:math></alternatives></inline-formula>GiB,
  equally split across the running instances of
  <monospace>RedOak</monospace>. Setting a higher value is not
  necessary; otherwise, it may allocate unused memory.</p>
  <p>To efficiently store and query the <italic>k</italic>-mers, each
  <italic>k</italic>-mer is split into two parts: its prefix of size
  <inline-formula><alternatives>
  <tex-math><![CDATA[k_1]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
  and its suffix of size <inline-formula><alternatives>
  <tex-math><![CDATA[k_2]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula>,
  with <inline-formula><alternatives>
  <tex-math><![CDATA[k_1+k_2 = k]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>.
  Actually, the <italic>k</italic>-mers are clustered by their common
  prefix, and for each cluster, only the suffixes are stored. The choice
  of the value of <inline-formula><alternatives>
  <tex-math><![CDATA[k_1]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
  minimizing memory consumption is guided by both analytic
  considerations
  (<xref alt="Park et al., 2009" rid="ref-gpark" ref-type="bibr">Park et
  al., 2009</xref>) and empirical estimation. Each
  <italic>k</italic>-mer can be associated a bit vector of size
  <inline-formula><alternatives>
  <tex-math><![CDATA[n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>
  to denote the presence (<inline-formula><alternatives>
  <tex-math><![CDATA[1]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>1</mml:mn></mml:math></alternatives></inline-formula>)
  or absence (<inline-formula><alternatives>
  <tex-math><![CDATA[0]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>0</mml:mn></mml:math></alternatives></inline-formula>)
  in each genome.
  <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/10.1101/2020.12.19.423583v2">Structure1</ext-link>.
  Representation of the data structure used to index the
  <italic>k</italic>-mers from <inline-formula><alternatives>
  <tex-math><![CDATA[n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>
  genomes. The (A) The green array represent core
  <italic>k</italic>-mers, (B) Blue cells the shell
  <italic>k</italic>-mers, and (C) in orange the cloud
  <italic>k</italic>-mers
  <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/10.1101/2020.12.19.423583v2">Structure2</ext-link>.</p>
  <p>The concrete representation of the data structure used to store the
  <italic>k</italic>-mers having the same prefix is shown in (Structure
  2). The <italic>k</italic>-mers absent from all genomes are obviously
  deduced from present <italic>k</italic>-mers and thus are not
  physically represented (and they all share the same
  <inline-formula><alternatives>
  <tex-math><![CDATA[0]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>0</mml:mn></mml:math></alternatives></inline-formula>-filled
  bit vector). The <italic>k</italic>-mers present in all genomes (core
  <italic>k</italic>-mers) are simply represented by a sorted vector
  where each suffix is encoded by its lexicographic rank (array
  <inline-formula><alternatives>
  <tex-math><![CDATA[(A)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>A</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>).
  These <italic>k</italic>-mers share the same
  <inline-formula><alternatives>
  <tex-math><![CDATA[1]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>1</mml:mn></mml:math></alternatives></inline-formula>-filled
  bit vector. The other <italic>k</italic>-mers (shell
  <italic>k</italic>-mers) are represented by an unsorted vector where
  each suffix is encoded by its lexicographic rank (array
  <inline-formula><alternatives>
  <tex-math><![CDATA[(C)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>).
  To each suffix is associated its presence/absence bit vector (array
  <inline-formula><alternatives>
  <tex-math><![CDATA[(3)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>).
  The order relationship between the suffixes is stored in a separate
  vector (array <inline-formula><alternatives>
  <tex-math><![CDATA[(B)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>B</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>).</p>
  <p>In the <monospace>RedOak</monospace> implementation, both the core
  and shell <italic>k</italic>-mer suffixes are stored using
  <inline-formula><alternatives>
  <tex-math><![CDATA[\frac{\lceil 2\,k_2\rceil}{8}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mfrac><mml:mrow><mml:mo stretchy="false" form="prefix">⌈</mml:mo><mml:mn>2</mml:mn><mml:mspace width="0.167em"></mml:mspace><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false" form="postfix">⌉</mml:mo></mml:mrow><mml:mn>8</mml:mn></mml:mfrac></mml:math></alternatives></inline-formula>
  bytes each. The remaining unused bits are set to
  <inline-formula><alternatives>
  <tex-math><![CDATA[0]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>0</mml:mn></mml:math></alternatives></inline-formula>.
  This choice greatly improves the comparison time between
  <italic>k</italic>-mers suffixes. Moreover, because the
  presence/absence bit vectors are all of size
  <inline-formula><alternatives>
  <tex-math><![CDATA[n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>
  (the number of genomes), <monospace>RedOak</monospace> provides its
  own implementation for that structure, which removes the need to store
  the size of each vector. This implementation also emulates the
  <inline-formula><alternatives>
  <tex-math><![CDATA[0]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>0</mml:mn></mml:math></alternatives></inline-formula>-filled
  and <inline-formula><alternatives>
  <tex-math><![CDATA[1]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>1</mml:mn></mml:math></alternatives></inline-formula>-filled
  bit vector (arrays <inline-formula><alternatives>
  <tex-math><![CDATA[(4)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mn>4</mml:mn><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[(5)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mn>5</mml:mn><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>
  of the Structure 1).</p>
  <p>The choice of this data structure was guided by the desire to allow
  genome addition without having to rebuild the whole structure from
  scratch. Indeed, indexing a new genome can be represented by some
  basic operations on sets. First, it is obvious that the only case
  where the set of core <italic>k</italic>-mers expands is when the
  first genome is added. The other updates of the core
  <italic>k</italic>-mers occur and only lead to the removal of some
  <italic>k</italic>-mers from this set.</p>
</sec>
<sec id="example">
  <title>Example</title>
  <p>Analysis of presence–absence variation (PAV) of genes among
  different genomes is a classical output of pan-genomic approaches.
  <monospace>RedOak</monospace> has a nucleotide sequence query function
  (including reverse complements) that can be used to quickly analyze
  the PAV of a specific gene among a large collection of genomes.
  Indeed, we can query, using all <italic>k</italic>-mers contained in a
  given gene sequence, the index of genomes. For each genome, if the
  <italic>k</italic>-mer is present in any direction we increment the
  score by 1. If the <italic>k</italic>-mer is absent but the preceding
  <italic>k</italic>-mer (overlapping on the first k − 1 nucleotides) is
  present, we note that there is an overlap, but
  <monospace>RedOak</monospace> does not increase the score. If the
  score divided by the size of the query sequence is greater than some
  given threshold, then we admit that the query is present in the
  genome. As an example, we indexed the 67 rice genomes with
  <monospace>RedOak</monospace> using k = 30, and we accessed the PAV of
  all the genes from Nipponbare and one gene from A.
  <italic>Thaliana</italic> using a threshold of 0.9. The gene Pstol,
  which controls phosphorus-deficiency tolerance. For a specific genome
  (GP104), we were able to detect the gene presence of the gene
  Pstol.</p>
  <p>We need to keep in mind that this score under-estimates the
  percentage of identity. Indeed, let us suppose that the query sequence
  (of length <inline-formula><alternatives>
  <tex-math><![CDATA[\ell]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mo>ℓ</mml:mo></mml:math></alternatives></inline-formula>)
  can be aligned with some indexed genome with only one mismatch, then
  all the <italic>k</italic>-mers (of the query) overlapping this
  mismatch may not be indexed for this genome. This implies that only
  one mismatch can reduce the final score by
  <inline-formula><alternatives>
  <tex-math><![CDATA[\frac{\ell-k}{\ell}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mfrac><mml:mrow><mml:mo>ℓ</mml:mo><mml:mo>−</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mo>ℓ</mml:mo></mml:mfrac></mml:math></alternatives></inline-formula>,
  whereas the percentage of identity is <inline-formula><alternatives>
  <tex-math><![CDATA[\frac{\ell−1}{\ell}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mfrac><mml:mrow><mml:mo>ℓ</mml:mo><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>ℓ</mml:mo></mml:mfrac></mml:math></alternatives></inline-formula>.
  In this experiment, a query having a score ≥ 0.9 can potentially be
  aligned with a percentage of identity greater than 97%.</p>
</sec>
<sec id="results">
  <title>Results</title>
  <fig>
    <caption><p>Performance comparison between
    <monospace>RedOak</monospace>, <monospace>Jellyfish</monospace> and
    <monospace>BFT</monospace> for the index build
    step.<styled-content id="figU003ABenchTime"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/img/benchTimeJellyRed.pdf" xlink:title="" />
  </fig>
  <p>The size of the data set was successively set to 10, 20, 30, 40,
  50, 60 and 67 genomes out of the original data set (x-axis). A dot
  represents the wall-clock run time (y-axis) or the RAM usage (y2-axis)
  required to build the index. The colors represent the software used:
  <monospace>RedOak</monospace>, <monospace>Jellyfish</monospace> or
  <monospace>BFT</monospace>. For <monospace>BFT</monospace>, we divided
  the construction time by 100 to fit our figure
  <xref alt="Figure 1" rid="figU003ABenchTime">Figure 1</xref>.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-RN1792">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Computational Pan-Genomics</surname><given-names>Consortium</given-names></name>
      </person-group>
      <article-title>Computational pan-genomics: Status, promises and challenges</article-title>
      <source>Brief Bioinform</source>
      <year iso-8601-date="2016">2016</year>
      <issn>1477-4054</issn>
      <uri>https://www.ncbi.nlm.nih.gov/pubmed/27769991
      http://bib.oxfordjournals.org/content/early/2016/10/19/bib.bbw089.full.pdf</uri>
      <pub-id pub-id-type="doi">10.1093/bib/bbw089</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-RN1932">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Golicz</surname><given-names>A. A.</given-names></name>
        <name><surname>Batley</surname><given-names>J.</given-names></name>
        <name><surname>Edwards</surname><given-names>D.</given-names></name>
      </person-group>
      <article-title>Towards plant pangenomics</article-title>
      <source>Plant Biotechnol J</source>
      <year iso-8601-date="2016">2016</year>
      <volume>14</volume>
      <issue>4</issue>
      <issn>1467-7652</issn>
      <uri>https://www.ncbi.nlm.nih.gov/pubmed/26593040
      http://onlinelibrary.wiley.com/store/10.1111/pbi.12499/asset/pbi12499.pdf?v=1&amp;t=j876va8y&amp;s=184d8742c0456960d35e1c4ce9a6098232dc389c</uri>
      <pub-id pub-id-type="doi">10.1111/pbi.12499</pub-id>
      <fpage>1099</fpage>
      <lpage>105</lpage>
    </element-citation>
  </ref>
  <ref id="ref-BenchKmer">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Manekar</surname><given-names>S. C.</given-names></name>
        <name><surname>Sathe</surname><given-names>S. R.</given-names></name>
      </person-group>
      <article-title>A benchmark study of k-mer counting methods for high-throughput sequencing</article-title>
      <source>Gigascience</source>
      <year iso-8601-date="2018">2018</year>
      <volume>7</volume>
      <issue>12</issue>
      <issn>2047-217X</issn>
      <uri>https://www.ncbi.nlm.nih.gov/pubmed/30346548
      https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6280066/pdf/giy125.pdf</uri>
      <pub-id pub-id-type="doi">10.1093/gigascience/giy125</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-KmerSize">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Philippe</surname><given-names>N.</given-names></name>
        <name><surname>Boureux</surname><given-names>A.</given-names></name>
        <name><surname>Brehelin</surname><given-names>Laurent</given-names></name>
        <name><surname>Tarhio</surname><given-names>J.</given-names></name>
        <name><surname>Commes</surname><given-names>T.</given-names></name>
        <name><surname>Rivals</surname><given-names>Eric</given-names></name>
      </person-group>
      <article-title>Using reads to annotate the genome: influence of length, background distribution, and sequence errors on prediction capacity</article-title>
      <source>Nucleic Acids Research</source>
      <publisher-name>Oxford University Press</publisher-name>
      <year iso-8601-date="2009">2009</year>
      <volume>37</volume>
      <issue>15</issue>
      <uri>https://hal.archives-ouvertes.fr/hal-00452377</uri>
      <pub-id pub-id-type="doi">10.1093/nar/gkp492</pub-id>
      <fpage>e104</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-libGkArrays">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Philippe</surname><given-names>Nicolas</given-names></name>
        <name><surname>Salson</surname><given-names>Mikaël</given-names></name>
        <name><surname>Lecroq</surname><given-names>Thierry</given-names></name>
        <name><surname>Léonard</surname><given-names>Martine</given-names></name>
        <name><surname>Commes</surname><given-names>Thérèse</given-names></name>
        <name><surname>Rivals</surname><given-names>Eric</given-names></name>
      </person-group>
      <article-title>Querying large read collections in main memory: a versatile data structure</article-title>
      <source>BMC Bioinformatics</source>
      <publisher-name>BioMed Central</publisher-name>
      <year iso-8601-date="2011-06">2011</year><month>06</month>
      <volume>12</volume>
      <issue>1</issue>
      <issn>1471-2105</issn>
      <uri>http://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-242</uri>
      <pub-id pub-id-type="doi">10.1186/1471-2105-12-242</pub-id>
      <fpage>242</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-JellyFish">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Marcais</surname><given-names>G.</given-names></name>
        <name><surname>Kingsford</surname><given-names>C.</given-names></name>
      </person-group>
      <article-title>A fast, lock-free approach for efficient parallel counting of occurrences of k-mers</article-title>
      <source>Bioinformatics</source>
      <year iso-8601-date="2011-03">2011</year><month>03</month>
      <volume>27</volume>
      <issue>6</issue>
      <issn>1367-4803</issn>
      <uri>https://academic.oup.com/bioinformatics/article-lookup/doi/10.1093/bioinformatics/btr011</uri>
      <pub-id pub-id-type="doi">10.1093/bioinformatics/btr011</pub-id>
      <fpage>764</fpage>
      <lpage>770</lpage>
    </element-citation>
  </ref>
  <ref id="ref-gpark">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Park</surname><given-names>Gahyun</given-names></name>
        <name><surname>Hwang</surname><given-names>Hsien-Kuei</given-names></name>
        <name><surname>Nicodème</surname><given-names>Pierre</given-names></name>
        <name><surname>Szpankowski</surname><given-names>Wojciech</given-names></name>
      </person-group>
      <article-title>Profiles of Tries</article-title>
      <source>Journal on Computing</source>
      <year iso-8601-date="2009-01">2009</year><month>01</month>
      <volume>38</volume>
      <issue>5</issue>
      <issn>0097-5397</issn>
      <uri>http://epubs.siam.org.gate6.inist.fr/doi/abs/10.1137/070685531</uri>
      <pub-id pub-id-type="doi">10.1137/070685531</pub-id>
      <fpage>1821</fpage>
      <lpage>1880</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
