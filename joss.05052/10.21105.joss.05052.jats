<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">5052</article-id>
<article-id pub-id-type="doi">10.21105/joss.05052</article-id>
<title-group>
<article-title>Scarlet: Scalable Anytime Algorithms for Learning
Fragments of Linear Temporal Logic</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" equal-contrib="yes" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-1467-1182</contrib-id>
<name>
<surname>Raha</surname>
<given-names>Ritam</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author" equal-contrib="yes" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-0202-1169</contrib-id>
<name>
<surname>Roy</surname>
<given-names>Rajarshi</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
<xref ref-type="corresp" rid="cor-2"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-6576-4680</contrib-id>
<name>
<surname>Fijalkow</surname>
<given-names>Nathanaël</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-9276-6342</contrib-id>
<name>
<surname>Neider</surname>
<given-names>Daniel</given-names>
</name>
<xref ref-type="aff" rid="aff-4"/>
<xref ref-type="aff" rid="aff-5"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>University of Antwerp, Antwerp, Belgium</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>CNRS, LaBRI and Université de Bordeaux,
France</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Max Planck Institute for Software Systems, Kaiserslautern,
Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>TU Dortmund University, Dortmund, Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-5">
<institution-wrap>
<institution>Center for Trustworthy Data Science and Security,
University Alliance Ruhr, Germany</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
<corresp id="cor-2">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2022-07-26">
<day>26</day>
<month>7</month>
<year>2022</year>
</pub-date>
<volume>9</volume>
<issue>93</issue>
<fpage>5052</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>linear temporal logic (LTL)</kwd>
<kwd>Explainable AI (XAI)</kwd>
<kwd>specification mining</kwd>
<kwd>Formal Methods</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>In the past decade, incorporating data-driven AI techniques in
  system design has become mainstream in almost all branches of science
  and technology. Typically, systems powered by AI tend to be rather
  complex, far beyond human understanding. Naturally, one cannot always
  develop trust in such complex, so-called black-box systems,
  restricting their widespread use in safety-critical domains.</p>
  <p>To generate trust in systems, a standard approach in Explainable AI
  is to build simple explanations using human-understandable models. A
  number of recent works
  (<xref alt="Neider &amp; Gavran, 2018" rid="ref-NeiderGavran18" ref-type="bibr">Neider
  &amp; Gavran, 2018</xref>)
  (<xref alt="Camacho &amp; McIlraith, 2019" rid="ref-Camacho_McIlraith_2019" ref-type="bibr">Camacho
  &amp; McIlraith, 2019</xref>)
  (<xref alt="Roy et al., 2020" rid="ref-RoyFismanNeider20" ref-type="bibr">Roy
  et al., 2020</xref>) have identified models in temporal logic to be
  both formal and explainable. Among temporal logics—Linear Temporal
  Logic (LTL)—arguably the most widely used temporal logic, has received
  particular focus due to its resemblance to natural language. Moreover,
  LTL is a de-facto standard in several fields of computer science,
  including model-checking, program analysis, and motion planning for
  robotics.</p>
  <p><monospace>Scarlet</monospace> is one of the most competitive tools
  for learning explainable models in LTL
  (<xref alt="Raha et al., 2022" rid="ref-RahaRFN22" ref-type="bibr">Raha
  et al., 2022</xref>). To learn such models, it relies on positive (or
  desirable) and negative (or undesirable) executions of the system
  under consideration. Based on the executions, it learns a concise
  model in LTL that is consistent with the given executions.</p>
  <p>Let us consider a concrete example to understand
  <monospace>Scarlet</monospace>’s functioning. Consider a robot that
  has been designed to collect wastebin contents in an office-like
  environment. For the sake of the example, in this environment, let
  there be an office <inline-formula><alternatives>
  <tex-math><![CDATA[o]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>o</mml:mi></mml:math></alternatives></inline-formula>
  with a wastebin, a hallway <inline-formula><alternatives>
  <tex-math><![CDATA[h]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>h</mml:mi></mml:math></alternatives></inline-formula>,
  and a container <inline-formula><alternatives>
  <tex-math><![CDATA[c]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>c</mml:mi></mml:math></alternatives></inline-formula>
  to accumulate the waste. The following could be the possible
  executions of the robot:</p>
  <p><inline-formula><alternatives>
  <tex-math><![CDATA[h,h,h,h,o,h,c,h]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>h</mml:mi><mml:mo>,</mml:mo><mml:mi>h</mml:mi><mml:mo>,</mml:mo><mml:mi>h</mml:mi><mml:mo>,</mml:mo><mml:mi>h</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mo>,</mml:mo><mml:mi>h</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>h</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  <inline-formula><alternatives>
  <tex-math><![CDATA[h,h,h,h,h,c,h,o,h,h]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>h</mml:mi><mml:mo>,</mml:mo><mml:mi>h</mml:mi><mml:mo>,</mml:mo><mml:mi>h</mml:mi><mml:mo>,</mml:mo><mml:mi>h</mml:mi><mml:mo>,</mml:mo><mml:mi>h</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>h</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mo>,</mml:mo><mml:mi>h</mml:mi><mml:mo>,</mml:mo><mml:mi>h</mml:mi></mml:mrow></mml:math></alternatives></inline-formula></p>
  <p>Let the first execution be positive since the robot first collects
  waste from the office and then accumulates in the container. Further,
  let the second execution be negative since the robot tries to
  accumulate the waste in the container even before it collects from the
  office. From these executions, <monospace>Scarlet</monospace> learns a
  model <monospace>F(o and FX c)</monospace>, where the
  <monospace>F</monospace>-operator stands for “finally” and
  <monospace>X</monospace>-operator stands for “next”. This model, in
  simple words, expresses that: eventually, the robot should visit the
  office <inline-formula><alternatives>
  <tex-math><![CDATA[o]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>o</mml:mi></mml:math></alternatives></inline-formula>
  and then, at a later point, should visit the container
  <inline-formula><alternatives>
  <tex-math><![CDATA[c]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>c</mml:mi></mml:math></alternatives></inline-formula>.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The fundamental problem solved by <monospace>Scarlet</monospace> is
  to build an explainable model in the form of an LTL formula from
  system executions, formally termed as traces.</p>
  <p><monospace>Scarlet</monospace> is a tool built entirely in Python
  3. It can be run using its command-line features or its Python API
  hosted in PyPi. Its main capabilities include:</p>
  <list list-type="bullet">
    <list-item>
      <p>construction of an LTL formula from execution traces,</p>
    </list-item>
    <list-item>
      <p>generation of execution traces from an LTL formula for testing
      LTL learning algorithms (using automata-based techniques, such as
      LTLf2DFA and MONA, and random sampling).</p>
    </list-item>
  </list>
  <p><monospace>Scarlet</monospace> additionally supports noisy data:
  the user can specify a noise threshold (between zero and one, zero for
  perfect classification) and the algorithm returns an almost separating
  formula with respect to that threshold.</p>
</sec>
<sec id="key-insights">
  <title>Key insights</title>
  <p>A paper presenting the algorithms behind
  <monospace>Scarlet</monospace> was published in TACAS’2022: Tools and
  Algorithms for the Construction and Analysis of Systems
  (<xref alt="Raha et al., 2022" rid="ref-RahaRFN22" ref-type="bibr">Raha
  et al., 2022</xref>).</p>
  <p>We believe that the path to scalability for learning models in LTL
  is to leverage normal forms for LTL formulas and derive efficient
  enumeration algorithms from them. <monospace>Scarlet</monospace>
  combines two insights:</p>
  <list list-type="bullet">
    <list-item>
      <p>An efficient enumeration algorithm for directed LTL formulas,
      which are formulas that can be evaluated only moving forward in
      traces,</p>
    </list-item>
    <list-item>
      <p>An algorithm solving the Boolean set cover problem, which
      constructs Boolean combinations of already constructed formulas in
      order to separate positive and negative traces.</p>
    </list-item>
  </list>
  <p>For experimental results, refer to the full paper
  (<xref alt="Raha et al., 2022" rid="ref-RahaRFN22" ref-type="bibr">Raha
  et al., 2022</xref>).</p>
</sec>
<sec id="related-works">
  <title>Related works</title>
  <p>For learning models in LTL, several approaches have been proposed,
  leveraging SAT solvers
  (<xref alt="Neider &amp; Gavran, 2018" rid="ref-NeiderGavran18" ref-type="bibr">Neider
  &amp; Gavran, 2018</xref>), automata
  (<xref alt="Camacho &amp; McIlraith, 2019" rid="ref-Camacho_McIlraith_2019" ref-type="bibr">Camacho
  &amp; McIlraith, 2019</xref>), and Bayesian inference
  (<xref alt="Kim et al., 2019" rid="ref-ijcai2019-0776" ref-type="bibr">Kim
  et al., 2019</xref>). In fact, there are approaches for many temporal
  logics such as Property Specification Language (PSL)
  (<xref alt="Roy et al., 2020" rid="ref-RoyFismanNeider20" ref-type="bibr">Roy
  et al., 2020</xref>), Computational Tree Logic (CTL)
  (<xref alt="Ehlers et al., 2020" rid="ref-EhlersGavranNeider20" ref-type="bibr">Ehlers
  et al., 2020</xref>)
  (<xref alt="Roy &amp; Neider, 2023" rid="ref-abs-2310-13778" ref-type="bibr">Roy
  &amp; Neider, 2023</xref>), Metric Temporal Logic (MTL)
  (<xref alt="Raha et al., 2023" rid="ref-abs-2310-17410" ref-type="bibr">Raha
  et al., 2023</xref>), etc.</p>
  <p>Applications of LTL learning include program specification
  (<xref alt="Lemieux et al., 2015" rid="ref-LPB15" ref-type="bibr">Lemieux
  et al., 2015</xref>), anomaly and fault detection
  (<xref alt="Bombara et al., 2016" rid="ref-BoVaPeBe-HSCC-2016" ref-type="bibr">Bombara
  et al., 2016</xref>), robotics
  (<xref alt="Chou et al., 2020" rid="ref-ChouOB20" ref-type="bibr">Chou
  et al., 2020</xref>), and many more: we refer to
  (<xref alt="Camacho &amp; McIlraith, 2019" rid="ref-Camacho_McIlraith_2019" ref-type="bibr">Camacho
  &amp; McIlraith, 2019</xref>) for a list of practical applications. An
  equivalent point of view on LTL learning is as a specification mining
  question. The ARSENAL
  (<xref alt="Ghosh et al., 2016" rid="ref-GhoshELLSS16" ref-type="bibr">Ghosh
  et al., 2016</xref>) and FRET
  (<xref alt="Giannakopoulou et al., 2020" rid="ref-GiannakopoulouP20a" ref-type="bibr">Giannakopoulou
  et al., 2020</xref>) projects construct LTL specifications from
  natural language; see
  (<xref alt="Li, 2013" rid="ref-Li13d" ref-type="bibr">Li, 2013</xref>)
  for an overview.</p>
  <p>The two state-of-the-art tools for learning logic formulas from
  examples are:</p>
  <list list-type="bullet">
    <list-item>
      <p>FLIE
      (<xref alt="Neider &amp; Gavran, 2018" rid="ref-NeiderGavran18" ref-type="bibr">Neider
      &amp; Gavran, 2018</xref>) infers minimal LTL formulas using a
      learning algorithm that is based on constraint solving (SAT
      solving).</p>
    </list-item>
    <list-item>
      <p>SYSLITE
      (<xref alt="Arif et al., 2020" rid="ref-ArifLERCT20" ref-type="bibr">Arif
      et al., 2020</xref>) infers minimal past-time LTL formulas using
      an enumerative algorithm implemented in a tool called CVC4SY
      (<xref alt="Reynolds et al., 2019" rid="ref-ReynoldsBNBT19" ref-type="bibr">Reynolds
      et al., 2019</xref>).</p>
    </list-item>
  </list>
  <p>Existing methods do not scale beyond formulas of small size, making
  them hard to deploy for industrial cases. A second serious limitation
  is that they often exhaust computational resources without returning
  any results. Indeed theoretical studies
  (<xref alt="Fijalkow &amp; Lagarde, 2021" rid="ref-FijalkowLagarde21" ref-type="bibr">Fijalkow
  &amp; Lagarde, 2021</xref>) have shown that constructing the minimal
  LTL formula is NP-hard already for very small fragments of LTL,
  explaining the difficulties found in practice.</p>
</sec>
<sec id="acknowledgments">
  <title>Acknowledgments</title>
  <p>This project was funded by the FWO G030020N project
  <monospace>SAILor</monospace> and Deutsche Forschungsgemeinschaft
  (DFG) grant no. 434592664.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-Li13d">
    <element-citation publication-type="thesis">
      <person-group person-group-type="author">
        <name><surname>Li</surname><given-names>Wenchao</given-names></name>
      </person-group>
      <article-title>Specification mining: New formalisms, algorithms and applications</article-title>
      <publisher-name>University of California, Berkeley, USA</publisher-name>
      <year iso-8601-date="2013">2013</year>
      <uri>http://www.escholarship.org/uc/item/4027r49r</uri>
    </element-citation>
  </ref>
  <ref id="ref-GiannakopoulouP20a">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Giannakopoulou</surname><given-names>Dimitra</given-names></name>
        <name><surname>Pressburger</surname><given-names>Thomas</given-names></name>
        <name><surname>Mavridou</surname><given-names>Anastasia</given-names></name>
        <name><surname>Rhein</surname><given-names>Julian</given-names></name>
        <name><surname>Schumann</surname><given-names>Johann</given-names></name>
        <name><surname>Shi</surname><given-names>Nija</given-names></name>
      </person-group>
      <article-title>Formal requirements elicitation with FRET</article-title>
      <source>International conference on requirements engineering: Foundation for software quality, REFSQ</source>
      <year iso-8601-date="2020">2020</year>
      <uri>http://ceur-ws.org/Vol-2584/PT-paper4.pdf</uri>
    </element-citation>
  </ref>
  <ref id="ref-GhoshELLSS16">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Ghosh</surname><given-names>Shalini</given-names></name>
        <name><surname>Elenius</surname><given-names>Daniel</given-names></name>
        <name><surname>Li</surname><given-names>Wenchao</given-names></name>
        <name><surname>Lincoln</surname><given-names>Patrick</given-names></name>
        <name><surname>Shankar</surname><given-names>Natarajan</given-names></name>
        <name><surname>Steiner</surname><given-names>Wilfried</given-names></name>
      </person-group>
      <article-title>ARSENAL: Automatic requirements specification extraction from natural language</article-title>
      <source>NASA formal methods, NFM</source>
      <year iso-8601-date="2016">2016</year>
      <pub-id pub-id-type="doi">10.1007/978-3-319-40648-0_4</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-FijalkowLagarde21">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Fijalkow</surname><given-names>Nathanaël</given-names></name>
        <name><surname>Lagarde</surname><given-names>Guillaume</given-names></name>
      </person-group>
      <article-title>The complexity of learning linear temporal formulas from examples</article-title>
      <source>International conference on grammatical inference, ICGI</source>
      <year iso-8601-date="2021">2021</year>
      <uri>https://proceedings.mlr.press/v153/fijalkow21a.html</uri>
    </element-citation>
  </ref>
  <ref id="ref-NeiderGavran18">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Neider</surname><given-names>Daniel</given-names></name>
        <name><surname>Gavran</surname><given-names>Ivan</given-names></name>
      </person-group>
      <article-title>Learning linear temporal properties</article-title>
      <source>Formal methods in computer aided design, FMCAD</source>
      <year iso-8601-date="2018">2018</year>
      <pub-id pub-id-type="doi">10.23919/FMCAD.2018.8603016</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-ChouOB20">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Chou</surname><given-names>Glen</given-names></name>
        <name><surname>Ozay</surname><given-names>Necmiye</given-names></name>
        <name><surname>Berenson</surname><given-names>Dmitry</given-names></name>
      </person-group>
      <article-title>Explaining multi-stage tasks by learning temporal logic formulas from suboptimal demonstrations</article-title>
      <source>Robotics: Science and systems</source>
      <year iso-8601-date="2020">2020</year>
      <pub-id pub-id-type="doi">10.15607/RSS.2020.XVI.097</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-RoyFismanNeider20">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Roy</surname><given-names>Rajarshi</given-names></name>
        <name><surname>Fisman</surname><given-names>Dana</given-names></name>
        <name><surname>Neider</surname><given-names>Daniel</given-names></name>
      </person-group>
      <article-title>Learning interpretable models in the property specification language</article-title>
      <source>International joint conference on artificial intelligence, IJCAI</source>
      <year iso-8601-date="2020">2020</year>
      <pub-id pub-id-type="doi">10.24963/ijcai.2020/306</pub-id>
      <fpage>2213</fpage>
      <lpage>2219</lpage>
    </element-citation>
  </ref>
  <ref id="ref-EhlersGavranNeider20">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Ehlers</surname><given-names>Rüdiger</given-names></name>
        <name><surname>Gavran</surname><given-names>Ivan</given-names></name>
        <name><surname>Neider</surname><given-names>Daniel</given-names></name>
      </person-group>
      <article-title>Learning properties in LTL \cap ACTL from positive examples only</article-title>
      <source>Formal methods in computer aided design, FMCAD</source>
      <year iso-8601-date="2020">2020</year>
      <pub-id pub-id-type="doi">10.34727/2020/isbn.978-3-85448-042-6_17</pub-id>
      <fpage>104</fpage>
      <lpage>112</lpage>
    </element-citation>
  </ref>
  <ref id="ref-ijcai2019-0776">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Kim</surname><given-names>Joseph</given-names></name>
        <name><surname>Muise</surname><given-names>Christian</given-names></name>
        <name><surname>Shah</surname><given-names>Ankit</given-names></name>
        <name><surname>Agarwal</surname><given-names>Shubham</given-names></name>
        <name><surname>Shah</surname><given-names>Julie</given-names></name>
      </person-group>
      <article-title>Bayesian inference of linear temporal logic specifications for contrastive explanations</article-title>
      <source>International joint conference on artificial intelligence, IJCAI</source>
      <year iso-8601-date="2019">2019</year>
      <pub-id pub-id-type="doi">10.24963/ijcai.2019/776</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Camacho_McIlraith_2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Camacho</surname><given-names>Alberto</given-names></name>
        <name><surname>McIlraith</surname><given-names>Sheila A.</given-names></name>
      </person-group>
      <article-title>Learning interpretable models expressed in linear temporal logic</article-title>
      <source>International Conference on Automated Planning and Scheduling, ICAPS</source>
      <year iso-8601-date="2019">2019</year>
      <uri>https://ojs.aaai.org/index.php/ICAPS/article/view/3529</uri>
      <pub-id pub-id-type="doi">10.1609/icaps.v29i1.3529</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-LPB15">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Lemieux</surname><given-names>Caroline</given-names></name>
        <name><surname>Park</surname><given-names>Dennis</given-names></name>
        <name><surname>Beschastnikh</surname><given-names>Ivan</given-names></name>
      </person-group>
      <article-title>General LTL specification mining</article-title>
      <source>International conference on automated software engineering, ASE</source>
      <year iso-8601-date="2015">2015</year>
      <pub-id pub-id-type="doi">10.1109/ASE.2015.71</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-BoVaPeBe-HSCC-2016">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Bombara</surname><given-names>Giuseppe</given-names></name>
        <name><surname>Vasile</surname><given-names>Cristian Ioan</given-names></name>
        <name><surname>Penedo Alvarez</surname><given-names>Francisco</given-names></name>
        <name><surname>Yasuoka</surname><given-names>Hirotoshi</given-names></name>
        <name><surname>Belta</surname><given-names>Calin</given-names></name>
      </person-group>
      <article-title>A Decision Tree Approach to Data Classification using Signal Temporal Logic</article-title>
      <year iso-8601-date="2016">2016</year>
      <pub-id pub-id-type="doi">10.1145/2883817.2883843</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-ArifLERCT20">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Arif</surname><given-names>M. Fareed</given-names></name>
        <name><surname>Larraz</surname><given-names>Daniel</given-names></name>
        <name><surname>Echeverria</surname><given-names>Mitziu</given-names></name>
        <name><surname>Reynolds</surname><given-names>Andrew</given-names></name>
        <name><surname>Chowdhury</surname><given-names>Omar</given-names></name>
        <name><surname>Tinelli</surname><given-names>Cesare</given-names></name>
      </person-group>
      <article-title>SYSLITE: Syntax-guided synthesis of PLTL formulas from finite traces</article-title>
      <source>Formal methods in computer aided design, FMCAD</source>
      <year iso-8601-date="2020">2020</year>
      <pub-id pub-id-type="doi">10.34727/2020/ISBN.978-3-85448-042-6_16</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-ReynoldsBNBT19">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Reynolds</surname><given-names>Andrew</given-names></name>
        <name><surname>Barbosa</surname><given-names>Haniel</given-names></name>
        <name><surname>Nötzli</surname><given-names>Andres</given-names></name>
        <name><surname>Barrett</surname><given-names>Clark W.</given-names></name>
        <name><surname>Tinelli</surname><given-names>Cesare</given-names></name>
      </person-group>
      <article-title>cvc4sy: Smart and fast term enumeration for syntax-guided synthesis</article-title>
      <source>Computer-aided verification, CAV</source>
      <year iso-8601-date="2019">2019</year>
      <pub-id pub-id-type="doi">10.1007/978-3-030-25543-5_5</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-RahaRFN22">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Raha</surname><given-names>Ritam</given-names></name>
        <name><surname>Roy</surname><given-names>Rajarshi</given-names></name>
        <name><surname>Fijalkow</surname><given-names>Nathanaël</given-names></name>
        <name><surname>Neider</surname><given-names>Daniel</given-names></name>
      </person-group>
      <article-title>Scalable anytime algorithms for learning fragments of linear temporal logic</article-title>
      <source>TACAS (1)</source>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <volume>13243</volume>
      <pub-id pub-id-type="doi">10.1007/978-3-030-99524-9_14</pub-id>
      <fpage>263</fpage>
      <lpage>280</lpage>
    </element-citation>
  </ref>
  <ref id="ref-abs-2310-13778">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Roy</surname><given-names>Rajarshi</given-names></name>
        <name><surname>Neider</surname><given-names>Daniel</given-names></name>
      </person-group>
      <article-title>Inferring properties in computation tree logic</article-title>
      <source>CoRR</source>
      <year iso-8601-date="2023">2023</year>
      <volume>abs/2310.13778</volume>
      <uri>https://doi.org/10.48550/arXiv.2310.13778</uri>
      <pub-id pub-id-type="doi">10.48550/ARXIV.2310.13778</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-abs-2310-17410">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Raha</surname><given-names>Ritam</given-names></name>
        <name><surname>Roy</surname><given-names>Rajarshi</given-names></name>
        <name><surname>Fijalkow</surname><given-names>Nathanaël</given-names></name>
        <name><surname>Neider</surname><given-names>Daniel</given-names></name>
        <name><surname>Pérez</surname><given-names>Guillermo A.</given-names></name>
      </person-group>
      <article-title>Synthesizing efficiently monitorable formulas in metric temporal logic</article-title>
      <source>CoRR</source>
      <year iso-8601-date="2023">2023</year>
      <volume>abs/2310.17410</volume>
      <uri>https://doi.org/10.48550/arXiv.2310.17410</uri>
      <pub-id pub-id-type="doi">10.48550/ARXIV.2310.17410</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
