<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/5.3.1"
           xmlns:ai="http://www.crossref.org/AccessIndicators.xsd"
           xmlns:rel="http://www.crossref.org/relations.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           version="5.3.1"
           xsi:schemaLocation="http://www.crossref.org/schema/5.3.1 http://www.crossref.org/schemas/crossref5.3.1.xsd">
  <head>
    <doi_batch_id>20240109T154115-a7950d0954479c95ff29003eb332e0679d303835</doi_batch_id>
    <timestamp>20240109154115</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>https://joss.theoj.org</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>01</month>
          <year>2024</year>
        </publication_date>
        <journal_volume>
          <volume>9</volume>
        </journal_volume>
        <issue>93</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>Scarlet: Scalable Anytime Algorithms for Learning
Fragments of Linear Temporal Logic</title>
        </titles>
        <contributors>
          <person_name sequence="first" contributor_role="author">
            <given_name>Ritam</given_name>
            <surname>Raha</surname>
            <ORCID>https://orcid.org/0000-0003-1467-1182</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Rajarshi</given_name>
            <surname>Roy</surname>
            <ORCID>https://orcid.org/0000-0002-0202-1169</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Nathanaël</given_name>
            <surname>Fijalkow</surname>
            <ORCID>https://orcid.org/0000-0002-6576-4680</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Daniel</given_name>
            <surname>Neider</surname>
            <ORCID>https://orcid.org/0000-0001-9276-6342</ORCID>
          </person_name>
        </contributors>
        <publication_date>
          <month>01</month>
          <day>09</day>
          <year>2024</year>
        </publication_date>
        <pages>
          <first_page>5052</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.05052</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">10.5281/zenodo.10419514</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/5052</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.05052</doi>
          <resource>https://joss.theoj.org/papers/10.21105/joss.05052</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://joss.theoj.org/papers/10.21105/joss.05052.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="Li13d">
            <article_title>Specification mining: New formalisms,
algorithms and applications</article_title>
            <author>Li</author>
            <cYear>2013</cYear>
            <unstructured_citation>Li, W. (2013). Specification mining:
New formalisms, algorithms and applications [PhD thesis, University of
California, Berkeley, USA].
http://www.escholarship.org/uc/item/4027r49r</unstructured_citation>
          </citation>
          <citation key="GiannakopoulouP20a">
            <article_title>Formal requirements elicitation with
FRET</article_title>
            <author>Giannakopoulou</author>
            <journal_title>International conference on requirements
engineering: Foundation for software quality, REFSQ</journal_title>
            <cYear>2020</cYear>
            <unstructured_citation>Giannakopoulou, D., Pressburger, T.,
Mavridou, A., Rhein, J., Schumann, J., &amp; Shi, N. (2020). Formal
requirements elicitation with FRET. International Conference on
Requirements Engineering: Foundation for Software Quality, REFSQ.
http://ceur-ws.org/Vol-2584/PT-paper4.pdf</unstructured_citation>
          </citation>
          <citation key="GhoshELLSS16">
            <article_title>ARSENAL: Automatic requirements specification
extraction from natural language</article_title>
            <author>Ghosh</author>
            <journal_title>NASA formal methods, NFM</journal_title>
            <doi>10.1007/978-3-319-40648-0_4</doi>
            <cYear>2016</cYear>
            <unstructured_citation>Ghosh, S., Elenius, D., Li, W.,
Lincoln, P., Shankar, N., &amp; Steiner, W. (2016). ARSENAL: Automatic
requirements specification extraction from natural language. NASA Formal
Methods, NFM.
https://doi.org/10.1007/978-3-319-40648-0_4</unstructured_citation>
          </citation>
          <citation key="FijalkowLagarde21">
            <article_title>The complexity of learning linear temporal
formulas from examples</article_title>
            <author>Fijalkow</author>
            <journal_title>International conference on grammatical
inference, ICGI</journal_title>
            <cYear>2021</cYear>
            <unstructured_citation>Fijalkow, N., &amp; Lagarde, G.
(2021). The complexity of learning linear temporal formulas from
examples. International Conference on Grammatical Inference, ICGI.
https://proceedings.mlr.press/v153/fijalkow21a.html</unstructured_citation>
          </citation>
          <citation key="NeiderGavran18">
            <article_title>Learning linear temporal
properties</article_title>
            <author>Neider</author>
            <journal_title>Formal methods in computer aided design,
FMCAD</journal_title>
            <doi>10.23919/FMCAD.2018.8603016</doi>
            <cYear>2018</cYear>
            <unstructured_citation>Neider, D., &amp; Gavran, I. (2018).
Learning linear temporal properties. Formal Methods in Computer Aided
Design, FMCAD.
https://doi.org/10.23919/FMCAD.2018.8603016</unstructured_citation>
          </citation>
          <citation key="ChouOB20">
            <article_title>Explaining multi-stage tasks by learning
temporal logic formulas from suboptimal demonstrations</article_title>
            <author>Chou</author>
            <journal_title>Robotics: Science and systems</journal_title>
            <doi>10.15607/RSS.2020.XVI.097</doi>
            <cYear>2020</cYear>
            <unstructured_citation>Chou, G., Ozay, N., &amp; Berenson,
D. (2020). Explaining multi-stage tasks by learning temporal logic
formulas from suboptimal demonstrations. Robotics: Science and Systems.
https://doi.org/10.15607/RSS.2020.XVI.097</unstructured_citation>
          </citation>
          <citation key="RoyFismanNeider20">
            <article_title>Learning interpretable models in the property
specification language</article_title>
            <author>Roy</author>
            <journal_title>International joint conference on artificial
intelligence, IJCAI</journal_title>
            <doi>10.24963/ijcai.2020/306</doi>
            <cYear>2020</cYear>
            <unstructured_citation>Roy, R., Fisman, D., &amp; Neider, D.
(2020). Learning interpretable models in the property specification
language. International Joint Conference on Artificial Intelligence,
IJCAI, 2213–2219.
https://doi.org/10.24963/ijcai.2020/306</unstructured_citation>
          </citation>
          <citation key="EhlersGavranNeider20">
            <article_title>Learning properties in LTL \cap ACTL from
positive examples only</article_title>
            <author>Ehlers</author>
            <journal_title>Formal methods in computer aided design,
FMCAD</journal_title>
            <doi>10.34727/2020/isbn.978-3-85448-042-6_17</doi>
            <cYear>2020</cYear>
            <unstructured_citation>Ehlers, R., Gavran, I., &amp; Neider,
D. (2020). Learning properties in LTL \cap ACTL from positive examples
only. Formal Methods in Computer Aided Design, FMCAD, 104–112.
https://doi.org/10.34727/2020/isbn.978-3-85448-042-6_17</unstructured_citation>
          </citation>
          <citation key="ijcai2019-0776">
            <article_title>Bayesian inference of linear temporal logic
specifications for contrastive explanations</article_title>
            <author>Kim</author>
            <journal_title>International joint conference on artificial
intelligence, IJCAI</journal_title>
            <doi>10.24963/ijcai.2019/776</doi>
            <cYear>2019</cYear>
            <unstructured_citation>Kim, J., Muise, C., Shah, A.,
Agarwal, S., &amp; Shah, J. (2019). Bayesian inference of linear
temporal logic specifications for contrastive explanations.
International Joint Conference on Artificial Intelligence, IJCAI.
https://doi.org/10.24963/ijcai.2019/776</unstructured_citation>
          </citation>
          <citation key="Camacho_McIlraith_2019">
            <article_title>Learning interpretable models expressed in
linear temporal logic</article_title>
            <author>Camacho</author>
            <journal_title>International Conference on Automated
Planning and Scheduling, ICAPS</journal_title>
            <doi>10.1609/icaps.v29i1.3529</doi>
            <cYear>2019</cYear>
            <unstructured_citation>Camacho, A., &amp; McIlraith, S. A.
(2019). Learning interpretable models expressed in linear temporal
logic. International Conference on Automated Planning and Scheduling,
ICAPS. https://doi.org/10.1609/icaps.v29i1.3529</unstructured_citation>
          </citation>
          <citation key="LPB15">
            <article_title>General LTL specification
mining</article_title>
            <author>Lemieux</author>
            <journal_title>International conference on automated
software engineering, ASE</journal_title>
            <doi>10.1109/ASE.2015.71</doi>
            <cYear>2015</cYear>
            <unstructured_citation>Lemieux, C., Park, D., &amp;
Beschastnikh, I. (2015). General LTL specification mining. International
Conference on Automated Software Engineering, ASE.
https://doi.org/10.1109/ASE.2015.71</unstructured_citation>
          </citation>
          <citation key="BoVaPeBe-HSCC-2016">
            <article_title>A Decision Tree Approach to Data
Classification using Signal Temporal Logic</article_title>
            <author>Bombara</author>
            <doi>10.1145/2883817.2883843</doi>
            <cYear>2016</cYear>
            <unstructured_citation>Bombara, G., Vasile, C. I., Penedo
Alvarez, F., Yasuoka, H., &amp; Belta, C. (2016). A Decision Tree
Approach to Data Classification using Signal Temporal Logic.
https://doi.org/10.1145/2883817.2883843</unstructured_citation>
          </citation>
          <citation key="ArifLERCT20">
            <article_title>SYSLITE: Syntax-guided synthesis of PLTL
formulas from finite traces</article_title>
            <author>Arif</author>
            <journal_title>Formal methods in computer aided design,
FMCAD</journal_title>
            <doi>10.34727/2020/ISBN.978-3-85448-042-6_16</doi>
            <cYear>2020</cYear>
            <unstructured_citation>Arif, M. F., Larraz, D., Echeverria,
M., Reynolds, A., Chowdhury, O., &amp; Tinelli, C. (2020). SYSLITE:
Syntax-guided synthesis of PLTL formulas from finite traces. Formal
Methods in Computer Aided Design, FMCAD.
https://doi.org/10.34727/2020/ISBN.978-3-85448-042-6_16</unstructured_citation>
          </citation>
          <citation key="ReynoldsBNBT19">
            <article_title>cvc4sy: Smart and fast term enumeration for
syntax-guided synthesis</article_title>
            <author>Reynolds</author>
            <journal_title>Computer-aided verification,
CAV</journal_title>
            <doi>10.1007/978-3-030-25543-5_5</doi>
            <cYear>2019</cYear>
            <unstructured_citation>Reynolds, A., Barbosa, H., Nötzli,
A., Barrett, C. W., &amp; Tinelli, C. (2019). cvc4sy: Smart and fast
term enumeration for syntax-guided synthesis. Computer-Aided
Verification, CAV.
https://doi.org/10.1007/978-3-030-25543-5_5</unstructured_citation>
          </citation>
          <citation key="RahaRFN22">
            <article_title>Scalable anytime algorithms for learning
fragments of linear temporal logic</article_title>
            <author>Raha</author>
            <journal_title>TACAS (1)</journal_title>
            <volume>13243</volume>
            <doi>10.1007/978-3-030-99524-9_14</doi>
            <cYear>2022</cYear>
            <unstructured_citation>Raha, R., Roy, R., Fijalkow, N.,
&amp; Neider, D. (2022). Scalable anytime algorithms for learning
fragments of linear temporal logic. TACAS (1), 13243, 263–280.
https://doi.org/10.1007/978-3-030-99524-9_14</unstructured_citation>
          </citation>
          <citation key="abs-2310-13778">
            <article_title>Inferring properties in computation tree
logic</article_title>
            <author>Roy</author>
            <journal_title>CoRR</journal_title>
            <volume>abs/2310.13778</volume>
            <doi>10.48550/ARXIV.2310.13778</doi>
            <cYear>2023</cYear>
            <unstructured_citation>Roy, R., &amp; Neider, D. (2023).
Inferring properties in computation tree logic. CoRR, abs/2310.13778.
https://doi.org/10.48550/ARXIV.2310.13778</unstructured_citation>
          </citation>
          <citation key="abs-2310-17410">
            <article_title>Synthesizing efficiently monitorable formulas
in metric temporal logic</article_title>
            <author>Raha</author>
            <journal_title>CoRR</journal_title>
            <volume>abs/2310.17410</volume>
            <doi>10.48550/ARXIV.2310.17410</doi>
            <cYear>2023</cYear>
            <unstructured_citation>Raha, R., Roy, R., Fijalkow, N.,
Neider, D., &amp; Pérez, G. A. (2023). Synthesizing efficiently
monitorable formulas in metric temporal logic. CoRR, abs/2310.17410.
https://doi.org/10.48550/ARXIV.2310.17410</unstructured_citation>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
