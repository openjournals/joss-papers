<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6914</article-id>
<article-id pub-id-type="doi">10.21105/joss.06914</article-id>
<title-group>
<article-title>Idiomatic Ephemeris Sourcing and Parsing in
Julia</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-8655-8125</contrib-id>
<name>
<surname>Carpinelli</surname>
<given-names>Joseph D</given-names>
</name>
<email>joseph.d.carpinelli@loopy.codes</email>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Independent Researcher, USA</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-06-09">
<day>9</day>
<month>6</month>
<year>2024</year>
</pub-date>
<volume>9</volume>
<issue>102</issue>
<fpage>6914</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Astrodynamics</kwd>
<kwd>Astronomy</kwd>
<kwd>Astrophysics</kwd>
<kwd>Ephemeris</kwd>
<kwd>Julia</kwd>
<kwd>SPICE</kwd>
<kwd>Horizons</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Students and professionals in astronomy, astrodynamics,
  astrophysics, and other related fields often download and parse data
  about objects in our solar system — ephemeris data — from two major
  providers: JPL’s publicly-available
  <ext-link ext-link-type="uri" xlink:href="https://naif.jpl.nasa.gov/pub/naif/generic_kernels/">Generic
  SPICE Kernels</ext-link> and JPL’s
  <ext-link ext-link-type="uri" xlink:href="https://ssd.jpl.nasa.gov/horizons/">Horizons
  platform</ext-link>. SPICE kernels are typically read through the
  SPICE Toolkit, which is available in a variety of programming
  languages, including the C Programming Language with
  <monospace>CSPICE</monospace>
  (<xref alt="Acton, 1996" rid="ref-cspice" ref-type="bibr">Acton,
  1996</xref>). The Julia packages
  <ext-link ext-link-type="uri" xlink:href="https://github.com/JuliaBinaryWrappers/CSPICE_jll.jl"><monospace>CSPICE_jll.jl</monospace></ext-link>
  and
  <ext-link ext-link-type="uri" xlink:href="https://github.com/JuliaAstro/SPICE.jl"><monospace>SPICE.jl</monospace></ext-link>
  expose many <monospace>CSPICE</monospace> functions through Julia
  functions. Julia users can load and interact with SPICE kernels
  through methods such as <monospace>SPICE.furnsh</monospace> and
  <monospace>SPICE.spkez</monospace>. Horizons provides data through a
  variety of methods, including email, command-line, graphical web
  interfaces, and a
  <ext-link ext-link-type="uri" xlink:href="https://ssd-api.jpl.nasa.gov/doc/horizons.html">REST
  API</ext-link>
  (<xref alt="Giorgini, 2015" rid="ref-horizons" ref-type="bibr">Giorgini,
  2015</xref>).</p>
  <p>This paper introduces several packages —
  <monospace>SPICEKernels.jl</monospace>,
  <monospace>SPICEBodies.jl</monospace>,
  <monospace>HorizonsAPI.jl</monospace> and
  <monospace>HorizonsEphemeris.jl</monospace> — which allow users to
  download and process Cartesian state vector data idiomatically, all
  from within Julia. While ephemeris data comes in many forms, including
  observer tables, osculating orbital elements, and binary formats,
  these packages currently target Cartesian state vector (position and
  velocity) ephemeris data. Through the use of these packages, users can
  share replicable code which automatically fetches data from
  publicly-available ephemeris sources, as opposed to manually including
  ephemeris data files with their source code distribution.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>While astronomers, astrodynamicists, and other ephemeris users have
  the tools they need to fetch and parse position and velocity data from
  multiple sources within Julia, they do not have the tools to do so
  <italic>simply</italic> or <italic>idiomatically</italic>. Horizons’
  ephemeris data is distributed in plain text with surrounding metadata,
  and manual parsing is required for users to programmatically use the
  fetched ephemeris data. Generic SPICE kernels are freely available and
  can be used with <monospace>CSPICE</monospace> (and wrapper libraries)
  for kernel inspection and data retrieval, but new users and students
  may find the required workflows unfamiliar. The packages presented in
  this paper may be used by students and professionals to idiomatically
  inspect and use Cartesian state vector ephemeris data, without prior
  knowledge of SPICE Toolkit utilities or REST APIs.</p>
  <sec id="jpl-horizons">
    <title>JPL Horizons</title>
    <p>The two Horizons-related packages presented in this paper —
    <ext-link ext-link-type="uri" xlink:href="https://github.com/JuliaAstro/EphemerisSources.jl/tree/main/lib/HorizonsAPI"><monospace>HorizonsAPI.jl</monospace></ext-link>
    and
    <ext-link ext-link-type="uri" xlink:href="https://github.com/JuliaAstro/EphemerisSources.jl/tree/main/lib/HorizonsEphemeris"><monospace>HorizonsEphemeris.jl</monospace></ext-link>
    — are respectively the first Julia packages to precisely match the
    REST API with tab-completion through <italic>static keyword
    arguments</italic><xref ref-type="fn" rid="fn1">1</xref>, and the
    first to offer automatic response parsing into
    <monospace>NamedTuple</monospace> types. The
    <monospace>NamedTuple</monospace> output of
    <monospace>HorizonsEphemeris.ephemeris</monospace>, the top-level
    method for fetching Cartesian state vectors from the Horizons
    platform, allows for easy plotting, CSV file-saving, and
    <monospace>DataFrame</monospace> construction. Both
    <monospace>HorizonsAPI.jl</monospace> and
    <monospace>HorizonsEphemeris.jl</monospace> offer users a simple,
    repeatable way to query and parse Horizons state vector data.
    Parsing for other ephemeris types, including observer tables and
    osculating orbital element tables, are desired features but are not
    yet implemented. For sending Horizons requests for these other
    ephemeris types, use <monospace>HorizonsAPI</monospace> methods to
    manually construct each request, or see
    <ext-link ext-link-type="uri" xlink:href="https://github.com/PerezHz/Horizons.jl"><monospace>Horizons.jl</monospace></ext-link>.</p>
  </sec>
  <sec id="jpl-spice">
    <title>JPL SPICE</title>
    <p>The two SPICE-related packages presented in this paper —
    <ext-link ext-link-type="uri" xlink:href="https://github.com/JuliaAstro/EphemerisSources.jl/tree/main/lib/SPICEKernels"><monospace>SPICEKernels.jl</monospace></ext-link>,
    and
    <ext-link ext-link-type="uri" xlink:href="https://github.com/JuliaAstro/EphemerisSources.jl/tree/main/lib/SPICEBodies"><monospace>SPICEBodies.jl</monospace></ext-link>
    — provide idiomatic kernel fetching, inspection, and caching from
    within Julia. Previously, Julia users interacted with SPICE kernels
    by manually downloading publicly-available
    <ext-link ext-link-type="uri" xlink:href="https://naif.jpl.nasa.gov/pub/naif/generic_kernels/">generic
    kernels</ext-link> and parsing the data using
    <monospace>SPICE.jl</monospace>, or another ephemeris parsing
    source. This workflow requires that users know how to find the
    appropriate generic kernels for their chosen application, and that
    they know how to use CSPICE functions to retrieve their desired
    data. <monospace>SPICEKernels.jl</monospace> and
    <monospace>SPICEBodies.jl</monospace> offer idiomatic interfaces to
    ephemeris fetching and parsing respectively. The
    <monospace>SPICEKernels.jl</monospace> project uses continuous
    integration to fetch and parse publicly-available
    <ext-link ext-link-type="uri" xlink:href="https://naif.jpl.nasa.gov/pub/naif/generic_kernels">kernels</ext-link>
    and expose each kernel as a variable in a new release version. SPICE
    Toolkit executables, provided by
    <ext-link ext-link-type="uri" xlink:href="https://github.com/JuliaAstro/SPICE.jl/tree/main/lib/SPICEApplications"><monospace>SPICEApplications.jl</monospace></ext-link>,
    are used to retrieve a description of each kernel file’s contents
    and place that description in the corresponding variable’s
    docstring. <monospace>SPICEKernels.jl</monospace> users can utilize
    tab-completion and Julia’s built-in documentation tools to inspect
    kernel contents and download the appropriate generic kernel for
    their application. Once each kernel is downloaded and loaded into
    the SPICE kernel pool with <monospace>SPICE.jl</monospace>, users
    can use <monospace>SPICEBodies.jl</monospace> to idiomatically fetch
    state vector data at a provided instance in time.</p>
  </sec>
</sec>
<sec id="usage">
  <title>Usage</title>
  <p>For detailed usage examples, consult the common
  <ext-link ext-link-type="uri" xlink:href="https://juliaastro.org/EphemerisSources.jl">documentation
  site</ext-link>.</p>
</sec>
<sec id="external-packages">
  <title>External Packages</title>
  <p>The packages presented in this paper which interact with the SPICE
  Toolkit require users to use
  <ext-link ext-link-type="uri" xlink:href="https://github.com/JuliaAstro/SPICE.jl"><monospace>SPICE.jl</monospace></ext-link>,
  or another SPICE-compatible kernel loading tool.
  <monospace>SPICEBodies.jl</monospace> uses the kernel cache that is
  created with <monospace>SPICE.furnsh</monospace>. Support for other
  SPICE kernel management packages, such as
  <ext-link ext-link-type="uri" xlink:href="https://github.com/JuliaSpaceMissionDesign/Ephemerides.jl"><monospace>Ephemerides.jl</monospace></ext-link>,
  may be added in the future. Support for
  <monospace>Ephemerides.jl</monospace> is particularly desirable, as it
  enables fetching kernel data in multi-threaded contexts. In addition
  to the packages in this paper which interface with the JPL Horizons
  ephemeris platform, the
  <ext-link ext-link-type="uri" xlink:href="https://github.com/PerezHz/Horizons.jl"><monospace>Horizons.jl</monospace></ext-link>
  package offers simplified interfaces for constructing and sending
  queries to the JPL Horizons REST API. The
  <monospace>Horizons.jl</monospace> package provides support for all
  Horizons query types, as does <monospace>HorizonsAPI.jl</monospace>.
  As stated previously, <monospace>HorizonsEphemeris.jl</monospace>
  currently only supports parsing for Cartesian state vector data.</p>
</sec>
<sec id="sec-acknowledgements">
  <title>Acknowledgements</title>
  <p>Joseph Wilson (user <monospace>@jollywatt</monospace> on Julia’s
  <ext-link ext-link-type="uri" xlink:href="https://discourse.julialang.org/u/Jollywatt/summary">Discourse</ext-link>)
  provided incredibly helpful
  <ext-link ext-link-type="uri" xlink:href="https://discourse.julialang.org/t/unpack-namedtuple-into-a-function-definition/97500">guidance
  and code</ext-link> to support static keyword arguments. This
  contribution substantially improved the usability of
  <monospace>HorizonsAPI.jl</monospace>.</p>
</sec>
<sec id="disclaimers">
  <title>Disclaimers</title>
  <p>The software developed in this paper, and the paper itself, was
  written by the author in a personal capacity. This work does not
  reflect the views of any organization, employer, or entity, except for
  the author as an individual.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-cspice">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Acton</surname><given-names>C. H.</given-names></name>
      </person-group>
      <article-title>Ancillary Data Services of NASA’s Navigation and Ancillary Information Facility</article-title>
      <source>Planetary and Space Science</source>
      <year iso-8601-date="1996">1996</year>
      <volume>44</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1016/0032-0633(95)00107-7</pub-id>
      <fpage>65</fpage>
      <lpage>70</lpage>
    </element-citation>
  </ref>
  <ref id="ref-horizons">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Giorgini</surname><given-names>Jon D</given-names></name>
      </person-group>
      <article-title>Status of the JPL horizons ephemeris system</article-title>
      <source>IAU General Assembly</source>
      <year iso-8601-date="2015">2015</year>
      <volume>29</volume>
      <fpage>2256293</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
</ref-list>
<fn-group>
  <fn id="fn1">
    <label>1</label><p>The code required to support static keyword
    arguments was provided by Joseph Wilson, as described in the
    <bold>Acknowledgements</bold> section.</p>
  </fn>
</fn-group>
</back>
</article>
