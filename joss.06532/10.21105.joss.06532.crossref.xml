<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/5.3.1"
           xmlns:ai="http://www.crossref.org/AccessIndicators.xsd"
           xmlns:rel="http://www.crossref.org/relations.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           version="5.3.1"
           xsi:schemaLocation="http://www.crossref.org/schema/5.3.1 http://www.crossref.org/schemas/crossref5.3.1.xsd">
  <head>
    <doi_batch_id>20240621141837-b19c5a11e8d035afc239c96151c5cf324067c3fe</doi_batch_id>
    <timestamp>20240621141837</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>https://joss.theoj.org</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>06</month>
          <year>2024</year>
        </publication_date>
        <journal_volume>
          <volume>9</volume>
        </journal_volume>
        <issue>98</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>JAXbind: Bind any function to JAX</title>
        </titles>
        <contributors>
          <person_name sequence="first" contributor_role="author">
            <given_name>Jakob</given_name>
            <surname>Roth</surname>
            <ORCID>https://orcid.org/0000-0002-8873-8215</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Martin</given_name>
            <surname>Reinecke</surname>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Gordian</given_name>
            <surname>Edenhofer</surname>
            <ORCID>https://orcid.org/0000-0003-3122-4894</ORCID>
          </person_name>
        </contributors>
        <publication_date>
          <month>06</month>
          <day>21</day>
          <year>2024</year>
        </publication_date>
        <pages>
          <first_page>6532</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.06532</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">10.5281/zenodo.12191214</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/6532</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.06532</doi>
          <resource>https://joss.theoj.org/papers/10.21105/joss.06532</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://joss.theoj.org/papers/10.21105/joss.06532.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="Jax2018">
            <article_title>JAX: Composable transformations of
Python+NumPy programs</article_title>
            <author>Bradbury</author>
            <cYear>2018</cYear>
            <unstructured_citation>Bradbury, J., Frostig, R., Hawkins,
P., Johnson, M. J., Leary, C., Maclaurin, D., Necula, G., Paszke, A.,
VanderPlas, J., Wanderman-Milne, S., &amp; Zhang, Q. (2018). JAX:
Composable transformations of Python+NumPy programs (Version 0.3.13).
http://github.com/google/jax</unstructured_citation>
          </citation>
          <citation key="ducc0">
            <article_title>DUCC: Distinctly useful code
collection</article_title>
            <author>Reinecke</author>
            <cYear>2024</cYear>
            <unstructured_citation>Reinecke, M. (2024). DUCC: Distinctly
useful code collection (Version 0.33.0).
https://gitlab.mpcdf.mpg.de/mtr/ducc</unstructured_citation>
          </citation>
          <citation key="Moses2024">
            <article_title>Enzyme-JAX</article_title>
            <author>Moses</author>
            <cYear>2024</cYear>
            <unstructured_citation>Moses, W. S., &amp; Zinenko, O.
(2024). Enzyme-JAX (Version 0.0.6).
https://github.com/EnzymeAD/Enzyme-JAX</unstructured_citation>
          </citation>
          <citation key="Moses2020">
            <article_title>Instead of rewriting foreign code for machine
learning, automatically synthesize fast gradients</article_title>
            <author>Moses</author>
            <journal_title>Advances in neural information processing
systems</journal_title>
            <volume>33</volume>
            <cYear>2020</cYear>
            <unstructured_citation>Moses, W., &amp; Churavy, V. (2020).
Instead of rewriting foreign code for machine learning, automatically
synthesize fast gradients. In H. Larochelle, M. Ranzato, R. Hadsell, M.
F. Balcan, &amp; H. Lin (Eds.), Advances in neural information
processing systems (Vol. 33, pp. 12472–12485). Curran Associates, Inc.
https://proceedings.neurips.cc/paper/2020/file/9332c513ef44b682e9347822c2e457ac-Paper.pdf</unstructured_citation>
          </citation>
          <citation key="Moses2021">
            <article_title>Reverse-mode automatic differentiation and
optimization of GPU kernels via enzyme</article_title>
            <author>Moses</author>
            <journal_title>Proceedings of the international conference
for high performance computing, networking, storage and
analysis</journal_title>
            <doi>10.1145/3458817.3476165</doi>
            <isbn>9781450384421</isbn>
            <cYear>2021</cYear>
            <unstructured_citation>Moses, W. S., Churavy, V., Paehler,
L., Hückelheim, J., Narayanan, S. H. K., Schanen, M., &amp; Doerfert, J.
(2021). Reverse-mode automatic differentiation and optimization of GPU
kernels via enzyme. Proceedings of the International Conference for High
Performance Computing, Networking, Storage and Analysis.
https://doi.org/10.1145/3458817.3476165</unstructured_citation>
          </citation>
          <citation key="Moses2022">
            <article_title>Scalable automatic differentiation of
multiple parallel paradigms through compiler
augmentation</article_title>
            <author>Moses</author>
            <journal_title>Proceedings of the international conference
on high performance computing, networking, storage and
analysis</journal_title>
            <doi>10.1109/SC41404.2022.00065</doi>
            <isbn>9784665454445</isbn>
            <cYear>2022</cYear>
            <unstructured_citation>Moses, W. S., Narayanan, S. H. K.,
Paehler, L., Churavy, V., Schanen, M., Hückelheim, J., Doerfert, J.,
&amp; Hovland, P. (2022). Scalable automatic differentiation of multiple
parallel paradigms through compiler augmentation. Proceedings of the
International Conference on High Performance Computing, Networking,
Storage and Analysis.
https://doi.org/10.1109/SC41404.2022.00065</unstructured_citation>
          </citation>
          <citation key="Resolve2024">
            <article_title>RESOLVE</article_title>
            <author>Arras</author>
            <cYear>2024</cYear>
            <unstructured_citation>Arras, P., Roth, J., Ding, S.,
Reinecke, M., Fuchs, R., &amp; Johnson, V. (2024). RESOLVE.
https://gitlab.mpcdf.mpg.de/ift/resolve</unstructured_citation>
          </citation>
          <citation key="Edenhofer2023NIFTyRE">
            <article_title>Re-envisioning numerical information field
theory (NIFTy.re): A library for Gaussian processes and variational
inference</article_title>
            <author>Edenhofer</author>
            <journal_title>Journal of Open Source
Software</journal_title>
            <issue>98</issue>
            <volume>9</volume>
            <doi>10.21105/joss.06593</doi>
            <cYear>2024</cYear>
            <unstructured_citation>Edenhofer, G., Frank, P., Roth, J.,
Leike, R. H., Guerdi, M., Scheel-Platz, L. I., Guardiani, M., Eberle,
V., Westerkamp, M., &amp; Enßlin, T. A. (2024). Re-envisioning numerical
information field theory (NIFTy.re): A library for Gaussian processes
and variational inference. Journal of Open Source Software, 9(98), 6593.
https://doi.org/10.21105/joss.06593</unstructured_citation>
          </citation>
          <citation key="tensorflow2015">
            <article_title>TensorFlow: Large-scale machine learning on
heterogeneous systems</article_title>
            <author>Abadi</author>
            <cYear>2015</cYear>
            <unstructured_citation>Abadi, M., Agarwal, A., Barham, P.,
Brevdo, E., Chen, Z., Citro, C., Corrado, G. S., Davis, A., Dean, J.,
Devin, M., Ghemawat, S., Goodfellow, I., Harp, A., Irving, G., Isard,
M., Jia, Y., Jozefowicz, R., Kaiser, L., Kudlur, M., … Zheng, X. (2015).
TensorFlow: Large-scale machine learning on heterogeneous systems.
https://www.tensorflow.org/</unstructured_citation>
          </citation>
          <citation key="PyTorch2024">
            <article_title>PyTorch 2: Faster machine learning through
dynamic Python bytecode transformation and graph
compilation</article_title>
            <author>Ansel</author>
            <journal_title>29th ACM international conference on
architectural support for programming languages and operating systems,
volume 2 (ASPLOS ’24)</journal_title>
            <doi>10.1145/3620665.3640366</doi>
            <cYear>2024</cYear>
            <unstructured_citation>Ansel, J., Yang, E., He, H.,
Gimelshein, N., Jain, A., Voznesensky, M., Bao, B., Bell, P., Berard,
D., Burovski, E., Chauhan, G., Chourdia, A., Constable, W., Desmaison,
A., DeVito, Z., Ellison, E., Feng, W., Gong, J., Gschwind, M., …
Chintala, S. (2024, April). PyTorch 2: Faster machine learning through
dynamic Python bytecode transformation and graph compilation. 29th ACM
International Conference on Architectural Support for Programming
Languages and Operating Systems, Volume 2 (ASPLOS ’24).
https://doi.org/10.1145/3620665.3640366</unstructured_citation>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
