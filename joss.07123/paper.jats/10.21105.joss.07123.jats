<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">7123</article-id>
<article-id pub-id-type="doi">10.21105/joss.07123</article-id>
<title-group>
<article-title>startinpy: A Python library for modelling and processing
2.5D triangulated terrains</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-1251-8654</contrib-id>
<name>
<surname>Ledoux</surname>
<given-names>Hugo</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Delft University of Technology, the
Netherlands</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-07-17">
<day>17</day>
<month>7</month>
<year>2024</year>
</pub-date>
<volume>9</volume>
<issue>103</issue>
<fpage>7123</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2024</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Delaunay triangulation</kwd>
<kwd>Python</kwd>
<kwd>terrain</kwd>
<kwd>interpolation</kwd>
<kwd>GIS</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><italic>startinpy</italic> is a Python library for modelling and
  processing terrains using a two-dimensional (2D) Delaunay
  triangulation (DT). The triangulation is computed in 2D, but the
  z-elevation of the vertices is kept (which is referred to as 2.5D
  modelling).</p>
  <p>Given a dataset formed of elevation samples (eg collected with
  lidar or photogrammetry), startinpy allows us to reconstruct a
  terrain, to remove points, to search efficiently in the triangulation,
  to attach attributes to the vertices, and to convert to a gridded
  terrain. Additional functionality is provided, including a few spatial
  interpolation methods based on the DT and/or its dual structure, the
  Voronoi diagram, have been implemented: linear interpolation, natural
  neighbours
  (<xref alt="Sibson, 1981" rid="ref-Sibson81" ref-type="bibr">Sibson,
  1981</xref>), and Laplace interpolation
  (<xref alt="Belikov et al., 1997" rid="ref-Belikov97" ref-type="bibr">Belikov
  et al., 1997</xref>).</p>
  <p>The core of the library is written in
  <ext-link ext-link-type="uri" xlink:href="https://www.rust-lang.org/">Rust</ext-link>
  (so it can process large datasets quickly), robust arithmetic is used
  for the updating of the DT (the robust predicates of Shewchuk
  (<xref alt="1996" rid="ref-Shewchuk96" ref-type="bibr">1996</xref>)
  are used), and it uses NumPy for input/output of data, which allows it
  to integrate with other Python libraries used by researchers.</p>
  <p>The core of the library has been used to build a global coastal
  terrain using laser altimetric measurements from the space station
  (<xref alt="Pronk et al., 2024" rid="ref-Pronk24" ref-type="bibr">Pronk
  et al., 2024</xref>), and it has been used for several projects
  dealing with aerial and space lidar datasets, for instance Meschin
  (<xref alt="2023" rid="ref-Meschin23" ref-type="bibr">2023</xref>) and
  Kan
  (<xref alt="2024" rid="ref-Kan24" ref-type="bibr">2024</xref>).</p>
  <p>While startinpy was developed primarily to build and manipulate
  terrains, it can be used as an easy-to-use and fast 2D Delaunay
  triangulator (and Voronoi diagram generator), which, as elaborated in
  Aurenhammer et al.
  (<xref alt="2012" rid="ref-Aurenhammer12" ref-type="bibr">2012</xref>),
  are two structures that play an essential role in several disciplines:
  astronomy, geology, ecology, engineering, etc.</p>
  <fig>
    <caption><p>A lidar dataset terrain reconstructed with startinpy and
    visualised with another Python library (Polyscope).</p></caption>
    <graphic mimetype="image" mime-subtype="jpeg" xlink:href="polyscope_gui.jpg" />
  </fig>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>While there exist many Python libraries for computing the DT in 2D
  (a search for “Delaunay triangulation” in the
  <ext-link ext-link-type="uri" xlink:href="https://pypi.org/search/?q=Delaunay+triangulation"><italic>Python
  Package Index</italic> (PyPI)</ext-link> returns over 200 packages),
  most of them are not fully suitable for the modelling of 2.5D
  triangulated terrain.</p>
  <p>startinpy has the following properties, which greatly improve the
  modelling and processing of 2.5D terrains.</p>
  <p><bold>It is fast for large datasets.</bold> With a modern lidar
  scanner, we can easily collect 50
  samples/<inline-formula><alternatives>
  <tex-math><![CDATA[m^2]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msup><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></alternatives></inline-formula>,
  which means that a 1 <inline-formula><alternatives>
  <tex-math><![CDATA[km^2]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>k</mml:mi><mml:msup><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>
  area will contain 50+ million samples. Since constructing a DT
  requires several steps, if those steps are implemented in pure Python
  then the library becomes very slow. As can be seen in the
  <ext-link ext-link-type="uri" xlink:href="https://startinpy.readthedocs.io/latest/comparison.html">DT
  construction comparison</ext-link>, startinpy is faster than most
  other libraries for large datasets. This is partly because it is 100%
  developed in Rust; the core library is called “startin” and its the
  source code is available at
  <ext-link ext-link-type="uri" xlink:href="https://github.com/hugoledoux/startin">https://github.com/hugoledoux/startin</ext-link>.</p>
  <p><bold>Its data structure is exposed.</bold> Most libraries only
  return a list of vertices and triangles (triplets of vertex
  identifiers), which means that the user has to build an auxiliary
  graph to be able to find the adjacent triangles of a given one, or to
  find all the triangles that are incident to a given vertex (eg to
  calculate the normal). The name “startinpy” comes from the fact that
  the data structure implemented is based on the concept of
  <italic>stars</italic> in a graph
  (<xref alt="Blandford et al., 2005" rid="ref-Blandford05" ref-type="bibr">Blandford
  et al., 2005</xref>), which allows us to store adjacency and
  incidence, and have a very compact data structure. startinpy exposes
  methods to search triangles, find the adjacent triangles of a
  triangle, and find the incident triangles to a vertex.</p>
  <p><bold>The DT is incrementally constructed and deletion of vertices
  is possible.</bold> Unlike the majority of 2D DT implementations,
  startinpy implements an <italic>incremental</italic> insertion
  algorithm
  (<xref alt="Lawson, 1972" rid="ref-Lawson72-1" ref-type="bibr">Lawson,
  1972</xref>), which allows for constructing a simplified TIN that best
  approximates the original terrain with only 10% of the points; see
  Garland &amp; Heckbert
  (<xref alt="1995" rid="ref-Garland95" ref-type="bibr">1995</xref>) for
  different strategies. startinpy also implements a modification of the
  deletion algorithm in Mostafavi et al.
  (<xref alt="2003" rid="ref-Mostafavi03" ref-type="bibr">2003</xref>),
  extended to allow the deletion of vertices on the boundary of the
  convex hull. The deletion of vertices in a DT is useful to remove
  outliers (which are detected by analysing neighbouring triangles in
  the DT) and for the implementation of the natural neighbours
  interpolation method
  (<xref alt="Sibson, 1981" rid="ref-Sibson81" ref-type="bibr">Sibson,
  1981</xref>).</p>
  <p><bold>The z-values are stored and xy-duplicates handled.</bold>
  Some libraries allow us to attach extra information to a vertex, but
  most often one has to build an auxiliary data structure in Python to
  manage those. Doing so is error-prone, tedious, and makes operations
  in 3D more complex (eg calculating the slope of an area, calculating
  the normal of a vertex, estimating the elevation with spatial
  interpolation, calculating volumes). By storing the z-values,
  startinpy allows us to merge vertices that are close to each other (in
  the xy-plane; the tolerance can be defined by the user) and if there
  are xy-duplicates, then a user-defined z-value can be kept (eg lowest
  or highest, depending on the application).</p>
  <p><bold>Extra attributes can be stored in the DT.</bold> It is
  possible to attach extra attributes with each vertex of the terrain.
  This can be used to preserve the lidar properties of the input points
  (eg intensity, RGB, number of returns, etc.).</p>
  <p>The
  <ext-link ext-link-type="uri" xlink:href="https://startinpy.rtfd.io">documentation
  of startinpy</ext-link> contains several examples of the library and
  how it can be used to prepare datasets for input to machine learning
  algorithms, to convert to different formats used in practice, to
  interpolate, etc.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>I acknowledge the help of the students following the course
  <ext-link ext-link-type="uri" xlink:href="https://3d.bk.tudelft.nl/courses/geo1015/"><italic>Digital
  terrain modelling (GEO1015)</italic> at TUDelft</ext-link> over the
  last few years. Their feedback, questions, and frustrations on
  preliminary versions of startinpy helped me greatly.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-Aurenhammer12">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Aurenhammer</surname><given-names>Franz</given-names></name>
        <name><surname>Klein</surname><given-names>Rolf</given-names></name>
        <name><surname>Lee</surname><given-names>Der-Tsai</given-names></name>
      </person-group>
      <source>Voronoi diagrams and delaunay triangulations</source>
      <publisher-name>World Scientific</publisher-name>
      <year iso-8601-date="2012">2012</year>
      <pub-id pub-id-type="doi">10.1142/8685</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Lawson72-1">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lawson</surname><given-names>Charles L.</given-names></name>
      </person-group>
      <article-title>Transforming triangulations</article-title>
      <source>Discrete Applied Mathematics</source>
      <year iso-8601-date="1972">1972</year>
      <volume>3</volume>
      <pub-id pub-id-type="doi">10.1016/0012-365X(72)90093-3</pub-id>
      <fpage>365</fpage>
      <lpage>372</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Kan24">
    <element-citation publication-type="thesis">
      <person-group person-group-type="author">
        <name><surname>Kan</surname><given-names>L. W. L.</given-names></name>
      </person-group>
      <article-title>Spatial height prediction of ICESat-2 data using random forest regression</article-title>
      <publisher-name>MSc thesis in Geomatics, Delft University of Technology</publisher-name>
      <year iso-8601-date="2024">2024</year>
    </element-citation>
  </ref>
  <ref id="ref-Meschin23">
    <element-citation publication-type="thesis">
      <person-group person-group-type="author">
        <name><surname>Meschin</surname><given-names>Katrin</given-names></name>
      </person-group>
      <article-title>Canopy gap fraction estimation from ICESat-2 ATL08 product</article-title>
      <publisher-name>MSc thesis in Geomatics, Delft University of Technology</publisher-name>
      <year iso-8601-date="2023">2023</year>
    </element-citation>
  </ref>
  <ref id="ref-Sibson81">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Sibson</surname><given-names>Robin</given-names></name>
      </person-group>
      <article-title>A brief description of natural neighbour interpolation</article-title>
      <source>Interpreting multivariate data</source>
      <person-group person-group-type="editor">
        <name><surname>Barnett</surname><given-names>Vic</given-names></name>
      </person-group>
      <publisher-name>Wiley</publisher-name>
      <publisher-loc>New York, USA</publisher-loc>
      <year iso-8601-date="1981">1981</year>
      <fpage>21</fpage>
      <lpage>36</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Belikov97">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Belikov</surname><given-names>V. V.</given-names></name>
        <name><surname>Ivanov</surname><given-names>V. D.</given-names></name>
        <name><surname>Kontorovich</surname><given-names>V. K.</given-names></name>
        <name><surname>Korytnik</surname><given-names>S. A.</given-names></name>
        <name><surname>Semenov</surname><given-names>A. Y.</given-names></name>
      </person-group>
      <article-title>The non-Sibsonian interpolation: A new method of interpolation of the values of a function on an arbitrary set of points</article-title>
      <source>Computational Mathematics and Mathematical Physics</source>
      <year iso-8601-date="1997">1997</year>
      <volume>37</volume>
      <fpage>9</fpage>
      <lpage>15</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Garland95">
    <element-citation publication-type="report">
      <person-group person-group-type="author">
        <name><surname>Garland</surname><given-names>Michael</given-names></name>
        <name><surname>Heckbert</surname><given-names>Paul S.</given-names></name>
      </person-group>
      <article-title>Fast polygonal approximation of terrain and height fields</article-title>
      <publisher-name>School of Computer Science, Carnegie Mellon University; School of Computer Science, Carnegie Mellon University</publisher-name>
      <publisher-loc>Pittsburgh, PA, USA</publisher-loc>
      <year iso-8601-date="1995">1995</year>
    </element-citation>
  </ref>
  <ref id="ref-Pronk24">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Pronk</surname><given-names>Maarten</given-names></name>
        <name><surname>Hooijer</surname><given-names>Aljosja</given-names></name>
        <name><surname>Eilander</surname><given-names>Dirk</given-names></name>
        <name><surname>Haag</surname><given-names>Arjen</given-names></name>
        <name><surname>Jong</surname><given-names>Tjalling de</given-names></name>
        <name><surname>Vousdoukas</surname><given-names>Michalis</given-names></name>
        <name><surname>Vernimmen</surname><given-names>Ronald</given-names></name>
        <name><surname>Ledoux</surname><given-names>Hugo</given-names></name>
        <name><surname>Eleveld</surname><given-names>Marieke</given-names></name>
      </person-group>
      <article-title>DeltaDTM: A global coastal digital terrain model</article-title>
      <source>Nature Scientific data</source>
      <year iso-8601-date="2024">2024</year>
      <volume>11</volume>
      <issue>273</issue>
      <pub-id pub-id-type="doi">10.1038/s41597-024-03091-9</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Mostafavi03">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Mostafavi</surname><given-names>Mir Abolfazl</given-names></name>
        <name><surname>Gold</surname><given-names>Christopher M.</given-names></name>
        <name><surname>Dakowicz</surname><given-names>Maciej</given-names></name>
      </person-group>
      <article-title>Delete and insert operations in Voronoi/Delaunay methods and applications</article-title>
      <source>Computers &amp; Geosciences</source>
      <year iso-8601-date="2003">2003</year>
      <volume>29</volume>
      <issue>4</issue>
      <pub-id pub-id-type="doi">10.1016/S0098-3004(03)00017-7</pub-id>
      <fpage>523</fpage>
      <lpage>530</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Blandford05">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Blandford</surname><given-names>Daniel K.</given-names></name>
        <name><surname>Blelloch</surname><given-names>Guy E.</given-names></name>
        <name><surname>Cardoze</surname><given-names>David E.</given-names></name>
        <name><surname>Kadow</surname><given-names>Clemens</given-names></name>
      </person-group>
      <article-title>Compact representations of simplicial meshes in two and three dimensions</article-title>
      <source>International Journal of Computational Geometry and Applications</source>
      <year iso-8601-date="2005">2005</year>
      <volume>15</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1142/S0218195905001580</pub-id>
      <fpage>3</fpage>
      <lpage>24</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Shewchuk96">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Shewchuk</surname><given-names>Jonathan Richard</given-names></name>
      </person-group>
      <article-title>Robust adaptive floating-point geometric predicates</article-title>
      <source>Proceedings 12th annual symposium on computational geometry</source>
      <publisher-name>ACM Press</publisher-name>
      <publisher-loc>Philadelphia, USA</publisher-loc>
      <year iso-8601-date="1996">1996</year>
      <pub-id pub-id-type="doi">10.1145/237218.237337</pub-id>
      <fpage>141</fpage>
      <lpage>150</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
