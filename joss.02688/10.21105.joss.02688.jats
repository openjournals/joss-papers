<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">2688</article-id>
<article-id pub-id-type="doi">10.21105/joss.02688</article-id>
<title-group>
<article-title>Hardware-Control: Instrument control and automation
package</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-2885-4801</contrib-id>
<name>
<surname>Giesbrecht</surname>
<given-names>Grant</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-3433-2698</contrib-id>
<name>
<surname>Amsellem</surname>
<given-names>Ariel</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-2094-2612</contrib-id>
<name>
<surname>Bauer</surname>
<given-names>Timo</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-7095-8108</contrib-id>
<name>
<surname>Mak</surname>
<given-names>Brian</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-0593-2195</contrib-id>
<name>
<surname>Wynne</surname>
<given-names>Brian</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-5577-1270</contrib-id>
<name>
<surname>Qin</surname>
<given-names>Zhihao</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-3186-8358</contrib-id>
<name>
<surname>Persaud</surname>
<given-names>Arun</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Lawrence Berkeley National Laboratory, Berkeley, CA 94720,
USA</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Technische Universität Darmstadt, 64289 Darmstadt, Hesse,
Germany</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2021-10-21">
<day>21</day>
<month>10</month>
<year>2021</year>
</pub-date>
<volume>7</volume>
<issue>72</issue>
<fpage>2688</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>Instrument Control</kwd>
<kwd>Automation</kwd>
<kwd>Data Collection</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Conducting experimental research often relies on the control of
  laboratory instruments to, for example, control power supplies, move
  stages, and measure data. Tasks, such as data logging or parameter
  scans, often need to be automated. Being able to easily create a user
  interface to the hardware and to be able to reuse code is highly
  desirable.</p>
  <p><monospace>Hardware-Control</monospace> is a Python package for
  instrument control and automation. It provides reusable user
  interfaces and instrument drivers to simplify writing control
  programs. <monospace>Hardware-Control</monospace> uses PyQt5, a GUI
  framework
  (<xref alt="Riverbank Computing Limited, 2020" rid="ref-pyqt" ref-type="bibr">Riverbank
  Computing Limited, 2020</xref>), to create fast and efficient user
  interfaces compatible with most major operating systems.
  <monospace>Hardware-Control</monospace> is also designed so that new
  drivers can be easily added for new hardware and used with existing
  user interfaces. The package also provides means for simplifying data
  collection with automatic data logging, plotting, and several export
  formats. <monospace>Hardware-Control</monospace> was designed with the
  use case of experiments in our laboratory in mind. Normally, this
  involves reading and setting voltages, controlling power supplies and
  oscilloscopes, updating values on external triggers, and automatically
  updating these values on a timer with time scales of about a second.
  The program is currently not well-fitted to do any real-time or near
  real-time communications with instruments or to handle data that is,
  for example, being streamed from a camera. The program interacts best
  with message-based devices or devices that already have Python’s
  modules available to control them. The program’s instrument drivers
  can send messages to sockets, usb ports, serial ports, etc. or call a
  Python function to read or write a setting or call a command on the
  interface. Most of the drivers rely on the excellent PyVISA
  (<xref alt="PyVISA Authors, 2021" rid="ref-pyvisa" ref-type="bibr">PyVISA
  Authors, 2021</xref>) library, but drivers can also utilize PyModbus
  (<xref alt="Pymodbus Authors, 2021" rid="ref-pymodbus" ref-type="bibr">Pymodbus
  Authors, 2021</xref>), or the built-in socket library.</p>
  <p>For handling the data, we rely on NumPy
  (<xref alt="Harris et al., 2020" rid="ref-numpy" ref-type="bibr">Harris
  et al., 2020</xref>), pandas
  (<xref alt="The pandas development team, 2021" rid="ref-pandas" ref-type="bibr">The
  pandas development team, 2021</xref>), and many other common libraries
  that are available on PyPI to do data analysis.</p>
  <p>For communications within the library we rely on ZMQ
  (<xref alt="ZMQ Authors, 2021" rid="ref-ZMQ" ref-type="bibr">ZMQ
  Authors, 2021</xref>).</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Commercial systems, such as LabVIEW, already exist, and they often
  do provide a wide range of instrument drivers (either directly or from
  the manufacturer of the devices). However, we have found that the
  resulting code is often hard to version control (LabVIEW files are
  binary, so code reviews and pull requests on services such as
  Bitbucket and GitHub are therefore difficult). Furthermore, although
  backend code can be shared between projects, complex user interfaces
  cannot easily be reused. The software package presented here tries to
  address these issues. Specifically, it makes reusing frontend code
  easier, integrates well with git, and provides an easy built-in
  scripting solution (via an optional Python REPL that has full access
  to the GUI and all backends). The control through Python during
  execution makes one-off complex parameter scans easy to implement. The
  software also makes it easy to develop and test the code without any
  hardware connected to the system by running a program in ‘dummy mode’
  in which the hardware does not need to be present. When in dummy mode,
  the user can specify return values for certain opperations in order to
  test the program.</p>
  <p>Similar packages already exist (see Scopefoundry.org
  (<xref alt="Barnard et al., 2020" rid="ref-Barnard" ref-type="bibr">Barnard
  et al., 2020</xref>), PyMeasure
  (<xref alt="Jermain &amp; al., 2021" rid="ref-pymeasure" ref-type="bibr">Jermain
  &amp; al., 2021</xref>), yaq
  (<xref alt="Yaq authors, 2021" rid="ref-yaq" ref-type="bibr">Yaq
  authors, 2021</xref>), etc.). A good overview of available Python
  packages can be found in Buchner
  (<xref alt="2022" rid="ref-overview" ref-type="bibr">2022</xref>).
  However, for our experiments we had a specific use case in mind, and
  we therefore decided to implement the provided solution. This software
  is currently actively used in our group at Lawrence Berkeley National
  Laboratory. Although our group is using
  <monospace>Hardware-Control</monospace> specifically in beam physics
  applications, we believe that the code can be useful for other
  experiments too.</p>
  <p>In principle, we plan to continue to develop the code in the future
  by adding more instrument drivers and custom widgets since we believe
  that the current solution provides us several benefits compared to
  prior solutions and we have working setups at our test stands.
  Therefore, we are also open to community contributions. However, we
  are also open to merge our code into one of the pre-existing code
  bases and plan to explore these options going forward.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The information, data, or work presented herein was funded by the
  Advanced Research Projects Agency-Energy (ARPA-E), U.S. Department of
  Energy, under Contract No. DE-AC02- 05CH11231.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-Barnard">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Barnard</surname><given-names>Edward S.</given-names></name>
        <name><surname>Buckley</surname><given-names>Alan</given-names></name>
        <name><surname>Borys</surname><given-names>Nick</given-names></name>
        <name><surname>Ogletree</surname><given-names>Frank</given-names></name>
        <name><surname>Ursprung</surname><given-names>Benedikt</given-names></name>
        <name><surname>Aiello</surname><given-names>Clarice</given-names></name>
        <name><surname>Wu</surname><given-names>Hao</given-names></name>
      </person-group>
      <article-title>A python platform for controlling custom laboratory experiments and visualizing scientific data</article-title>
      <publisher-name>http://www.scopefoundry.org/</publisher-name>
      <year iso-8601-date="2020">2020</year>
    </element-citation>
  </ref>
  <ref id="ref-pymeasure">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Jermain</surname><given-names>Colin</given-names></name>
        <name><surname>al.</surname><given-names>Graham Rowlands et</given-names></name>
      </person-group>
      <article-title>PyMeasure scientific package</article-title>
      <publisher-name>https://pymeasure.readthedocs.io/en/latest/index.html</publisher-name>
      <year iso-8601-date="2021">2021</year>
    </element-citation>
  </ref>
  <ref id="ref-yaq">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>Yaq authors</string-name>
      </person-group>
      <article-title>A modular and extensible instrument control framework</article-title>
      <publisher-name>https://yaq.fyi</publisher-name>
      <year iso-8601-date="2021">2021</year>
    </element-citation>
  </ref>
  <ref id="ref-overview">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Buchner</surname><given-names>Christoph</given-names></name>
      </person-group>
      <article-title>Python lab automation landscape catalog</article-title>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2022-03">2022</year><month>03</month>
      <uri>https://doi.org/10.5281/zenodo.6399528</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.6399528</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-pyqt">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>Riverbank Computing Limited</string-name>
      </person-group>
      <article-title>Python bindings for the qt cross platform application toolkit</article-title>
      <publisher-name>https://pypi.org/project/PyQt5/</publisher-name>
      <year iso-8601-date="2020">2020</year>
    </element-citation>
  </ref>
  <ref id="ref-numpy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>Walt</surname><given-names>Stéfan J. van der</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Wieser</surname><given-names>Eric</given-names></name>
        <name><surname>Taylor</surname><given-names>Julian</given-names></name>
        <name><surname>Berg</surname><given-names>Sebastian</given-names></name>
        <name><surname>Smith</surname><given-names>Nathaniel J.</given-names></name>
        <name><surname>Kern</surname><given-names>Robert</given-names></name>
        <name><surname>Picus</surname><given-names>Matti</given-names></name>
        <name><surname>Hoyer</surname><given-names>Stephan</given-names></name>
        <name><surname>Kerkwijk</surname><given-names>Marten H. van</given-names></name>
        <name><surname>Brett</surname><given-names>Matthew</given-names></name>
        <name><surname>Haldane</surname><given-names>Allan</given-names></name>
        <name><surname>Río</surname><given-names>Jaime Fernández del</given-names></name>
        <name><surname>Wiebe</surname><given-names>Mark</given-names></name>
        <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
        <name><surname>Gérard-Marchant</surname><given-names>Pierre</given-names></name>
        <name><surname>Sheppard</surname><given-names>Kevin</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
        <name><surname>Abbasi</surname><given-names>Hameer</given-names></name>
        <name><surname>Gohlke</surname><given-names>Christoph</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
      </person-group>
      <article-title>Array programming with NumPy</article-title>
      <source>Nature</source>
      <publisher-name>Springer Science; Business Media LLC</publisher-name>
      <year iso-8601-date="2020-09">2020</year><month>09</month>
      <volume>585</volume>
      <issue>7825</issue>
      <uri>https://doi.org/10.1038/s41586-020-2649-2</uri>
      <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
      <fpage>357</fpage>
      <lpage>362</lpage>
    </element-citation>
  </ref>
  <ref id="ref-pandas">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <string-name>The pandas development team</string-name>
      </person-group>
      <source>Pandas-dev/pandas: pandas</source>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2021-10">2021</year><month>10</month>
      <uri>https://doi.org/10.5281/zenodo.5574486</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.5574486</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-pyvisa">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>PyVISA Authors</string-name>
      </person-group>
      <article-title>PyVISA documentation</article-title>
      <year iso-8601-date="2021">2021</year>
      <uri>https://pyvisa.readthedocs.io/en/stable/</uri>
    </element-citation>
  </ref>
  <ref id="ref-pymodbus">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>Pymodbus Authors</string-name>
      </person-group>
      <article-title>Pymodbus documentation</article-title>
      <year iso-8601-date="2021">2021</year>
      <uri>https://pymodbus.readthedocs.io/en/latest/index.html</uri>
    </element-citation>
  </ref>
  <ref id="ref-ZMQ">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>ZMQ Authors</string-name>
      </person-group>
      <article-title>ZMQ documentation</article-title>
      <year iso-8601-date="2021">2021</year>
      <uri>https://zeromq.org/</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
