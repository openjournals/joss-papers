<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">4915</article-id>
<article-id pub-id-type="doi">10.21105/joss.04915</article-id>
<title-group>
<article-title>PyNGHam: A Python library of the NGHam
protocol</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-4889-6021</contrib-id>
<name>
<surname>Marcelino</surname>
<given-names>Gabriel Mariano</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Space Technology Research Laboratory (SpaceLab),
Universidade Federal de Santa Catarina</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Senai Institute for Innovation in Embedded Systems
(ISI-SE)</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2022-11-29">
<day>29</day>
<month>11</month>
<year>2022</year>
</pub-date>
<volume>8</volume>
<issue>81</issue>
<fpage>4915</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>Telecommunications</kwd>
<kwd>Protocols</kwd>
<kwd>Ham Radio</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The PyNGHam library is a Python implementation of the original
  NGHam protocol library written in C by Jon Petter Skagmo (LA3JPA)
  (<xref alt="Skagmo, 2014" rid="ref-ngham" ref-type="bibr">Skagmo,
  2014</xref>). The NGHam protocol is an amateur radio protocol
  developed to be a modern version of the AX.25 protocol, with the main
  improvement of introducing a forward error correction (FEC) algorithm,
  which considerably improves the robustness of the communication link.
  One of the main applications of this protocol is on small satellite
  projects (specifically CubeSats), supporting a reliable communication
  link between the ground station and the satellite. This Python
  implementation enables easier integration and use of this protocol in
  computers and embedded devices.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>The NGHam protocol was originally developed in the context of a
  CubeSat development at the Norwegian University of Science and
  Technology (NTNU)
  (<xref alt="Løfaldli &amp; Birkeland, 2016" rid="ref-lofaldi2016" ref-type="bibr">Løfaldli
  &amp; Birkeland, 2016</xref>). It was later used by the Space
  Technology Research Laboratory (SpaceLab) team, from Universidade
  Federal de Santa Catarina (Brazil), on the FloripaSat-1 CubeSat, and
  is being used by all satellites of the group so far. The known
  satellites that have used or plan to use the NGHam protocol are:</p>
  <list list-type="bullet">
    <list-item>
      <p><bold>FloripaSat-1</bold>
      (<xref alt="Marcelino et al., 2020" rid="ref-marcelino2020" ref-type="bibr">Marcelino
      et al., 2020</xref>)</p>
    </list-item>
    <list-item>
      <p><bold>GOLDS-UFSC</bold> (a.k.a. <bold>FloripaSat-2</bold>)
      (<xref alt="SpaceLab, 2022a" rid="ref-golds-ufsc" ref-type="bibr">SpaceLab,
      2022a</xref>)</p>
    </list-item>
    <list-item>
      <p><bold>Catarina-A1</bold> (Catarina Constellation)
      (<xref alt="Seman et al., 2022" rid="ref-seman2022" ref-type="bibr">Seman
      et al., 2022</xref>)</p>
    </list-item>
    <list-item>
      <p><bold>PION-BR1</bold>
      (<xref alt="PION Labs, 2022" rid="ref-pion-br1" ref-type="bibr">PION
      Labs, 2022</xref>)</p>
    </list-item>
    <list-item>
      <p><bold>Aldebaran-1</bold></p>
    </list-item>
    <list-item>
      <p><bold>NUTS-1</bold>
      (<xref alt="Løfaldli &amp; Birkeland, 2016" rid="ref-lofaldi2016" ref-type="bibr">Løfaldli
      &amp; Birkeland, 2016</xref>)</p>
    </list-item>
  </list>
  <p>The first three satellites in the list are satellites developed (or
  in development) by the same research group, the SpaceLab, where this
  library was developed.</p>
  <p>From the knowledge of the author, there is no Python implementation
  of the protocol in the literature. An implementation in a high-level
  language facilitates the development of user applications to
  communicate with objects in orbit. The intention is to make PyNGHam
  usable in end-user applications, like satellite decoders used in real
  satellite missions. It is an alternative to the GNU Radio
  (<xref alt="GNU Radio - the Free and Open Software Radio Ecosystem, 2022" rid="ref-gnu-radio" ref-type="bibr"><italic>GNU
  Radio - the Free and Open Software Radio Ecosystem</italic>,
  2022</xref>) blocks such as gr-nuts
  (<xref alt="Løfaldli, 2022" rid="ref-gr-nuts" ref-type="bibr">Løfaldli,
  2022</xref>), but independent from the GNU Radio ecosystem. It is also
  useful as a simulation or research/education tool that can be used in
  simple Python scripts.</p>
  <p>This library is already being used in the design of satellites by
  SpaceLab, as a part of the ground station software
  (<xref alt="SpaceLab, 2022b" rid="ref-spacelab-decoder" ref-type="bibr">SpaceLab,
  2022b</xref>,
  <xref alt="2022c" rid="ref-spacelab-transmitter" ref-type="bibr">2022c</xref>)
  responsible for the uplink of telecommands and downlink of
  telemetry/payload data.</p>
</sec>
<sec id="ngham-protocol">
  <title>NGHam Protocol</title>
  <p>The NGHam (Next Generation Ham Radio) protocol is a link protocol
  partly inspired by AX.25
  (<xref alt="Loveall, 2022" rid="ref-ax25" ref-type="bibr">Loveall,
  2022</xref>), with the intention to be used in Ham radio packet
  communications, but using a FEC algorithm on a well-defined packet
  structure.</p>
  <p>For the FEC algorithm, the Reed-Solomon code (RS) is employed
  (<xref alt="Reed &amp; Solomon, 1960" rid="ref-reed1960" ref-type="bibr">Reed
  &amp; Solomon, 1960</xref>). Figure
  <xref alt="1" rid="figU003Angham-pkt">1</xref> presents a diagram with
  the fields of a NGHam packet.</p>
  <fig>
    <caption><p>Fields of a NGHam
    packet.<styled-content id="figU003Angham-pkt"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/9afc51b63be0e95a8ab1a00889143e45157fed8a.png" xlink:title="" />
  </fig>
  <p>For a GMSK (Gaussian Minimum - Shift Keying) modulation at 9600
  bps, a typical preamble sequence would be
  <monospace>0xAAAAAAAA</monospace> (a simple alternate of ones and
  zeros).</p>
  <p>The size tag field has seven different options, each corresponding
  to a unique packet size as described in Table 1.</p>
  <table-wrap>
    <caption>
      <p>NGHam packets sizes.</p>
    </caption>
    <table>
      <colgroup>
        <col width="17%" />
        <col width="22%" />
        <col width="33%" />
        <col width="26%" />
      </colgroup>
      <thead>
        <tr>
          <th align="left">Size Num.</th>
          <th align="left">Tag</th>
          <th align="left">Reed-Solomon Config.</th>
          <th align="left">Max. Data Size</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td align="left">1</td>
          <td align="left">59, 73, 205</td>
          <td align="left">RS(47, 31)</td>
          <td align="left">28 bytes of data</td>
        </tr>
        <tr>
          <td align="left">2</td>
          <td align="left">77, 218, 87</td>
          <td align="left">RS(79, 63)</td>
          <td align="left">60 bytes of data</td>
        </tr>
        <tr>
          <td align="left">3</td>
          <td align="left">118, 147, 154</td>
          <td align="left">RS(111, 95)</td>
          <td align="left">92 bytes of data</td>
        </tr>
        <tr>
          <td align="left">4</td>
          <td align="left">155, 180, 174</td>
          <td align="left">RS(159, 127)</td>
          <td align="left">124 bytes of data</td>
        </tr>
        <tr>
          <td align="left">5</td>
          <td align="left">160, 253, 99</td>
          <td align="left">RS(191, 159)</td>
          <td align="left">156 bytes of data</td>
        </tr>
        <tr>
          <td align="left">6</td>
          <td align="left">214, 110, 249</td>
          <td align="left">RS(223, 191)</td>
          <td align="left">188 bytes of data</td>
        </tr>
        <tr>
          <td align="left">7</td>
          <td align="left">237, 39, 52</td>
          <td align="left">RS(255, 223)</td>
          <td align="left">220 bytes of data</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <p>Following the seven possible packet sizes, after the size tag
  field, there is the data field with the Reed-Solomon code block, with
  seven different schemes, one for each size tag. As can be seen in
  Figure <xref alt="1" rid="figU003Angham-pkt">1</xref>, the used RS
  configurations are: (47, 31), (79, 63), (111, 95), (159, 127), (191,
  159), (223, 191), and (255, 223), respectively.</p>
  <p>The code block consists of two types of fields: packet data and
  parity data. The parity data is the byte sequence generated by the
  Reed-Solomon algorithm. The packet data is the information presented
  in the packet and is divided into four fields: header, payload, CRC
  (Cyclic-Redundancy Code), and padding.</p>
  <sec id="scrambling">
    <title>Scrambling</title>
    <p>Before transmitting a packet, the RS code block is scrambled by
    making a logical <monospace>xor</monospace> operation with a
    pre-generated table based on the polynomial
    <inline-formula><alternatives>
    <tex-math><![CDATA[x^{8} + x^{7} + x^{5} + x^{3} + 1]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msup><mml:mi>x</mml:mi><mml:mn>8</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mi>x</mml:mi><mml:mn>7</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mi>x</mml:mi><mml:mn>5</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
    (defined in the CCSDS 131.0-B-4 standard, Section 10.4.1
    (<xref alt="CCSDS, 2022" rid="ref-ccsds" ref-type="bibr">CCSDS,
    2022</xref>)).</p>
    <p>When the receiver receives a packet, it also performs the same
    operation to descramble the RS code block, ultimately retrieving the
    original content of the RS part of the packet. By scrambling the
    packets using the bit transition, long sequences of ones or zeros
    are mitigated (Section 8.3 of CCSDS
    (<xref alt="2022" rid="ref-ccsds" ref-type="bibr">2022</xref>)).</p>
  </sec>
  <sec id="serial-protocol">
    <title>Serial Protocol</title>
    <p>While the NGHam protocol can be used to support wireless
    communications, there is also the possibility to use the protocol in
    physical serial interfaces with a slightly different packet
    structure. In the serial protocol, no FEC algorithm is involved, but
    merely a checksum field to indicate whether an error occurred during
    the transmission can be integrated. Both wireless and serial options
    can be integrated into a device.</p>
  </sec>
  <sec id="extensions">
    <title>Extensions</title>
    <p>The payload of an NGHam packet can also contain subpackets,
    called extension packets. Each NGHam extension packet has a separate
    header describing the type and size of the subsequent data. A
    payload can contain multiple extension packets, each containing
    information such as position, callsign, timing information,
    statistics, destination, repeating information, and others. The use
    of extensions is optional.</p>
  </sec>
</sec>
<sec id="the-python-implementation">
  <title>The Python Implementation</title>
  <p>This Python implementation of the protocol was partly inspired by
  the structure of the original implementation in C, but with the main
  difference being the use of an object-oriented language. This way, a
  class for each of the three main possible uses of the protocol is
  available: the normal NGHam packets, the serial port packets, and the
  use of the extensions. All of these three classes are implemented with
  a similar approach, using at least two methods for packet encoding and
  decoding. The encoding and decoding processes generate a list of
  integers, representing the bytes of an NGHam packet/payload data. More
  information about the PyNGHam library can be found in the
  documentation:
  <ext-link ext-link-type="uri" xlink:href="https://mgm8.github.io/pyngham/">https://mgm8.github.io/pyngham/</ext-link>.</p>
</sec>
<sec id="conclusion">
  <title>Conclusion</title>
  <p>The objective of this library is to offer an alternative to the
  original NGHam library, purely written in Python. In this manner, such
  a package can easily be used to carry out simulations, develop packet
  encoding and decoding tools, and introduce telecommunication concepts
  to students, among others. It is useful especially for satellite
  communications, space experiments, and for general use in the amateur
  radio community.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The author would like to thank Jon Petter Skagmo (LA3JPA), the
  original creator of the protocol, Phil Karn (KA9Q), the developer of
  the FEC library, and the SpaceLab members for their support and
  feedback over the last years.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-ngham">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Skagmo</surname><given-names>Jon Petter</given-names></name>
      </person-group>
      <article-title>NGHam protocol</article-title>
      <year iso-8601-date="2014">2014</year>
      <uri>https://github.com/skagmo/ngham</uri>
    </element-citation>
  </ref>
  <ref id="ref-ax25">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Loveall</surname><given-names>Peter</given-names></name>
      </person-group>
      <article-title>AX.25 Layer 2</article-title>
      <year iso-8601-date="2022">2022</year>
      <uri>http://www.ax25.net/</uri>
    </element-citation>
  </ref>
  <ref id="ref-lofaldi2016">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Løfaldli</surname><given-names>André</given-names></name>
        <name><surname>Birkeland</surname><given-names>Roger</given-names></name>
      </person-group>
      <article-title>Implementation of a software defined radio prototype ground station for CubeSats</article-title>
      <year iso-8601-date="2016-06">2016</year><month>06</month>
      <pub-id pub-id-type="doi">10.13140/RG.2.1.1806.0408</pub-id>
      <fpage></fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-reed1960">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Reed</surname><given-names>I. S.</given-names></name>
        <name><surname>Solomon</surname><given-names>G.</given-names></name>
      </person-group>
      <article-title>Polynomial codes over certain finite fields</article-title>
      <source>Journal of the Society for Industrial and Applied Mathematics</source>
      <year iso-8601-date="1960">1960</year>
      <volume>8</volume>
      <issue>2</issue>
      <uri>https://doi.org/10.1137/0108018</uri>
      <pub-id pub-id-type="doi">10.1137/0108018</pub-id>
      <fpage>300</fpage>
      <lpage>304</lpage>
    </element-citation>
  </ref>
  <ref id="ref-marcelino2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Marcelino</surname><given-names>Gabriel Mariano</given-names></name>
        <name><surname>Vega-Martinez</surname><given-names>Sara</given-names></name>
        <name><surname>Seman</surname><given-names>Laio Oriel</given-names></name>
        <name><surname>Kessler Slongo</surname><given-names>Leonardo</given-names></name>
        <name><surname>Bezerra</surname><given-names>Eduardo Augusto</given-names></name>
      </person-group>
      <article-title>A critical embedded system challenge: The FloripaSat-1 mission</article-title>
      <source>IEEE Latin America Transactions</source>
      <year iso-8601-date="2020">2020</year>
      <volume>18</volume>
      <issue>02</issue>
      <pub-id pub-id-type="doi">10.1109/TLA.2020.9085277</pub-id>
      <fpage>249</fpage>
      <lpage>256</lpage>
    </element-citation>
  </ref>
  <ref id="ref-ccsds">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>CCSDS</surname></name>
      </person-group>
      <source>TM synchronization and channel coding</source>
      <publisher-name>The Consultative Committee for Space Data Systems</publisher-name>
      <publisher-loc>CCSDS Secretariat, National Aeronautics; Space Administration, Washington, DC, USA</publisher-loc>
      <year iso-8601-date="2022">2022</year>
      <uri>https://public.ccsds.org/Pubs/131x0b4.pdf</uri>
    </element-citation>
  </ref>
  <ref id="ref-spacelab-decoder">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>SpaceLab</string-name>
      </person-group>
      <article-title>SpaceLab packet decoder</article-title>
      <year iso-8601-date="2022">2022</year>
      <uri>https://github.com/spacelab-ufsc/spacelab-decoder</uri>
    </element-citation>
  </ref>
  <ref id="ref-spacelab-transmitter">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>SpaceLab</string-name>
      </person-group>
      <article-title>SpaceLab packet transmitter</article-title>
      <year iso-8601-date="2022">2022</year>
      <uri>https://github.com/spacelab-ufsc/spacelab-transmitter</uri>
    </element-citation>
  </ref>
  <ref id="ref-golds-ufsc">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>SpaceLab</string-name>
      </person-group>
      <article-title>GOLDS-UFSC mission</article-title>
      <year iso-8601-date="2022">2022</year>
      <uri>https://github.com/spacelab-ufsc/floripasat2-doc</uri>
    </element-citation>
  </ref>
  <ref id="ref-seman2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Seman</surname><given-names>Laio Oriel</given-names></name>
        <name><surname>Ribeiro</surname><given-names>Brenda F.</given-names></name>
        <name><surname>Rigo</surname><given-names>Cezar A.</given-names></name>
        <name><surname>Filho</surname><given-names>Edemar Morsch</given-names></name>
        <name><surname>Camponogara</surname><given-names>Eduardo</given-names></name>
        <name><surname>Leonardi</surname><given-names>Rodrigo</given-names></name>
        <name><surname>Bezerra</surname><given-names>Eduardo A.</given-names></name>
      </person-group>
      <article-title>An energy-aware task scheduling for quality-of-service assurance in constellations of nanosatellites</article-title>
      <source>Sensors</source>
      <year iso-8601-date="2022">2022</year>
      <volume>22</volume>
      <issue>10</issue>
      <issn>1424-8220</issn>
      <pub-id pub-id-type="doi">10.3390/s22103715</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-pion-br1">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>PION Labs</string-name>
      </person-group>
      <article-title>Information for communicating with PION-BR1</article-title>
      <year iso-8601-date="2022">2022</year>
      <uri>https://github.com/pion-labs/PION-BR1/wiki/Radio-Information</uri>
    </element-citation>
  </ref>
  <ref id="ref-gr-nuts">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Løfaldli</surname><given-names>André</given-names></name>
      </person-group>
      <article-title>gr-nuts - GNU Radio module for the NUTS project groundstation</article-title>
      <year iso-8601-date="2022">2022</year>
      <uri>https://github.com/lofaldli/gr-nuts</uri>
    </element-citation>
  </ref>
  <ref id="ref-gnu-radio">
    <element-citation>
      <article-title>GNU Radio - the free and open software radio ecosystem</article-title>
      <year iso-8601-date="2022">2022</year>
      <uri>https://www.gnuradio.org</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
