<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6226</article-id>
<article-id pub-id-type="doi">10.21105/joss.06226</article-id>
<title-group>
<article-title>Enlsip.jl: A Julia optimization package to solve
constrained nonlinear least-squares problems</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0000-1043-5057</contrib-id>
<name>
<surname>Borie</surname>
<given-names>Pierre</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0009-5964-8892</contrib-id>
<name>
<surname>Marcotte</surname>
<given-names>Alain</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-1323-6787</contrib-id>
<name>
<surname>Bastin</surname>
<given-names>Fabian</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0005-9043-9328</contrib-id>
<name>
<surname>Dellacherie</surname>
<given-names>Stéphane</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Computer Science and Operations Research,
University of Montreal, Montreal, QC, Canada</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Unit of Inflow and Load Forecasting, Hydro-Québec,
Montreal, QC, Canada</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Department of Computer Science, UQÀM, Montreal, QC,
Canada</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-10-31">
<day>31</day>
<month>10</month>
<year>2023</year>
</pub-date>
<volume>9</volume>
<issue>97</issue>
<fpage>6226</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Julia</kwd>
<kwd>constrained optimization</kwd>
<kwd>nonlinear least-squares</kwd>
<kwd>Fortran77</kwd>
<kwd>short-term load forecasting</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><ext-link ext-link-type="uri" xlink:href="https://github.com/UncertainLab/Enlsip.jl">Enlsip.jl</ext-link>
  is a Julia
  (<xref alt="Bezanson et al., 2017" rid="ref-JuliaU003A2017" ref-type="bibr">Bezanson
  et al., 2017</xref>) package that implements a solver for nonlinear
  least-squares problems with nonlinear constraints.</p>
  <p>This type of problem is mathematically formulated as:
  <named-content id="eqU003Acnlls" content-type="equation"><disp-formula><alternatives>
  <tex-math><![CDATA[
           \quad \begin{aligned}  
                          \quad \min_{x \in \mathbb{R}^n}        \quad&  \frac{1}{2} \sum_{i=1}^{m} r_i(x)^2  \\
                          \text{s.t.}      \quad & c_i(x)=0, \quad i =1,\ldots,q\\
                          & c_i(x) \geq 0, \quad i=q+1,\ldots,\ell,
          \end{aligned}]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mspace width="1.0em"></mml:mspace><mml:mtable><mml:mtr><mml:mtd columnalign="right" style="text-align: right"><mml:mspace width="1.0em"></mml:mspace><mml:munder><mml:mo>min</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mi>ℝ</mml:mi><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:munder><mml:mspace width="1.0em"></mml:mspace></mml:mtd><mml:mtd columnalign="left" style="text-align: left"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover><mml:msub><mml:mi>r</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msup><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right" style="text-align: right"><mml:mtext mathvariant="normal">s.t.</mml:mtext><mml:mspace width="1.0em"></mml:mspace></mml:mtd><mml:mtd columnalign="left" style="text-align: left"><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mspace width="1.0em"></mml:mspace><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right" style="text-align: right"></mml:mtd><mml:mtd columnalign="left" style="text-align: left"><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>≥</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mspace width="1.0em"></mml:mspace><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mi>q</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:mo>ℓ</mml:mo><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></alternatives></disp-formula></named-content></p>
  <p>where the functions <inline-formula><alternatives>
  <tex-math><![CDATA[(r_1,\ldots,r_m)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>,
  often denoted as the residuals, and constraints
  <inline-formula><alternatives>
  <tex-math><![CDATA[(c_1,\ldots,c_\ell)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mo>ℓ</mml:mo></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>
  are two-times differentiable.</p>
  <p>This package is the Julia version of <monospace>ENLSIP</monospace>
  (Easy Nonlinear Least Squares Inequality Program), an open-source
  Fortran77 library developed by Lindström &amp; Wedin
  (<xref alt="1988" rid="ref-lindstromwedin1988" ref-type="bibr">1988</xref>)<xref ref-type="fn" rid="fn1">1</xref>.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The <monospace>ENLSIP</monospace> Fortran77 library has been
  successfully used since the early 2000s by Hydro-Québec, the main
  electricity supplier for the province of Quebec in Canada, to
  calibrate its short-term electricity demand forecast models
  (<xref alt="Grenier et al., 2006" rid="ref-grenieretalU003A2006" ref-type="bibr">Grenier
  et al., 2006</xref>), which are coded in Fortran90. Since Hydro-Québec
  is transitioning from Fortran77 to Julia and its systems are used in a
  highly critical context, the primary goal of this transition is to
  ensure that the replacing Julia version reproduces the results
  obtained with the original Fortran77 version. The conversion of the
  above-mentioned <monospace>ENLSIP</monospace> library to Julia is a
  crucial part of this process.</p>
  <p>Nonlinear least-squares problems arise in a variety of model
  calibration scenarios. Formulation
  <xref alt="1" rid="eqU003Acnlls">1</xref> is particularly relevant in
  contexts where additional constraints, such as those related to
  physical models, need to be satisfied. This is due to the high-risk
  nature of Hydro-Québec’s forecasting operations. Moreover, the
  specific structure of the objective function in
  <xref alt="1" rid="eqU003Acnlls">1</xref> can be exploited to design
  algorithms more efficient than solvers for general nonlinear
  programming applied to problem
  <xref alt="1" rid="eqU003Acnlls">1</xref>.</p>
  <p>Comparison of results and performance on operational Hydro-Québec
  optimization problems have been conducted using a Julia-Fortran
  interface and they have shown very good concordance results. We
  additionally compared numerical results on nonlinear programming test
  problems
  (<xref alt="Hock &amp; Schittkowski, 1980" rid="ref-hockschittkowskiU003A1980" ref-type="bibr">Hock
  &amp; Schittkowski, 1980</xref>;
  <xref alt="Lukšan &amp; Vlček, 1999" rid="ref-lucksanvlcekU003A1999" ref-type="bibr">Lukšan
  &amp; Vlček, 1999</xref>) to ascertain whether the two versions could
  yield significantly disparate outcomes or distinct solutions. On the
  tested problems, we observed no differences in convergence behavior.
  Furthermore, the obtained solutions did not differ from a
  predetermined tolerance, the same one we previously employed to ensure
  the results of our Julia version were consistent with the requirements
  of Hydro-Québec.</p>
  <sec id="method">
    <title>Method</title>
    <p>The <monospace>ENLSIP</monospace> solver incorporates an
    iterative Gauss-Newton method designed to find a first-order
    critical point of problem <xref alt="1" rid="eqU003Acnlls">1</xref>.
    At each iteration, the algorithm solves an approximation of the
    original problem obtained after linearizing both residuals and
    constraints in a small neighborhood of the current point. Then, a
    subset of constraints, treated as equalities for the ongoing
    iteration, is formed. It contains all the equality constraints and
    the inequality constraints that are believed to be active,
    i.e. satisfied with equality, at the solution. To select the
    appropriate inequality constraints at each iteration, the authors
    implemented a strategy that follows the principles outlined in the
    Chapter 6 of Gill et al.
    (<xref alt="1981" rid="ref-gillmurraywrightU003A1985" ref-type="bibr">1981</xref>).
    The resulting subproblem, with a linear least-squares objective and
    linear equality constraints, is then solved using a null-space type
    method
    (<xref alt="Nocedal &amp; Wright, 2006, Chapter 15" rid="ref-nocedalwrightU003A2006" ref-type="bibr">Nocedal
    &amp; Wright, 2006, Chapter 15</xref>).</p>
    <p>To our knowledge, there is no formal proof of convergence for the
    method implemented in <monospace>ENLSIP</monospace>, although local
    convergence at a linear rate is to be expected from the Gauss-Newton
    paradigm. In practice, one can observe better performance when the
    starting point is relatively close to a solution of the problem.
    However, the algorithm is not suitable for large-scale applications.
    Indeed, its performance tend to deteriorate on problems with a few
    hundreds of parameters and constraints
    <inline-formula><alternatives>
    <tex-math><![CDATA[(n+\ell \geq 200)]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mo>ℓ</mml:mo><mml:mo>≥</mml:mo><mml:mn>200</mml:mn><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>
    and more than a thousand residuals <inline-formula><alternatives>
    <tex-math><![CDATA[(m\geq 1000)]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>m</mml:mi><mml:mo>≥</mml:mo><mml:mn>1000</mml:mn><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>.</p>
  </sec>
  <sec id="from-fortran77-to-julia">
    <title>From Fortran77 to Julia</title>
    <p>Our first motivation to convert <monospace>ENLSIP</monospace> in
    Julia was to improve reliability, readability and ease of
    maintenance of the original code. Also, linear algebra tools in
    Julia, based on
    <ext-link ext-link-type="uri" xlink:href="http://www.openblas.net">OpenBLAS</ext-link>,
    benefit from improved implementations than those of the algorithm by
    Lindström &amp; Wedin
    (<xref alt="1988" rid="ref-lindstromwedin1988" ref-type="bibr">1988</xref>),
    based on
    <ext-link ext-link-type="uri" xlink:href="https://www.netlib.org/minpack/">MINPACK</ext-link>.
    Furthermore, this language is highly convenient for optimization,
    offering various interface tools such as <monospace>JuMP</monospace>
    (<xref alt="Dunning et al., 2017" rid="ref-JuMPU003A2017" ref-type="bibr">Dunning
    et al., 2017</xref>) or <monospace>NLPModels</monospace>
    (<xref alt="Orban et al., 2020" rid="ref-nlp-modelsU003A2020" ref-type="bibr">Orban
    et al., 2020</xref>), to model optimization problems. Although these
    libraries are not currently used in our package, they are under
    consideration for future developments.</p>
  </sec>
  <sec id="numerical-experiments">
    <title>Numerical experiments</title>
    <p>The performance of the two versions have been compared on
    problems derived from Hydro-Québec operations and also problems from
    the literature. We illustrate this comparison on the estimation of
    CM1 (Carole Mercier-1) model parameters; it is a nonlinear
    regression model used for the hourly load forecast
    (<xref alt="Grenier et al., 2006" rid="ref-grenieretalU003A2006" ref-type="bibr">Grenier
    et al., 2006</xref>). The calibration process requires the use of
    weather data collected across the province of Quebec. The
    configuration of this model can be adapted to the number of
    parameters to be calibrated and the amount of data to be used. In
    total, 90 different instances can be thus defined with the following
    features:</p>
    <list list-type="bullet">
      <list-item>
        <p>from 258 to 726 parameters,</p>
      </list-item>
      <list-item>
        <p>from 468 to 716 total constraints (with 2 to 10
        equalities),</p>
      </list-item>
      <list-item>
        <p>from 4392 to 17,568 residuals.</p>
      </list-item>
    </list>
    <p>Due to the differences in how computations are organized between
    Fortran77 and Julia, especially in linear algebra, minor numerical
    discrepancies were expected to emerge and accumulate, leading to
    slightly different outcomes or total number of iterations
    performed.</p>
    <p>Out of 90 instances, 26 either failed to converge or stopped
    because of a numerical error occurring during the execution of both
    <monospace>ENLSIP</monospace> versions. These results were due to
    inconsistencies in the problem formulation of a given family of
    instances and thus, they do not reflect the robustness of the method
    implemented in <monospace>ENLSIP</monospace>. For the 64 remaining
    instances, both versions reached similar solutions that met
    Hydro-Québec specifications. Although specific values cannot be
    disclosed in this paper, the performance profile
    (<xref alt="Dolan &amp; Moré, 2002" rid="ref-dolanmoreU003A2002" ref-type="bibr">Dolan
    &amp; Moré, 2002</xref>) in Figure
    <xref alt="[fig:perf_profile]" rid="figU003Aperf_profile">[fig:perf_profile]</xref>
    suggests that our Julia version has similar, if not better,
    performance than the Fortran77 version. However, these results must
    be weighted by the number of iterations performed by the two
    algorithms. Indeed, our Julia version often required less
    iterations. We argue that the better efficiency of the linear
    algebra routines from OpenBLAS as compared to those from MINPACK may
    contribute to shorter computation times.</p>
    <fig>
      <caption><p>Computation time performance profile of
      ENLSIP-Fortran77 (dashed curve) and Enlsip.jl (continuous curve)
      on 90 instances of the CM1 model
      calibration.<styled-content id="figU003Aperf_profile"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="performance_profile_cm1.png" />
    </fig>
  </sec>
  <sec id="other-nonlinear-least-squares-packages">
    <title>Other nonlinear least-squares packages</title>
    <p>Several existing Julia packages can be used to solve nonlinear
    least-squares problems. For unconstrained and bound-constrained
    problems, these include
    <ext-link ext-link-type="uri" xlink:href="https://github.com/macd/NL2sol.jl">NL2sol.jl</ext-link>
    (<xref alt="Dennis Jr et al., 1981" rid="ref-dennisetalU003A1981" ref-type="bibr">Dennis
    Jr et al., 1981</xref>),
    <ext-link ext-link-type="uri" xlink:href="https://github.com/JuliaNLSolvers/LsqFit.jl">LsqFit.jl</ext-link>
    and
    <ext-link ext-link-type="uri" xlink:href="https://github.com/matthieugomez/LeastSquaresOptim.jl">LeastSquaresOptim.jl</ext-link>.
    Also available are least-squares variants of the
    <monospace>TRUNK</monospace> and <monospace>TRON</monospace>
    (<xref alt="Lin &amp; Moré, 1999" rid="ref-linmoreU003A1999a" ref-type="bibr">Lin
    &amp; Moré, 1999</xref>) solvers from
    <monospace>JSOSolvers.jl</monospace>
    (<xref alt="Migot et al., 2023" rid="ref-jsosolversU003A2023" ref-type="bibr">Migot
    et al., 2023</xref>). The
    <ext-link ext-link-type="uri" xlink:href="https://github.com/JuliaSmoothOptimizers/CaNNOLeS.jl">CaNNOLeS.jl</ext-link>
    (<xref alt="Orban &amp; Siqueira, 2020" rid="ref-orbansiquieraU003A2020" ref-type="bibr">Orban
    &amp; Siqueira, 2020</xref>) package handles the
    equality-constrained case. However, these libraries do not entirely
    apply to the formulation stated in
    <xref alt="1" rid="eqU003Acnlls">1</xref>, for which more general
    solvers, such as
    <ext-link ext-link-type="uri" xlink:href="https://github.com/jump-dev/Ipopt.jl">Ipopt.jl</ext-link>
    (<xref alt="Wächter &amp; Biegler, 2006" rid="ref-wachterbieglerU003A2006" ref-type="bibr">Wächter
    &amp; Biegler, 2006</xref>), are typically used.</p>
    <p>Although our package may not incorporate the latest advancements
    in nonlinear optimization, especially for large-scale problems, its
    use remains relevant. Indeed, the method employed in
    <monospace>ENLSIP</monospace> manages to exploit the least-squares
    structure while also remaining very general, covering nonlinearity
    and non-convexity of the residuals and constraints. This capability
    renders it an effective tool for solving problems of reasonable
    dimensions (<inline-formula><alternatives>
    <tex-math><![CDATA[n\leq 500]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>n</mml:mi><mml:mo>≤</mml:mo><mml:mn>500</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
    and <inline-formula><alternatives>
    <tex-math><![CDATA[m\leq 1000]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>m</mml:mi><mml:mo>≤</mml:mo><mml:mn>1000</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>).
    Moreover, in comparison to other categories, like the unconstrained
    case (as discussed in
    <xref alt="Dennis Jr &amp; Schnabel, 1996, Chapter 10" rid="ref-dennisschnabelU003A1996" ref-type="bibr">Dennis
    Jr &amp; Schnabel, 1996, Chapter 10</xref>), this specific class of
    least-squares problems with general constraints is, to the best of
    our knowledge, rarely addressed in the literature.</p>
  </sec>
</sec>
<sec id="usage">
  <title>Usage</title>
  <p><ext-link ext-link-type="uri" xlink:href="https://github.com/UncertainLab/Enlsip.jl">Enlsip.jl</ext-link>
  can be dowloaded from the Julia package manager by running the
  following command into the REPL:</p>
  <code language="julia">julia&gt; using Pkg 
julia&gt; Pkg.add(&quot;Enlsip&quot;)</code>
  <p>The package provides a basic interface for modeling optimization
  problems of the form <xref alt="1" rid="eqU003Acnlls">1</xref>, by
  passing the residuals, constraints functions and dimensions of the
  problem. This is accomplished by creating an instance of our
  <monospace>CnlsModel</monospace> structure. Users can also provide
  functions to compute Jacobian matrices of residuals and constraints,
  or they can let the algorithm compute them numerically using automatic
  differentiation<xref ref-type="fn" rid="fn2">2</xref>
  (<xref alt="Griewank, 2003" rid="ref-griewankU003A2003" ref-type="bibr">Griewank,
  2003</xref>).</p>
  <p>As a short tutorial, we consider the following problem
  (<xref alt="Hock &amp; Schittkowski, 1980" rid="ref-hockschittkowskiU003A1980" ref-type="bibr">Hock
  &amp; Schittkowski, 1980</xref>, problem 65):</p>
  <p><named-content id="eqU003Ahickschitt_pb65" content-type="equation"><disp-formula><alternatives>
  <tex-math><![CDATA[
           \quad \begin{aligned}  
                          \quad\min        \quad&  (x_1-x_2)^2 + \frac{1}{9}(x_1+x_2-10)^2+(x_3-5)^2  \\
                          \text{s.t.}      \quad & 48-x_1^2-x_2^2-x_3^2 \geq 0 \\
                          & -4.5\leq x_i \leq 4.5, \quad i=1,2\\
                          & -5 \leq x_3  \leq 5,
          \end{aligned}]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mspace width="1.0em"></mml:mspace><mml:mtable><mml:mtr><mml:mtd columnalign="right" style="text-align: right"><mml:mspace width="1.0em"></mml:mspace><mml:mo>min</mml:mo><mml:mspace width="1.0em"></mml:mspace></mml:mtd><mml:mtd columnalign="left" style="text-align: left"><mml:msup><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>9</mml:mn></mml:mfrac><mml:msup><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:mn>10</mml:mn><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:mn>5</mml:mn><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right" style="text-align: right"><mml:mtext mathvariant="normal">s.t.</mml:mtext><mml:mspace width="1.0em"></mml:mspace></mml:mtd><mml:mtd columnalign="left" style="text-align: left"><mml:mn>48</mml:mn><mml:mo>−</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>−</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>−</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mn>3</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>≥</mml:mo><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right" style="text-align: right"></mml:mtd><mml:mtd columnalign="left" style="text-align: left"><mml:mo>−</mml:mo><mml:mn>4.5</mml:mn><mml:mo>≤</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>≤</mml:mo><mml:mn>4.5</mml:mn><mml:mo>,</mml:mo><mml:mspace width="1.0em"></mml:mspace><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right" style="text-align: right"></mml:mtd><mml:mtd columnalign="left" style="text-align: left"><mml:mo>−</mml:mo><mml:mn>5</mml:mn><mml:mo>≤</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>≤</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></alternatives></disp-formula></named-content></p>
  <p>and show how to use the package to model and solve problem
  <xref alt="2" rid="eqU003Ahickschitt_pb65">2</xref>:</p>
  <code language="julia">using Enlsip

# Dimensions of the problem

n = 3 # number of parameters
m = 3 # number of residuals
l = 1 # number of nonlinear inequality constraints

# Residuals and Jacobian matrix associated
r(x::Vector) = [x[1] - x[2]; (x[1]+x[2]-10.0) / 3.0; x[3]-5.0]

jac_r(x::Vector) = [1. -1. 0; 1/3 1/3 0.; 0. 0. 1.]

# Constraints (one nonlinear inequality and box constraints)
c(x::Vector) = [48.0 - x[1]^2-x[2]^2-x[3]^2]
jac_c(x::Vector) = [ -2x[1] -2x[2] -2x[3]]
x_l = [-4.5, -4.5, -5.0]
x_u = [4.5, 4.5, 5.0] 

# Starting point 
x0 = [-5.0, 5.0, 0.0]

# Instantiate the  model associated with the problem 
model = Enlsip.CnlsModel(r, n, m; jacobian_residuals=jac_r, starting_point=x0,
      ineq_constraints = c, jacobian_ineqcons=jac_c, nb_ineqcons = l,
      x_low=x_l, x_upp=x_u)</code>
  <p>Once a model has been instantiated, the solver function can be
  called.</p>
  <code language="julia"># Call of the `solve!` function
Enlsip.solve!(model)</code>
  <p>After solving, there are available methods to get details about the
  conduct of the algorithm. For instance, on the example presented
  above, calling <monospace>Enlsip.solution(model)</monospace> will
  return the solution found.</p>
  <p>The
  <ext-link ext-link-type="uri" xlink:href="https://uncertainlab.github.io/Enlsip.jl/stable">online
  documentation</ext-link><xref ref-type="fn" rid="fn3">3</xref>
  provides additional information on how to use the package and examples
  with test problems from the literature.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The research has been supported by MITACS grants IT25656, IT28724,
  and IT36208. We would also like to mention that the release of
  <ext-link ext-link-type="uri" xlink:href="https://github.com/UncertainLab/Enlsip.jl">Enlsip.jl</ext-link>
  results from a close collaboration between the University of Montreal
  and the Unit of Inflow and Load Forecasting of Hydro-Québec. The work
  of Fabian Bastin is supported by the Natural Sciences and Engineering
  Research Council of Canada [Discovery Grant 2022-04400].</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-grenieretalU003A2006">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Grenier</surname><given-names>M.</given-names></name>
        <name><surname>Gagnon</surname><given-names>J.</given-names></name>
        <name><surname>Mercier</surname><given-names>C.</given-names></name>
        <name><surname>Richard</surname><given-names>J.</given-names></name>
      </person-group>
      <article-title>Short-term load forecasting at Hydro-Québec TransÉnergie</article-title>
      <source>2006 IEEE power engineering society general meeting</source>
      <publisher-loc>Montreal, QC, Canada</publisher-loc>
      <year iso-8601-date="2006">2006</year>
      <pub-id pub-id-type="doi">10.1109/PES.2006.1709029</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-lindstromwedin1988">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lindström</surname><given-names>P.</given-names></name>
        <name><surname>Wedin</surname><given-names>P.Å.</given-names></name>
      </person-group>
      <article-title>Gauss-Newton based algorithms for constrained nonlinear least squares problems</article-title>
      <source>Technical Report S-901 87, Institute of Information processing, University of Umeå, Sweden</source>
      <year iso-8601-date="1988">1988</year>
    </element-citation>
  </ref>
  <ref id="ref-JuliaU003A2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bezanson</surname><given-names>J.</given-names></name>
        <name><surname>Edelman</surname><given-names>A.</given-names></name>
        <name><surname>Karpinski</surname><given-names>S.</given-names></name>
        <name><surname>Shah</surname><given-names>V. B.</given-names></name>
      </person-group>
      <article-title>Julia: A fresh approach to numerical computing</article-title>
      <source>SIAM review</source>
      <publisher-name>SIAM</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <volume>59</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1137/141000671</pub-id>
      <fpage>65</fpage>
      <lpage>98</lpage>
    </element-citation>
  </ref>
  <ref id="ref-JuMPU003A2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Dunning</surname><given-names>I.</given-names></name>
        <name><surname>Huchette</surname><given-names>J.</given-names></name>
        <name><surname>Lubin</surname><given-names>M.</given-names></name>
      </person-group>
      <article-title>JuMP: A modeling language for mathematical optimization</article-title>
      <source>SIAM Review</source>
      <publisher-name>SIAM</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <volume>59</volume>
      <issue>2</issue>
      <pub-id pub-id-type="doi">10.1137/15M1020575</pub-id>
      <fpage>295</fpage>
      <lpage>320</lpage>
    </element-citation>
  </ref>
  <ref id="ref-nlp-modelsU003A2020">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Orban</surname><given-names>D.</given-names></name>
        <name><surname>Siqueira</surname><given-names>A. S.</given-names></name>
        <string-name>contributors</string-name>
      </person-group>
      <article-title>NLPModels.jl: Data structures for optimization models</article-title>
      <publisher-name>https://github.com/JuliaSmoothOptimizers/NLPModels.jl</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <pub-id pub-id-type="doi">10.5281/zenodo.2558627</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-dennisetalU003A1981">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Dennis Jr</surname><given-names>J. E.</given-names></name>
        <name><surname>Gay</surname><given-names>D. M.</given-names></name>
        <name><surname>Walsh</surname><given-names>R. E.</given-names></name>
      </person-group>
      <article-title>An adaptive nonlinear least-squares algorithm</article-title>
      <source>ACM Transactions on Mathematical Software</source>
      <publisher-name>Association for Computing Machinery</publisher-name>
      <publisher-loc>New York, NY, USA</publisher-loc>
      <year iso-8601-date="1981-09">1981</year><month>09</month>
      <volume>7</volume>
      <issue>3</issue>
      <issn>0098-3500</issn>
      <pub-id pub-id-type="doi">10.1145/355958.355965</pub-id>
      <fpage>348</fpage>
      <lpage>368</lpage>
    </element-citation>
  </ref>
  <ref id="ref-dolanmoreU003A2002">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Dolan</surname><given-names>E. D.</given-names></name>
        <name><surname>Moré</surname><given-names>J. J.</given-names></name>
      </person-group>
      <article-title>Benchmarking optimization software with performance profiles</article-title>
      <source>Mathematical Programming</source>
      <year iso-8601-date="2002">2002</year>
      <volume>Series A 91</volume>
      <issue>2</issue>
      <pub-id pub-id-type="doi">10.1007/s101070100263</pub-id>
      <fpage>201</fpage>
      <lpage>213</lpage>
    </element-citation>
  </ref>
  <ref id="ref-orbansiquieraU003A2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Orban</surname><given-names>D.</given-names></name>
        <name><surname>Siqueira</surname><given-names>A. S.</given-names></name>
      </person-group>
      <article-title>A regularization method for constrained nonlinear least squares</article-title>
      <source>Computational Optimization and Applications</source>
      <publisher-name>Springer Science; Business Media LLC</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <volume>76</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1007/s10589-020-00201-2</pub-id>
      <fpage>961</fpage>
      <lpage>989</lpage>
    </element-citation>
  </ref>
  <ref id="ref-griewankU003A2003">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Griewank</surname><given-names>A.</given-names></name>
      </person-group>
      <article-title>A mathematical view of automatic differentiation</article-title>
      <source>Acta Numerica</source>
      <publisher-name>Cambridge University Press</publisher-name>
      <year iso-8601-date="2003">2003</year>
      <volume>12</volume>
      <pub-id pub-id-type="doi">10.1017/S0962492902000132</pub-id>
      <fpage>321</fpage>
      <lpage>398</lpage>
    </element-citation>
  </ref>
  <ref id="ref-linmoreU003A1999a">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lin</surname><given-names>C.-J.</given-names></name>
        <name><surname>Moré</surname><given-names>J. J</given-names></name>
      </person-group>
      <article-title>Newton’s method for large bound-constrained optimization problems</article-title>
      <source>SIAM Journal on Optimization</source>
      <year iso-8601-date="1999">1999</year>
      <volume>9</volume>
      <issue>4</issue>
      <pub-id pub-id-type="doi">10.1137/S1052623498345075</pub-id>
      <fpage>1100</fpage>
      <lpage>1127</lpage>
    </element-citation>
  </ref>
  <ref id="ref-lucksanvlcekU003A1999">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lukšan</surname><given-names>L.</given-names></name>
        <name><surname>Vlček</surname><given-names>J.</given-names></name>
      </person-group>
      <article-title>Sparse and partially separable test problems for unconstrained and equality constrained optimization</article-title>
      <source>Technical report 767, Institute of Computer Science, Academy of Sciences of the Czech Republic, Prague</source>
      <year iso-8601-date="1999">1999</year>
      <uri>http://hdl.handle.net/11104/0123965</uri>
    </element-citation>
  </ref>
  <ref id="ref-wachterbieglerU003A2006">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wächter</surname><given-names>A.</given-names></name>
        <name><surname>Biegler</surname><given-names>L. T.</given-names></name>
      </person-group>
      <article-title>On the implementation of an interior-point filter line-search algorithm for large-scale nonlinear programming</article-title>
      <source>Mathematical Programming, Series A</source>
      <year iso-8601-date="2006">2006</year>
      <volume>106</volume>
      <pub-id pub-id-type="doi">10.1007/s10107-004-0559-y</pub-id>
      <fpage>25</fpage>
      <lpage>57</lpage>
    </element-citation>
  </ref>
  <ref id="ref-dennisschnabelU003A1996">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Dennis Jr</surname><given-names>J. E.</given-names></name>
        <name><surname>Schnabel</surname><given-names>R. B.</given-names></name>
      </person-group>
      <source>Numerical methods for unconstrained optimization and nonlinear equations</source>
      <publisher-name>SIAM</publisher-name>
      <publisher-loc>Philadelphia, PA, USA</publisher-loc>
      <year iso-8601-date="1996">1996</year>
      <pub-id pub-id-type="doi">10.1137/1.9781611971200</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-gillmurraywrightU003A1985">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Gill</surname><given-names>P. E.</given-names></name>
        <name><surname>Murray</surname><given-names>W.</given-names></name>
        <name><surname>Wright</surname><given-names>M. H.</given-names></name>
      </person-group>
      <source>Practical optimization</source>
      <publisher-name>Academic Press</publisher-name>
      <publisher-loc>San Diego, CA, USA</publisher-loc>
      <year iso-8601-date="1981">1981</year>
      <pub-id pub-id-type="doi">10.1137/1.9781611975604</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-hockschittkowskiU003A1980">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Hock</surname><given-names>W.</given-names></name>
        <name><surname>Schittkowski</surname><given-names>K.</given-names></name>
      </person-group>
      <source>Test examples for nonlinear programming codes</source>
      <publisher-name>Springer Berlin</publisher-name>
      <publisher-loc>Heidelberg, Germany</publisher-loc>
      <year iso-8601-date="1980">1980</year>
      <volume>187</volume>
      <edition>Second edition</edition>
      <pub-id pub-id-type="doi">10.1007/978-3-642-48320-2</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-nocedalwrightU003A2006">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Nocedal</surname><given-names>J.</given-names></name>
        <name><surname>Wright</surname><given-names>S. J.</given-names></name>
      </person-group>
      <source>Numerical optimization</source>
      <publisher-name>Springer</publisher-name>
      <publisher-loc>New York, NY, USA</publisher-loc>
      <year iso-8601-date="2006">2006</year>
      <edition>Second edition</edition>
      <pub-id pub-id-type="doi">10.1007/978-0-387-40065-5</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-jsosolversU003A2023">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Migot</surname><given-names>T.</given-names></name>
        <name><surname>Orban</surname><given-names>D.</given-names></name>
        <name><surname>Siqueira</surname><given-names>A. S.</given-names></name>
        <string-name>contributors</string-name>
      </person-group>
      <article-title>JSOSolvers.jl: JuliaSmoothOptimizers optimization solvers</article-title>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/JuliaSmoothOptimizers/JSOSolvers.jl</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.3991143</pub-id>
    </element-citation>
  </ref>
</ref-list>
<fn-group>
  <fn id="fn1">
    <label>1</label><p>The source code is available at
    <ext-link ext-link-type="uri" xlink:href="https://plato.asu.edu/sub/nonlsq.html">https://plato.asu.edu/sub/nonlsq.html</ext-link></p>
  </fn>
  <fn id="fn2">
    <label>2</label><p>Backend used by default is
    <ext-link ext-link-type="uri" xlink:href="https://juliadiff.org/ForwardDiff.jl/stable/">ForwardDiff.jl</ext-link></p>
  </fn>
  <fn id="fn3">
    <label>3</label><p><ext-link ext-link-type="uri" xlink:href="https://uncertainlab.github.io/Enlsip.jl">https://uncertainlab.github.io/Enlsip.jl</ext-link></p>
  </fn>
</fn-group>
</back>
</article>
