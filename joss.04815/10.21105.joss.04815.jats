<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">4815</article-id>
<article-id pub-id-type="doi">10.21105/joss.04815</article-id>
<title-group>
<article-title>OPSDN: an enhanced SDN simulation framework for OPNET
Modeler</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-7144-4448</contrib-id>
<name>
<surname>Jia</surname>
<given-names>Zequn</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Sun</surname>
<given-names>Yantao</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Liu</surname>
<given-names>Qiang</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>School of Computer and Information Technology, Beijing
Jiaotong University, Beijing, China.</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>School of Electrical and Data Engineering, University of
Technology Sydney, Sydney, Australia.</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2022-08-25">
<day>25</day>
<month>8</month>
<year>2022</year>
</pub-date>
<volume>8</volume>
<issue>83</issue>
<fpage>4815</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>C/C++</kwd>
<kwd>OPNET</kwd>
<kwd>Software-defined networking</kwd>
<kwd>network simulation</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Network testing environments are essential software packages in
  software-defined networking (SDN) research
  (<xref alt="Zavrak &amp; Iskefiyeli, 2017" rid="ref-zavrak2017feature" ref-type="bibr">Zavrak
  &amp; Iskefiyeli, 2017</xref>). Traditional SDN testing tools include
  emulators like Mininet
  (<xref alt="Lantz et al., 2010" rid="ref-mininet" ref-type="bibr">Lantz
  et al., 2010</xref>) and simulators with SDN module support such as
  OPNET, NS3
  (<xref alt="“Ns-3,” 2022" rid="ref-ns3" ref-type="bibr">“Ns-3,”
  2022</xref>), and OMNET++
  (<xref alt="Varga, 2001" rid="ref-omnetpp" ref-type="bibr">Varga,
  2001</xref>). However, both of these kinds of tools suffer from
  distortion when used for large-scale topology or high-traffic
  scenarios. The emulation of network devices typically requires heavy
  resources, making it difficult for emulators to support large-scale
  network simulations. For example, Mininet usually supports no more
  than 4096 network devices and its CPU and bandwidth are limited by a
  single server. Simulators can usually support larger-scale networks by
  reducing the simulation speed. However, OPNET needs an interface to
  connect the simulation to an external SDN controller, which requires
  the simulation speed to be strictly the same as real-world time. But
  simulation speed is generally slower than real-time in large-scale
  topologies due to hardware limitations.</p>
  <p>To solve the problem above, we propose OPSDN, a simulation
  framework for OPNET that allows researchers to conduct
  <italic>large-scale</italic> SDN simulations in laptop-level hardware.
  Instead of an external controller, OPSDN integrates the controller
  into the simulation to accurately sync the time of switches and the
  controller. It also offers APIs similar to the popular SDN controller
  framework Ryu
  (<xref alt="“Ryu,” 2022" rid="ref-ryu" ref-type="bibr">“Ryu,”
  2022</xref>). Researchers can use familiar APIs to develop and port
  controller applications. Our simulation results show that the OPSDN
  controller can achieve the same control capability as the Ryu
  controller, and avoid unexpected TCP retransmissions introduced by the
  inconsistent simulation speed. We hope OPSDN will help researchers
  achieve more accessible large-scale SDN network simulations. Detailed
  introduction and evaluation are included in Jia et al.
  (<xref alt="2022" rid="ref-jia_opsdn_2022" ref-type="bibr">2022</xref>).</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>OPSDN provides researchers with a network simulation framework that
  allows them to conduct large-scale SDN network simulations on
  laptop-level hardware and to leverage the accurate simulation modeling
  capabilities provided by OPNET. Therefore, the main impacts of this
  software are as follows.</p>
  <list list-type="order">
    <list-item>
      <p>A hybrid simulation framework for OPNET and Ryu-like
      controllers provides a unified event scheduling mechanism based on
      OPNET’s Discrete Event Simulation (DES) engine, allowing OPNET and
      SDN controllers to be simulated simultaneously and avoids
      simulation distortion caused by different event mechanisms. This
      allows researchers to perform accurate SDN network modeling and
      simulation without worrying about the simulation architecture.</p>
    </list-item>
    <list-item>
      <p>It provides a large-scale simulation mechanism running on
      laptop-level hardware for SDN simulation, filling the lack of
      large-scale network simulation capability in various types of
      network simulation/emulation software. This software enables
      acceptable system complexity and hardware cost for large-scale
      network simulation. Researchers are able to perform larger-scale
      simulations such as for large-scale SDN data-center networks and
      large-scale software-defined mobile ad hoc networks. In addition,
      this framework can also help researchers conduct research on
      scheduling algorithms and topology design with large bandwidth and
      high traffic, cases for which it is difficult to obtain accurate
      results in traditional environments due to several
      constraints.</p>
    </list-item>
    <list-item>
      <p>Researchers are allowed to use Python as the programming
      language for controllers instead of C/C++, even running in OPNET.
      In addition, we provide a Ryu-like controller framework that
      provides APIs similar to Ryu, making it easy for controller
      developers to port existing Ryu Apps. Researchers can rapidly
      build controller algorithm prototypes.</p>
    </list-item>
    <list-item>
      <p>The idea of combining the DES event mechanism with the event
      mechanism of controller frameworks such as Ryu presented in this
      software is general. This software verifies the feasibility of
      this idea, which means we can apply it to other DES-based
      simulation tools, such as NS3 and OMNET++, and provide more
      powerful tools for subsequent research and simulation of SDN.</p>
    </list-item>
  </list>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We acknowledge support from Beijing Credit Top Company Limited
  during the genesis of this project.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-ryu">
    <element-citation>
      <article-title>Ryu</article-title>
      <source>Ryu SDN Framework</source>
      <publisher-name>https://ryu-sdn.org/</publisher-name>
      <year iso-8601-date="2022-06">2022</year><month>06</month>
    </element-citation>
  </ref>
  <ref id="ref-mininet">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Lantz</surname><given-names>Bob</given-names></name>
        <name><surname>Heller</surname><given-names>Brandon</given-names></name>
        <name><surname>McKeown</surname><given-names>Nick</given-names></name>
      </person-group>
      <article-title>A network in a laptop: Rapid prototyping for software-defined networks</article-title>
      <source>Proceedings of the 9th ACM SIGCOMM workshop on hot topics in networks</source>
      <publisher-name>Association for Computing Machinery</publisher-name>
      <publisher-loc>New York, NY, USA</publisher-loc>
      <year iso-8601-date="2010">2010</year>
      <isbn>978-1-4503-0409-2</isbn>
      <pub-id pub-id-type="doi">10.1145/1868447.1868466</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-jia_opsdn_2022">
    <element-citation publication-type="report">
      <person-group person-group-type="author">
        <name><surname>Jia</surname><given-names>Zequn</given-names></name>
        <name><surname>Sun</surname><given-names>Yantao</given-names></name>
        <name><surname>Liu</surname><given-names>Qiang</given-names></name>
      </person-group>
      <article-title>OPSDN: An enhanced SDN simulation framework for OPNET Modeler</article-title>
      <year iso-8601-date="2022">2022</year>
      <uri>https://github.com/ZacharyJia/opsdn/blob/master/opsdn-technical-report.pdf</uri>
    </element-citation>
  </ref>
  <ref id="ref-ns3">
    <element-citation>
      <article-title>Ns-3: A discrete-event network simulator for Internet systems</article-title>
      <source>NS3 Network Simulator</source>
      <publisher-name>https://www.nsnam.org/</publisher-name>
      <year iso-8601-date="2022-06">2022</year><month>06</month>
    </element-citation>
  </ref>
  <ref id="ref-omnetpp">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Varga</surname><given-names>András</given-names></name>
      </person-group>
      <article-title>The OMNET++ discrete event simulation system</article-title>
      <source>Proceedings of the european simulation multiconference (ESM2001)</source>
      <publisher-loc>Czech Republic</publisher-loc>
      <year iso-8601-date="2001">2001</year>
    </element-citation>
  </ref>
  <ref id="ref-zavrak2017feature">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Zavrak</surname><given-names>S</given-names></name>
        <name><surname>Iskefiyeli</surname><given-names>M</given-names></name>
      </person-group>
      <article-title>A feature-based comparison of SDN emulation and simulation tools</article-title>
      <source>Proc. Int. Conf. Eng. technol.(ICENTE)</source>
      <year iso-8601-date="2017">2017</year>
      <fpage>214</fpage>
      <lpage>217</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
