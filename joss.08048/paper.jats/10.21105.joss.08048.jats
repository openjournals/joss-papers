<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">8048</article-id>
<article-id pub-id-type="doi">10.21105/joss.08048</article-id>
<title-group>
<article-title>grepq: A Rust application that quickly filters FASTQ
files by matching sequences to a set of regular
expressions</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-0319-4248</contrib-id>
<name>
<surname>Crosbie</surname>
<given-names>Nicholas D.</given-names>
</name>
<email>nicholas.crosbie@unimelb.edu.au</email>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Melbourne Veterinary School, University of Melbourne,
Parkville, Victoria, Australia</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email>nicholas.crosbie@unimelb.edu.au</email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2025-03-15">
<day>15</day>
<month>3</month>
<year>2025</year>
</pub-date>
<volume>10</volume>
<issue>110</issue>
<fpage>8048</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>FASTQ records</kwd>
<kwd>regular expressions</kwd>
<kwd>Rust</kwd>
<kwd>bioinformatics</kwd>
<kwd>variants</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Regular expressions (regex)
  (<xref alt="Kleene, 1951" rid="ref-kleene1951representationof" ref-type="bibr">Kleene,
  1951</xref>) have been an important tool for finding patterns in
  biological codes for decades
  (<xref alt="Hodgman, 2000" rid="ref-hodgman2000historical" ref-type="bibr">Hodgman,
  2000</xref> and citations therein), and unlike fuzzy-finding
  approaches, do not result in approximate matches. The performance of
  regular expressions can be slow, however, especially when searching
  for matching patterns in large files. <italic>grepq</italic> is a Rust
  application that quickly filters FASTQ files by matching sequences to
  a set of regular expressions. <italic>grepq</italic> is designed with
  a focus on performance and scalability, is easy to install and easy to
  use, enabling users to quickly filter large FASTQ files, to enumerate
  named and unnamed variants, to update the order in which patterns are
  matched against sequences through built-in <italic>tune</italic> and
  <italic>summarise</italic> commands, and optionally, to output a
  SQLite file for further sequence analysis. <italic>grepq</italic> is
  open-source and available on <italic>GitHub</italic>,
  <italic>Crates.io</italic> and <italic>bioconda</italic>.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The ability to quickly filter FASTQ files by matching sequences to
  a set of regular expressions is an important task in bioinformatics,
  especially when working with large datasets. The importance and
  challenge of this task will only grow as sequencing technologies
  continue to advance and produce ever larger datasets
  (<xref alt="Katz et al., 2022" rid="ref-katz2022sequence" ref-type="bibr">Katz
  et al., 2022</xref>). The use cases of <italic>grepq</italic> are
  diverse, and include pre-processing of FASTQ files before downstream
  analysis, quality control of sequencing data, and filtering out
  unwanted sequences. Where decisions need to be made quickly, such as
  in clinical settings
  (<xref alt="Bachurin et al., 2024" rid="ref-bachurin2024structural" ref-type="bibr">Bachurin
  et al., 2024</xref>), biosecurity
  (<xref alt="Valdivia-Granda, 2012" rid="ref-valdivia2012biodefense" ref-type="bibr">Valdivia-Granda,
  2012</xref>), and wastewater-based epidemiology in support of public
  health measures
  (<xref alt="Choi et al., 2018" rid="ref-choi2018wastewater" ref-type="bibr">Choi
  et al., 2018</xref>;
  <xref alt="Merrett et al., 2024" rid="ref-merrett2024highly" ref-type="bibr">Merrett
  et al., 2024</xref>;
  <xref alt="Sims &amp; Kasprzyk-Hordern, 2020" rid="ref-sims2020future" ref-type="bibr">Sims
  &amp; Kasprzyk-Hordern, 2020</xref>;
  <xref alt="Xylogiannopoulos, 2021" rid="ref-xylogiannopoulos2021pattern" ref-type="bibr">Xylogiannopoulos,
  2021</xref>), the ability to quickly filter FASTQ files and enumerate
  named and unnamed variants by matching sequences to a set of regular
  expressions is attractive as it circumvents the need for more
  time-consuming bioinformatic workflows.</p>
  <p>Regular expressions are a powerful tool for matching sequences, but
  they can be slow and inefficient when working with large datasets.
  Furthermore, general purpose tools like <italic>grep</italic>
  (<xref alt="Free Software Foundation, 2023" rid="ref-gnugrep" ref-type="bibr">Free
  Software Foundation, 2023</xref>) and <italic>ripgrep</italic>
  (<xref alt="A. Gallant, 2025" rid="ref-ripgrep" ref-type="bibr">A.
  Gallant, 2025</xref>) are not optimized for the specific task of
  filtering FASTQ files, and occassionally yield false positives as they
  scan the entire FASTQ record, including the sequence quality field.
  Tools such as <italic>awk</italic>
  (<xref alt="Aho et al., 1988" rid="ref-awk" ref-type="bibr">Aho et
  al., 1988</xref>) and <italic>gawk</italic>
  (<xref alt="Free Software Foundation, 2024" rid="ref-gawk" ref-type="bibr">Free
  Software Foundation, 2024</xref>) can be used to filter FASTQ files
  without yielding false positives, but they are significantly slower
  than <italic>grepq</italic> and can require the development of more
  complex scripts to achieve the same result.</p>
</sec>
<sec id="implementation">
  <title>Implementation</title>
  <p><italic>grepq</italic> obtains its performance and reliability, in
  part, by using the <italic>seq_io</italic>
  (<xref alt="Schlegel &amp; Seyboldt, 2025" rid="ref-seq_io" ref-type="bibr">Schlegel
  &amp; Seyboldt, 2025</xref>) and <italic>regex</italic>
  (<xref alt="Gallant &amp; others, 2025b" rid="ref-regex" ref-type="bibr">Gallant
  &amp; others, 2025b</xref>) libraries. The <italic>seq_io</italic>
  library is a well-tested library for parsing FASTQ files, designed to
  be fast and efficient, and includes a module for parallel processing
  of FASTQ records through multi-threading. The <italic>regex</italic>
  library is designed to work with regular expressions and sets of
  regular expressions, and is known to be one of the fastest regular
  expression libraries currently available
  (<xref alt="Gallant &amp; others, 2025a" rid="ref-rebar" ref-type="bibr">Gallant
  &amp; others, 2025a</xref>). The <italic>regex</italic> library
  supports Perl-like regular expressions without look-around or
  backreferences (documented at
  <ext-link ext-link-type="uri" xlink:href="https://docs.rs/regex/1.*/regex/#syntax">https://docs.rs/regex/1.*/regex/#syntax</ext-link>).</p>
</sec>
<sec id="feature-set">
  <title>Feature set</title>
  <list list-type="bullet">
    <list-item>
      <p>support for presence and absence (inverted) matching of a set
      of regular expressions</p>
    </list-item>
    <list-item>
      <p>IUPAC ambiguity code support (N, R, Y, etc.)</p>
    </list-item>
    <list-item>
      <p>support for gzip and zstd compression (reading and writing)</p>
    </list-item>
    <list-item>
      <p>JSON support for pattern file input and <italic>tune</italic>
      and <italic>summarise</italic> command output, allowing named
      regular expression sets and named regular expressions (pattern
      files can also be in plain text)</p>
    </list-item>
    <list-item>
      <p>the ability to:</p>
      <list list-type="bullet">
        <list-item>
          <p>set predicates to filter FASTQ records on the header field
          (= record ID line) using a regular expression, minimum
          sequence length, and minimum average quality score (supports
          Phred+33 and Phred+64)</p>
        </list-item>
        <list-item>
          <p>output matched sequences in one of four formats (including
          FASTQ and FASTA)</p>
        </list-item>
        <list-item>
          <p>tune the pattern file and enumerate named and unnamed
          variants with the <italic>tune</italic> and
          <italic>summarise</italic> commands: these commands will
          output a plain text or JSON file with the patterns sorted by
          their frequency of occurrence in the input FASTQ file or
          gzip-compressed FASTQ file (or a user-specified number of
          total matches). This can be useful for optimizing the pattern
          file for performance, for example by removing patterns that
          are rarely matched and reordering nucleotides within the
          variable regions of the patterns to improve matching
          efficiency</p>
        </list-item>
        <list-item>
          <p>count and summarise the total number of records and the
          number of matching records (or records that don’t match in the
          case of inverted matching) in the input FASTQ file</p>
        </list-item>
        <list-item>
          <p>bucket matching sequences to separate files named after
          each regexName with the <bold>–bucket</bold> flag, in any of
          the four output formats</p>
        </list-item>
      </list>
    </list-item>
  </list>
  <p>Other than when the <bold>inverted</bold> command is given, output
  to a SQLite database is supported with the <bold>writeSQL</bold>
  option. The SQLite database will contain a table called
  <bold>fastq_data</bold> with the following fields: the fastq record
  (header, sequence and quality fields), length of the sequence field
  (length), percent GC content (GC), percent GC content as an integer
  (GC_int), number of unique tetranucleotides in the sequence (nTN),
  number of unique canonical tetranucleotides in the sequence (nCTN),
  percent tetranucleotide frequency in the sequence (TNF), percent
  canonical tetranucleotide frequency in the sequence (CTNF), and a JSON
  array containing the matched regex patterns, the matches and their
  position(s) in the FASTQ sequence (variants). If the pattern file was
  given in JSON format and contained a non-null qualityEncoding field,
  then the average quality score for the sequence field
  (average_quality) will also be written. The
  <bold>–num-tetranucleotides</bold> option can be used to limit the
  number of tetranucleotides written to the TNF field of the fastq_data
  SQLite table, these being the most or equal most frequent
  tetranucleotides in the sequence field of the matched FASTQ records. A
  summary of the invoked query (pattern and data files) is written to a
  second table called <bold>query</bold>.</p>
</sec>
<sec id="performance">
  <title>Performance</title>
  <p>The performance of <italic>grepq</italic> was compared to that of
  <italic>fqgrep</italic>, <italic>seqkit</italic>
  <italic>grep</italic>, <italic>ripgrep</italic>,
  <italic>grep</italic>, <italic>awk</italic>, and <italic>gawk</italic>
  using the benchmarking tool <italic>hyperfine</italic>. The test
  conditions and results are shown in <bold>Table 1</bold>, <bold>Table
  2</bold> and <bold>Table 3</bold> (see
  <ext-link ext-link-type="uri" xlink:href="https://github.com/Rbfinch/grepq/blob/main/paper/supplemental.pdf">supplemental</ext-link>).</p>
</sec>
<sec id="testing-and-availability">
  <title>Testing and availability</title>
  <p><italic>grepq</italic> is open-source and available at
  <italic>GitHub</italic>
  (<ext-link ext-link-type="uri" xlink:href="https://github.com/Rbfinch/grepq">https://github.com/Rbfinch/grepq</ext-link>),
  <italic>Crates.io</italic>
  (<ext-link ext-link-type="uri" xlink:href="https://crates.io/crates/grepq">https://crates.io/crates/grepq</ext-link>),
  and <italic>bioconda</italic>
  (<ext-link ext-link-type="uri" xlink:href="https://anaconda.org/bioconda/grepq">https://anaconda.org/bioconda/grepq</ext-link>),
  and is distributed under the MIT license. It has been tested on macOS
  15.0.1 (Apple M1 Max) and Linux Ubuntu 20.04.6 LTS (AMD EPYC 7763
  64-Core Processor). For more information on the testing of
  <italic>grepq</italic>, see the <italic>README.md</italic> file in the
  <italic>grepq</italic> repository on <italic>GitHub</italic>.</p>
</sec>
<sec id="conclusion">
  <title>Conclusion</title>
  <p>The performance of <italic>grepq</italic> was compared to that of
  <italic>fqgrep</italic>, <italic>seqkit</italic>
  <italic>grep</italic>, <italic>ripgrep</italic>,
  <italic>grep</italic>, <italic>awk</italic>, and <italic>gawk</italic>
  using the benchmarking tool <italic>hyperfine</italic>. For an
  uncompressed FASTQ file 874MB in size, containing 869,034 records,
  <italic>grepq</italic> was significantly faster than the other tools
  tested, with a speedup of 1797 times relative to
  <italic>grep</italic>, 864 times relative to <italic>awk</italic>, and
  19 times relative to <italic>ripgrep</italic>. For a larger
  uncompressed FASTQ file (104GB in size, and containing 139,700,067
  records), <italic>grepq</italic> was 4.4 times faster than
  <italic>ripgrep</italic> and marginally slower or of equivalent speed
  to <italic>ripgrep</italic> where the same large file was
  gzip-compressed. When coupled with its exceptional runtime
  performance, <italic>grepq</italic>’s feature set makes it a powerful
  and flexible tool for filtering large FASTQ files.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>I thank the authors of the <italic>seq_io</italic>,
  <italic>regex</italic>, <italic>mimalloc</italic> and
  <italic>flate2</italic> libraries and <italic>hyperfine</italic>
  benchmarking tool, and of the <italic>ripgrep</italic> and
  <italic>fqgrep</italic> tools for providing inspiration for
  <italic>grepq</italic>.</p>
</sec>
<sec id="conflicts-of-interest">
  <title>Conflicts of interest</title>
  <p>The author declares no conflicts of interest.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-kleene1951representationof">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kleene</surname><given-names>SC</given-names></name>
      </person-group>
      <article-title>Representationof events in nerve nets and finite automata</article-title>
      <source>CE Shannon and J. McCarthy</source>
      <year iso-8601-date="1951">1951</year>
      <pub-id pub-id-type="doi">10.1515/9781400882618-002</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-hodgman2000historical">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hodgman</surname><given-names>T. Charles</given-names></name>
      </person-group>
      <article-title>A historical perspective on gene/protein functional assignment</article-title>
      <source>Bioinformatics</source>
      <publisher-name>Oxford University Press</publisher-name>
      <year iso-8601-date="2000">2000</year>
      <volume>16</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1093/bioinformatics/16.1.10</pub-id>
      <fpage>10</fpage>
      <lpage>15</lpage>
    </element-citation>
  </ref>
  <ref id="ref-bachurin2024structural">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bachurin</surname><given-names>Stanislav S</given-names></name>
        <name><surname>Yurushkin</surname><given-names>Mikhail V</given-names></name>
        <name><surname>Slynko</surname><given-names>Ilya A</given-names></name>
        <name><surname>Kletskii</surname><given-names>Mikhail E</given-names></name>
        <name><surname>Burov</surname><given-names>Oleg N</given-names></name>
        <name><surname>Berezovskiy</surname><given-names>Dmitriy P</given-names></name>
      </person-group>
      <article-title>Structural peculiarities of tandem repeats and their clinical significance</article-title>
      <source>Biochemical and Biophysical Research Communications</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <volume>692</volume>
      <pub-id pub-id-type="doi">10.1016/j.bbrc.2023.149349</pub-id>
      <fpage>149349</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-valdivia2012biodefense">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Valdivia-Granda</surname><given-names>Willy A</given-names></name>
      </person-group>
      <article-title>Biodefense oriented genomic-based pathogen classification systems: Challenges and opportunities</article-title>
      <source>Journal of bioterrorism &amp; biodefense</source>
      <publisher-name>NIH Public Access</publisher-name>
      <year iso-8601-date="2012">2012</year>
      <volume>3</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.4172/2157-2526.1000113</pub-id>
      <fpage>1000113</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-xylogiannopoulos2021pattern">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Xylogiannopoulos</surname><given-names>Konstantinos F</given-names></name>
      </person-group>
      <article-title>Pattern detection in multiple genome sequences with applications: The case of all SARS-CoV-2 complete variants</article-title>
      <source>bioRxiv</source>
      <publisher-name>Cold Spring Harbor Laboratory</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <pub-id pub-id-type="doi">10.1101/2021.04.14.439840</pub-id>
      <fpage>2021</fpage>
      <lpage>04</lpage>
    </element-citation>
  </ref>
  <ref id="ref-choi2018wastewater">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Choi</surname><given-names>Phil M</given-names></name>
        <name><surname>Tscharke</surname><given-names>Ben J</given-names></name>
        <name><surname>Donner</surname><given-names>Erica</given-names></name>
        <name><surname>O’Brien</surname><given-names>Jake W</given-names></name>
        <name><surname>Grant</surname><given-names>Sharon C</given-names></name>
        <name><surname>Kaserzon</surname><given-names>Sarit L</given-names></name>
        <name><surname>Mackie</surname><given-names>Rachel</given-names></name>
        <name><surname>O’Malley</surname><given-names>Elissa</given-names></name>
        <name><surname>Crosbie</surname><given-names>Nicholas D</given-names></name>
        <name><surname>Thomas</surname><given-names>Kevin V</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Wastewater-based epidemiology biomarkers: Past, present and future</article-title>
      <source>TrAC Trends in Analytical Chemistry</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2018">2018</year>
      <volume>105</volume>
      <pub-id pub-id-type="doi">10.1016/j.trac.2018.06.004</pub-id>
      <fpage>453</fpage>
      <lpage>469</lpage>
    </element-citation>
  </ref>
  <ref id="ref-sims2020future">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Sims</surname><given-names>Natalie</given-names></name>
        <name><surname>Kasprzyk-Hordern</surname><given-names>Barbara</given-names></name>
      </person-group>
      <article-title>Future perspectives of wastewater-based epidemiology: Monitoring infectious disease spread and resistance to the community level</article-title>
      <source>Environment international</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <volume>139</volume>
      <pub-id pub-id-type="doi">10.1016/j.envint.2020.105689</pub-id>
      <fpage>105689</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-gnugrep">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <string-name>Free Software Foundation</string-name>
      </person-group>
      <source>GNU grep 3.11</source>
      <publisher-name>Free Software Foundation</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-10-27">2023</year><month>10</month><day>27</day></date-in-citation>
      <uri>https://www.gnu.org/software/grep/manual/grep.html</uri>
    </element-citation>
  </ref>
  <ref id="ref-awk">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Aho</surname><given-names>Alfred V.</given-names></name>
        <name><surname>Kernighan</surname><given-names>Brian W.</given-names></name>
        <name><surname>Weinberger</surname><given-names>Peter J.</given-names></name>
      </person-group>
      <source>The AWK programming language</source>
      <year iso-8601-date="1988">1988</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2025-01-08">2025</year><month>01</month><day>08</day></date-in-citation>
      <uri>https://www.cs.princeton.edu/~bwk/btl.mirror/</uri>
    </element-citation>
  </ref>
  <ref id="ref-gawk">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <string-name>Free Software Foundation</string-name>
      </person-group>
      <source>GAWK: Effective AWK programming: A user’s guide for GNU awk, for the 5.3.1</source>
      <publisher-name>Free Software Foundation</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2025-01-08">2025</year><month>01</month><day>08</day></date-in-citation>
      <uri>https://www.gnu.org/software/gawk/manual/gawk.html</uri>
    </element-citation>
  </ref>
  <ref id="ref-ripgrep">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Gallant</surname><given-names>Andrew</given-names></name>
      </person-group>
      <article-title>Ripgrep: Recursively search the current directory for lines matching a pattern</article-title>
      <year iso-8601-date="2025">2025</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2025-01-08">2025</year><month>01</month><day>08</day></date-in-citation>
      <uri>https://github.com/BurntSushi/ripgrep</uri>
    </element-citation>
  </ref>
  <ref id="ref-seq_io">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Schlegel</surname><given-names>Markus</given-names></name>
        <name><surname>Seyboldt</surname><given-names>Adrian</given-names></name>
      </person-group>
      <article-title>seq_io: FASTA and FASTQ parsing and writing in Rust</article-title>
      <year iso-8601-date="2025">2025</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2025-01-08">2025</year><month>01</month><day>08</day></date-in-citation>
      <uri>https://github.com/markschl/seq_io</uri>
    </element-citation>
  </ref>
  <ref id="ref-regex">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Gallant</surname></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>regex</article-title>
      <year iso-8601-date="2025">2025</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2025-01-08">2025</year><month>01</month><day>08</day></date-in-citation>
      <uri>https://github.com/rust-lang/regex</uri>
    </element-citation>
  </ref>
  <ref id="ref-rebar">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Gallant</surname></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>rebar</article-title>
      <year iso-8601-date="2025">2025</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2025-01-08">2025</year><month>01</month><day>08</day></date-in-citation>
      <uri>https://github.com/BurntSushi/rebar</uri>
    </element-citation>
  </ref>
  <ref id="ref-merrett2024highly">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Merrett</surname><given-names>James E</given-names></name>
        <name><surname>Nolan</surname><given-names>Monica</given-names></name>
        <name><surname>Hartman</surname><given-names>Leon</given-names></name>
        <name><surname>John</surname><given-names>Nijoy</given-names></name>
        <name><surname>Flynn</surname><given-names>Brianna</given-names></name>
        <name><surname>Baker</surname><given-names>Louise</given-names></name>
        <name><surname>Schang</surname><given-names>Christelle</given-names></name>
        <name><surname>McCarthy</surname><given-names>David</given-names></name>
        <name><surname>Lister</surname><given-names>David</given-names></name>
        <name><surname>Cheng</surname><given-names>Ngai Ning</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Highly sensitive wastewater surveillance of SARS-CoV-2 variants by targeted next-generation amplicon sequencing provides early warning of incursion in victoria, australia</article-title>
      <source>Applied and Environmental Microbiology</source>
      <publisher-name>American Society for Microbiology 1752 N St., NW, Washington, DC</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <volume>90</volume>
      <issue>8</issue>
      <pub-id pub-id-type="doi">10.1128/aem.01497-23</pub-id>
      <fpage>e01497</fpage>
      <lpage>23</lpage>
    </element-citation>
  </ref>
  <ref id="ref-katz2022sequence">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Katz</surname><given-names>Kenneth</given-names></name>
        <name><surname>Shutov</surname><given-names>Oleg</given-names></name>
        <name><surname>Lapoint</surname><given-names>Richard</given-names></name>
        <name><surname>Kimelman</surname><given-names>Michael</given-names></name>
        <name><surname>Brister</surname><given-names>J Rodney</given-names></name>
        <name><surname>O’Sullivan</surname><given-names>Christopher</given-names></name>
      </person-group>
      <article-title>The sequence read archive: A decade more of explosive growth</article-title>
      <source>Nucleic acids research</source>
      <publisher-name>Oxford University Press</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <volume>50</volume>
      <issue>D1</issue>
      <pub-id pub-id-type="doi">10.1093/nar/gkab1053</pub-id>
      <fpage>D387</fpage>
      <lpage>D390</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
