<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">3896</article-id>
<article-id pub-id-type="doi">10.21105/joss.03896</article-id>
<title-group>
<article-title>PyMPDATA v1: Numba-accelerated implementation of MPDATA
with examples in Python, Julia and Matlab</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-0265-6428</contrib-id>
<name>
<surname>Bartman</surname>
<given-names>Piotr</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Banaśkiewicz</surname>
<given-names>Jakub</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Drenda</surname>
<given-names>Szymon</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Manna</surname>
<given-names>Maciej</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-6319-9358</contrib-id>
<name>
<surname>Olesik</surname>
<given-names>Michael A.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Rozwoda</surname>
<given-names>Paweł</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-3482-9733</contrib-id>
<name>
<surname>Sadowski</surname>
<given-names>Michał</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-2361-0082</contrib-id>
<name>
<surname>Arabas</surname>
<given-names>Sylwester</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Jagiellonian University, Kraków, Poland</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>University of Illinois at Urbana-Champaign, IL,
USA</institution>
</institution-wrap>
</aff>
</contrib-group>
<volume>7</volume>
<issue>77</issue>
<fpage>3896</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>pde-solver</kwd>
<kwd>numerical-integration</kwd>
<kwd>numba</kwd>
<kwd>advection-diffusion</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Convection-diffusion problems arise across a wide range of pure and
  applied research, in particular in geosciences, aerospace engineering,
  and financial modelling (for an overview of applications, see, e.g.,
  section 1.1 in Morton
  (<xref alt="1996" rid="ref-Morton_1996" ref-type="bibr">1996</xref>)).
  One of the key challenges in numerical solutions of problems involving
  advective transport is sign preservation of the advected field (for an
  overview of this and other aspects of numerical solutions to advection
  problems, see, e.g., Røed
  (<xref alt="2019" rid="ref-Roed_2019" ref-type="bibr">2019</xref>)).
  The Multidimensional Positive Definite Advection Transport Algorithm
  (<monospace>MPDATA</monospace>) is a robust, explicit-in-time, and
  sign-preserving solver introduced in Smolarkiewicz
  (<xref alt="1983" rid="ref-Smolarkiewicz_1983" ref-type="bibr">1983</xref>)
  and Smolarkiewicz
  (<xref alt="1984" rid="ref-Smolarkiewicz_1984" ref-type="bibr">1984</xref>).
  <monospace>MPDATA</monospace> has been subsequently developed into a
  family of numerical schemes with numerous variants and solution
  procedures addressing a diverse set of problems in geophysical fluid
  dynamics and beyond. For reviews of <monospace>MPDATA</monospace>
  applications and variants, see, e.g., Smolarkiewicz &amp; Margolin
  (<xref alt="1998" rid="ref-Smolarkiewicz_and_Margolin_1998_JCP" ref-type="bibr">1998</xref>)
  and Smolarkiewicz
  (<xref alt="2006" rid="ref-Smolarkiewicz_2006" ref-type="bibr">2006</xref>).</p>
  <p>The <monospace>PyMPDATA</monospace> project introduced herein
  constitutes a high-performance and multi-threaded implementation of
  structured-mesh <monospace>MPDATA</monospace> in
  <monospace>Python</monospace>. <monospace>PyMPDATA</monospace> is
  aimed to address several aspects which steepen the learning curve and
  limit collaborative usage and development of existing
  <monospace>C++</monospace> (e.g.,
  <xref alt="Jaruga et al., 2015" rid="ref-Jaruga_et_al_2015" ref-type="bibr">Jaruga
  et al., 2015</xref>) and <monospace>Fortran</monospace> (e.g.,
  <xref alt="Kühnlein et al., 2019" rid="ref-Kuehnlein_et_al_2019" ref-type="bibr">Kühnlein
  et al., 2019</xref>) implementations of <monospace>MPDATA</monospace>.
  Performance on par with compiled-language implementations is targeted
  by employing just-in-time (JIT) compilation using
  <monospace>Numba</monospace>
  (<xref alt="Lam et al., 2015" rid="ref-Lam_et_al_2015" ref-type="bibr">Lam
  et al., 2015</xref>), which translates <monospace>Python</monospace>
  code into fast machine code using the Low Level Virtual Machine
  (<monospace>LLVM</monospace>, https://llvm.org/) compiler
  infrastructure (for a discussion of another JIT implementation of
  <monospace>MPDATA</monospace> using <monospace>PyPy</monospace>, see
  <xref alt="Arabas et al., 2014" rid="ref-Arabas_et_al_2014" ref-type="bibr">Arabas
  et al., 2014</xref>). <monospace>PyMPDATA</monospace> is engineered
  aiming at both performance and usability, the latter encompassing
  research user’s, developer’s and maintainer’s perspectives. From
  researcher’s perspective, <monospace>PyMPDATA</monospace> offers
  hassle-free installation on <monospace>Linux</monospace>,
  <monospace>macOS</monospace>, and <monospace>Windows</monospace>. It
  also eliminates the compilation stage from the perspective of the
  user. From developer’s and maintainer’s perspectives,
  <monospace>PyMPDATA</monospace> offers a suite of unit tests,
  multi-platform continuous integration setup, seamless integration with
  <monospace>Python</monospace> development tools including debuggers,
  profilers, and code analysers.</p>
</sec>
<sec id="summary">
  <title>Summary</title>
  <p><monospace>PyMPDATA</monospace> interface uses
  <monospace>NumPy</monospace> for array-oriented input and output.
  Usage of <monospace>PyMPDATA</monospace> from
  <monospace>Julia</monospace> (https://julialang.org) and
  <monospace>Matlab</monospace> (https://mathworks.com) through
  <monospace>PyCall</monospace> and the built-in
  <monospace>Python</monospace> interoperability tools, respectively, is
  depicted in the PyMPDATA README file. The appendices of the present
  paper include <monospace>Python</monospace>,
  <monospace>Julia</monospace> and <monospace>Matlab</monospace> minimal
  code snippets covering steps needed to complete a basic
  <monospace>PyMPDATA</monospace> simulation depicted in
  <xref alt="Figure 1" rid="fig">Figure 1</xref> and based on Figure 5
  from Arabas et al.
  (<xref alt="2014" rid="ref-Arabas_et_al_2014" ref-type="bibr">2014</xref>).</p>
  <fig>
    <caption><p>Visualisation of the initial condition (left) and
    simulation state after 75 timesteps (right) from the 2D simulation
    for which sample codes are given in the appendices, based on Fig. 5
    from Arabas et al.
    (<xref alt="2014" rid="ref-Arabas_et_al_2014" ref-type="bibr">2014</xref>).<styled-content id="fig"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/fig-crop.pdf" xlink:title="" />
  </fig>
  <p>As of the current version, <monospace>PyMPDATA</monospace> supports
  homogeneous transport in one (1D), two (2D), and three dimensions (3D)
  using structured meshes, optionally generalised by coordinate
  transformation
  (<xref alt="Smolarkiewicz &amp; Clark, 1986" rid="ref-Smolarkiewicz_and_Clark_1986" ref-type="bibr">Smolarkiewicz
  &amp; Clark, 1986</xref>;
  <xref alt="Smolarkiewicz &amp; Margolin, 1993" rid="ref-Smolarkiewicz_and_Margolin_1993" ref-type="bibr">Smolarkiewicz
  &amp; Margolin, 1993</xref>). <monospace>PyMPDATA</monospace> includes
  implementation of a subset of <monospace>MPDATA</monospace> variants,
  such as the non-oscillatory option
  (<xref alt="Smolarkiewicz &amp; Grabowski, 1990" rid="ref-Smolarkiewicz_and_Grabowski_1990" ref-type="bibr">Smolarkiewicz
  &amp; Grabowski, 1990</xref>), the infinite-gauge variant
  (<xref alt="Margolin &amp; Shashkov, 2006" rid="ref-Margolin_and_Shashkov_2006" ref-type="bibr">Margolin
  &amp; Shashkov, 2006</xref>;
  <xref alt="Smolarkiewicz &amp; Clark, 1986" rid="ref-Smolarkiewicz_and_Clark_1986" ref-type="bibr">Smolarkiewicz
  &amp; Clark, 1986</xref>), the divergent-flow option
  (<xref alt="Margolin &amp; Smolarkiewicz, 1998" rid="ref-Smolarkiewicz_and_Margolin_1998_SIAM" ref-type="bibr">Margolin
  &amp; Smolarkiewicz, 1998</xref>;
  <xref alt="Smolarkiewicz, 1984" rid="ref-Smolarkiewicz_1984" ref-type="bibr">Smolarkiewicz,
  1984</xref>), the double-pass donor cell (DPDC) flavour
  (<xref alt="Beason &amp; Margolin, 1988" rid="ref-Beason_Margolin_1988" ref-type="bibr">Beason
  &amp; Margolin, 1988</xref>;
  <xref alt="Margolin &amp; Shashkov, 2006" rid="ref-Margolin_and_Shashkov_2006" ref-type="bibr">Margolin
  &amp; Shashkov, 2006</xref>;
  <xref alt="Margolin &amp; Smolarkiewicz, 1998" rid="ref-Smolarkiewicz_and_Margolin_1998_SIAM" ref-type="bibr">Margolin
  &amp; Smolarkiewicz, 1998</xref>), and the third-order-terms options
  (<xref alt="Margolin &amp; Smolarkiewicz, 1998" rid="ref-Smolarkiewicz_and_Margolin_1998_SIAM" ref-type="bibr">Margolin
  &amp; Smolarkiewicz, 1998</xref>). It also features support for
  integration of Fickian-terms in advection-diffusion problems using the
  pseudo-transport velocity approach
  (<xref alt="Smolarkiewicz &amp; Clark, 1986" rid="ref-Smolarkiewicz_and_Clark_1986" ref-type="bibr">Smolarkiewicz
  &amp; Clark, 1986</xref>;
  <xref alt="Smolarkiewicz &amp; Szmelter, 2005" rid="ref-Smolarkiewicz_and_Szmelter_2005" ref-type="bibr">Smolarkiewicz
  &amp; Szmelter, 2005</xref>).</p>
  <p>A companion package named <monospace>PyMPDATA-examples</monospace>
  contains a set of Jupyter notebooks, which reproduce results from
  literature using <monospace>PyMPDATA</monospace>. These examples are
  also executed within continuous integration runs. Several of the
  examples feature comparisons against analytical solution, and these
  are also included in the test suite of
  <monospace>PyMPDATA</monospace>. The
  <monospace>PyMPDATA-examples</monospace> README file includes links
  (badges) offering single-click deployment in the cloud using either
  the Binder (<monospace>https://mybinder.org</monospace>) or the Colab
  (<monospace>https://colab.research.google.com</monospace>)
  platforms.</p>
  <p>A separate project named <monospace>numba-mpi</monospace> has been
  developed to set the stage for future Message Passing Interface
  (<monospace>MPI</monospace>) distributed memory parallelism in
  <monospace>PyMPDATA</monospace>. The <monospace>PyMPDATA</monospace>,
  the <monospace>PyMPDATA-examples</monospace> and the
  <monospace>numba-mpi</monospace> packages are available in the
  <monospace>PyPI</monospace> package repository, and installation of
  these packages reduces to typing
  <monospace>pip install package_name</monospace>. Development of all
  three packages is hosted on <monospace>GitHub</monospace> at:
  https://github.com/atmos-cloud-sim-uj/ and continuous integration runs
  on <monospace>Linux</monospace>, <monospace>macOS</monospace> and
  <monospace>Windows</monospace> using
  <monospace>GitHub Actions</monospace> and
  <monospace>Appveyor</monospace> platforms (the latter used for 32-bit
  runs on Windows). Auto-generated documentation sites built with
  <monospace>pdoc3</monospace> are hosted at
  https://atmos-cloud-sim-uj.github.io/PyMPDATA/,
  https://atmos-cloud-sim-uj.github.io/PyMPDATA-examples/, and
  https://atmos-cloud-sim-uj.github.io/numba-mpi/.</p>
  <p><monospace>PyMPDATA</monospace> is a free and open-source software
  released under the terms of the GNU General Public License 3.0
  (https://www.gnu.org/licenses/gpl-3.0).</p>
</sec>
<sec id="usage-examples">
  <title>Usage examples</title>
  <p>Simulations included in the
  <monospace>PyMPDATA-examples</monospace> package are listed below,
  labelled with the paper reference on which the example setup is based.
  Each example is annotated with the dimensionality, number of equations
  constituting the system, and an outline of setup.</p>
  <list list-type="bullet">
    <list-item>
      <p>1D:</p>
      <list list-type="bullet">
        <list-item>
          <p>Smolarkiewicz
          (<xref alt="2006" rid="ref-Smolarkiewicz_2006" ref-type="bibr">2006</xref>):
          single-equation advection-only homogeneous problem with
          different algorithm options depicted with constant velocity
          field</p>
        </list-item>
        <list-item>
          <p>Arabas &amp; Farhat
          (<xref alt="2020" rid="ref-Arabas_and_Farhat_2020" ref-type="bibr">2020</xref>):
          single-equation advection-diffusion problem resulting from a
          transformation of the Black-Scholes equation into either
          homogeneous or heterogeneous problem for European or American
          option valuation, respectively</p>
        </list-item>
        <list-item>
          <p>Olesik et al.
          (<xref alt="2022" rid="ref-Olesik_et_al_2021" ref-type="bibr">2022</xref>):
          single-equation advection-only homogeneous problem with
          coordinate transformation depicting application of
          <monospace>MPDATA</monospace> for condensational growth of a
          population of particles</p>
        </list-item>
      </list>
    </list-item>
    <list-item>
      <p>2D:</p>
      <list list-type="bullet">
        <list-item>
          <p>Molenkamp
          (<xref alt="1968" rid="ref-Molenkamp_1968" ref-type="bibr">1968</xref>):
          single-equation homogeneous transport with different algorithm
          options</p>
        </list-item>
        <list-item>
          <p>Jarecka et al.
          (<xref alt="2015" rid="ref-Jarecka_et_al_2015" ref-type="bibr">2015</xref>):
          shallow-water system with three equations representing
          conservation of mass and two components of momentum (with the
          momentum equations featuring source terms) modelling spreading
          under gravity of a three-dimensional elliptic drop on a
          two-dimensional plane</p>
        </list-item>
        <list-item>
          <p>Williamson &amp; Rasch
          (<xref alt="1989" rid="ref-Williamson_and_Rasch_1989" ref-type="bibr">1989</xref>):
          advection on a spherical plane depicting transformation to
          spherical coordinates</p>
        </list-item>
        <list-item>
          <p>Shipway &amp; Hill
          (<xref alt="2012" rid="ref-Shipway_and_Hill_2012" ref-type="bibr">2012</xref>):
          coupled system of water vapour mass (single spatial dimension)
          and water droplet number conservation (spatial and spectral
          dimensions) with the latter featuring source term modelling
          activation of water droplets on aerosol particles, coordinate
          transformation used for representation of air density
          profile</p>
        </list-item>
      </list>
    </list-item>
    <list-item>
      <p>3D:</p>
      <list list-type="bullet">
        <list-item>
          <p>Smolarkiewicz
          (<xref alt="1984" rid="ref-Smolarkiewicz_1984" ref-type="bibr">1984</xref>):
          homogeneous single-equation example depicting revolution of a
          spherical signal in a constant angular velocity rotational
          velocity field</p>
        </list-item>
      </list>
    </list-item>
  </list>
  <p>In addition, <monospace>PyMPDATA</monospace> is used in a
  two-dimensional setup in of the examples in the sister PySDM package
  (<xref alt="Bartman et al., 2022" rid="ref-Bartman_et_al_2021" ref-type="bibr">Bartman
  et al., 2022</xref>).</p>
</sec>
<sec id="implementation-highlights">
  <title>Implementation highlights</title>
  <p>In 2D and 3D simulations, domain-decomposition is used for
  multi-threaded parallelism. Domain decomposition is performed along
  the outer dimension only and is realised using the
  <monospace>numba.prange()</monospace> functionality.</p>
  <p><monospace>PyMPDATA</monospace> design features a custom-built
  multi-dimensional Arakawa-C staggered grid layer, allowing to
  concisely represent multi-dimensional stencil operations on both
  scalar and vector fields. The grid layer is built on top of
  <monospace>NumPy</monospace>’s <monospace>ndarray</monospace>s (using
  “C” ordering) using the <monospace>Numba</monospace>’s
  <monospace>@njit</monospace> functionality for high-performance
  multi-threaded array traversals. The array-traversal layer enables to
  code once for multiple dimensions (i.e. one set of
  <monospace>MPDATA</monospace> formulae for 1D, 2D, and 3D), and
  automatically handles (if needed) any halo-filling logic related to
  boundary conditions.</p>
  <p>The <monospace>Numba</monospace>’s deviation from
  <monospace>Python</monospace> semantics rendering closure variables as
  compile-time constants is extensively exploited within
  <monospace>PyMPDATA</monospace> code base enabling the just-in-time
  compilation to benefit from information on domain extents, algorithm
  variant used and problem characteristics (e.g., coordinate
  transformation used, or lack thereof).</p>
  <p>In general, the numerical and concurrency aspects of
  <monospace>PyMPDATA</monospace> implementation follow the
  <monospace>libmpdata++</monospace> open-source
  <monospace>C++</monospace> implementation of
  <monospace>MPDATA</monospace>
  (<xref alt="Jaruga et al., 2015" rid="ref-Jaruga_et_al_2015" ref-type="bibr">Jaruga
  et al., 2015</xref>).</p>
</sec>
<sec id="performance">
  <title>Performance</title>
  <p>A basic performance analysis is carried out comparing
  <monospace>PyMPDATA</monospace> execution (wall) times: (i) with or
  without Numba JIT, as well as (ii) comparing performance against the
  <monospace>C++</monospace> implementation of
  <monospace>MPDATA</monospace> in <monospace>libmpdata++</monospace>.
  The tests are carried out using a 3D simulation based on the revolving
  sphere case from Smolarkiewicz
  (<xref alt="1984" rid="ref-Smolarkiewicz_1984" ref-type="bibr">1984</xref>)
  (figs. 13-16 therein) as used in Jaruga et al.
  (<xref alt="2015" rid="ref-Jaruga_et_al_2015" ref-type="bibr">2015</xref>)
  (fig. 13 therein). The simulation setup involves solution of a
  homogeneous advection problem in a cubic domain with a non-divergent
  rotational flow. Here, for simplicity, all simulations are carried out
  for 64 timesteps, and the measured wall-time is divided by the number
  of steps and reported as wall-time per timestep. In all reported runs,
  both for libmpdata++ and PyMPDATA, two corrective iterations of MPDATA
  are used, and the basic flavour of the algorithm is employed.
  Wall-time measurements are carried out using the timers built-in into
  libmpdata++, and using Python’s <monospace>timeit</monospace>
  routines, respectively. Timing applies to integration only excluding
  initial condition evaluation or output handling. Simulations are
  repeated four times and the minimal value is reported in order to
  filter out JIT-compilation and caching overhead and to minimise
  thread-schedulling differences. For PyMPDATA runs with Numba JIT
  disabled, the number of repetitions is reduced from four to two.
  Simulations are carried out on one, two or three threads on a machine
  with four physical cores.</p>
  <fig>
    <caption><p>Comparison of wall-time measurements results for a 3D
    simulation using PyMPDATA with JIT disabled (red line) and enabled
    (connected points) corroborated against timings of analogous
    simulation performed with libmpdata++. Panel (a) presents scaling
    with the number of threads used, for the case of 16 by 16 by 16
    domain. Panel (b) depicts scaling with domain size for simulations
    using three
    threads.<styled-content id="figU003Aperf"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/fig-perf.pdf" xlink:title="" />
  </fig>
  <p><xref alt="Figure 2" rid="figU003Aperf">Figure 2</xref> (a) depicts
  wall-times measured with a domain of 16 by 16 by 16, and for:
  <monospace>PyMPDATA</monospace> with Numba JIT disabled (red line),
  <monospace>libmpdata++</monospace> (green connected points), and
  <monospace>PyMPDATA</monospace> with JIT enabled for both dynamic grid
  (i.e., grid extents specified at run-time, plotted with orange
  connected points) and static grid (i.e., grid extents specified ahead
  of JIT compilation, blue connected points). First, an over three
  orders of magnitude speedup is depicted comparing wall-times with JIT
  disabled and enabled. Comparison of <monospace>PyMPDATA</monospace>
  and <monospace>libmpdata++</monospace> reveals comparable performance
  and scaling with number of threads with consistently shorter
  wall-times for <monospace>PyMPDATA</monospace>, and a slight further
  improvement when switching from dynamic to static grid.</p>
  <p><xref alt="Figure 2" rid="figU003Aperf">Figure 2</xref> (b) depicts
  wall-time dependence on the domain size for the case of three threads,
  and confirms that the observed higher performance of
  <monospace>PyMPDATA</monospace> as compared with libmpdata++ can be
  observed over a range of domain sizes starting from 16 by 16 by 16 up
  to 128 by 128 by 128. While more comprehensive tests and analyses
  would be needed to identify the cause of this superior performance,
  two possible factors include overhead from employment of the
  <monospace>Blitz++</monospace> library in
  <monospace>libmpdata++</monospace> as well as explicit (potentially
  superfluous) halo-filling triggers in
  <monospace>libmpdata++</monospace> as opposed to on-demand
  halo-filling design implemented in <monospace>PyMPDATA</monospace>.
  Noteworthy, as reported in Jaruga et al.
  (<xref alt="2015" rid="ref-Jaruga_et_al_2015" ref-type="bibr">2015</xref>)
  (section 7 therein), for the very test case discussed herein, and for
  small grid sizes (59 by 59 by 59), <monospace>libmpdata++</monospace>
  had up to five times longer execution times compared with the original
  <monospace>FORTRAN-77</monospace> serial implementaion of MPDATA. This
  indicates that the measured performance of
  <monospace>PyMPDATA</monospace> approaches the performance of the
  original FORTRAN-77 implementation, at the same time offering
  multi-threading concurrency, hiding the compilation and linking stages
  from the user, and featuring interoperability with the Python package
  ecosystem.</p>
</sec>
<sec id="appendix-p-python-sample-code">
  <title>Appendix P: Python sample code</title>
  <code language="python">import numpy as np
from PyMPDATA import Options, ScalarField, VectorField, Stepper, Solver
from PyMPDATA.boundary_conditions import Periodic

options = Options(n_iters=2)
nx, ny = 24, 24
Cx, Cy = -.5, -.25
halo = options.n_halo

xi, yi = np.indices((nx, ny), dtype=float)
advectee = ScalarField(
  data=np.exp(
    -(xi+.5-nx/2)**2 / (2*(nx/10)**2)
    -(yi+.5-ny/2)**2 / (2*(ny/10)**2)
  ),  
  halo=halo,
  boundary_conditions=(Periodic(), Periodic())
)
advector = VectorField(
  data=(np.full((nx + 1, ny), Cx), np.full((nx, ny + 1), Cy)),
  halo=halo,
  boundary_conditions=(Periodic(), Periodic())
)
stepper = Stepper(options=options, grid=(nx, ny))
solver = Solver(stepper=stepper, advectee=advectee, advector=advector)
solver.advance(n_steps=75)
state = solver.advectee.get()</code>
</sec>
<sec id="appendix-j-julia-sample-code">
  <title>Appendix J: Julia sample code</title>
  <code language="julia">using PyCall
Options = pyimport(&quot;PyMPDATA&quot;).Options
ScalarField = pyimport(&quot;PyMPDATA&quot;).ScalarField
VectorField = pyimport(&quot;PyMPDATA&quot;).VectorField
Stepper = pyimport(&quot;PyMPDATA&quot;).Stepper
Solver = pyimport(&quot;PyMPDATA&quot;).Solver
Periodic = pyimport(&quot;PyMPDATA.boundary_conditions&quot;).Periodic

options = Options(n_iters=2)
nx, ny = 24, 24
Cx, Cy = -.5, -.25
idx = CartesianIndices((nx, ny))
halo = options.n_halo
advectee = ScalarField(
    data=exp.(
        -(getindex.(idx, 1) .- .5 .- nx/2).^2 / (2*(nx/10)^2) 
        -(getindex.(idx, 2) .- .5 .- ny/2).^2 / (2*(ny/10)^2)
    ),  
    halo=halo, 
    boundary_conditions=(Periodic(), Periodic())
)
advector = VectorField(
    data=(fill(Cx, (nx+1, ny)), fill(Cy, (nx, ny+1))),
    halo=halo,
    boundary_conditions=(Periodic(), Periodic())    
)

stepper = Stepper(options=options, grid=(nx, ny))
solver = Solver(stepper=stepper, advectee=advectee, advector=advector)
solver.advance(n_steps=75)
state = solver.advectee.get()</code>
</sec>
<sec id="appendix-m-matlab-sample-code">
  <title>Appendix M: Matlab sample code</title>
  <code language="matlab">Options = py.importlib.import_module('PyMPDATA').Options;
ScalarField = py.importlib.import_module('PyMPDATA').ScalarField;
VectorField = py.importlib.import_module('PyMPDATA').VectorField;
Stepper = py.importlib.import_module('PyMPDATA').Stepper;
Solver = py.importlib.import_module('PyMPDATA').Solver;
Periodic = ...
    py.importlib.import_module('PyMPDATA.boundary_conditions').Periodic;

options = Options(pyargs('n_iters', 2));
nx = int32(24);
ny = int32(24);
  
Cx = -.5;
Cy = -.25;

[xi, yi] = meshgrid(double(0:1:nx-1), double(0:1:ny-1));

halo = options.n_halo;
advectee = ScalarField(pyargs(...
    'data', py.numpy.array(exp( ... 
        -(xi+.5-double(nx)/2).^2 / (2*(double(nx)/10)^2) ... 
        -(yi+.5-double(ny)/2).^2 / (2*(double(ny)/10)^2) ... 
    )), ... 
    'halo', halo, ... 
    'boundary_conditions', py.tuple({Periodic(), Periodic()}) ... 
));
advector = VectorField(pyargs(...
    'data', py.tuple({ ... 
        Cx * py.numpy.ones(int32([nx+1 ny])), ... 
        Cy * py.numpy.ones(int32([nx ny+1])) ... 
     }), ... 
    'halo', halo, ... 
    'boundary_conditions', py.tuple({Periodic(), Periodic()}) ... 
));

stepper = Stepper(pyargs(...
  'options', options, ... 
  'grid', py.tuple({nx, ny}) ... 
));
solver = Solver(...
    pyargs('stepper', ...
    stepper, 'advectee', ...
    advectee, 'advector', ...
    advector ...
));
solver.advance(pyargs('n_steps', 75));
state = solver.advectee.get();</code>
</sec>
<sec id="author-contributions">
  <title>Author contributions</title>
  <p>PB had been the architect of <monospace>PyMPDATA</monospace> with
  SA taking the role of main developer and maintainer over the time. MO
  participated in the package core development and led the development
  of the condensational-growth example, which was the basis of his MSc
  thesis. JB contributed the DPDC algorithm variant handling. SD
  contributed the advection-diffusion example. MM contributed to the
  <monospace>numba-mpi</monospace> package. PR contributed the
  shallow-water example. MS contributed the advection-on-a-sphere
  example. The paper was composed by SA and is based on the contents of
  the README files of the <monospace>PyMPDATA</monospace>,
  <monospace>PyMPDATA-examples</monospace>, and
  <monospace>numba-mpi</monospace> packages.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>Development of <monospace>PyMPDATA</monospace> has been carried out
  within the POWROTY/REINTEGRATION programme of the Foundation for
  Polish Science, co-financed by the European Union under the European
  Regional Development Fund (POIR.04.04.00-00-5E1C/18).</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-Molenkamp_1968">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Molenkamp</surname><given-names>C. R.</given-names></name>
      </person-group>
      <article-title>Accuracy of finite-difference methods applied to the advection equation</article-title>
      <source>J. Appl. Meteorol. Climatol.</source>
      <year iso-8601-date="1968">1968</year>
      <volume>7</volume>
      <pub-id pub-id-type="doi">10.1175/1520-0450(1968)007&lt;0160:AOFDMA&gt;2.0.CO;2</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Smolarkiewicz_1983">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Smolarkiewicz</surname><given-names>P. K.</given-names></name>
      </person-group>
      <article-title>A simple positive definite advection scheme with small implicit diffusion</article-title>
      <source>Mon. Weather Rev.</source>
      <year iso-8601-date="1983">1983</year>
      <volume>111</volume>
      <pub-id pub-id-type="doi">10.1175/1520-0493(1983)111&lt;0479:ASPDAS&gt;2.0.CO;2</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Smolarkiewicz_1984">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Smolarkiewicz</surname><given-names>P. K.</given-names></name>
      </person-group>
      <article-title>A fully multidimensional positive definite advection transport algorithm with small implicit diffusion</article-title>
      <source>J. Comp. Phys.</source>
      <year iso-8601-date="1984">1984</year>
      <volume>54</volume>
      <pub-id pub-id-type="doi">10.1016/0021-9991(84)90121-9</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Smolarkiewicz_and_Clark_1986">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Smolarkiewicz</surname><given-names>P. K.</given-names></name>
        <name><surname>Clark</surname><given-names>T. L.</given-names></name>
      </person-group>
      <article-title>The multidimensional positive definite advection transport algorithm: Further development and applications</article-title>
      <source>J. Comp. Phys.</source>
      <year iso-8601-date="1986">1986</year>
      <volume>67</volume>
      <pub-id pub-id-type="doi">10.1016/0021-9991(86)90270-6</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Beason_Margolin_1988">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Beason</surname><given-names>C. W.</given-names></name>
        <name><surname>Margolin</surname><given-names>L. G.</given-names></name>
      </person-group>
      <article-title>DPDC (double-pass donor cell): A second-order monotone scheme for advection</article-title>
      <source>Fifth nuclear code developers’ conference</source>
      <year iso-8601-date="1988">1988</year>
      <uri>https://www.osti.gov/servlets/purl/7049237</uri>
    </element-citation>
  </ref>
  <ref id="ref-Williamson_and_Rasch_1989">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Williamson</surname><given-names>D. L.</given-names></name>
        <name><surname>Rasch</surname><given-names>P. J.</given-names></name>
      </person-group>
      <article-title>Two-dimensional semi-Lagrangian transport with shape-preserving interpolation</article-title>
      <source>Mon. Weather Rev.</source>
      <year iso-8601-date="1989">1989</year>
      <volume>117</volume>
      <pub-id pub-id-type="doi">10.1175/1520-0493(1989)117&lt;0102:TDSLTW&gt;2.0.CO;2</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Smolarkiewicz_and_Grabowski_1990">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Smolarkiewicz</surname><given-names>P. K.</given-names></name>
        <name><surname>Grabowski</surname><given-names>W. W.</given-names></name>
      </person-group>
      <article-title>The multidimensional positive definite advection transport algorithm: Nonoscillatory option</article-title>
      <source>J. Comp. Phys.</source>
      <year iso-8601-date="1990">1990</year>
      <volume>86</volume>
      <pub-id pub-id-type="doi">10.1016/0021-9991(90)90105-A</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Smolarkiewicz_and_Margolin_1993">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Smolarkiewicz</surname><given-names>P. K.</given-names></name>
        <name><surname>Margolin</surname><given-names>L. G.</given-names></name>
      </person-group>
      <article-title>On forward-in-time differencing for fluids: Extension to a curvilinear framework</article-title>
      <source>Mon. Weather Rev.</source>
      <year iso-8601-date="1993">1993</year>
      <volume>121</volume>
      <pub-id pub-id-type="doi">10.1175/1520-0493(1993)121&lt;1847:OFITDF&gt;2.0.CO;2</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Morton_1996">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Morton</surname><given-names>K. W.</given-names></name>
      </person-group>
      <source>Numerical solution of convection-diffusion problems</source>
      <publisher-name>CRC Press</publisher-name>
      <year iso-8601-date="1996">1996</year>
      <pub-id pub-id-type="doi">10.1201/9780203711194</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Smolarkiewicz_and_Margolin_1998_JCP">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Smolarkiewicz</surname><given-names>P. K.</given-names></name>
        <name><surname>Margolin</surname><given-names>L. G.</given-names></name>
      </person-group>
      <article-title>MPDATA: A finite-difference solverfor geophysical flows</article-title>
      <source>J. Comp. Phys.</source>
      <year iso-8601-date="1998">1998</year>
      <volume>140</volume>
      <pub-id pub-id-type="doi">10.1006/jcph.1998.5901</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Smolarkiewicz_and_Margolin_1998_SIAM">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Margolin</surname><given-names>L. G.</given-names></name>
        <name><surname>Smolarkiewicz</surname><given-names>P. K.</given-names></name>
      </person-group>
      <article-title>Antidiffusive velocities for multipass donor cell advection</article-title>
      <source>SIAM J. Sci. Comput.</source>
      <year iso-8601-date="1998">1998</year>
      <volume>20</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1137/S106482759324700X</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Smolarkiewicz_and_Szmelter_2005">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Smolarkiewicz</surname><given-names>P. K.</given-names></name>
        <name><surname>Szmelter</surname><given-names>J.</given-names></name>
      </person-group>
      <article-title>MPDATA: An edge-based unstructured-grid formulation</article-title>
      <source>J. Comp. Phys.</source>
      <year iso-8601-date="2005">2005</year>
      <volume>206</volume>
      <issue>2</issue>
      <pub-id pub-id-type="doi">10.1016/j.jcp.2004.12.021</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Margolin_and_Shashkov_2006">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Margolin</surname><given-names>L. G.</given-names></name>
        <name><surname>Shashkov</surname><given-names>M.</given-names></name>
      </person-group>
      <article-title>MPDATA: Gauge transformations, limiters and monotonicity</article-title>
      <source>Int. J. Numer. Methods Fluids</source>
      <year iso-8601-date="2006">2006</year>
      <volume>50</volume>
      <issue>10</issue>
      <pub-id pub-id-type="doi">10.1002/fld.1070</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Smolarkiewicz_2006">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Smolarkiewicz</surname><given-names>P. K.</given-names></name>
      </person-group>
      <article-title>Multidimensional positive definite advection transport algorithm: An overview</article-title>
      <source>Int. J. Numer. Methods Fluids</source>
      <year iso-8601-date="2006">2006</year>
      <volume>50</volume>
      <issue>10</issue>
      <pub-id pub-id-type="doi">10.1002/fld.1071</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Shipway_and_Hill_2012">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Shipway</surname><given-names>B. J.</given-names></name>
        <name><surname>Hill</surname><given-names>A. A.</given-names></name>
      </person-group>
      <article-title>Diagnosis of systematic differences between multiple parametrizations of warm rain microphysics using a kinematic framework</article-title>
      <source>Q. J. R. Meteorol. Soc.</source>
      <year iso-8601-date="2012">2012</year>
      <volume>138</volume>
      <issue>669</issue>
      <pub-id pub-id-type="doi">10.1002/qj.1913</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Arabas_et_al_2014">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Arabas</surname><given-names>S.</given-names></name>
        <name><surname>Jarecka</surname><given-names>D.</given-names></name>
        <name><surname>Jaruga</surname><given-names>A.</given-names></name>
        <name><surname>Fijałkowski</surname><given-names>M.</given-names></name>
      </person-group>
      <article-title>Formula translation in Blitz++, NumPy and modern Fortran: A case study of the language choice tradeoffs</article-title>
      <source>Sci. Prog.</source>
      <year iso-8601-date="2014">2014</year>
      <volume>22</volume>
      <pub-id pub-id-type="doi">10.3233/SPR-140379</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Jarecka_et_al_2015">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Jarecka</surname><given-names>D.</given-names></name>
        <name><surname>Jaruga</surname><given-names>A.</given-names></name>
        <name><surname>Smolarkiewicz</surname><given-names>P. K.</given-names></name>
      </person-group>
      <article-title>A spreading drop of shallow water</article-title>
      <source>J. Comp. Phys.</source>
      <year iso-8601-date="2015">2015</year>
      <volume>289</volume>
      <pub-id pub-id-type="doi">10.1016/j.jcp.2015.02.003</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Jaruga_et_al_2015">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Jaruga</surname><given-names>A.</given-names></name>
        <name><surname>Arabas</surname><given-names>S.</given-names></name>
        <name><surname>Jarecka</surname><given-names>D.</given-names></name>
        <name><surname>Pawlowska</surname><given-names>H.</given-names></name>
        <name><surname>Smolarkiewicz</surname><given-names>P. K.</given-names></name>
        <name><surname>Waruszewski</surname><given-names>M.</given-names></name>
      </person-group>
      <article-title>libmpdata++ 1.0: A library of parallel MPDATA solvers for systems of generalised transport equations</article-title>
      <source>Geosci. Model Dev.</source>
      <year iso-8601-date="2015">2015</year>
      <volume>8</volume>
      <pub-id pub-id-type="doi">10.5194/gmd-8-1005-2015</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Lam_et_al_2015">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Lam</surname><given-names>S. K.</given-names></name>
        <name><surname>Pitrou</surname><given-names>A.</given-names></name>
        <name><surname>Seibert</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>Numba: A LLVM-based Python JIT compiler</article-title>
      <source>Proceedings of the second workshop on the LLVM compiler infrastructure in HPC</source>
      <publisher-name>ACM</publisher-name>
      <publisher-loc>Austin, Texas</publisher-loc>
      <year iso-8601-date="2015">2015</year>
      <pub-id pub-id-type="doi">10.1145/2833157.2833162</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Roed_2019">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Røed</surname><given-names>L. P.</given-names></name>
      </person-group>
      <article-title>Advection problem</article-title>
      <source>Atmospheres and oceans on computers</source>
      <year iso-8601-date="2019">2019</year>
      <pub-id pub-id-type="doi">10.1007/978-3-319-93864-6_5</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Kuehnlein_et_al_2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kühnlein</surname><given-names>C.</given-names></name>
        <name><surname>Deconinck</surname><given-names>W.</given-names></name>
        <name><surname>Klein</surname><given-names>R.</given-names></name>
        <name><surname>Malardel</surname><given-names>S.</given-names></name>
        <name><surname>Piotrowski</surname><given-names>Z. P.</given-names></name>
        <name><surname>Smolarkiewicz</surname><given-names>P. K.</given-names></name>
        <name><surname>Szmelter</surname><given-names>J.</given-names></name>
        <name><surname>Wedi</surname><given-names>N. P.</given-names></name>
      </person-group>
      <article-title>FVM 1.0: A nonhydrostatic finite-volume dynamical core for the IFS</article-title>
      <source>Geosci. Model Dev.</source>
      <year iso-8601-date="2019">2019</year>
      <volume>12</volume>
      <pub-id pub-id-type="doi">10.5194/gmd-12-651-2019</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Arabas_and_Farhat_2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Arabas</surname><given-names>S.</given-names></name>
        <name><surname>Farhat</surname><given-names>A.</given-names></name>
      </person-group>
      <article-title>Derivative pricing as a transport problem: MPDATA solutions to Black–Scholes-type equations</article-title>
      <source>J. Comput. Appl. Math.</source>
      <year iso-8601-date="2020">2020</year>
      <volume>373</volume>
      <pub-id pub-id-type="doi">10.1016/j.cam.2019.05.023</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Olesik_et_al_2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Olesik</surname><given-names>M.</given-names></name>
        <name><surname>Banaśkiewicz</surname><given-names>J.</given-names></name>
        <name><surname>Bartman</surname><given-names>P.</given-names></name>
        <name><surname>Baumgartner</surname><given-names>M.</given-names></name>
        <name><surname>Unterstrasser</surname><given-names>S.</given-names></name>
        <name><surname>Arabas</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>On numerical broadening of particle-size spectra: A condensational growth study using PyMPDATA 1.0</article-title>
      <source>Geosci. Model Dev.</source>
      <year iso-8601-date="2022">2022</year>
      <volume>15</volume>
      <pub-id pub-id-type="doi">10.5194/gmd-15-3879-2022</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Bartman_et_al_2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bartman</surname><given-names>P.</given-names></name>
        <name><surname>Bulenok</surname><given-names>O.</given-names></name>
        <name><surname>Górski</surname><given-names>K.</given-names></name>
        <name><surname>Jaruga</surname><given-names>A.</given-names></name>
        <name><surname>G.</surname><given-names>Łazarski</given-names></name>
        <name><surname>Olesik</surname><given-names>M.</given-names></name>
        <name><surname>Piasecki</surname><given-names>B.</given-names></name>
        <name><surname>Singer</surname><given-names>C. E.</given-names></name>
        <name><surname>Talar</surname><given-names>A.</given-names></name>
        <name><surname>Arabas</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>PySDM v1: Particle-based cloud modelling package for warm-rain microphysics and aqueous chemistry</article-title>
      <source>J. Open Source Softw.</source>
      <year iso-8601-date="2022">2022</year>
      <volume>7</volume>
      <issue>72</issue>
      <pub-id pub-id-type="doi">10.21105/joss.03219</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
