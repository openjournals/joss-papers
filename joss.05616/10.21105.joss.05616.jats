<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">5616</article-id>
<article-id pub-id-type="doi">10.21105/joss.05616</article-id>
<title-group>
<article-title>ElectricGrid.jl - A Julia-based modeling and simulation
tool for power electronics-driven electric energy grids</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-9362-8777</contrib-id>
<name>
<surname>Wallscheid</surname>
<given-names>Oliver</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-3389-793X</contrib-id>
<name>
<surname>Peitz</surname>
<given-names>Sebastian</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Stenner</surname>
<given-names>Jan</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-3367-5998</contrib-id>
<name>
<surname>Weber</surname>
<given-names>Daniel</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Boshoff</surname>
<given-names>Septimus</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0008-2879-7118</contrib-id>
<name>
<surname>Meyer</surname>
<given-names>Marvin</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Chidananda</surname>
<given-names>Vikas</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Schweins</surname>
<given-names>Oliver</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Chair of Power Electronics and Electrical Drives, Paderborn
University, Paderborn, Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Chair of Data Science for Engineering, Paderborn
University, Paderborn, Germany</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-07-31">
<day>31</day>
<month>7</month>
<year>2023</year>
</pub-date>
<volume>8</volume>
<issue>89</issue>
<fpage>5616</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Julia</kwd>
<kwd>Electric Grids</kwd>
<kwd>Microgrids</kwd>
<kwd>Reinforcement Learning</kwd>
<kwd>Energy Systems</kwd>
<kwd>Simulation</kwd>
<kwd>Testing</kwd>
<kwd>Control</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The ElectricGrid.jl toolbox provides a transient simulation
  framework for electric energy grids based on power electronic
  converters. With a few lines of code, a parameterised electric grid
  model on component level can be initialised in Julia. An example grid
  is shown in Figure 1.</p>
  <fig>
    <caption><p>Exemplary electric energy grid in a simplified single
    phase
    representation.<styled-content id="figU003Agrid"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/ExampleGrid.png" />
  </fig>
  <p>By means of state-space models (set of first order ordinary
  differential equations), electrical energy grids can be constructed
  and simulated in a short time, which can be utilised for synthetic
  data generation (e.g., for data-driven meta-modelling) and to compare
  grid control methods.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Decentralised, electrical energy networks have special demands on
  operating and control procedures to ensure a continuous and efficient
  energy supply and simultaneously play an important role in the
  integration of renewable energy sources
  (<xref alt="Guerrero et al., 2013" rid="ref-Guerrero2013" ref-type="bibr">Guerrero
  et al., 2013</xref>). This applies both in connection with
  conventional centralised power grids and for islanded microgrids in
  remote areas
  (<xref alt="Lund et al., 2017" rid="ref-Lund2017" ref-type="bibr">Lund
  et al., 2017</xref>). Due to their high efficiency and flexibility,
  power electronic converters have become the standard tool for
  integrating renewable energy sources, energy storages and loads in
  electrical energy grids. The field of power electronics covers the
  application of solid-state electronics to the control and conversion
  of electric power, which is performed with semiconductor switching
  devices such as diodes or power transistors. This includes energy
  conversion in terms of voltage and current amplitude, frequency and
  phase angle, as well as the number of phases between two or more
  electrical energy systems to be connected.</p>
  <p>Controlling (decentralised) electric grids is a challenging task
  due to their stochastic, heterogeneous and volatile characteristics
  (in particular regarding the connected loads). At the same time, high
  requirements are made with regard to aspects such as safety, quality
  and availability. This results in a high demand for comprehensive
  testing of new control concepts during their development phase and
  comparisons with the state of the art to ensure their feasibility.
  This applies in particular to emerging data-driven control approaches
  such as reinforcement learning (RL), the stability and operating
  behavior of which cannot be evaluated a priori
  (<xref alt="Garcıa &amp; Fernández, 2015" rid="ref-Garcia2015" ref-type="bibr">Garcıa
  &amp; Fernández, 2015</xref>). Besides RL methods, being data-driven,
  result in a model-free and self-adaptive controller design with little
  human effort labeling them a promising tool for controlling unknown or
  changing systems targeting the above described challanges. However,
  there is a need for further research into the requirements for energy
  networks in terms of safety, robustness and availability before
  RL-based controllers can be used in real applications
  (<xref alt="Glavic et al., 2017" rid="ref-GlavicRL2018" ref-type="bibr">Glavic
  et al., 2017</xref>;
  <xref alt="Zhang et al., 2018" rid="ref-ZhangRL2018" ref-type="bibr">Zhang
  et al., 2018</xref>).</p>
  <p><monospace>ElectricGrid.jl</monospace> is a Julia package for
  setting up realistic electric grid simulations with support for
  control options. A number of parameters are made avaible to the user
  to evaluate the various control options. If no details are given, all
  parameters are generated automatically, either through randomness on a
  physically meaningful basis or by verified design methods. This
  enables both experts from the field of electrical energy networks to
  test certain configurations and experts from the field of artificial
  intelligence to test new control approaches without any prior
  knowledge of electrical engineering. Therefore,
  <monospace>ElectricGrid.jl</monospace> is designed to be used by
  students, academics, and industrial researchers in the field of
  simulation and data-driven analysis of electrical energy systems. The
  primary objective of the toolbox is to facilitate entry for new users
  into the modeling, control, and testing of small to large scale
  electric power grids and to provide a platform on which different
  control methods (including RL) can be compared under defined
  conditions (benchmarks).</p>
  <p>The experiments are based on dynamic simulations in the time domain
  which allows for accurate control and test investigations during
  transients and steady state down to component level. This is an
  essential difference to already available open-source solutions for
  the simulation of electrical energy grids like PyPSA
  (<xref alt="Brown et al., 2017" rid="ref-Brown2017" ref-type="bibr">Brown
  et al., 2017</xref>), Powermodels.jl
  (<xref alt="Coffrin et al., 2018" rid="ref-Coffrin2018" ref-type="bibr">Coffrin
  et al., 2018</xref>) and pandapower
  (<xref alt="Thurner et al., 2018" rid="ref-Thurner2018" ref-type="bibr">Thurner
  et al., 2018</xref>) which, in contrast, usually perform the
  calculations in a (quasi)-stationary state. Also these frameworks tend
  to focus on large-scale power systems at the transmission and
  distribution grid level, which does not allow an evaluation of, e.g.,
  control on component level in case of load fluctuations in the grid.
  In addition, a few tools like the one presented in Lara et al.
  (<xref alt="2023" rid="ref-lara2023revisiting" ref-type="bibr">2023</xref>)
  already exist in Julia, which offer dynamic simulations. However, the
  latter is based on different simplifications (e.g., assumption of a
  symmetric grid, fixed frequency, …) and also do not offer an interface
  to RL toolboxes. To ensure a seamless integration of the control
  algorithms, the Gymnasium-based API
  (<xref alt="Farama-Foundation, 2023" rid="ref-FaramaFoundation2023" ref-type="bibr">Farama-Foundation,
  2023</xref>) should be used, which has been established as a standard
  in recent years. For other projects implementing the Gymnasium-based
  API, such as GridAlive (based on Grid2Op
  (<xref alt="Donnot, 2020" rid="ref-Donnot2020" ref-type="bibr">Donnot,
  2020</xref>)) and ChroniX2Grid
  (<xref alt="Marot et al., 2020" rid="ref-Marot2020" ref-type="bibr">Marot
  et al., 2020</xref>), the focus remains on top-down control and
  steady-state models. Therefore, <monospace>ElectricGrid.jl</monospace>
  provides a tool to close these highlighted gaps.</p>
</sec>
<sec id="interfaces-for-control-and-reinforcement-learning">
  <title>Interfaces for control and reinforcement learning</title>
  <p>The API is designed to provide a user-friendly interface to connect
  a modeled electric energy grid with a wide range of classical control
  methods like shown in Figure 2.</p>
  <fig>
    <caption><p>Overview of the functionality and interconnections of
    the ElectricGrid.jl
    framework.<styled-content id="figU003Ajeg"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/Overview_EG.png" />
  </fig>
  <p>Already provided are classic controllers (i.e., industry standard
  contollers) like linear feedback proportional integral (PI) in the
  direct-quadrature-zero (DQ0) rotating reference frame. These control
  methods can be used out of the box including automatical tuning
  procedures. Many basic auxiliary functionalities for the essential
  operation of electric power grids are provided too such as coordinate
  transformations for basic controller classes, data logging,
  measurement of real and imaginary powers, and phase-locked loops for
  frequency and phase angle extraction. The interface provided by Tian
  &amp; contributors
  (<xref alt="2020" rid="ref-Tian2020Reinforcement" ref-type="bibr">2020</xref>)
  is also available for training data-driven control approaches like RL.
  This enables users who want to integrate contemporary open-source
  Julia-based RL toolboxes such as
  <monospace>ReinforcementLearning.jl</monospace>
  (<xref alt="Tian &amp; contributors, 2020" rid="ref-Tian2020Reinforcement" ref-type="bibr">Tian
  &amp; contributors, 2020</xref>). Following this structure, nearly
  every control approach, including data-driven RL, can be implemented
  and tested with <monospace>ElectricGrid.jl</monospace> in a relatively
  short amount of time.</p>
</sec>
<sec id="features">
  <title>Features</title>
  <p>The <monospace>ElectricGrid.jl</monospace> toolbox provides the
  following key features:</p>
  <list list-type="bullet">
    <list-item>
      <p>Framework to set up an experiment with a parameterised energy
      grid in a few lines of code.</p>
    </list-item>
    <list-item>
      <p>Dynamic simulation of electricity grids on component level
      including single and multi-phase systems as well as AC and DC
      operation with arbitrary waveforms.</p>
    </list-item>
    <list-item>
      <p>Calculation, evaluation and logging of every single time step
      covering states, action and auxiliary quantities.</p>
    </list-item>
    <list-item>
      <p>Large variety of predefined and parameterisable controllers
      (droop, VSG, swing, active-reactive) are available.</p>
    </list-item>
    <list-item>
      <p>Interesting use cases applying data-driven learning.</p>
    </list-item>
  </list>
</sec>
<sec id="examples">
  <title>Examples</title>
  <p>For illustration and interactive introduction, Jupyter Notebooks
  are available for each topic. These provide clear and easy-to-expand
  examples of: -
  <ext-link ext-link-type="uri" xlink:href="https://github.com/upb-lea/JuliaElectricGrid.jl/blob/main/examples/notebooks/Env_Create_DEMO.ipynb">Utilising
  ElectricGrid.jl to build an energy grid</ext-link>, -
  <ext-link ext-link-type="uri" xlink:href="https://github.com/upb-lea/JuliaElectricGrid.jl/blob/main/examples/notebooks/NodeConstructor_Theory_DEMO.ipynb">Theoretical
  principles behind the calculations</ext-link>, -
  <ext-link ext-link-type="uri" xlink:href="https://github.com/upb-lea/ElectricGrid.jl/blob/main/examples/notebooks/3_Classical_Controllers_Droop.ipynb">Applying
  classic controllers on the electrical grid</ext-link>, -
  <ext-link ext-link-type="uri" xlink:href="https://github.com/upb-lea/ElectricGrid.jl/blob/main/examples/notebooks/RL_Single_Agent_DEMO.ipynb">Training
  an RL agent on the electrical grid</ext-link>.</p>
</sec>
<sec id="availability-and-installation">
  <title>Availability and installation</title>
  <p><monospace>ElectricGrid.jl</monospace> is supported and tested on
  Linux, Windows and macOS. The package should be installed using the
  Julia package manager. In a Julia terminal run the follwing:</p>
  <preformat>import Pkg
Pkg.add(&quot;ElectricGrid&quot;)</preformat>
  <p>Alternatively, it can also be installed from the Github source
  code. To do that, clone the repository, start Julia, activate the
  project by pressing <monospace>]</monospace> to access Pkg mode and
  then <monospace>activate path/to/ElectricGrid</monospace> or
  <monospace>activate .</monospace> If you started Julia in your
  ElectricGrid directory and afterwards run
  <monospace>instantiate</monospace>.</p>
  <p>The source code, guide and examples are available on the GitHub
  repository (https://github.com/upb-lea/JuliaElectricGrid.jl).</p>
</sec>
<sec id="individual-contributions-of-the-authors">
  <title>Individual contributions of the authors</title>
  <p>Following are shown the main fields of each individual contributor
  of ElectricGrid.jl:</p>
  <list list-type="bullet">
    <list-item>
      <p>O. Wallscheid: Concept design and idea generation, testing and
      technical feedback, administrative project management</p>
    </list-item>
    <list-item>
      <p>S. Peitz: Administrative project management, concept-oriented
      feedback</p>
    </list-item>
    <list-item>
      <p>J. Stenner: API RL framework, API environment framework, basic
      system architecture</p>
    </list-item>
    <list-item>
      <p>D. Weber: Application examples, API environment framework,
      basic system architecture, unit tests</p>
    </list-item>
    <list-item>
      <p>S. Boshoff: Application examples, primary controllers in DQ0
      frame, decentralised secondary controllers, Luenberger observers,
      stochastic processes, inverter filter design, cable design, unit
      tests</p>
    </list-item>
    <list-item>
      <p>M. Meyer: Basic system architecture, application examples, unit
      tests</p>
    </list-item>
    <list-item>
      <p>V. Chidananda: System analytics, unit tests</p>
    </list-item>
    <list-item>
      <p>O. Schweins: Basic system architecture</p>
    </list-item>
  </list>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The authors would also like to acknowledge the funding and support
  of this work by the Federal Ministry of Education and Research of
  Germany (grant number 011S21064).</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-Coffrin2018">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Coffrin</surname><given-names>Carleton</given-names></name>
        <name><surname>Bent</surname><given-names>Russell</given-names></name>
        <name><surname>Sundar</surname><given-names>Kaarthik</given-names></name>
        <name><surname>Ng</surname><given-names>Yeesian</given-names></name>
        <name><surname>Lubin</surname><given-names>Miles</given-names></name>
      </person-group>
      <article-title>PowerModels.jl: An open-source framework for exploring power flow formulations</article-title>
      <source>2018 power systems computation conference (PSCC)</source>
      <year iso-8601-date="2018">2018</year>
      <pub-id pub-id-type="doi">10.23919/PSCC.2018.8442948</pub-id>
      <fpage>1</fpage>
      <lpage>8</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Tian2020Reinforcement">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Tian</surname><given-names>Jun</given-names></name>
        <name><surname>contributors</surname></name>
      </person-group>
      <article-title>ReinforcementLearning.jl: A reinforcement learning package for the Julia programming language</article-title>
      <year iso-8601-date="2020">2020</year>
      <uri>https://github.com/JuliaReinforcementLearning/ReinforcementLearning.jl</uri>
    </element-citation>
  </ref>
  <ref id="ref-Guerrero2013">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Guerrero</surname><given-names>Josep M.</given-names></name>
        <name><surname>Chandorkar</surname><given-names>Mukul</given-names></name>
        <name><surname>Lee</surname><given-names>Tzung-Lin</given-names></name>
        <name><surname>Loh</surname><given-names>Poh Chiang</given-names></name>
      </person-group>
      <article-title>Advanced control architectures for intelligent microgrids—part i: Decentralized and hierarchical control</article-title>
      <source>IEEE Transactions on Industrial Electronics</source>
      <year iso-8601-date="2013">2013</year>
      <volume>60</volume>
      <issue>4</issue>
      <pub-id pub-id-type="doi">10.1109/TIE.2012.2194969</pub-id>
      <fpage>1254</fpage>
      <lpage>1262</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Lund2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lund</surname><given-names>Henrik</given-names></name>
        <name><surname>Østergaard</surname><given-names>Poul Alberg</given-names></name>
        <name><surname>Connolly</surname><given-names>David</given-names></name>
        <name><surname>Mathiesen</surname><given-names>Brian Vad</given-names></name>
      </person-group>
      <article-title>Smart Energy and Smart Energy Systems</article-title>
      <source>Energy</source>
      <year iso-8601-date="2017">2017</year>
      <volume>137</volume>
      <pub-id pub-id-type="doi">10.1016/j.energy.2017.05.123</pub-id>
      <fpage>556 </fpage>
      <lpage> 565</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Garcia2015">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Garcıa</surname><given-names>Javier</given-names></name>
        <name><surname>Fernández</surname><given-names>Fernando</given-names></name>
      </person-group>
      <article-title>A comprehensive survey on safe reinforcement learning</article-title>
      <source>Journal of Machine Learning Research</source>
      <year iso-8601-date="2015">2015</year>
      <volume>16</volume>
      <issue>1</issue>
      <fpage>1437</fpage>
      <lpage>1480</lpage>
    </element-citation>
  </ref>
  <ref id="ref-ZhangRL2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Zhang</surname><given-names>Dongxia</given-names></name>
        <name><surname>Han</surname><given-names>Xiaoqing</given-names></name>
        <name><surname>Deng</surname><given-names>Chunyu</given-names></name>
      </person-group>
      <article-title>Review on the research and practice of deep learning and reinforcement learning in smart grids</article-title>
      <source>CSEE Journal of Power and Energy Systems</source>
      <year iso-8601-date="2018">2018</year>
      <volume>4</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.17775/CSEEJPES.2018.00520</pub-id>
      <fpage>362</fpage>
      <lpage>370</lpage>
    </element-citation>
  </ref>
  <ref id="ref-GlavicRL2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Glavic</surname><given-names>Mevludin</given-names></name>
        <name><surname>Fonteneau</surname><given-names>Raphaël</given-names></name>
        <name><surname>Ernst</surname><given-names>Damien</given-names></name>
      </person-group>
      <article-title>Reinforcement learning for electric power system decision and control: Past considerations and perspectives</article-title>
      <source>IFAC-PapersOnLine</source>
      <year iso-8601-date="2017">2017</year>
      <volume>50</volume>
      <pub-id pub-id-type="doi">10.1016/j.ifacol.2017.08.1217</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Brown2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Brown</surname><given-names>Tom</given-names></name>
        <name><surname>Hörsch</surname><given-names>Jonas</given-names></name>
        <name><surname>Schlachtberger</surname><given-names>David</given-names></name>
      </person-group>
      <article-title>PyPSA: Python for power system analysis</article-title>
      <source>arXiv preprint arXiv:1707.09913</source>
      <year iso-8601-date="2017">2017</year>
      <pub-id pub-id-type="doi">10.5334/jors.188</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Thurner2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Thurner</surname><given-names>Leon</given-names></name>
        <name><surname>Scheidler</surname><given-names>Alexander</given-names></name>
        <name><surname>Schäfer</surname><given-names>Florian</given-names></name>
        <name><surname>Menke</surname><given-names>Jan-Hendrik</given-names></name>
        <name><surname>Dollichon</surname><given-names>Julian</given-names></name>
        <name><surname>Meier</surname><given-names>Friederike</given-names></name>
        <name><surname>Meinecke</surname><given-names>Steffen</given-names></name>
        <name><surname>Braun</surname><given-names>Martin</given-names></name>
      </person-group>
      <article-title>Pandapower—an open-source python tool for convenient modeling, analysis, and optimization of electric power systems</article-title>
      <source>IEEE Transactions on Power Systems</source>
      <publisher-name>IEEE</publisher-name>
      <year iso-8601-date="2018">2018</year>
      <volume>33</volume>
      <issue>6</issue>
      <pub-id pub-id-type="doi">10.1109/TPWRS.2018.2829021</pub-id>
      <fpage>6510</fpage>
      <lpage>6521</lpage>
    </element-citation>
  </ref>
  <ref id="ref-lara2023revisiting">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lara</surname><given-names>Jose Daniel</given-names></name>
        <name><surname>Henriquez-Auba</surname><given-names>Rodrigo</given-names></name>
        <name><surname>Ramasubramanian</surname><given-names>Deepak</given-names></name>
        <name><surname>Dhople</surname><given-names>Sairaj</given-names></name>
        <name><surname>Callaway</surname><given-names>Duncan S</given-names></name>
        <name><surname>Sanders</surname><given-names>Seth</given-names></name>
      </person-group>
      <article-title>Revisiting power systems time-domain simulation methods and models</article-title>
      <source>arXiv preprint arXiv:2301.10043</source>
      <year iso-8601-date="2023">2023</year>
      <pub-id pub-id-type="doi">10.1109/TPWRS.2023.3303291</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-FaramaFoundation2023">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Farama-Foundation</surname></name>
      </person-group>
      <article-title>Farama-foundation/gymnasium: A standard API for single-agent reinforcement learning environments, with popular reference environments and related utilities (formerly gym)</article-title>
      <source>GitHub</source>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/Farama-Foundation/Gymnasium</uri>
    </element-citation>
  </ref>
  <ref id="ref-Donnot2020">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Donnot</surname><given-names>B.</given-names></name>
      </person-group>
      <article-title>Grid2op- A testbed platform to model sequential decision making in power systems. </article-title>
      <source>GitHub repository</source>
      <publisher-name>https://GitHub.com/rte-france/grid2op; GitHub</publisher-name>
      <year iso-8601-date="2020">2020</year>
    </element-citation>
  </ref>
  <ref id="ref-Marot2020">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Marot</surname><given-names>A.</given-names></name>
        <name><surname>Megel</surname><given-names>N.</given-names></name>
        <name><surname>Renault</surname><given-names>V.</given-names></name>
        <name><surname>Jothy</surname><given-names>M.</given-names></name>
      </person-group>
      <article-title>ChroniX2Grid - The Extensive PowerGrid Time-serie Generator</article-title>
      <source>GitHub repository</source>
      <publisher-name>https://github.com/BDonnot/ChroniX2Grid; GitHub</publisher-name>
      <year iso-8601-date="2020">2020</year>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
