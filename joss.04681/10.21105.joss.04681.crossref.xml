<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/5.3.1"
           xmlns:ai="http://www.crossref.org/AccessIndicators.xsd"
           xmlns:rel="http://www.crossref.org/relations.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           version="5.3.1"
           xsi:schemaLocation="http://www.crossref.org/schema/5.3.1 http://www.crossref.org/schemas/crossref5.3.1.xsd">
  <head>
    <doi_batch_id>20221215T200450-dc29c3fe3ab8b34c1ecf5621ee8411e772ce52ce</doi_batch_id>
    <timestamp>20221215200450</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>https://joss.theoj.org/</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>12</month>
          <year>2022</year>
        </publication_date>
        <journal_volume>
          <volume>7</volume>
        </journal_volume>
        <issue>80</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>PyCPD: Pure NumPy Implementation of the Coherent Point
Drift Algorithm</title>
        </titles>
        <contributors>
          <person_name sequence="first" contributor_role="author">
            <given_name>Anthony A.</given_name>
            <surname>Gatti</surname>
            <ORCID>https://orcid.org/0000-0001-6717-8979</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Siavash</given_name>
            <surname>Khallaghi</surname>
          </person_name>
        </contributors>
        <publication_date>
          <month>12</month>
          <day>15</day>
          <year>2022</year>
        </publication_date>
        <pages>
          <first_page>4681</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.04681</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">10.5281/zenodo.7343379</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/4681</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.04681</doi>
          <resource>https://joss.theoj.org/papers/10.21105/joss.04681</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://joss.theoj.org/papers/10.21105/joss.04681.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="121791">
            <article_title>A method for registration of 3-d
shapes</article_title>
            <author>Besl</author>
            <journal_title>IEEE Transactions on Pattern Analysis and
Machine Intelligence</journal_title>
            <issue>2</issue>
            <volume>14</volume>
            <doi>10.1109/34.121791</doi>
            <cYear>1992</cYear>
            <unstructured_citation>Besl, P. J., &amp; McKay, N. D.
(1992). A method for registration of 3-d shapes. IEEE Transactions on
Pattern Analysis and Machine Intelligence, 14(2), 239–256.
https://doi.org/10.1109/34.121791</unstructured_citation>
          </citation>
          <citation key="CHEN1992145">
            <article_title>Object modelling by registration of multiple
range images</article_title>
            <author>Chen</author>
            <journal_title>Image and Vision Computing</journal_title>
            <issue>3</issue>
            <volume>10</volume>
            <doi>10.1016/0262-8856(92)90066-C</doi>
            <issn>0262-8856</issn>
            <cYear>1992</cYear>
            <unstructured_citation>Chen, Y., &amp; Medioni, G. (1992).
Object modelling by registration of multiple range images. Image and
Vision Computing, 10(3), 145–155.
https://doi.org/10.1016/0262-8856(92)90066-C</unstructured_citation>
          </citation>
          <citation key="5432191">
            <article_title>Point set registration: Coherent point
drift</article_title>
            <author>Myronenko</author>
            <journal_title>IEEE Transactions on Pattern Analysis and
Machine Intelligence</journal_title>
            <issue>12</issue>
            <volume>32</volume>
            <doi>10.1109/TPAMI.2010.46</doi>
            <cYear>2010</cYear>
            <unstructured_citation>Myronenko, A., &amp; Song, X. (2010).
Point set registration: Coherent point drift. IEEE Transactions on
Pattern Analysis and Machine Intelligence, 32(12), 2262–2275.
https://doi.org/10.1109/TPAMI.2010.46</unstructured_citation>
          </citation>
          <citation key="FITZGIBBON20031145">
            <article_title>Robust registration of 2D and 3D point
sets</article_title>
            <author>Fitzgibbon</author>
            <journal_title>Image and Vision Computing</journal_title>
            <issue>13</issue>
            <volume>21</volume>
            <doi>10.1016/j.imavis.2003.09.004</doi>
            <issn>0262-8856</issn>
            <cYear>2003</cYear>
            <unstructured_citation>Fitzgibbon, A. W. (2003). Robust
registration of 2D and 3D point sets. Image and Vision Computing,
21(13), 1145–1153.
https://doi.org/10.1016/j.imavis.2003.09.004</unstructured_citation>
          </citation>
          <citation key="924423">
            <article_title>Efficient variants of the ICP
algorithm</article_title>
            <author>Rusinkiewicz</author>
            <journal_title>Proceedings third international conference on
3-d digital imaging and modeling</journal_title>
            <doi>10.1109/IM.2001.924423</doi>
            <cYear>2001</cYear>
            <unstructured_citation>Rusinkiewicz, S., &amp; Levoy, M.
(2001). Efficient variants of the ICP algorithm. Proceedings Third
International Conference on 3-d Digital Imaging and Modeling, 145–152.
https://doi.org/10.1109/IM.2001.924423</unstructured_citation>
          </citation>
          <citation key="harris2020array">
            <article_title>Array programming with NumPy</article_title>
            <author>Harris</author>
            <journal_title>Nature</journal_title>
            <issue>7825</issue>
            <volume>585</volume>
            <doi>10.1038/s41586-020-2649-2</doi>
            <cYear>2020</cYear>
            <unstructured_citation>Harris, C. R., Millman, K. J., Walt,
S. J. van der, Gommers, R., Virtanen, P., Cournapeau, D., Wieser, E.,
Taylor, J., Berg, S., Smith, N. J., Kern, R., Picus, M., Hoyer, S.,
Kerkwijk, M. H. van, Brett, M., Haldane, A., Río, J. F. del, Wiebe, M.,
Peterson, P., … Oliphant, T. E. (2020). Array programming with NumPy.
Nature, 585(7825), 357–362.
https://doi.org/10.1038/s41586-020-2649-2</unstructured_citation>
          </citation>
          <citation key="khallaghi_2017">
            <article_title>PyCPD: Tutorial on the coherent point drift
algorithm</article_title>
            <author>Khallaghi</author>
            <cYear>2017</cYear>
            <unstructured_citation>Khallaghi, S. (2017). PyCPD: Tutorial
on the coherent point drift algorithm.
http://siavashk.github.io/2017/05/14/coherent-point-drift/</unstructured_citation>
          </citation>
          <citation key="MATLAB">
            <volume_title>The MathWorks inc.</volume_title>
            <unstructured_citation>The MathWorks inc. (version 9.5
(R2018b)). (n.d.). [Computer software].
https://www.mathworks.com/help/vision/ref/pcregistercpd.html</unstructured_citation>
          </citation>
          <citation key="gadomski">
            <article_title>Gadomski/CPD: C++ implementation of the
coherent point drift point set registration algorithm.</article_title>
            <author>Gadomski</author>
            <unstructured_citation>Gadomski, P. (n.d.). Gadomski/CPD:
C++ implementation of the coherent point drift point set registration
algorithm. https://github.com/gadomski/cpd</unstructured_citation>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
