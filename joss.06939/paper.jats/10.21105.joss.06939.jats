<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6939</article-id>
<article-id pub-id-type="doi">10.21105/joss.06939</article-id>
<title-group>
<article-title>anywidget: reusable widgets for interactive analysis and
visualization in computational notebooks</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-7694-5164</contrib-id>
<name>
<surname>Manz</surname>
<given-names>Trevor</given-names>
</name>
<email>trevor.j.manz@gmail.com</email>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-5814-0864</contrib-id>
<name>
<surname>Abdennur</surname>
<given-names>Nezar</given-names>
</name>
<email>nezar.abdennur@umassmed.edu</email>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-0327-8297</contrib-id>
<name>
<surname>Gehlenborg</surname>
<given-names>Nils</given-names>
</name>
<email>nils@hms.harvard.edu</email>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Biomedical Informatics, Harvard Medical
School, Boston, MA, USA</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Department of Genomics and Computational Biology, UMass
Chan Medical School, Worcester, MA, USA</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Department of Systems Biology, UMass Chan Medical School,
Worcester, MA, USA</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email>trevor.j.manz@gmail.com</email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-06-05">
<day>5</day>
<month>6</month>
<year>2023</year>
</pub-date>
<volume>9</volume>
<issue>102</issue>
<fpage>6939</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Computational notebooks</kwd>
<kwd>Jupyter</kwd>
<kwd>Python</kwd>
<kwd>R</kwd>
<kwd>JavaScript</kwd>
<kwd>Data visualization</kwd>
<kwd>Interactive computing</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The <bold>anywidget</bold> project provides a specification and
  toolset for portable and reusable web-based widgets in interactive
  computing environments
  (<xref alt="[fig:overview]" rid="figU003Aoverview">[fig:overview]</xref>).
  First, it defines a standard for widget front-end code based on the
  web browser’s native module system. Second, it provides tools to
  author, distribute, and execute these modules across web-based
  computing platforms. Since its release in February 2023, anywidget has
  steadily gained adoption. As of October 2024, nearly 100 new widgets
  have been created or ported to anywidget and published to the Python
  Package Index (PyPI), along with many standalone scripts and
  notebooks. These tools cover general-purpose visualization libraries
  (<xref alt="Heer &amp; Moritz, 2024" rid="ref-Heer2024" ref-type="bibr">Heer
  &amp; Moritz, 2024</xref>;
  <xref alt="Lekschas &amp; Manz, 2024" rid="ref-jscatter" ref-type="bibr">Lekschas
  &amp; Manz, 2024</xref>) as well as notebook integrations for
  applications in biology
  (<xref alt="Mark S. Keller et al., 2021" rid="ref-vitessce" ref-type="bibr">Mark
  S. Keller et al., 2021</xref>;
  <xref alt="Manz et al., 2022" rid="ref-viv" ref-type="bibr">Manz et
  al., 2022</xref>,
  <xref alt="2023" rid="ref-gos" ref-type="bibr">2023</xref>;
  <xref alt="Manz, Lekschas, et al., 2024" rid="ref-cev" ref-type="bibr">Manz,
  Lekschas, et al., 2024</xref>), mapping
  (<xref alt="Barron, 2024" rid="ref-lonboard" ref-type="bibr">Barron,
  2024</xref>), astronomy
  (<xref alt="Boch &amp; Desroziers, 2020" rid="ref-ipyaladin" ref-type="bibr">Boch
  &amp; Desroziers, 2020</xref>), and education
  (<xref alt="Warmerdam, 2024" rid="ref-drawdata" ref-type="bibr">Warmerdam,
  2024</xref>). Anywidget has also been integrated into popular
  visualization libraries like Altair
  (<xref alt="VanderPlas et al., 2018" rid="ref-altair" ref-type="bibr">VanderPlas
  et al., 2018</xref>), enhancing interactivity in notebooks and
  deepening user engagement with visualizations and code.</p>
  <fig>
    <caption><p>The anywidget project. Components highlighted in
    magenta. The Anywidget Front-End Module (AFM) is a specification for
    widget front-end code based on ECMAScript (ES) modules
    (<xref alt="Guo et al., 2023" rid="ref-ecma" ref-type="bibr">Guo et
    al., 2023</xref>). AFM can be written in web-standard ES or with
    <italic>authoring tools</italic> that support popular front-end
    frameworks. The <monospace>anywidget</monospace> Python package
    adapts Jupyter-compatible platforms (JCPs) into AFM-compatible
    <italic>host platforms</italic>, enabling Jupyter Widgets to be
    authored and distributed with AFM. Other <italic>host
    platforms</italic> support AFM directly. The <italic>project
    CLI</italic> can be used to bootstrap new anywidget projects that
    are ready to publish to PyPI.
    <styled-content id="figU003Aoverview"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="overview.png" />
  </fig>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Computational notebooks are the preferred environment for
  interactive computing and data analysis. These platforms provide an
  interface where users can write, execute, and interact with code and
  data in real-time. Notebooks connect an interactive front end
  (typically a web browser) to an external system that runs the code,
  combining prose, executable snippets, and media. The widespread
  adoption of notebooks has driven the development of tools for
  integrating interactive visualizations within these environments
  (<xref alt="Z. J. Wang et al., 2024" rid="ref-Wang2024" ref-type="bibr">Z.
  J. Wang et al., 2024</xref>). The Jupyter project
  (<xref alt="Granger &amp; Pérez, 2021" rid="ref-Granger2021" ref-type="bibr">Granger
  &amp; Pérez, 2021</xref>;
  <xref alt="Kluyver et al., 2016" rid="ref-Kluyver2016" ref-type="bibr">Kluyver
  et al., 2016</xref>;
  <xref alt="Perez &amp; Granger, 2007" rid="ref-Perez2007" ref-type="bibr">Perez
  &amp; Granger, 2007</xref>) has become synonymous with computational
  notebooks, largely due to its widespread success in fostering an
  extensive ecosystem of community tools (e.g., for producing books
  (<xref alt="Holdgraf &amp; others, 2022" rid="ref-JupyterBookMyst" ref-type="bibr">Holdgraf
  &amp; others, 2022</xref>), presentation slides
  (<xref alt="F. Wang et al., 2023" rid="ref-Wang2023" ref-type="bibr">F.
  Wang et al., 2023</xref>), and dashboards (e.g.,
  <ext-link ext-link-type="uri" xlink:href="https://voila.readthedocs.io">Voilà</ext-link>)).</p>
  <p>Approaches for authoring interactive visualizations across notebook
  platforms, including Jupyter, vary widely
  (<xref alt="Z. J. Wang et al., 2024" rid="ref-Wang2024" ref-type="bibr">Z.
  J. Wang et al., 2024</xref>). This inconsistency has led to fragmented
  methods for creating and distributing custom visualizations and
  interactive components, hindering the development of a composable
  solutions. The Jupyter Widgets system shows potential for aligning
  interactive visualization systems with the broader notebook ecosystem.
  However, the complexity and error-prone nature of authoring custom
  widgets has limited their adoption by the visualization community.
  Widget development is hindered by fragmented distribution and
  cumbersome development experience due to complex integration
  requirements from diverse environments
  (<xref alt="Manz, Gehlenborg, et al., 2024" rid="ref-scipy" ref-type="bibr">Manz,
  Gehlenborg, et al., 2024</xref>). Moreover, Jupyter Widgets are
  Jupyter-specific, with the widest support limited to Python kernels,
  leaving gaps in addressing new and alternative interactive computing
  environments. A universal protocol is needed to simplify authorship
  and support an ecosystem of pluggable interactive widgets.</p>
</sec>
<sec id="overview">
  <title>Overview</title>
  <sec id="a-standard-for-widget-front-end-modules">
    <title>A standard for widget front-end modules</title>
    <p>The <bold>Anywidget Front-End Module (AFM)</bold> is a
    specification for widget front-end code based on ECMAScript (ES)
    modules, the built-in module system for web browsers.</p>
    <code language="javascript">export default {
  initialize({ model }) {
    // Add instance-specific event listeners
    return () =&gt; {
      // Clean up event listeners
    }
  },
  render({ model, el }) {
    // Render the widget
    return () =&gt; {
      // Clean up event listeners
    }
  },
};</code>
    <p>Widget behavior is defined through methods for managing a
    widget’s lifecycle, such as initialization, rendering, and
    destruction. Running AFM requires a <italic>host platform</italic>
    to load the module and call each of these lifecycle methods with a
    set of required interfaces. These interfaces include minimal APIs
    for the AFM to communicate with the host and modify the output user
    interface (UI).</p>
    <p>Importantly, AFM does not impose specific implementations for
    widget state or UI management. By making host requirements explicit,
    it decouples widget front-end code from host implementations,
    thereby improving widget portability
    (<xref alt="Manz, Gehlenborg, et al., 2024" rid="ref-scipy" ref-type="bibr">Manz,
    Gehlenborg, et al., 2024</xref>). With AFM, developers can author a
    widget by writing a web-standard ES module, either inline or in a
    separate file, without a build process
    (<xref alt="[fig:afm-and-anywidget]" rid="figU003Aafm-and-anywidget">[fig:afm-and-anywidget]</xref>a,
    top). For better ergonomics when creating UIs, developers can
    introduce a build step targeting AFM to utilize advanced tools
    (<xref alt="[fig:afm-and-anywidget]" rid="figU003Aafm-and-anywidget">[fig:afm-and-anywidget]</xref>a,
    bottom).</p>
    <fig>
      <caption><p>Authoring a custom Jupyter Widget with anywidget. (a)
      AFM can be authored in web-standard ECMAScript (top) or with a
      front-end framework using a bridge (bottom). (b) The anywidget
      Python package allows authoring custom Jupyter Widgets with AFM
      (top), usable across various JCPs (bottom).
      <styled-content id="figU003Aafm-and-anywidget"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="afm-and-anywidget.png" />
    </fig>
    <p>While AFM is understood by the browser directly, much of web
    development today uses front-end frameworks, such as React or
    Svelte, which introduce non-standard syntax and unique paradigms for
    UI and state management. Rather than incorporate such frameworks
    into the AFM specification, the anywidget project provides several
    <italic>framework bridges</italic> to make it easier to author AFMs
    using frameworks
    (<xref alt="[fig:afm-and-anywidget]" rid="figU003Aafm-and-anywidget">[fig:afm-and-anywidget]</xref>a,
    bottom). These libraries provide utilities to use idiomatic APIs and
    constructs to manage widget state and to wrap those constructs into
    the AFM lifecycle methods used by host platforms. For example,
    anywidget’s React bridge exposes a React-based declarative hook
    <monospace>useModelState</monospace> for accessing widget state and
    a function to convert a React component into an AFM export.</p>
    <p>There are several advantages to supporting frameworks via
    bridges. First, AFM is more stable and minimal because it is not
    tied to a third-party library or framework. Second, it gives
    framework communities the opportunity to build integrations,
    distributing the maintenance burden and benefiting from
    framework-specific expertise. This plugin-based approach has seen
    success in projects like the local front-end development server Vite
    and the Python Flask web framework. Third, bridges can be updated
    and versioned independently from the AFM specification, meaning that
    changes cannot break host compatibility.</p>
  </sec>
  <sec id="supporting-tools-and-ecosystem">
    <title>Supporting tools and ecosystem</title>
    <sec id="custom-jupyter-widgets">
      <title>Custom Jupyter Widgets</title>
      <p>The main library for the project is
      <monospace>anywidget</monospace>, a Python package that simplifies
      the authoring and distribution of custom Jupyter Widgets using AFM
      (<xref alt="[fig:afm-and-anywidget]" rid="figU003Aafm-and-anywidget">[fig:afm-and-anywidget]</xref>b,
      top). Jupyter Widgets
      (<xref alt="Grout et al., 2024" rid="ref-ipywidgets" ref-type="bibr">Grout
      et al., 2024</xref>) are the official framework from Jupyter to
      extend notebooks with interactive views and controls for objects
      that reside in the kernel. Since widgets are integral to Jupyter’s
      architecture, they enjoy broad support across Jupyter-compatible
      platforms (JCPs) such as JupyterLab, Google Colab, and Visual
      Studio Code. However, developing and distributing cross-JCP
      widgets is complex and error-prone
      (<xref alt="Manz, Gehlenborg, et al., 2024" rid="ref-scipy" ref-type="bibr">Manz,
      Gehlenborg, et al., 2024</xref>). Anywidget addresses this
      complexity by providing the glue code to turn each JCP into an
      AFM-compatible host. This compatibility layer aligns AFM with
      Jupyter Widgets and the Python ecosystem, making anywidget a
      powerful tool for creating and distributing interactive widgets
      across platforms. Anywidgets can be remixed and reused with other
      custom Jupyter Widgets in notebooks, standalone HTML pages, and
      dashboarding frameworks
      (<xref alt="[fig:afm-and-anywidget]" rid="figU003Aafm-and-anywidget">[fig:afm-and-anywidget]</xref>b,
      bottom).</p>
    </sec>
    <sec id="tooling-for-authorship-and-distribution">
      <title>Tooling for authorship and distribution</title>
      <p>To make widget development more enjoyable and accessible, the
      anywidget project offers additional development tools for widget
      authors. It allows for creating widgets directly within notebooks,
      enabling them to start as prototypes and evolve into full
      packages. Aligning with modern front-end tools, anywidget also
      implements hot module replacement (HMR) for live code editing
      development. HMR dynamically updates widgets without reloading the
      page or losing state, improving the developer experience and
      enabling rapid prototyping. To enable HMR, developers can set an
      environment variable in the notebook cell:</p>
      <code language="python">%%env
ANYWIDGET_HMR=1</code>
      <p>Finally, the anywidget project includes a command line
      interface (CLI) for bootstrapping new anywidget projects that are
      ready to publish to PyPI
      (<xref alt="[fig:overview]" rid="figU003Aoverview">[fig:overview]</xref>,
      bottom). The CLI includes options for selecting front-end
      framework adapters and additional tools like TypeScript.</p>
      <code language="bash">npm create anywidget@latest</code>
    </sec>
    <sec id="beyond-jupyter">
      <title>Beyond Jupyter</title>
      <p>AFM extends the widget ecosystem beyond Jupyter. Many popular
      web frameworks and dashboarding libraries support embedding
      Jupyter Widgets into their layout systems and interacting with
      their components. This support also extends to anywidgets, thanks
      to the Jupyter Widgets compatibility layer. AFM also provides
      opportunities for frameworks and platforms to add more specialized
      support, making better use of their respective internal state
      management and reactivity systems. For instance, marimo
      (<xref alt="Agrawal &amp; Scolnick, 2024" rid="ref-marimo" ref-type="bibr">Agrawal
      &amp; Scolnick, 2024</xref>), a new reactive notebook for Python,
      has adopted AFM as the standard for its third-party plugin API.
      Similarly, the Panel web framework
      (<xref alt="Rudiger et al., 2024" rid="ref-panel" ref-type="bibr">Rudiger
      et al., 2024</xref>) supports using AFM to define custom
      components.</p>
      <p>Efforts are underway to support AFM with other compute backends
      besides Python. For example, anyhtmlwidget
      (<xref alt="Mark S. Keller, 2024" rid="ref-anyhtmlwidget" ref-type="bibr">Mark
      S. Keller, 2024</xref>) brings anywidget concepts to R, enabling
      reusable AFM-based widgets for R documents and Shiny applications
      with bi-directional R-JavaScript communication. Additionally, the
      anywidget project implements AFM-based displays for the Deno
      kernel, a JavaScript and TypeScript runtime.</p>
    </sec>
  </sec>
</sec>
<sec id="availability">
  <title>Availability</title>
  <p>The anywidget project is released under an open-source MIT license,
  with all source code publicly available on GitHub
  (<ext-link ext-link-type="uri" xlink:href="https://github.com/manzt/anywidget">https://github.com/manzt/anywidget</ext-link>).
  The core Python library, anywidget, is packaged and distributed via
  the PyPI and conda-forge. The front-end adapter libraries, development
  tooling, and project-template CLI are distributed through the npm
  registry. The Deno Jupyter kernel integration is published to the
  JavaScript Registry (JSR). Further documentation about the project can
  be found at
  <ext-link ext-link-type="uri" xlink:href="https://anywidget.dev">https://anywidget.dev</ext-link>.</p>
</sec>
<sec id="related-work">
  <title>Related work</title>
  <p>Interactive notebook visualization tools vary widely in features
  and compatibility
  (<xref alt="Z. J. Wang et al., 2024" rid="ref-Wang2024" ref-type="bibr">Z.
  J. Wang et al., 2024</xref>). Some tools offer rich features (e.g.,
  bi-directional communication) but rely on platform-specific APIs,
  limiting compatibility
  (<xref alt="Drosos et al., 2020" rid="ref-Drosos2020" ref-type="bibr">Drosos
  et al., 2020</xref>;
  <xref alt="Jain et al., 2022" rid="ref-Jain2022" ref-type="bibr">Jain
  et al., 2022</xref>;
  <xref alt="Li et al., 2023" rid="ref-Li2023" ref-type="bibr">Li et
  al., 2023</xref>;
  <xref alt="F. Wang et al., 2023" rid="ref-Wang2023" ref-type="bibr">F.
  Wang et al., 2023</xref>;
  <xref alt="Zhao et al., 2022" rid="ref-Zhao2022" ref-type="bibr">Zhao
  et al., 2022</xref>). For example, frameworks like
  <ext-link ext-link-type="uri" xlink:href="https://bokeh.pydata.org/en/latest">Bokeh</ext-link>
  and
  <ext-link ext-link-type="uri" xlink:href="https://docs.streamlit.io/develop/concepts/custom-components/create">Streamlit</ext-link>
  enable custom extensions, but these integrations are tied to their
  specific frameworks and cannot be reused elsewhere. More simple
  approaches provide broader compatibility but lack features which
  meaningfully enrich user workflows. For example, using static
  templates or the NOVA framework
  (<xref alt="Z. J. Wang et al., 2022" rid="ref-Wang2022" ref-type="bibr">Z.
  J. Wang et al., 2022</xref>) offers wide compatibility, as the
  resulting HTML displays can be embedded in nearly any web-based
  notebook platform. However, this approach supports only client-side
  applications with one-way communication, meaning that only the initial
  visualization state can come from the notebook, without further
  updates from other cells. Other approaches, like ImJoy
  (<xref alt="Ouyang et al., 2019" rid="ref-Ouyang2019" ref-type="bibr">Ouyang
  et al., 2019</xref>), offer a more unified architecture for building
  interactive visualizations with rich features across multiple
  platforms. However, it is an entirely separate computing platform with
  limited JCP integrations, not a framework for building reusable,
  modular visualization components.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We thank Talley Lambert for his technical contributions to the
  anywidget Python codebase and recognize Jan-Hendrik Müller for his
  significant community contributions and advocacy of the project. Our
  appreciation extends to the entire anywidget community and the
  Abdennur and HIDIVE labs for their helpful discussions.</p>
</sec>
<sec id="funding">
  <title>Funding</title>
  <p>TM, NA, and NG acknowledge funding from the National Institutes of
  Health (UM1 HG011536, OT2 OD033758, R33 CA263666, R01 HG011773).</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-JupyterBookMyst">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Holdgraf</surname><given-names>Chris</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Jupyter Book and MyST: A community-led, extensible, modular ecosystem for creating computational narratives</article-title>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2022-11">2022</year><month>11</month>
      <uri>https://doi.org/10.5281/zenodo.7287626</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.7287626</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Zhao2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Zhao</surname><given-names>Zhiming</given-names></name>
        <name><surname>Koulouzis</surname><given-names>Spiros</given-names></name>
        <name><surname>Bianchi</surname><given-names>Riccardo</given-names></name>
        <name><surname>Farshidi</surname><given-names>Siamak</given-names></name>
        <name><surname>Shi</surname><given-names>Zeshun</given-names></name>
        <name><surname>Xin</surname><given-names>Ruyue</given-names></name>
        <name><surname>Wang</surname><given-names>Yuandou</given-names></name>
        <name><surname>Li</surname><given-names>Na</given-names></name>
        <name><surname>Shi</surname><given-names>Yifang</given-names></name>
        <name><surname>Timmermans</surname><given-names>Joris</given-names></name>
        <name><surname>Kissling</surname><given-names>W Daniel</given-names></name>
      </person-group>
      <article-title>Notebook‐as‐a‐VRE (NaaVRE): From private notebooks to a collaborative cloud virtual research environment</article-title>
      <source>Softw. Pract. Exp.</source>
      <publisher-name>Wiley</publisher-name>
      <year iso-8601-date="2022-09">2022</year><month>09</month>
      <volume>52</volume>
      <issue>9</issue>
      <pub-id pub-id-type="doi">10.1002/spe.3098</pub-id>
      <fpage>1947</fpage>
      <lpage>1966</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Wang2023">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Wang</surname><given-names>Fengjie</given-names></name>
        <name><surname>Liu</surname><given-names>Xuye</given-names></name>
        <name><surname>Liu</surname><given-names>Oujing</given-names></name>
        <name><surname>Neshati</surname><given-names>Ali</given-names></name>
        <name><surname>Ma</surname><given-names>Tengfei</given-names></name>
        <name><surname>Zhu</surname><given-names>Min</given-names></name>
        <name><surname>Zhao</surname><given-names>Jian</given-names></name>
      </person-group>
      <article-title>Slide4N: Creating presentation slides from computational notebooks with human-AI collaboration</article-title>
      <source>Proceedings of the 2023 CHI conference on human factors in computing systems</source>
      <publisher-name>Association for Computing Machinery</publisher-name>
      <publisher-loc>New York, NY, USA</publisher-loc>
      <year iso-8601-date="2023-04">2023</year><month>04</month>
      <pub-id pub-id-type="doi">10.1145/3544548.3580753</pub-id>
      <fpage>1</fpage>
      <lpage>18</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Drosos2020">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Drosos</surname><given-names>Ian</given-names></name>
        <name><surname>Barik</surname><given-names>Titus</given-names></name>
        <name><surname>Guo</surname><given-names>Philip J</given-names></name>
        <name><surname>DeLine</surname><given-names>Robert</given-names></name>
        <name><surname>Gulwani</surname><given-names>Sumit</given-names></name>
      </person-group>
      <article-title>Wrex: A unified programming-by-example interaction for synthesizing readable code for data scientists</article-title>
      <source>Proceedings of the 2020 CHI conference on human factors in computing systems</source>
      <publisher-name>Association for Computing Machinery</publisher-name>
      <publisher-loc>New York, NY, USA</publisher-loc>
      <year iso-8601-date="2020-04">2020</year><month>04</month>
      <pub-id pub-id-type="doi">10.1145/3313831.3376442</pub-id>
      <fpage>1</fpage>
      <lpage>12</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Li2023">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Li</surname><given-names>Haotian</given-names></name>
        <name><surname>Ying</surname><given-names>Lu</given-names></name>
        <name><surname>Zhang</surname><given-names>Haidong</given-names></name>
        <name><surname>Wu</surname><given-names>Yingcai</given-names></name>
        <name><surname>Qu</surname><given-names>Huamin</given-names></name>
        <name><surname>Wang</surname><given-names>Yun</given-names></name>
      </person-group>
      <article-title>Notable: On-the-fly assistant for data storytelling in computational notebooks</article-title>
      <source>Proceedings of the 2023 CHI conference on human factors in computing systems</source>
      <publisher-name>Association for Computing Machinery</publisher-name>
      <publisher-loc>New York, NY, USA</publisher-loc>
      <year iso-8601-date="2023-04">2023</year><month>04</month>
      <pub-id pub-id-type="doi">10.1145/3544548.3580965</pub-id>
      <fpage>1</fpage>
      <lpage>16</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Jain2022">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Jain</surname><given-names>Naman</given-names></name>
        <name><surname>Vaidyanath</surname><given-names>Skanda</given-names></name>
        <name><surname>Iyer</surname><given-names>Arun</given-names></name>
        <name><surname>Natarajan</surname><given-names>Nagarajan</given-names></name>
        <name><surname>Parthasarathy</surname><given-names>Suresh</given-names></name>
        <name><surname>Rajamani</surname><given-names>Sriram</given-names></name>
        <name><surname>Sharma</surname><given-names>Rahul</given-names></name>
      </person-group>
      <article-title>Jigsaw: Large language models meet program synthesis</article-title>
      <source>Proceedings of the 44th international conference on software engineering</source>
      <publisher-name>Association for Computing Machinery</publisher-name>
      <publisher-loc>New York, NY, USA</publisher-loc>
      <year iso-8601-date="2022-07">2022</year><month>07</month>
      <pub-id pub-id-type="doi">10.1145/3510003.3510203</pub-id>
      <fpage>1219</fpage>
      <lpage>1231</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Wang2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wang</surname><given-names>Zijie J</given-names></name>
        <name><surname>Munechika</surname><given-names>David</given-names></name>
        <name><surname>Lee</surname><given-names>Seongmin</given-names></name>
        <name><surname>Chau</surname><given-names>Duen Horng</given-names></name>
      </person-group>
      <article-title>NOVA: A practical method for creating notebook-ready visual analytics</article-title>
      <year iso-8601-date="2022-05">2022</year><month>05</month>
      <uri>https://arxiv.org/abs/2205.03963</uri>
      <pub-id pub-id-type="doi">10.48550/arXiv.2205.03963</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Wang2024">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Wang</surname><given-names>Zijie J</given-names></name>
        <name><surname>Munechika</surname><given-names>David</given-names></name>
        <name><surname>Lee</surname><given-names>Seongmin</given-names></name>
        <name><surname>Chau</surname><given-names>Duen Horng</given-names></name>
      </person-group>
      <article-title>SuperNOVA: Design strategies and opportunities for interactive visualization in computational notebooks</article-title>
      <source>Extended abstracts of the 2024 CHI conference on human factors in computing systems</source>
      <publisher-name>Association for Computing Machinery</publisher-name>
      <publisher-loc>New York, NY, USA</publisher-loc>
      <year iso-8601-date="2024-05">2024</year><month>05</month>
      <pub-id pub-id-type="doi">10.1145/3613905.3650848</pub-id>
      <fpage>1</fpage>
      <lpage>17</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Kluyver2016">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Kluyver</surname><given-names>Thomas</given-names></name>
        <name><surname>Ragan-Kelley</surname><given-names>Benjamin</given-names></name>
        <name><surname>Pérez</surname><given-names>Fernando</given-names></name>
        <name><surname>Granger</surname><given-names>Brian</given-names></name>
        <name><surname>Bussonnier</surname><given-names>Matthias</given-names></name>
        <name><surname>Frederic</surname><given-names>Jonathan</given-names></name>
        <name><surname>Kelley</surname><given-names>Kyle</given-names></name>
        <name><surname>Hamrick</surname><given-names>Jessica</given-names></name>
        <name><surname>Grout</surname><given-names>Jason</given-names></name>
        <name><surname>Corlay</surname><given-names>Sylvain</given-names></name>
        <name><surname>Ivanov</surname><given-names>Paul</given-names></name>
        <name><surname>Avila</surname><given-names>Damián</given-names></name>
        <name><surname>Abdalla</surname><given-names>Safia</given-names></name>
        <name><surname>Willing</surname><given-names>Carol</given-names></name>
      </person-group>
      <article-title>Jupyter notebooks – a publishing format for reproducible computational workflows</article-title>
      <source>Positioning and power in academic publishing: Players, agents and agendas</source>
      <person-group person-group-type="editor">
        <name><surname>Loizides</surname><given-names>Fernando</given-names></name>
        <name><surname>Scmidt</surname><given-names>Birgit</given-names></name>
      </person-group>
      <publisher-name>IOS Press</publisher-name>
      <year iso-8601-date="2016">2016</year>
      <pub-id pub-id-type="doi">10.3233/978-1-61499-649-1-87</pub-id>
      <fpage>87</fpage>
      <lpage>90</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Perez2007">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Perez</surname><given-names>Fernando</given-names></name>
        <name><surname>Granger</surname><given-names>Brian E</given-names></name>
      </person-group>
      <article-title>IPython: A system for interactive scientific computing</article-title>
      <source>Comput. Sci. Eng.</source>
      <publisher-name>IEEE</publisher-name>
      <year iso-8601-date="2007">2007</year>
      <volume>9</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1109/MCSE.2007.53</pub-id>
      <fpage>21</fpage>
      <lpage>29</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Granger2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Granger</surname><given-names>Brian E</given-names></name>
        <name><surname>Pérez</surname><given-names>Fernando</given-names></name>
      </person-group>
      <article-title>Jupyter: Thinking and storytelling with code and data</article-title>
      <source>Comput. Sci. Eng.</source>
      <publisher-name>IEEE</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <volume>23</volume>
      <issue>2</issue>
      <pub-id pub-id-type="doi">10.22541/au.161298309.98344404/v3</pub-id>
      <fpage>7</fpage>
      <lpage>14</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Heer2024">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Heer</surname><given-names>Jeffrey</given-names></name>
        <name><surname>Moritz</surname><given-names>Dominik</given-names></name>
      </person-group>
      <article-title>Mosaic: An architecture for scalable &amp; interoperable data views</article-title>
      <source>IEEE Trans. Vis. Comput. Graph.</source>
      <year iso-8601-date="2024-01">2024</year><month>01</month>
      <volume>30</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1109/TVCG.2023.3327189</pub-id>
      <fpage>436</fpage>
      <lpage>446</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Ouyang2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ouyang</surname><given-names>Wei</given-names></name>
        <name><surname>Mueller</surname><given-names>Florian</given-names></name>
        <name><surname>Hjelmare</surname><given-names>Martin</given-names></name>
        <name><surname>Lundberg</surname><given-names>Emma</given-names></name>
        <name><surname>Zimmer</surname><given-names>Christophe</given-names></name>
      </person-group>
      <article-title>ImJoy: An open-source computational platform for the deep learning era</article-title>
      <source>Nat. Methods</source>
      <year iso-8601-date="2019-12">2019</year><month>12</month>
      <volume>16</volume>
      <issue>12</issue>
      <pub-id pub-id-type="doi">10.1038/s41592-019-0627-0</pub-id>
      <fpage>1199</fpage>
      <lpage>1200</lpage>
    </element-citation>
  </ref>
  <ref id="ref-jscatter">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lekschas</surname><given-names>Fritz</given-names></name>
        <name><surname>Manz</surname><given-names>Trevor</given-names></name>
      </person-group>
      <article-title>Jupyter Scatter: Interactive exploration of large-scale datasets</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <volume>9</volume>
      <issue>101</issue>
      <uri>https://doi.org/10.21105/joss.07059</uri>
      <pub-id pub-id-type="doi">10.21105/joss.07059</pub-id>
      <fpage>7059</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-gos">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Manz</surname><given-names>Trevor</given-names></name>
        <name><surname>L’Yi</surname><given-names>Sehi</given-names></name>
        <name><surname>Gehlenborg</surname><given-names>Nils</given-names></name>
      </person-group>
      <article-title>Gos: A declarative library for interactive genomics visualization in python</article-title>
      <source>Bioinformatics</source>
      <year iso-8601-date="2023-01">2023</year><month>01</month>
      <volume>39</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1093/bioinformatics/btad050</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-vitessce">
    <element-citation publication-type="manuscript">
      <person-group person-group-type="author">
        <name><surname>Keller</surname><given-names>Mark S</given-names></name>
        <name><surname>Gold</surname><given-names>Ilan</given-names></name>
        <name><surname>McCallum</surname><given-names>Chuck</given-names></name>
        <name><surname>Manz</surname><given-names>Trevor</given-names></name>
        <name><surname>Kharchenko</surname><given-names>Peter V</given-names></name>
        <name><surname>Gehlenborg</surname><given-names>Nils</given-names></name>
      </person-group>
      <article-title>Vitessce: A framework for integrative visualization of multi-modal and spatially-resolved single-cell data</article-title>
      <source>OSF Preprints</source>
      <year iso-8601-date="2021-10">2021</year><month>10</month>
      <pub-id pub-id-type="doi">10.31219/osf.io/y8thv</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-viv">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Manz</surname><given-names>Trevor</given-names></name>
        <name><surname>Gold</surname><given-names>Ilan</given-names></name>
        <name><surname>Patterson</surname><given-names>Nathan Heath</given-names></name>
        <name><surname>McCallum</surname><given-names>Chuck</given-names></name>
        <name><surname>Keller</surname><given-names>Mark S</given-names></name>
        <name><surname>Herr</surname><given-names>Bruce W</given-names><suffix>2nd</suffix></name>
        <name><surname>Börner</surname><given-names>Katy</given-names></name>
        <name><surname>Spraggins</surname><given-names>Jeffrey M</given-names></name>
        <name><surname>Gehlenborg</surname><given-names>Nils</given-names></name>
      </person-group>
      <article-title>Viv: Multiscale visualization of high-resolution multiplexed bioimaging data on the web</article-title>
      <source>Nat. Methods</source>
      <year iso-8601-date="2022-05">2022</year><month>05</month>
      <volume>19</volume>
      <issue>5</issue>
      <pub-id pub-id-type="doi">10.1038/s41592-022-01482-7</pub-id>
      <fpage>515</fpage>
      <lpage>516</lpage>
    </element-citation>
  </ref>
  <ref id="ref-lonboard">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Barron</surname><given-names>Kyle</given-names></name>
      </person-group>
      <article-title>Lonboard</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://github.com/developmentseed/lonboard</uri>
    </element-citation>
  </ref>
  <ref id="ref-ipyaladin">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Boch</surname><given-names>Thomas</given-names></name>
        <name><surname>Desroziers</surname><given-names>Jérôme</given-names></name>
      </person-group>
      <article-title>ipyaladin: Enabling Aladin Lite in Jupyter notebooks</article-title>
      <source>Astronomical data analysis software and systems XXVII</source>
      <person-group person-group-type="editor">
        <name><surname>Ballester</surname><given-names>Pascal</given-names></name>
        <name><surname>Ibsen</surname><given-names>Jorge</given-names></name>
        <name><surname>Solar</surname><given-names>Mauricio</given-names></name>
        <name><surname>Shortridge</surname><given-names>Keith</given-names></name>
      </person-group>
      <year iso-8601-date="2020-04">2020</year><month>04</month>
      <volume>522</volume>
      <fpage>117</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-drawdata">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Warmerdam</surname><given-names>Vincent D.</given-names></name>
      </person-group>
      <article-title>Drawdata</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://github.com/koaning/drawdata</uri>
    </element-citation>
  </ref>
  <ref id="ref-anyhtmlwidget">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Keller</surname><given-names>Mark S.</given-names></name>
      </person-group>
      <article-title>Anyhtmlwidget</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://github.com/keller-mark/anyhtmlwidget</uri>
    </element-citation>
  </ref>
  <ref id="ref-altair">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>VanderPlas</surname><given-names>Jacob</given-names></name>
        <name><surname>Granger</surname><given-names>Brian</given-names></name>
        <name><surname>Heer</surname><given-names>Jeffrey</given-names></name>
        <name><surname>Moritz</surname><given-names>Dominik</given-names></name>
        <name><surname>Wongsuphasawat</surname><given-names>Kanit</given-names></name>
        <name><surname>Satyanarayan</surname><given-names>Arvind</given-names></name>
        <name><surname>Lees</surname><given-names>Eitan</given-names></name>
        <name><surname>Timofeev</surname><given-names>Ilia</given-names></name>
        <name><surname>Welsh</surname><given-names>Ben</given-names></name>
        <name><surname>Sievert</surname><given-names>Scott</given-names></name>
      </person-group>
      <article-title>Altair: Interactive statistical visualizations for Python</article-title>
      <source>J. Open Source Softw.</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2018-12">2018</year><month>12</month>
      <volume>3</volume>
      <issue>32</issue>
      <pub-id pub-id-type="doi">10.21105/joss.01057</pub-id>
      <fpage>1057</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-scipy">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Manz</surname><given-names>Trevor</given-names></name>
        <name><surname>Gehlenborg</surname><given-names>Nils</given-names></name>
        <name><surname>Abdennur</surname><given-names>Nezar</given-names></name>
      </person-group>
      <article-title>Any notebook served: Authoring and sharing reusable interactive widgets</article-title>
      <publisher-name>OSF Preprints</publisher-name>
      <year iso-8601-date="2024-06">2024</year><month>06</month>
      <uri>osf.io/pyn7u</uri>
      <pub-id pub-id-type="doi">10.31219/osf.io/pyn7u</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-ipywidgets">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Grout</surname><given-names>Jason</given-names></name>
        <name><surname>Frederic</surname><given-names>Jonathan</given-names></name>
        <name><surname>Corlay</surname><given-names>Sylvain</given-names></name>
        <name><surname>al.</surname></name>
      </person-group>
      <article-title>ipywidgets: Interactive widgets for the Jupyter notebook</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://github.com/jupyter-widgets/ipywidgets</uri>
    </element-citation>
  </ref>
  <ref id="ref-marimo">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Agrawal</surname><given-names>Akshay</given-names></name>
        <name><surname>Scolnick</surname><given-names>Myles</given-names></name>
      </person-group>
      <article-title>Marimo</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://github.com/marimo-team/marimo</uri>
    </element-citation>
  </ref>
  <ref id="ref-panel">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Rudiger</surname><given-names>Philipp</given-names></name>
        <name><surname>Madsen</surname><given-names>Marc Skov</given-names></name>
        <name><surname>Hansen</surname><given-names>Simon Høxbro</given-names></name>
        <name><surname>Liquet</surname><given-names>Maxime</given-names></name>
        <name><surname>Andrew</surname></name>
        <name><surname>Artusi</surname><given-names>Xavier</given-names></name>
        <name><surname>Bednar</surname><given-names>James A.</given-names></name>
        <name><surname>B</surname><given-names>Chris</given-names></name>
        <name><surname>Stevens</surname><given-names>Jean-Luc</given-names></name>
        <name><surname>Signell</surname><given-names>Julia</given-names></name>
        <name><surname>Roumis</surname><given-names>Demetris</given-names></name>
        <name><surname>Deil</surname><given-names>Christoph</given-names></name>
        <name><surname>Paprocki</surname><given-names>Mateusz</given-names></name>
        <name><surname>Wu</surname><given-names>Jerry</given-names></name>
        <name><surname>Mease</surname><given-names>Jon</given-names></name>
        <name><surname>Arne</surname></name>
        <name><surname>thuydotm</surname></name>
        <name><surname>Amanieu</surname><given-names>Hugues-Yanis</given-names></name>
        <name><surname>Coderambling</surname></name>
        <name><surname>Simon</surname></name>
        <name><surname>sdc50</surname></name>
        <name><surname>Totla</surname><given-names>Govinda</given-names></name>
        <name><surname>Ostblom</surname><given-names>Joel</given-names></name>
        <name><surname>Theom</surname></name>
        <name><surname>kbowen</surname></name>
        <name><surname>Fabbri</surname><given-names>Luca</given-names></name>
        <name><surname>Föhr</surname><given-names>Niko</given-names></name>
        <name><surname>TBym</surname></name>
      </person-group>
      <article-title>Holoviz/panel: Version 1.4.4</article-title>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2024-05">2024</year><month>05</month>
      <uri>https://doi.org/10.5281/zenodo.11403810</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.11403810</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-cev">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Manz</surname><given-names>Trevor</given-names></name>
        <name><surname>Lekschas</surname><given-names>Fritz</given-names></name>
        <name><surname>Greene</surname><given-names>Evan</given-names></name>
        <name><surname>Finak</surname><given-names>Greg</given-names></name>
        <name><surname>Gehlenborg</surname><given-names>Nils</given-names></name>
      </person-group>
      <article-title>A general framework for comparing embedding visualizations across class-label hierarchies</article-title>
      <publisher-name>OSF Preprints</publisher-name>
      <year iso-8601-date="2024-04">2024</year><month>04</month>
      <uri>osf.io/puxnf</uri>
      <pub-id pub-id-type="doi">10.31219/osf.io/puxnf</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-ecma">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Guo</surname><given-names>Shu-yu</given-names></name>
        <name><surname>Ficarra</surname><given-names>Michael</given-names></name>
        <name><surname>Gibbons</surname><given-names>Kevin</given-names></name>
        <name><surname>community</surname><given-names>ECMAScript</given-names></name>
      </person-group>
      <article-title>ECMAScript® 2023 Language Specification</article-title>
      <year iso-8601-date="2023-06">2023</year><month>06</month>
      <edition>14th</edition>
      <uri>https://262.ecma-international.org/14.0/</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
