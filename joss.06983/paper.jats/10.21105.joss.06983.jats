<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6983</article-id>
<article-id pub-id-type="doi">10.21105/joss.06983</article-id>
<title-group>
<article-title>ugv_nav4d: Advanced Multi-Surface Navigation for Unmanned
Ground Vehicles Using 4D Path Planning Techniques</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Böckmann</surname>
<given-names>Arne</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Machowinski</surname>
<given-names>Janosch</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0008-1199-3489</contrib-id>
<name>
<surname>Lodhi</surname>
<given-names>Muhammad Haider Khan</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Cellumation GmbH</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>DFKI GmbH</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-06-20">
<day>20</day>
<month>6</month>
<year>2024</year>
</pub-date>
<volume>9</volume>
<issue>104</issue>
<fpage>6983</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2024</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Multi-Surface Trajectory Planning</kwd>
<kwd>Global Path Planning</kwd>
<kwd>Unmanned Ground Vehicle Navigation</kwd>
<kwd>Mobile Robotics</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The ugv_nav4d is a global path planner designed for terrestrial
  robots to navigate complex indoor and outdoor environments. To achieve
  this, ugv_nav4d uses a traversability map (TraversabilityMap3d) based
  on a multi-layered surface map (MLSMap)
  (<xref alt="Born &amp; Arnold, 2015" rid="ref-slammaps" ref-type="bibr">Born
  &amp; Arnold, 2015</xref>;
  <xref alt="Triebel et al., 2006" rid="ref-mlsmaps" ref-type="bibr">Triebel
  et al., 2006</xref>), enabling planning in multi-surface environments.
  The path is built by selecting motion primitives tailored to the
  robot’s mechanical features, ensuring compatibility with its motion
  capabilities.</p>
  <fig>
    <caption><p>Planned trajectory in a multi-storey
    environment.</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="parking_deck.png" />
  </fig>
</sec>
<sec id="statement-of-need">
  <title>Statement Of Need</title>
  <p>Accurate ground surface representation is crucial for ground-based
  robots in complex terrains. The ROS2 Navigation Stack (nav2)
  (<xref alt="Macenski et al., 2020" rid="ref-macenski2020nav2" ref-type="bibr">Macenski
  et al., 2020</xref>), which uses voxel maps for 3D navigation, often
  loses detail and accuracy, especially in multi-storey environments,
  due to its discrete voxelization and separate costmaps for each
  floor.</p>
  <p>We propose ugv_nav4d, a path planner that enhances environmental
  representation with Multi-Layered Surface Maps (MLS)
  (<xref alt="Triebel et al., 2006" rid="ref-mlsmaps" ref-type="bibr">Triebel
  et al., 2006</xref>) and a 3D Traversability Map
  (<xref alt="Born &amp; Arnold, 2015" rid="ref-slammaps" ref-type="bibr">Born
  &amp; Arnold, 2015</xref>). Ugv_nav4d avoids the “stepping” effect of
  voxel maps by using a continuous grid and detailed vertical
  information, providing smoother and more accurate terrain
  modelling.</p>
  <p>Unlike nav2, ugv_nav4d simplifies planning with a single
  TraversabilityMap3D, which contains detailed ground surface data,
  offering a superior alternative to nav2’s 3D costmaps. For users, MLS
  maps provide a smoother, more realistic view of terrain compared to
  the blocky voxel maps, enhancing navigation and decision-making in
  complex environments.</p>
</sec>
<sec id="software-components">
  <title>Software Components</title>
  <p>The core software components of the planner are</p>
  <list list-type="bullet">
    <list-item>
      <p>EnvironmentXYZTheta</p>
    </list-item>
    <list-item>
      <p>PathPlanner</p>
    </list-item>
    <list-item>
      <p>PreComputedMotions</p>
    </list-item>
  </list>
  <sec id="environmentxyztheta">
    <title>EnvironmentXYZTheta</title>
    <p>The core of ugv_nav4d is based on SBPL (Search-Based Planning
    Library)
    (<xref alt="Likhachev et al., 2005" rid="ref-sbpl" ref-type="bibr">Likhachev
    et al., 2005</xref>). The EnvironmentXYZTheta implements all
    interfaces needed by SBPL to enable ARA* based planning. The
    environment in SBPL is a state space which connects states with
    associated transition costs. A state is defined by the position
    (x,y,z) and orientation (yaw) of the robot. The EnvironmentXYZTheta
    uses a TraversabilityGenerator3d
    (<xref alt="Machowinski &amp; Böckmann, 2016" rid="ref-travgen3d" ref-type="bibr">Machowinski
    &amp; Böckmann, 2016</xref>) to generate a TraversabilityMap3d from
    a MLSMap, which classifies the MLSMap patches into traversable,
    non-traversable, and unknown terrain and stores metadata of the
    ground surface (e.g., slope of the patch, supporting plane,
    etc.).</p>
    <fig>
      <caption><p>The Moon Crater and its TraversabilityMap3d in the
      Space Hall at the RIC, DFKI
      (<xref alt="Robotics Exploration Laboratory, 2024" rid="ref-roboticsElab" ref-type="bibr"><italic>Robotics
      Exploration Laboratory</italic>,
      2024</xref>)<styled-content id="figU003Acrater"></styled-content>.</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="trav_map_and_space_hall.png" />
    </fig>
  </sec>
  <sec id="pathplanner">
    <title>PathPlanner</title>
    <p>The search for the shortest path in ugv_nav4d is based on the
    SBPL-provided ARA* planner. It builds a state space of future robot
    states and uses a time heuristic to compute the shortest path on the
    TraversabilityMap3D. Robot and terrain-specific information,
    including robot dimensions and orientations, collision checks with
    obstacles, terrain steepness, and motion primitives are incorporated
    as additional costs in the search for the successive states. The
    planner generates a complete trajectory for the planned path, which
    can then be executed by a trajectory follower
    (<xref alt="Babu, 2016" rid="ref-trajectoryfollower" ref-type="bibr">Babu,
    2016</xref>).</p>
    <fig>
      <caption><p>The planned trajectory (yellow) using the robot
      <ext-link ext-link-type="uri" xlink:href="https://robotik.dfki-bremen.de/de/forschung/robotersysteme/hunterse">Hunter-SE</ext-link>
      in the final demostration of the project
      <ext-link ext-link-type="uri" xlink:href="https://robotik.dfki-bremen.de/de/forschung/projekte/kimmi-sf">KIMMI-SF</ext-link>.</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="motion_planning_hunter.png" />
    </fig>
  </sec>
  <sec id="precomputedmotions">
    <title>PreComputedMotions</title>
    <p>Motion primitives are pre-defined movements stored as spline
    trajectories, representing feasible robot motions from a given pose
    (x, y, z, yaw). The planner uses these primitives to find successor
    states, ensuring paths are traversable and collision-free. Each
    motion has a base cost for flat surfaces, with additional penalties
    for factors like steepness. Primitives fall into four categories:
    Forward, Backward, Lateral, and Point-Turn. These primitives can be
    tailored for different robot types: Ackermann drive robots use
    forward and backward primitives, differential drive robots can use
    point-turn primitives, and omni-directional robots utilize all four
    types. Point-turn primitives are unique as they don’t use splines,
    unlike the others generated by the SbplSplineMotionPrimitives
    library
    (<xref alt="Böckmann, 2016" rid="ref-sbplsplineprimitives" ref-type="bibr">Böckmann,
    2016</xref>).</p>
    <fig>
      <caption><p>A pool of forward motion primitives by the
      PreComputedMotions module.</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="motion_primitives.png" />
    </fig>
  </sec>
</sec>
<sec id="debugging">
  <title>Debugging</title>
  <sec id="plannergui">
    <title>PlannerGui</title>
    <p>A GUI for ugv_nav4d allows debugging and testing by experimenting
    with planner parameters on a static map. The PlannerGui can load
    point clouds from ply or serialized MLS maps, using left and right
    clicks to set start and end locations. Errors can be logged to a
    file and ugv_nav4d_replay can be used to analyze the state and
    execute planning in a controlled environment.</p>
    <fig>
      <caption><p>GUI for debugging and testing of
      ugv_nav4d.</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="debug_gui.png" />
    </fig>
  </sec>
</sec>
<sec id="field-tests">
  <title>Field Tests</title>
  <p>ugv_nav4d has been used extensively in research projects for almost
  a decade. It has been utilized for autonomous navigation in several
  projects, including
  <ext-link ext-link-type="uri" xlink:href="https://robotik.dfki-bremen.de/de/forschung/projekte/entern">Entern</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://robotik.dfki-bremen.de/de/forschung/projekte/ant">ANT</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://robotik.dfki-bremen.de/de/forschung/projekte/vipe">VIPE</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://robotik.dfki-bremen.de/de/forschung/projekte/kimmi-sf">KIMMI-SF</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://robotik.dfki-bremen.de/de/forschung/projekte/hise">HiSE</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://robotik.dfki-bremen.de/de/forschung/projekte/persim">PerSim</ext-link>,
  and
  <ext-link ext-link-type="uri" xlink:href="https://robotik.dfki-bremen.de/de/forschung/projekte/corob-x">CoRobX</ext-link>.
  As a versatile planner, it has also been used for various terrestrial
  robots, such as
  <ext-link ext-link-type="uri" xlink:href="https://robotik.dfki-bremen.de/de/forschung/robotersysteme/artemis">Artemis</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://robotik.dfki-bremen.de/de/forschung/robotersysteme/coyote-iii">Coyote-III</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://robotik.dfki-bremen.de/de/forschung/robotersysteme/crex">Crex</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://robotik.dfki-bremen.de/de/forschung/robotersysteme/charlie">Charlie</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://robotik.dfki-bremen.de/de/forschung/robotersysteme/hunterse">Hunter-SE</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://robotik.dfki-bremen.de/de/forschung/robotersysteme/sherpatt">SherpaTT</ext-link>,
  and
  <ext-link ext-link-type="uri" xlink:href="https://robotik.dfki-bremen.de/de/forschung/robotersysteme/asguard-iv">Asguard-IV</ext-link>.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The ugv_nav4d library was initiated and is currently developed at
  the Robotics Innovation Center of the German Research Center for
  Artificial Intelligence (DFKI) in Bremen, together with the Robotics
  Group of the University of Bremen. The development was started in the
  scope of the Entern project (50RA1406), which has been funded by the
  German Aerospace Center (DLR) with funds from the German Federal
  Ministry for Economic Affairs and Climate Action (BMWK).</p>
  <p>We would also like to acknowledge the contributors of the ugv_nav4d
  repository, including the developers visible on the project’s GitHub
  contributors page, for their valuable efforts and dedication.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-slammaps">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Born</surname><given-names>Anna</given-names></name>
        <name><surname>Arnold</surname><given-names>Sascha</given-names></name>
      </person-group>
      <article-title>SLAM Maps</article-title>
      <year iso-8601-date="2015">2015</year>
      <uri>https://github.com/envire/slam-maps</uri>
    </element-citation>
  </ref>
  <ref id="ref-sbpl">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Likhachev</surname><given-names>Maxim</given-names></name>
        <name><surname>Ferguson</surname><given-names>Dave</given-names></name>
        <name><surname>Gordon</surname><given-names>Geoff</given-names></name>
      </person-group>
      <article-title>SBPL: Search-Based Planning Library</article-title>
      <year iso-8601-date="2005">2005</year>
      <uri>https://github.com/sbpl/sbpl</uri>
    </element-citation>
  </ref>
  <ref id="ref-travgen3d">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Machowinski</surname><given-names>Janosch</given-names></name>
        <name><surname>Böckmann</surname><given-names>Arne</given-names></name>
      </person-group>
      <article-title>Traversability Generator3d</article-title>
      <year iso-8601-date="2016">2016</year>
      <uri>https://github.com/dfki-ric/traversability_generator3d</uri>
    </element-citation>
  </ref>
  <ref id="ref-roboticsElab">
    <element-citation>
      <article-title>Robotics Exploration Laboratory</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://www.dfki.de/web/technologien-anwendungen/living-labs/robotics-exploration-laboratory</uri>
    </element-citation>
  </ref>
  <ref id="ref-trajectoryfollower">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Babu</surname><given-names>Ajish</given-names></name>
      </person-group>
      <article-title>Trajectory Follower</article-title>
      <year iso-8601-date="2016">2016</year>
      <uri>https://github.com/rock-control/control-trajectory_follower</uri>
    </element-citation>
  </ref>
  <ref id="ref-sbplsplineprimitives">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Böckmann</surname><given-names>Arne</given-names></name>
      </person-group>
      <article-title>SBPL Spline Primitives</article-title>
      <year iso-8601-date="2016">2016</year>
      <uri>https://github.com/rock-planning/planning-sbpl_spline_primitives</uri>
    </element-citation>
  </ref>
  <ref id="ref-mlsmaps">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Triebel</surname><given-names>Rudolph</given-names></name>
        <name><surname>Pfaff</surname><given-names>Patrick</given-names></name>
        <name><surname>Burgard</surname><given-names>Wolfram</given-names></name>
      </person-group>
      <article-title>Multi-level surface maps for outdoor terrain mapping and loop closing</article-title>
      <source>2006 IEEE/RSJ international conference on intelligent robots and systems</source>
      <year iso-8601-date="2006">2006</year>
      <pub-id pub-id-type="doi">10.1109/IROS.2006.282632</pub-id>
      <fpage>2276</fpage>
      <lpage>2282</lpage>
    </element-citation>
  </ref>
  <ref id="ref-macenski2020nav2">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Macenski</surname><given-names>Steve</given-names></name>
        <name><surname>Martı́n</surname><given-names>Francisco</given-names></name>
        <name><surname>White</surname><given-names>Ruffin</given-names></name>
        <name><surname>Clavero</surname><given-names>Jonatan Ginés</given-names></name>
      </person-group>
      <article-title>The Marathon 2: A Navigation System</article-title>
      <source>CoRR</source>
      <year iso-8601-date="2020">2020</year>
      <volume>abs/2003.00368</volume>
      <uri>https://arxiv.org/abs/2003.00368</uri>
      <pub-id pub-id-type="doi">10.1109/IROS45743.2020.9341207</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
