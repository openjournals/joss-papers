<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">4650</article-id>
<article-id pub-id-type="doi">10.21105/joss.04650</article-id>
<title-group>
<article-title>MNELAB: a graphical user interface for
MNE-Python</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-6030-2233</contrib-id>
<name>
<surname>Brunner</surname>
<given-names>Clemens</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Institute of Psychology, Educational Neuroscience,
University of Graz, Austria</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2022-07-15">
<day>15</day>
<month>7</month>
<year>2022</year>
</pub-date>
<volume>7</volume>
<issue>78</issue>
<fpage>4650</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>python</kwd>
<kwd>eeg</kwd>
<kwd>meg</kwd>
<kwd>mne</kwd>
<kwd>gui</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><ext-link ext-link-type="uri" xlink:href="https://github.com/cbrnr/mnelab">MNELAB</ext-link>
  is a graphical user interface (GUI) for
  <ext-link ext-link-type="uri" xlink:href="https://mne.tools/stable/index.html">MNE-Python</ext-link>
  (<xref alt="Gramfort et al., 2013" rid="ref-GramfortU003A2013" ref-type="bibr">Gramfort
  et al., 2013</xref>), which is currently the most popular Python
  package for analyzing human neurophysiological data including EEG
  (electroencephalography), MEG (magnetoencephalography), ECoG
  (electrocorticography), and NIRS (near-infrared spectroscopy).
  Although MNE-Python has been actively maintained for over 11 years
  (with its first stable release published in March 2022), the only way
  to interact with the package is still exclusively through Python
  code.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Of course, writing code to analyze data has several key advantages
  (such as reproducibility and straightforward generalization to new
  data sets), but a GUI is better suited for a few specific use
  cases.</p>
  <p>First, getting a quick overview of a given data set is often faster
  with MNELAB. The file can simply be dragged onto the main window,
  which will automatically import the data. MNELAB displays important
  properties of the data set, such as the number and types of channels,
  the total duration of the signals, the sampling frequency, its size in
  memory and on disk, and so on. Generating a time series plot or
  calculating the power spectral density for interactive data inspection
  is also only a mouse click away.
  <xref alt="Figure 1" rid="figU003Amnelab">Figure 1</xref> shows the
  MNELAB main window (top left), a tree view listing metadata (bottom
  left), and raw EEG traces in an interactive signal browser
  (right).</p>
  <p>In contrast, the same analysis in the interactive Python
  interpreter (without a GUI) involves (1) specifying the full path of
  the file (or setting the working directory appropriately), (2)
  importing MNE-Python, (3) reading the file with a suitable reader
  function, (4) printing the properties of interest, and (5) generating
  plots with corresponding methods. The following example shows what
  these steps might look like:</p>
  <code language="python">import mne
raw = mne.io.read_raw(&quot;/path/to/data.edf&quot;)
print(raw.info)
raw.plot()
raw.plot_psd()</code>
  <fig>
    <caption><p>Main window (top left), metadata dialog (bottom left),
    and a signal browser window
    (right).<styled-content id="figU003Amnelab"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/7fe563399a1ca96e2f8d1d6b9a9e4355c09ff726.png" xlink:title="" />
  </fig>
  <p>This code snippet also illustrates the second major use case for
  MNELAB. Users without a strong programming background in Python might
  find it difficult to implement these steps on their own. In fact, at
  least basic knowledge of MNE-Python and its underlying design
  principles is required to find the right functions and methods.
  Conversely, MNELAB can be used by complete novices, because available
  functions are explicitly exposed as menu items. By simply exploring
  the user interface, it is straightforward to perform basic analysis
  tasks without having to write a single line of code.</p>
  <p>Importantly, the goal of MNELAB is <italic>not</italic> to replace
  MNE-Python, but rather to supplement it and offer an alternative way
  of interaction for specific use cases. Indeed, one of its central
  features is the command history, which records all actions performed
  in MNELAB and translates them to valid Python code. This makes it easy
  to discover which functions correspond to previous actions, which
  might help speed up the process of learning MNE-Python.</p>
  <p>MNELAB offers extensive support for the
  <ext-link ext-link-type="uri" xlink:href="https://github.com/sccn/xdf/wiki/Specifications">XDF</ext-link>
  file format, which is commonly used for recording multimodal data
  streams with a single synchronized time basis. MNELAB supports
  importing and automatic resampling of an arbitrary number of XDF
  streams (including marker streams), which is currently not easily
  possible with plain MNE-Python. Once an XDF file has been imported,
  all associated meta data is available in a tree-like view. In
  addition, raw chunk data contained in XDF files can be inspected
  (without importing), which is useful to detect corruptions or other
  problems associated with a particular file.</p>
  <p>Once a data set has been imported (and possibly edited in
  subsequent steps), MNELAB supports exporting to various formats,
  including FIF,
  <ext-link ext-link-type="uri" xlink:href="https://www.edfplus.info/">EDF</ext-link>,
  EEGLAB, and BrainVision. Other data structures such as events,
  annotations, and bad channels can also be saved to disk.</p>
  <p>Currently, MNELAB includes only a relatively small subset of
  functionality available in MNE-Python. However, a basic EEG analysis
  workflow involving data inspection, artifact rejection, editing events
  and annotations, simple ERP (event-related potentials) analysis, ERSP
  (event-related spectral perturbation) also known as ERD/ERS
  (event-related desynchronization/synchronization) analysis, ICA
  (independent component analysis), and more is already supported.
  Depending on the availability and time of contributors, more features
  are planned and will be added in the future.</p>
  <p>MNELAB is neither the first nor the only GUI to facilitate EEG/MEG
  analysis. In fact,
  <ext-link ext-link-type="uri" xlink:href="https://eeglab.org/">EEGLAB</ext-link>
  (<xref alt="Delorme &amp; Makeig, 2004" rid="ref-DelormeU003A2004" ref-type="bibr">Delorme
  &amp; Makeig, 2004</xref>) and
  <ext-link ext-link-type="uri" xlink:href="https://neuroimage.usc.edu/brainstorm/Introduction">Brainstorm</ext-link>
  (<xref alt="Tadel et al., 2011" rid="ref-TadelU003A2011" ref-type="bibr">Tadel
  et al., 2011</xref>) have been extremely popular (and continue to be
  actively developed and maintained) in the neuroscience community for
  quite some time. Another popular tool for EEG/MEG analysis is
  <ext-link ext-link-type="uri" xlink:href="https://www.fieldtriptoolbox.org/">FieldTrip</ext-link>
  (<xref alt="Oostenveld et al., 2011" rid="ref-OostenveldU003A2011" ref-type="bibr">Oostenveld
  et al., 2011</xref>), although it does not feature a GUI. However, all
  three packages are MATLAB-based toolboxes, which means that they
  require a proprietary (and expensive) development environment to work.
  In contrast, both MNELAB and MNE-Python are based on Python, which
  itself is completely open source and available for many different
  platforms.</p>
</sec>
<sec id="acknowledgments">
  <title>Acknowledgments</title>
  <p>A big thank you goes out to all contributors who have fixed bugs or
  implemented new functionality. As with almost any open source project,
  new contributions are always welcome!</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-DelormeU003A2004">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Delorme</surname><given-names>A.</given-names></name>
        <name><surname>Makeig</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>EEGLAB: an open source toolbox for analysis of single-trial EEG dynamics including independent component analysis</article-title>
      <source>Journal of Neuroscience Methods</source>
      <year iso-8601-date="2004">2004</year>
      <volume>134</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1016/j.jneumeth.2003.10.009</pub-id>
      <fpage>9</fpage>
      <lpage>21</lpage>
    </element-citation>
  </ref>
  <ref id="ref-GramfortU003A2013">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Gramfort</surname><given-names>A.</given-names></name>
        <name><surname>Luessi</surname><given-names>M.</given-names></name>
        <name><surname>Larson</surname><given-names>E.</given-names></name>
        <name><surname>Engemann</surname><given-names>D. A.</given-names></name>
        <name><surname>Strohmeier</surname><given-names>D.</given-names></name>
        <name><surname>Brodbeck</surname><given-names>C.</given-names></name>
        <name><surname>Goj</surname><given-names>R.</given-names></name>
        <name><surname>Jas</surname><given-names>M.</given-names></name>
        <name><surname>Brooks</surname><given-names>T.</given-names></name>
        <name><surname>Parkkonen</surname><given-names>L.</given-names></name>
        <name><surname>Hämäläinen</surname><given-names>M.</given-names></name>
      </person-group>
      <article-title>MEG and EEG data analysis with MNE-Python</article-title>
      <source>Frontiers in Neuroscience</source>
      <year iso-8601-date="2013">2013</year>
      <volume>7</volume>
      <pub-id pub-id-type="doi">10.3389/fnins.2013.00267</pub-id>
      <fpage>267</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-OostenveldU003A2011">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Oostenveld</surname><given-names>R.</given-names></name>
        <name><surname>Fries</surname><given-names>P.</given-names></name>
        <name><surname>Maris</surname><given-names>E.</given-names></name>
        <name><surname>Schoffelen</surname><given-names>J.-M.</given-names></name>
      </person-group>
      <article-title>FieldTrip: open source software for advanced analysis of MEG, EEG, and invasive electrophysiological data</article-title>
      <source>Computational Intelligence and Neuroscience</source>
      <year iso-8601-date="2011">2011</year>
      <volume>2011</volume>
      <pub-id pub-id-type="doi">10.1155/2011/156869</pub-id>
      <fpage>156869</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-TadelU003A2011">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Tadel</surname><given-names>F.</given-names></name>
        <name><surname>Baillet</surname><given-names>S.</given-names></name>
        <name><surname>Mosher</surname><given-names>J. C.</given-names></name>
        <name><surname>Pantazis</surname><given-names>D.</given-names></name>
        <name><surname>Leahy</surname><given-names>R. M.</given-names></name>
      </person-group>
      <article-title>Brainstorm: a user-friendly application for MEG/EEG analysis</article-title>
      <source>Computational Intelligence and Neuroscience</source>
      <year iso-8601-date="2011">2011</year>
      <volume>2011</volume>
      <pub-id pub-id-type="doi">10.1155/2011/879716</pub-id>
      <fpage>879716</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
