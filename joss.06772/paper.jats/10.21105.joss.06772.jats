<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6772</article-id>
<article-id pub-id-type="doi">10.21105/joss.06772</article-id>
<title-group>
<article-title>QUPS: A MATLAB Toolbox for Rapid Prototyping of
Ultrasound Beamforming and Imaging Techniques</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-0720-6955</contrib-id>
<name>
<surname>Brevett</surname>
<given-names>Thurston</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Stanford University</institution>
</institution-wrap>
</aff>
</contrib-group>
<volume>9</volume>
<issue>101</issue>
<fpage>6772</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>MATLAB</kwd>
<kwd>ultrasound</kwd>
<kwd>beamforming</kwd>
<kwd>imaging</kwd>
<kwd>prototyping</kwd>
<kwd>signal processing</kwd>
<kwd>CUDA</kwd>
<kwd>OpenCL</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary:</title>
  <p>Medical ultrasound encompasses a rapidly developing field of
  research with many potential applications from diagnostics to
  therapeutics. Public data initiatives and recent industry trends have
  reduced the cost and complexity to engage in research via publicly
  available data, on-board data acquisition functions, and commercial
  off the shelf (COTS) imaging systems. However, terminology, data
  formatting standards, and computing practices tend to be highly
  fragmented throughout the ultrasound research field, leading to a high
  barrier of entry that hinders communication, code reuse, and
  shareability.</p>
  <p><monospace>QUPS</monospace> aims to facilitate ultrasound research
  by offering a flexible, performant, modular, and intuitive toolbox
  that can be used by experienced researchers as well as curious
  students for data acquisition, generation, representation, and
  processing. It pursues this goal by offering tools designed to reduce
  the burden of common computational tasks involved in the scientific
  process by standardizing data formats and offering hardware
  accelerated functionality.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need:</title>
  <p>The lack of data and terminology standardization in ultrasound
  technology research is an easily overlooked impediment to developing
  research, as it encourages reinventing the wheel and can easily lead
  to misinterpretation. At its lowest level, <monospace>QUPS</monospace>
  provides memory efficient definition classes capable of representing a
  wide variety of common imaging systems and enforces standardized
  units, coordinate systems, and nomenclature. All classes have data
  visualization support, making it far easier to share and validate data
  amongst collaborators and with the public.</p>
  <p><monospace>QUPS</monospace> provides a variety of compute and
  memory optimized implementations of common signal processing methods
  (e.g. beamforming, resampling, or convolution), which take advantage
  of native parallelization tools within MATLAB or hardware acceleration
  via CUDA or OpenCL when feasible by leveraging
  <monospace>MatCL</monospace>
  (<xref alt="Heinisch &amp; Ostaszewski, 2018" rid="ref-heinisch2018MatCL" ref-type="bibr">Heinisch
  &amp; Ostaszewski, 2018</xref>). <monospace>QUPS</monospace> exploits
  data parallelism primarily using a single program multiple data (SPMD)
  approach, and optimistically dispatches to the most efficient
  implementation available on a user’s computer. For access to cutting
  edge research, it can also export or import to
  <monospace>USTB</monospace>
  (<xref alt="Rodriguez-Molares et al., 2017" rid="ref-USTB2017" ref-type="bibr">Rodriguez-Molares
  et al., 2017</xref>), an ultrasound toolbox which contains a library
  of advanced algorithms from the literature.</p>
  <p>To facilitate data acquisition, <monospace>QUPS</monospace>
  provides tools to import data from
  <ext-link ext-link-type="uri" xlink:href="https://verasonics.com/vantage-systems/">Verasonics
  Vantage</ext-link> ultrasound research scanners, which uses a flexible
  yet highly complex data standard. Similarly, to facilitate data
  generation, <monospace>QUPS</monospace> also interfaces with multiple
  popular free ultrasound field simulators including
  <monospace>FieldII</monospace>
  (<xref alt="Jensen, 1996" rid="ref-Jensen1996" ref-type="bibr">Jensen,
  1996</xref>), <monospace>MUST</monospace>
  (<xref alt="Garcia, 2021" rid="ref-Garcia2021" ref-type="bibr">Garcia,
  2021</xref>), and <monospace>k-Wave</monospace>
  (<xref alt="Treeby &amp; Cox, 2010" rid="ref-Treeby2010" ref-type="bibr">Treeby
  &amp; Cox, 2010</xref>). Simulations can be batched on a compute
  cluster via MATLAB’s parallel server toolbox.</p>
  <p>Alternatively, when a coarse but fast approximation is preferable,
  <monospace>QUPS</monospace> offers a hardware accelerated simulator
  with minimal complexity. This method uses a green’s function to
  simulate ideal isotropic point sources (transmitters), point
  receivers, and point scatterers with radial propagation loss using the
  equation</p>
  <p><disp-formula><alternatives>
  <tex-math><![CDATA[x_{mn}(t) = \sum_s \frac{v(t - c_0^{-1} \left( ||\mathbf{p}_s - \mathbf{q}_m|| + ||\mathbf{p}_s - \mathbf{r}_n|| \right) )}{||\mathbf{p}_s - \mathbf{q}_m|| \cdot ||\mathbf{p}_s - \mathbf{r}_n||}]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mi>s</mml:mi></mml:munder><mml:mfrac><mml:mrow><mml:mi>v</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:msubsup><mml:mi>c</mml:mi><mml:mn>0</mml:mn><mml:mrow><mml:mi>−</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">|</mml:mo><mml:mo stretchy="true" form="postfix">|</mml:mo></mml:mrow><mml:msub><mml:mi>𝐩</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>𝐪</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">|</mml:mo><mml:mo stretchy="true" form="postfix">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">|</mml:mo><mml:mo stretchy="true" form="postfix">|</mml:mo></mml:mrow><mml:msub><mml:mi>𝐩</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>𝐫</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">|</mml:mo><mml:mo stretchy="true" form="postfix">|</mml:mo></mml:mrow><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mo stretchy="true" form="prefix">|</mml:mo><mml:mo stretchy="true" form="postfix">|</mml:mo></mml:mrow><mml:msub><mml:mi>𝐩</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>𝐪</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">|</mml:mo><mml:mo stretchy="true" form="postfix">|</mml:mo></mml:mrow><mml:mo>⋅</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">|</mml:mo><mml:mo stretchy="true" form="postfix">|</mml:mo></mml:mrow><mml:msub><mml:mi>𝐩</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>𝐫</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">|</mml:mo><mml:mo stretchy="true" form="postfix">|</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></alternatives></disp-formula></p>
  <p>where <inline-formula><alternatives>
  <tex-math><![CDATA[t]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>t</mml:mi></mml:math></alternatives></inline-formula>
  is time, <inline-formula><alternatives>
  <tex-math><![CDATA[c_0]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
  is the speed of sound, <inline-formula><alternatives>
  <tex-math><![CDATA[v(\cdot)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>v</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>⋅</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  is the transmit waveform, <inline-formula><alternatives>
  <tex-math><![CDATA[m]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>m</mml:mi></mml:math></alternatives></inline-formula>,
  <inline-formula><alternatives>
  <tex-math><![CDATA[n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>,
  and <inline-formula><alternatives>
  <tex-math><![CDATA[s]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>s</mml:mi></mml:math></alternatives></inline-formula>
  are the transmit, receive, and scatterer indices,
  <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf{q}_m]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>𝐪</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf{r}_n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>𝐫</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf{p}_s]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>𝐩</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  are the transmit elements, receive elements, and scatterer locations
  in 3D Cartesian coordinates, and <inline-formula><alternatives>
  <tex-math><![CDATA[x_{mn}(\cdot)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>⋅</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  is the received echo waveform as a function of time. This expression
  is embarrassingly parallel over <inline-formula><alternatives>
  <tex-math><![CDATA[m]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>m</mml:mi></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>,
  and can be further accelerated with a branch-and-bound approach used
  to minimize unnecessary computation. Both of these aspects are
  exploited in native MATLAB, as well as in CUDA and OpenCL kernels.</p>
  <p>Broadcasting conventions are employed throughout to reduce the
  memory footprint while offering significant flexibility. For example,
  to implement delay-and-sum beamforming, one of the most common
  operations in ultrasound imaging, <monospace>QUPS</monospace> provides
  a GPU-enabled method employing the equation</p>
  <p><disp-formula><alternatives>
  <tex-math><![CDATA[ b_{ijkf} = \sum_m \sum_n \alpha_{ijknm} \cdot x_{mnf}(c_0^{-1} \left(||\mathbf{p}_{ijk} - \mathbf{r}_n|| + (-1)^{s(\mathbf{p}_{ijk}, \mathbf{q}_m)} \cdot ||\mathbf{p}_{ijk} - \mathbf{q}_m|| \right) - t_m) ]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi><mml:mi>k</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mi>m</mml:mi></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mi>n</mml:mi></mml:munder><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi><mml:mi>k</mml:mi><mml:mi>n</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>⋅</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msubsup><mml:mi>c</mml:mi><mml:mn>0</mml:mn><mml:mrow><mml:mi>−</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">|</mml:mo><mml:mo stretchy="true" form="postfix">|</mml:mo></mml:mrow><mml:msub><mml:mi>𝐩</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>𝐫</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">|</mml:mo><mml:mo stretchy="true" form="postfix">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>−</mml:mi><mml:mn>1</mml:mn><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>𝐩</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>𝐪</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:msup><mml:mo>⋅</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">|</mml:mo><mml:mo stretchy="true" form="postfix">|</mml:mo></mml:mrow><mml:msub><mml:mi>𝐩</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>𝐪</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">|</mml:mo><mml:mo stretchy="true" form="postfix">|</mml:mo></mml:mrow><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></disp-formula></p>
  <p>where <inline-formula><alternatives>
  <tex-math><![CDATA[m]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>m</mml:mi></mml:math></alternatives></inline-formula>,
  <inline-formula><alternatives>
  <tex-math><![CDATA[n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>,
  and <inline-formula><alternatives>
  <tex-math><![CDATA[f]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>f</mml:mi></mml:math></alternatives></inline-formula>
  are the transmit, receive and (image) frame indices,
  <inline-formula><alternatives>
  <tex-math><![CDATA[i]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>i</mml:mi></mml:math></alternatives></inline-formula>,
  <inline-formula><alternatives>
  <tex-math><![CDATA[j]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>j</mml:mi></mml:math></alternatives></inline-formula>,
  and <inline-formula><alternatives>
  <tex-math><![CDATA[k]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>k</mml:mi></mml:math></alternatives></inline-formula>
  are the voxel (or pixel) indices, <inline-formula><alternatives>
  <tex-math><![CDATA[x_{mnf}(\cdot)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>n</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>⋅</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  is the voltage signal (trace) as a function of time,
  <inline-formula><alternatives>
  <tex-math><![CDATA[t_m]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>t</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  is the start time for transmit <inline-formula><alternatives>
  <tex-math><![CDATA[m]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>m</mml:mi></mml:math></alternatives></inline-formula>,
  <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf{p}_{ijk}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>𝐩</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>
  are the voxel positions in 3D cartesian coordinates,
  <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf{q}_m]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>𝐪</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf{r}_n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>𝐫</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  are the virtual transmit and receiver positions, and
  <inline-formula><alternatives>
  <tex-math><![CDATA[s(\cdot,\cdot)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>s</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>⋅</mml:mi><mml:mo>,</mml:mo><mml:mi>⋅</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  is a threshold function based on the relation between the virtual
  transmit position and the imaging voxel position. Rather than require
  the user to specify the full five dimensional tensor
  <inline-formula><alternatives>
  <tex-math><![CDATA[\alpha_{ijknm}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi><mml:mi>k</mml:mi><mml:mi>n</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>,
  any subset of these dimensions may be singular to efficiently form
  e.g. a transmit by lateral weighting (apodization) scheme or a
  receiver by depth weighting scheme. Permutations of the input data
  e.g. <inline-formula><alternatives>
  <tex-math><![CDATA[x_{nfm}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>f</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>
  or <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf{p}_{kji}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>𝐩</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>j</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>
  are handled via properties specifying the indices rather than by
  enforcing a convention, which may lead to costly memory
  operations.</p>
  <p>Engaging in research often involves a plethora of small choices in
  order to configure software to suit the needs of a particular
  scientific inquiry. While exposing the user to these choices is
  necessary for some fields of research, mandating a suitable input
  forces all users to consider each aspect of the methodology. In most
  cases, the vast majority of these choices are either ultimately
  inconsequential or there exists a clear optimal or, at a minimum, a
  clear <italic>acceptable</italic> choice. For example, for
  finite-difference time-domain (FDTD) simulators, knowledge of a
  transducer’s frequency bandwidth is sufficient to determine a
  reasonably sized temporal sampling interval that satisfies the
  Courant-Friedrichs-Lewy (CFL) stability criterion. For research
  regarding the stability and accuracy of such simulators, the sampling
  interval is a critical choice. In many other cases however, this
  aspect is irrelevant as long as the sampling interval is
  <italic>sufficiently</italic> small. Requiring a user to be
  sufficiently well-versed with such minutia creates a barrier to entry
  with little benefit.</p>
  <p>Throughout the toolbox, <monospace>QUPS</monospace> provides
  reasonable defaults that abstract and simplify the number and
  complexity of such choices so that researchers can focus on the big
  picture questions. When these choices do become critical as is the
  case for researchers and experts, such users can engage with the
  toolbox at a lower level, or simply use the available functionality as
  a template to be modified to suit their needs.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This material is based upon work supported by the National
  Institutes of Health under award number R01EB027100 and by the
  National Science Foundation Graduate Research Fellowship under Grant
  No. DGE-1656518. The content is solely the responsibility of the
  authors and does not necessarily represent the official views of the
  National Institutes of Health.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-Treeby2010">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Treeby</surname><given-names>Bradley E.</given-names></name>
        <name><surname>Cox</surname><given-names>B. T.</given-names></name>
      </person-group>
      <article-title>K-wave: MATLAB toolbox for the simulation and reconstruction of photoacoustic wave fields</article-title>
      <source>Journal of Biomedical Optics</source>
      <publisher-name>SPIE-Intl Soc Optical Eng</publisher-name>
      <year iso-8601-date="2010">2010</year>
      <volume>15</volume>
      <issue>2</issue>
      <issn>1083-3668</issn>
      <uri>http://dx.doi.org/10.1117/1.3360308</uri>
      <pub-id pub-id-type="doi">10.1117/1.3360308</pub-id>
      <fpage>021314</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Garcia2021">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Garcia</surname><given-names>Damien</given-names></name>
      </person-group>
      <article-title>Make the most of MUST, an open-source matlab UltraSound toolbox</article-title>
      <source>2021 IEEE international ultrasonics symposium (IUS)</source>
      <year iso-8601-date="2021">2021</year>
      <volume></volume>
      <pub-id pub-id-type="doi">10.1109/IUS52206.2021.9593605</pub-id>
      <fpage>1</fpage>
      <lpage>4</lpage>
    </element-citation>
  </ref>
  <ref id="ref-USTB2017">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Rodriguez-Molares</surname><given-names>Alfonso</given-names></name>
        <name><surname>Rindal</surname><given-names>Ole Marius Hoel</given-names></name>
        <name><surname>Bernard</surname><given-names>Olivier</given-names></name>
        <name><surname>Nair</surname><given-names>Arun</given-names></name>
        <name><surname>Lediju Bell</surname><given-names>Muyinatu A.</given-names></name>
        <name><surname>Liebgott</surname><given-names>Hervé</given-names></name>
        <name><surname>Austeng</surname><given-names>Andreas</given-names></name>
        <name><surname>L⊘vstakken</surname><given-names>Lasse</given-names></name>
      </person-group>
      <article-title>The UltraSound ToolBox</article-title>
      <source>2017 IEEE international ultrasonics symposium (IUS)</source>
      <year iso-8601-date="2017">2017</year>
      <volume></volume>
      <pub-id pub-id-type="doi">10.1109/ULTSYM.2017.8092389</pub-id>
      <fpage>1</fpage>
      <lpage>4</lpage>
    </element-citation>
  </ref>
  <ref id="ref-heinisch2018MatCL">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Heinisch</surname><given-names>Philip</given-names></name>
        <name><surname>Ostaszewski</surname><given-names>Katharina</given-names></name>
      </person-group>
      <article-title>MatCL: A new easy-to use OpenCL toolbox for MathWorks Matlab</article-title>
      <source>Proceedings of the international workshop on OpenCL</source>
      <publisher-name>ACM</publisher-name>
      <publisher-loc>New York, NY, USA</publisher-loc>
      <year iso-8601-date="2018">2018</year>
      <pub-id pub-id-type="doi">10.1145/3204919.3204927</pub-id>
      <fpage>8:1</fpage>
      <lpage>8:1</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Jensen1996">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Jensen</surname><given-names>Jørgen</given-names></name>
      </person-group>
      <article-title>FIELD: A program for simulating ultrasound systems</article-title>
      <source>Medical and Biological Engineering and Computing</source>
      <year iso-8601-date="1996-01">1996</year><month>01</month>
      <volume>34</volume>
      <fpage>351</fpage>
      <lpage>352</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
