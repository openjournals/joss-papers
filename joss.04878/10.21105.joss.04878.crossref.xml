<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/5.3.1"
           xmlns:ai="http://www.crossref.org/AccessIndicators.xsd"
           xmlns:rel="http://www.crossref.org/relations.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           version="5.3.1"
           xsi:schemaLocation="http://www.crossref.org/schema/5.3.1 http://www.crossref.org/schemas/crossref5.3.1.xsd">
  <head>
    <doi_batch_id>20230209T012112-578de2dbfbf6fa34daa1698ff4ea5ef1b0d2b8c3</doi_batch_id>
    <timestamp>20230209012112</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>https://joss.theoj.org/</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>02</month>
          <year>2023</year>
        </publication_date>
        <journal_volume>
          <volume>8</volume>
        </journal_volume>
        <issue>82</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>guitarsounds: A Python package to visualize harmonic
sounds for musical instrument design</title>
        </titles>
        <contributors>
          <person_name sequence="first" contributor_role="author">
            <given_name>Olivier</given_name>
            <surname>Chabot</surname>
            <ORCID>https://orcid.org/0000-0003-3294-2812</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Louis</given_name>
            <surname>Brillon</surname>
          </person_name>
        </contributors>
        <publication_date>
          <month>02</month>
          <day>09</day>
          <year>2023</year>
        </publication_date>
        <pages>
          <first_page>4878</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.04878</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">10.5281/zenodo.7622901</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/4878</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.04878</doi>
          <resource>https://joss.theoj.org/papers/10.21105/joss.04878</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://joss.theoj.org/papers/10.21105/joss.04878.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="Librosa">
            <article_title>Librosa: Audio and music signal analysis in
Python</article_title>
            <author>McFee</author>
            <doi>10.25080/Majora-7b98e3ed-003</doi>
            <cYear>2015</cYear>
            <unstructured_citation>McFee, B., Raffel, C., Liang, D.,
Ellis, D., McVicar, M., Battenberg, E., &amp; Nieto, O. (2015). Librosa:
Audio and music signal analysis in Python. 18–24.
https://doi.org/10.25080/Majora-7b98e3ed-003</unstructured_citation>
          </citation>
          <citation key="sumi_classical_2008">
            <article_title>Classical guitar top board design by finite
element method modal analysis based on acoustic measurements of guitars
of different quality</article_title>
            <author>Sumi</author>
            <journal_title>Acoustical Science and
Technology</journal_title>
            <issue>6</issue>
            <volume>29</volume>
            <doi>10.1250/ast.29.381</doi>
            <issn>1347-5177</issn>
            <cYear>2008</cYear>
            <unstructured_citation>Sumi, T., &amp; Ono, T. (2008).
Classical guitar top board design by finite element method modal
analysis based on acoustic measurements of guitars of different quality.
Acoustical Science and Technology, 29(6), 381–383.
https://doi.org/10.1250/ast.29.381</unstructured_citation>
          </citation>
          <citation key="virtanen_scipy_2020">
            <article_title>SciPy 1.0: Fundamental algorithms for
scientific computing in Python</article_title>
            <author>Virtanen</author>
            <journal_title>Nature Methods</journal_title>
            <issue>3</issue>
            <volume>17</volume>
            <doi>10.1038/s41592-019-0686-2</doi>
            <issn>1548-7105</issn>
            <cYear>2020</cYear>
            <unstructured_citation>Virtanen, P., Gommers, R., Oliphant,
T. E., Haberland, M., Reddy, T., Cournapeau, D., Burovski, E., Peterson,
P., Weckesser, W., Bright, J., Walt, S. J. van der, Brett, M., Wilson,
J., Millman, K. J., Mayorov, N., Nelson, A. R. J., Jones, E., Kern, R.,
Larson, E., … Mulbregt, P. van. (2020). SciPy 1.0: Fundamental
algorithms for scientific computing in Python. Nature Methods, 17(3),
261–272.
https://doi.org/10.1038/s41592-019-0686-2</unstructured_citation>
          </citation>
          <citation key="harris_array_2020">
            <article_title>Array programming with NumPy</article_title>
            <author>Harris</author>
            <journal_title>Nature</journal_title>
            <issue>7825</issue>
            <volume>585</volume>
            <doi>10.1038/s41586-020-2649-2</doi>
            <issn>1476-4687</issn>
            <cYear>2020</cYear>
            <unstructured_citation>Harris, C. R., Millman, K. J., Walt,
S. J. van der, Gommers, R., Virtanen, P., Cournapeau, D., Wieser, E.,
Taylor, J., Berg, S., Smith, N. J., Kern, R., Picus, M., Hoyer, S.,
Kerkwijk, M. H. van, Brett, M., Haldane, A., Río, J. F. del, Wiebe, M.,
Peterson, P., … Oliphant, T. E. (2020). Array programming with NumPy.
Nature, 585(7825), 357–362.
https://doi.org/10.1038/s41586-020-2649-2</unstructured_citation>
          </citation>
          <citation key="hunter_matplotlib_2007">
            <article_title>Matplotlib: A 2D graphics
environment</article_title>
            <author>Hunter</author>
            <journal_title>Computing in Science &amp;
Engineering</journal_title>
            <issue>3</issue>
            <volume>9</volume>
            <doi>10.1109/MCSE.2007.55</doi>
            <issn>1558-366X</issn>
            <cYear>2007</cYear>
            <unstructured_citation>Hunter, J. D. (2007). Matplotlib: A
2D graphics environment. Computing in Science &amp; Engineering, 9(3),
90–95. https://doi.org/10.1109/MCSE.2007.55</unstructured_citation>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
