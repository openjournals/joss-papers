<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/5.3.1"
           xmlns:ai="http://www.crossref.org/AccessIndicators.xsd"
           xmlns:rel="http://www.crossref.org/relations.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           version="5.3.1"
           xsi:schemaLocation="http://www.crossref.org/schema/5.3.1 http://www.crossref.org/schemas/crossref5.3.1.xsd">
  <head>
    <doi_batch_id>20250917195448-2f1ebaba786612596f3e8cbe8bcf0087f3e76482</doi_batch_id>
    <timestamp>20250917195448</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>https://joss.theoj.org</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>09</month>
          <year>2025</year>
        </publication_date>
        <journal_volume>
          <volume>10</volume>
        </journal_volume>
        <issue>113</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>Enabling the Verification and Formalization of Hybrid Quantum-Classical Computing with OpenQASM 3.0 compatible QASM-TS 2.0</title>
        </titles>
        <contributors>
          <person_name sequence="first" contributor_role="author">
            <given_name>Sean</given_name>
            <surname>Kim</surname>
            <affiliations>
              <institution><institution_name>George Washington University, United States of America</institution_name></institution>
            </affiliations>
            <ORCID>https://orcid.org/0009-0006-1223-1895</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Marcus</given_name>
            <surname>Edwards</surname>
            <affiliations>
              <institution><institution_name>University of British Columbia, Canada</institution_name></institution>
            </affiliations>
            <ORCID>https://orcid.org/0000-0001-6591-9585</ORCID>
          </person_name>
        </contributors>
        <publication_date>
          <month>09</month>
          <day>17</day>
          <year>2025</year>
        </publication_date>
        <pages>
          <first_page>8696</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.08696</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">10.5281/zenodo.17144767</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/8696</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.08696</doi>
          <resource>https://joss.theoj.org/papers/10.21105/joss.08696</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://joss.theoj.org/papers/10.21105/joss.08696.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="di_matteo_abstraction_2024">
            <article_title>An abstraction hierarchy toward productive quantum programming</article_title>
            <author>Di Matteo</author>
            <journal_title>IEEE International Conference on Quantum Computing and Engineering (QCE) 2024</journal_title>
            <doi>10.1109/qce60285.2024.00117</doi>
            <cYear>2024</cYear>
            <unstructured_citation>Di Matteo, O., Nunez-Corrales, S., Stechly, M., Reinhardt, S. P., &amp; Mattson, T. (2024). An abstraction hierarchy toward productive quantum programming. In IEEE International Conference on Quantum Computing and Engineering (QCE) 2024. https://doi.org/10.1109/qce60285.2024.00117</unstructured_citation>
          </citation>
          <citation key="Cross_2022">
            <article_title>OpenQASM 3: A broader and deeper quantum assembly language</article_title>
            <author>Cross</author>
            <journal_title>ACM Transactions on Quantum Computing</journal_title>
            <issue>3</issue>
            <volume>3</volume>
            <doi>10.1145/3505636</doi>
            <issn>2643-6817</issn>
            <cYear>2022</cYear>
            <unstructured_citation>Cross, A., Javadi-Abhari, A., Alexander, T., De Beaudrap, N., Bishop, L. S., Heidel, S., Ryan, C. A., Sivarajah, P., Smolin, J., Gambetta, J. M., &amp; Johnson, B. R. (2022). OpenQASM 3: A broader and deeper quantum assembly language. ACM Transactions on Quantum Computing, 3(3), 1–50. https://doi.org/10.1145/3505636</unstructured_citation>
          </citation>
          <citation key="seidel2024qrispframeworkcompilablehighlevel">
            <article_title>Qrisp: A framework for compilable high-level programming of gate-based quantum computers</article_title>
            <author>Seidel</author>
            <cYear>2024</cYear>
            <unstructured_citation>Seidel, R., Bock, S., Zander, R., Petrič, M., Steinmann, N., Tcholtchev, N., &amp; Hauswirth, M. (2024). Qrisp: A framework for compilable high-level programming of gate-based quantum computers. https://arxiv.org/abs/2406.14792</unstructured_citation>
          </citation>
          <citation key="shammah_open_2024">
            <article_title>Open hardware solutions in quantum technology</article_title>
            <author>Shammah</author>
            <journal_title>APL Quantum</journal_title>
            <issue>1</issue>
            <volume>1</volume>
            <doi>10.1063/5.0180987</doi>
            <issn>2835-0103</issn>
            <cYear>2024</cYear>
            <unstructured_citation>Shammah, N., Roy, A. S., Almudever, C. G., Bourdeauducq, S., Butko, A., Cancelo, G., Clark, S. M., Heinsoo, J., Henriet, L., Huang, G., Jurczak, C., Kotilahti, J., Landra, A., LaRose, R., Mari, A., Nowrouzi, K., Ockeloen-Korppi, C., Prawiroatmodjo, G., Siddiqi, I., &amp; Zeng, W. J. (2024). Open hardware solutions in quantum technology. APL Quantum, 1(1), 011501. https://doi.org/10.1063/5.0180987</unstructured_citation>
          </citation>
          <citation key="edwards_three_2023">
            <article_title>Three quantum programming language parser implementations for the web</article_title>
            <author>Edwards</author>
            <doi>10.48550/arXiv.2310.10802</doi>
            <cYear>2023</cYear>
            <unstructured_citation>Edwards, M. (2023). Three quantum programming language parser implementations for the web. arXiv. https://doi.org/10.48550/arXiv.2310.10802</unstructured_citation>
          </citation>
          <citation key="noauthor_qasm_grammar_nodate">
            <article_title>OpenQASM 3.0 Grammar</article_title>
            <unstructured_citation>OpenQASM 3.0 Grammar. (n.d.). Retrieved November 24, 2024, from https://openqasm.com/grammar/index.html</unstructured_citation>
          </citation>
          <citation key="noauthor_qec_nodate">
            <article_title>QEC Decoder Toolkit - H-Series</article_title>
            <unstructured_citation>QEC Decoder Toolkit - H-Series. (n.d.). Retrieved November 20, 2024, from https://www.quantinuum.com/blog/making-fault-tolerance-a-reality-introducing-our-qec-decoder-toolkit</unstructured_citation>
          </citation>
          <citation key="qdmi">
            <article_title>QDMI – Quantum Device Management Interface: A standardized interface for quantum computing platforms</article_title>
            <author>Wille</author>
            <journal_title>IEEE international conference on quantum computing and engineering (QCE)</journal_title>
            <cYear>2024</cYear>
            <unstructured_citation>Wille, R., Schmid, L., Stade, Y., Echavarria, J., Schulz, M., Schulz, L., &amp; Burgholzer, L. (2024). QDMI – Quantum Device Management Interface: A standardized interface for quantum computing platforms. IEEE International Conference on Quantum Computing and Engineering (QCE).</unstructured_citation>
          </citation>
          <citation key="exman_verification_2024">
            <article_title>Verification and validation of quantum software</article_title>
            <author>Fortunato</author>
            <journal_title>Quantum Software</journal_title>
            <doi>10.1007/978-3-031-64136-7_5</doi>
            <isbn>978-3-031-64136-7</isbn>
            <cYear>2024</cYear>
            <unstructured_citation>Fortunato, D., Jiménez-Navajas, L., Campos, J., &amp; Abreu, R. (2024). Verification and validation of quantum software. In I. Exman, R. Pérez-Castillo, M. Piattini, &amp; M. Felderer (Eds.), Quantum Software (pp. 93–123). Springer Nature Switzerland. https://doi.org/10.1007/978-3-031-64136-7_5</unstructured_citation>
          </citation>
          <citation key="zhao_qchecker_2023">
            <article_title>QChecker: Detecting bugs in quantum programs via static analysis</article_title>
            <author>Zhao</author>
            <doi>10.48550/arXiv.2304.04387</doi>
            <cYear>2023</cYear>
            <unstructured_citation>Zhao, P., Wu, X., Li, Z., &amp; Zhao, J. (2023). QChecker: Detecting bugs in quantum programs via static analysis. arXiv. https://doi.org/10.48550/arXiv.2304.04387</unstructured_citation>
          </citation>
          <citation key="osaka_2025">
            <article_title>OQTOPUS cloud</article_title>
            <author>Aso</author>
            <cYear>2024</cYear>
            <unstructured_citation>Aso, N., Feluś, K., Gaj, A., Gokita, S., Góralczyk, S., Kakuko, N., Masumoto, N., Miyaji, K., Miyanaga, T., Mori, T., Noda, K., Tsukano, S., Ymaguchi, M., &amp; Żybort, D. (2024). OQTOPUS cloud. https://github.com/oqtopus-team/oqtopus-cloud</unstructured_citation>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
