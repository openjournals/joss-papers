<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6969</article-id>
<article-id pub-id-type="doi">10.21105/joss.06969</article-id>
<title-group>
<article-title>pyPLNmodels: A Python package to analyze multivariate
high-dimensional count data</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0001-3960-7120</contrib-id>
<name>
<surname>Batardiere</surname>
<given-names>Bastien</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Kwon</surname>
<given-names>Joon</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Chiquet</surname>
<given-names>Julien</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Université Paris-Saclay, AgroParisTech, INRAE, UMR MIA
Paris-Saclay</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-06-28">
<day>28</day>
<month>6</month>
<year>2023</year>
</pub-date>
<volume>9</volume>
<issue>104</issue>
<fpage>6969</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2024</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>count data</kwd>
<kwd>multivariate</kwd>
<kwd>genomics</kwd>
<kwd>ecology</kwd>
<kwd>high-dimension</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>High dimensional count data are complex to analyze as is, and
  normalization must be performed, but standard normalization does not
  fit the characteristics of count data. The Poisson-Log Normal (PLN)
  (<xref alt="Aitchison &amp; Ho, 1989" rid="ref-PLN" ref-type="bibr">Aitchison
  &amp; Ho, 1989</xref>) and its Principal Component Analysis variant
  PLN-PCA
  (<xref alt="Chiquet et al., 2018" rid="ref-PLNPCA" ref-type="bibr">Chiquet
  et al., 2018</xref>) are two-sided latent variable models allowing
  both suitable normalization and analysis of multivariate count data,
  implemented in this package.</p>
  <p>Consider <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf Y]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>𝐘</mml:mi></mml:math></alternatives></inline-formula>
  a count matrix consisting of <inline-formula><alternatives>
  <tex-math><![CDATA[n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>
  rows and <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula>
  columns. It is assumed that each individual
  <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf Y_i]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>𝐘</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula>,
  that is the <inline-formula><alternatives>
  <tex-math><![CDATA[i^{\text{th}}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msup><mml:mi>i</mml:mi><mml:mtext mathvariant="normal">th</mml:mtext></mml:msup></mml:math></alternatives></inline-formula>
  row of <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf Y]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>𝐘</mml:mi></mml:math></alternatives></inline-formula>,
  is independent of the others and follows a Poisson lognormal
  distribution: <disp-formula><alternatives>
  <tex-math><![CDATA[\mathbf Y_{i}\sim \mathcal P(\exp(\mathbf Z_{i})), \quad \mathbf Z_i \sim
  \mathcal N(\mathbf o_i + \mathbf B ^{\top} \mathbf x_i, \boldsymbol{\Sigma}),]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>𝐘</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∼</mml:mo><mml:mi>𝒫</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mo>exp</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>𝐙</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="1.0em"></mml:mspace><mml:msub><mml:mi>𝐙</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∼</mml:mo><mml:mi>𝒩</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>𝐨</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msup><mml:mi>𝐁</mml:mi><mml:mi>⊤</mml:mi></mml:msup><mml:msub><mml:mi>𝐱</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>𝚺</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
  where <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf x_i \in \mathbb R^d]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>𝐱</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mi>ℝ</mml:mi><mml:mi>d</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf o_i \in \mathbb R^p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>𝐨</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mi>ℝ</mml:mi><mml:mi>p</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>
  are user-specified covariates and offsets (with default values if not
  available). The <inline-formula><alternatives>
  <tex-math><![CDATA[\mathcal P]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>𝒫</mml:mi></mml:math></alternatives></inline-formula>
  (respectively <inline-formula><alternatives>
  <tex-math><![CDATA[\mathcal N]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>𝒩</mml:mi></mml:math></alternatives></inline-formula>)
  denotes a Poisson (respectively Normal) distribution. The matrix
  <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf B]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>𝐁</mml:mi></mml:math></alternatives></inline-formula>
  is a <inline-formula><alternatives>
  <tex-math><![CDATA[d\times p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>d</mml:mi><mml:mo>×</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  matrix of regression coefficients and <inline-formula><alternatives>
  <tex-math><![CDATA[\boldsymbol{\Sigma}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>𝚺</mml:mi></mml:math></alternatives></inline-formula>
  is a <inline-formula><alternatives>
  <tex-math><![CDATA[p\times p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>p</mml:mi><mml:mo>×</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  covariance matrix. The variables <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf Z_i]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>𝐙</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula>,
  known as <italic>latent variables</italic>, are not directly
  observable. However, from a statistical perspective, they provide more
  informative insights compared to the observed variables
  <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf Y_i]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>𝐘</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula>.
  The unknown parameters <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf B]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>𝐁</mml:mi></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[\boldsymbol{\Sigma}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>𝚺</mml:mi></mml:math></alternatives></inline-formula>
  facilitates the analysis of dependencies between variables and the
  impact of covariates. The primary objective of the package is to
  estimate these parameters and retrieve the latent variables
  <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf Z_i]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>𝐙</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula>.
  Extracting those latent variables may serve as a normalization
  procedure adequate to count data.</p>
  <p>The only difference between the PLN and PLN-PCA models is that the
  latter assumes a low-rank structure on the covariance matrix, which is
  helpful for dimension reduction. Other variants of the PLN model
  exist, which are detailed in the work of Chiquet et al.
  (<xref alt="2021b" rid="ref-PLNmodels" ref-type="bibr">2021b</xref>).</p>
</sec>
<sec id="fields-of-applications-and-functionalities">
  <title>Fields of applications and functionalities</title>
  <p>Possible fields of applications include</p>
  <list list-type="bullet">
    <list-item>
      <p>Ecology: Joint analysis of species abundances is a common task
      in ecology, whose goal is to understand the interaction between
      species to characterize a community, given a matrix of abundances
      in different sites with abundances given by
      <disp-formula><alternatives>
      <tex-math><![CDATA[Y_{ij} = \text{number of species } j \text{ observed in site } i .]]></tex-math>
      <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>Y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mtext mathvariant="normal">number of species </mml:mtext><mml:mspace width="0.333em"></mml:mspace></mml:mrow><mml:mi>j</mml:mi><mml:mrow><mml:mspace width="0.333em"></mml:mspace><mml:mtext mathvariant="normal"> observed in site </mml:mtext><mml:mspace width="0.333em"></mml:mspace></mml:mrow><mml:mi>i</mml:mi><mml:mi>.</mml:mi></mml:mrow></mml:math></alternatives></disp-formula>
      Additionally, the PLN models seek to explain the impact of
      covariates (when available), such as temperature, altitude, and
      other relevant factors on the observed abundances.</p>
    </list-item>
    <list-item>
      <p>Genomics: High throughput sequencing technologies now allow
      quantification, at the level of individual cells, various measures
      from the genome of humans, animals, and plants. Single-cell
      Ribonucleic Acid sequencing (scRNA-seq) is one of those and
      measures the expression of genes at the level of individual cells.
      For cell <inline-formula><alternatives>
      <tex-math><![CDATA[i]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>i</mml:mi></mml:math></alternatives></inline-formula>
      and gene <inline-formula><alternatives>
      <tex-math><![CDATA[j]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>j</mml:mi></mml:math></alternatives></inline-formula>,
      the counts <inline-formula><alternatives>
      <tex-math><![CDATA[Y_{ij}]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>Y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>
      is given by <disp-formula><alternatives>
      <tex-math><![CDATA[Y_{ij} = \text{number of times gene } j \text{ is expressed in cell } i.]]></tex-math>
      <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>Y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mtext mathvariant="normal">number of times gene </mml:mtext><mml:mspace width="0.333em"></mml:mspace></mml:mrow><mml:mi>j</mml:mi><mml:mrow><mml:mspace width="0.333em"></mml:mspace><mml:mtext mathvariant="normal"> is expressed in cell </mml:mtext><mml:mspace width="0.333em"></mml:mspace></mml:mrow><mml:mi>i</mml:mi><mml:mi>.</mml:mi></mml:mrow></mml:math></alternatives></disp-formula>
      One of the challenges with scRNA-seq data is managing the high
      dimensionality, necessitating dimension reduction techniques
      suitable to count data.</p>
    </list-item>
  </list>
  <p>The PLN and PLN-PCA variants are implemented in the
  <monospace>pyPLNmodels</monospace> package introduced here, whose main
  functionalities are:</p>
  <list list-type="bullet">
    <list-item>
      <p>Normalize count data to obtain more valuable data,</p>
    </list-item>
    <list-item>
      <p>Analyze the significance of each variable and their
      correlation,</p>
    </list-item>
    <list-item>
      <p>Perform regression when covariates are available,</p>
    </list-item>
    <list-item>
      <p>Reduce the number of features with PLN-PCA.</p>
    </list-item>
  </list>
  <p>The
  <monospace>pyPLNmodels</monospace><xref ref-type="fn" rid="fn1">1</xref>
  package has been designed to efficiently process extensive datasets in
  a reasonable time and incorporates GPU acceleration for better
  scalability.</p>
  <p>To illustrate the primary model’s interest, we display below a
  visualization of the first two principal components when Principal
  Component Analysis (PCA) is performed with the PLN-PCA model (left,
  ours) and standard PCA on the log normalized data (right). The data
  considered is the <monospace>scMARK</monospace> benchmark
  (<xref alt="Diaz-Mejia, 2021" rid="ref-scMark" ref-type="bibr">Diaz-Mejia,
  2021</xref>) described in the benchmark section. We kept 1000 samples
  for illustration purposes. The computational time for fitting PLN-PCA
  is 23 seconds (on GPU), whereas standard PCA requires 0.7 second.</p>
  <fig>
    <caption><p>PLN-PCA (left, ours) and standard PCA on log normalized
    data (right). Each cell is identified by its respective cell type.
    This categorization is done solely to demonstrate the method’s
    ability to differentiate between various cell types. Unlike the
    standard Principal Component Analysis (PCA), which fails to
    distinguish between different cell types, the PLN-PCA method is
    capable of doing so.</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="plnpca_vs_pca_last.png" />
  </fig>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>While the R-package <monospace>PLNmodels</monospace>
  (<xref alt="Chiquet et al., 2021a" rid="ref-plnmodels_package" ref-type="bibr">Chiquet
  et al., 2021a</xref>) implements PLN models including some variants
  (<xref alt="Chiquet et al., 2021b" rid="ref-PLNmodels" ref-type="bibr">Chiquet
  et al., 2021b</xref>), the Python package
  <monospace>pyPLNmodels</monospace> based on
  <monospace>PyTorch</monospace>
  (<xref alt="Paszke et al., 2019" rid="ref-Pytorch" ref-type="bibr">Paszke
  et al., 2019</xref>) has been built to handle large datasets of count
  data, such as scRNA-seq data. Real-world scRNA-seq datasets typically
  involve thousands of cells (<inline-formula><alternatives>
  <tex-math><![CDATA[n \approx 20000]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>n</mml:mi><mml:mo>≈</mml:mo><mml:mn>20000</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>)
  with thousands of genes (<inline-formula><alternatives>
  <tex-math><![CDATA[\approx 20000]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo>≈</mml:mo><mml:mn>20000</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>),
  resulting in a matrix of size <inline-formula><alternatives>
  <tex-math><![CDATA[\approx
  20000 \times 20000]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo>≈</mml:mo><mml:mn>20000</mml:mn><mml:mo>×</mml:mo><mml:mn>20000</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>.</p>
  <p>The <monospace>statsmodels</monospace>
  (<xref alt="Seabold &amp; Perktold, 2010" rid="ref-statsmodels" ref-type="bibr">Seabold
  &amp; Perktold, 2010</xref>) Python package provides classes and
  functions for the estimation of many different statistical models, as
  well as for conducting statistical tests and statistical data
  exploration. Notably, it handles count data through the Generalized
  Linear Model class implementations
  <monospace>PoissonBayesMixedGLM</monospace> and
  <monospace>BinomialBayesMixedGLM</monospace>. We stand out from this
  package by allowing covariance between features and performing
  Principal Component Analysis suitable to count data.</p>
  <p>The R package <monospace>GLLVM</monospace> package is designed for
  fitting Generalized Linear Latent Variable Models. It allows for
  flexible modeling of multivariate response data, accommodating both
  continuous and discrete responses. Compared to the
  <monospace>pyPLNmodels</monospace> package, it offers a broader scope
  of modeling capabilities, enabling the incorporation of Poisson
  distribution as well as Binomial or Negative Binomial distributions
  and an additional zero-inflation component. However, its scalability
  is notably inferior to our proposed methodology. Our approach,
  specifically the PLN-PCA model, demonstrates superior scalability,
  effectively accommodating datasets with tens of thousands of variables
  and the PLN model handles couple thousands of variables within a
  reasonable computational timeframe. In contrast,
  <monospace>GLLVM</monospace> struggles to scale beyond a few hundred
  variables within practical computational limits.</p>
</sec>
<sec id="benchmark">
  <title>Benchmark</title>
  <p>We conducted a comparison using the following configurations:</p>
  <list list-type="bullet">
    <list-item>
      <p>PLN and PLN-PCA models fitted with
      <monospace>pyPLNmodels</monospace> on CPU, referred to as
      <bold>py-PLN-CPU</bold> and <bold>py-PLN-PCA-CPU</bold>
      respectively.</p>
    </list-item>
    <list-item>
      <p>PLN and PLN-PCA models fitted with
      <monospace>pyPLNmodels</monospace> on GPU, referred to as
      <bold>py-PLN-GPU</bold> and <bold>py-PLN-PCA-GPU</bold>
      respectively.</p>
    </list-item>
    <list-item>
      <p>PLN and PLN-PCA models fitted with
      <monospace>PLNmodels</monospace> on CPU, referred to as
      <bold>R-PLN</bold> and <bold>R-PLN-PCA</bold> respectively.</p>
    </list-item>
    <list-item>
      <p>The <monospace>GLLVM</monospace> model with Poisson distributed
      responses, fitted on CPU, referred to as <bold>GLLVM</bold>.</p>
    </list-item>
  </list>
  <p>These models were tested on the <monospace>scMARK</monospace>
  dataset, a benchmark for scRNA data, which contains 19998 cell samples
  and 14059 gene variables. We plotted the fitting time for these models
  against an increasing number of gene variables, ranging from
  <inline-formula><alternatives>
  <tex-math><![CDATA[5]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>5</mml:mn></mml:math></alternatives></inline-formula>
  to <inline-formula><alternatives>
  <tex-math><![CDATA[14059]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>14059</mml:mn></mml:math></alternatives></inline-formula>.
  Additionally, we varied the number of cell samples at
  <inline-formula><alternatives>
  <tex-math><![CDATA[n = 100, 1000, 19998]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>100</mml:mn><mml:mo>,</mml:mo><mml:mn>1000</mml:mn><mml:mo>,</mml:mo><mml:mn>19998</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>.
  We used <inline-formula><alternatives>
  <tex-math><![CDATA[q =5]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>q</mml:mi><mml:mo>=</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
  Principal Components when fitting each PLN-PCA model and the number of
  latent variables LV=<inline-formula><alternatives>
  <tex-math><![CDATA[2]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>2</mml:mn></mml:math></alternatives></inline-formula>
  for the <monospace>GLLVM</monospace> model. For each model, the
  fitting process was halted if the running time exceeded 10,000
  seconds. The computational resources utilized for this study include a
  machine equipped with a CPU boasting 64 GB of RAM and 32 cores, in
  addition to a GPU (RTX A5000) furnished with 24 GB of RAM. We were
  unable to run <monospace>GLLVM</monospace> for
  <inline-formula><alternatives>
  <tex-math><![CDATA[n = 19998]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>19998</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
  due to CPU memory limitations. Similarly,
  <monospace>py-PLN-PCA-GPU</monospace> could not be run when
  <inline-formula><alternatives>
  <tex-math><![CDATA[n=19998]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>19998</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[p\geq13000]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>p</mml:mi><mml:mo>≥</mml:mo><mml:mn>13000</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
  as it exceeded the GPU memory capacity.</p>
  <fig>
    <caption><p>Running time analysis on the scMARK
    benchmark.</p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="plots_benchmark.pdf" />
  </fig>
  <p>Each package uses variational inference
  (<xref alt="Blei et al., 2017" rid="ref-blei2017variational" ref-type="bibr">Blei
  et al., 2017</xref>) to maximize an Evidence Lower Bound (ELBO), which
  serves as an approximation to the model’s log-likelihood. Variational
  inference aims to approximate the posterior distribution of the latent
  variables by minimizing the divergence between the posterior and a
  variational distribution. To maximize the ELBO, all of the methods use
  gradient ascent. The <monospace>GLLVM</monospace> uses the automatic
  differentiation of Template Model Builder (TMB) library
  (<xref alt="Kristensen et al., 2016" rid="ref-tmb" ref-type="bibr">Kristensen
  et al., 2016</xref>) with a <monospace>C++</monospace> backend.
  <monospace>PLNmodels</monospace> uses C++ backend along with
  <monospace>nlopt</monospace>
  (<xref alt="Johnson, 2007" rid="ref-nlopt" ref-type="bibr">Johnson,
  2007</xref>) optimization library, while
  <monospace>pyPLNmodels</monospace> leverages the automatic
  differentiation from <monospace>PyTorch</monospace> to compute the
  gradients of the ELBO. Each PLN-PCA model is estimated using
  comparable variational inference methods. However, the variational
  approximation for the PLN model in the
  <monospace>pyPLNmodels</monospace> version is more efficient than its
  counterpart in <monospace>PLNmodels</monospace>.</p>
</sec>
<sec id="ongoing-work">
  <title>Ongoing work</title>
  <p>A zero-inflated version of the PLN model is currently under
  development, with a preprint
  (<xref alt="Batardière et al., 2024" rid="ref-PLNzero" ref-type="bibr">Batardière
  et al., 2024</xref>) expected to be published shortly.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The authors would like to thank Jean-Benoist Léger for the time
  spent giving precious advice on how to build a proper Python
  package.</p>
</sec>
<sec id="fundings">
  <title>Fundings</title>
  <p>Bastien Bartardière and Julien Chiquet are supported by the French
  ANR grant ANR-18-CE45-0023 Statistics and Machine Learning for Single
  Cell Genomics (SingleStatOmics).</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-Pytorch">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Paszke</surname><given-names>Adam</given-names></name>
        <name><surname>Gross</surname><given-names>Sam</given-names></name>
        <name><surname>Massa</surname><given-names>Francisco</given-names></name>
        <name><surname>Lerer</surname><given-names>Adam</given-names></name>
        <name><surname>Bradbury</surname><given-names>James</given-names></name>
        <name><surname>Chanan</surname><given-names>Gregory</given-names></name>
        <name><surname>Killeen</surname><given-names>Trevor</given-names></name>
        <name><surname>Lin</surname><given-names>Zeming</given-names></name>
        <name><surname>Gimelshein</surname><given-names>Natalia</given-names></name>
        <name><surname>Antiga</surname><given-names>Luca</given-names></name>
        <name><surname>Desmaison</surname><given-names>Alban</given-names></name>
        <name><surname>Kopf</surname><given-names>Andreas</given-names></name>
        <name><surname>Yang</surname><given-names>Edward</given-names></name>
        <name><surname>DeVito</surname><given-names>Zachary</given-names></name>
        <name><surname>Raison</surname><given-names>Martin</given-names></name>
        <name><surname>Tejani</surname><given-names>Alykhan</given-names></name>
        <name><surname>Chilamkurthy</surname><given-names>Sasank</given-names></name>
        <name><surname>Steiner</surname><given-names>Benoit</given-names></name>
        <name><surname>Fang</surname><given-names>Lu</given-names></name>
        <name><surname>Bai</surname><given-names>Junjie</given-names></name>
        <name><surname>Chintala</surname><given-names>Soumith</given-names></name>
      </person-group>
      <article-title>PyTorch: An imperative style, high-performance deep learning library</article-title>
      <source>Advances in neural information processing systems 32</source>
      <year iso-8601-date="2019">2019</year>
      <uri>http://papers.neurips.cc/paper/9015-pytorch-an-imperative-style-high-performance-deep-learning-library.pdf</uri>
    </element-citation>
  </ref>
  <ref id="ref-PLNmodels">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Chiquet</surname><given-names>Julien</given-names></name>
        <name><surname>Mariadassou</surname><given-names>Mahendra</given-names></name>
        <name><surname>Robin</surname><given-names>Stéphane</given-names></name>
      </person-group>
      <article-title>The Poisson-lognormal model as a versatile framework for the joint analysis of species abundances</article-title>
      <source>Frontiers in Ecology and Evolution</source>
      <year iso-8601-date="2021">2021</year>
      <pub-id pub-id-type="doi">10.3389/fevo.2021.588292</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-statsmodels">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Seabold</surname><given-names>Skipper</given-names></name>
        <name><surname>Perktold</surname><given-names>Josef</given-names></name>
      </person-group>
      <article-title>Statsmodels: Econometric and statistical modeling with python</article-title>
      <source>9th python in science conference</source>
      <year iso-8601-date="2010">2010</year>
      <pub-id pub-id-type="doi">10.25080/majora-92bf1922-011</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-scMark">
    <element-citation publication-type="dataset">
      <person-group person-group-type="author">
        <name><surname>Diaz-Mejia</surname><given-names>Javier</given-names></name>
      </person-group>
      <article-title>ScMARK an ’MNIST’ like benchmark to evaluate and optimize models for unifying scRNA data</article-title>
      <year iso-8601-date="2021">2021</year>
      <pub-id pub-id-type="doi">10.5281/zenodo.5765804</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-PLN">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Aitchison</surname><given-names>J.</given-names></name>
        <name><surname>Ho</surname><given-names>C. H.</given-names></name>
      </person-group>
      <article-title>The multivariate Poisson-log normal distribution</article-title>
      <source>Biometrika</source>
      <year iso-8601-date="1989-12">1989</year><month>12</month>
      <issn>0006-3444</issn>
      <pub-id pub-id-type="doi">10.1093/biomet/76.4.643</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-PLNPCA">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Chiquet</surname><given-names>Julien</given-names></name>
        <name><surname>Mariadassou</surname><given-names>Mahendra</given-names></name>
        <name><surname>Robin</surname><given-names>Stéphane</given-names></name>
      </person-group>
      <article-title>Variational inference for probabilistic Poisson PCA</article-title>
      <source>The Annals of Applied Statistics</source>
      <year iso-8601-date="2018">2018</year>
      <uri>https://arxiv.org/abs/1703.06633</uri>
      <pub-id pub-id-type="doi">10.1214/18-aoas1177</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-PLNzero">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Batardière</surname><given-names>Bastien</given-names></name>
        <name><surname>Chiquet</surname><given-names>Julien</given-names></name>
        <name><surname>Gindraud</surname><given-names>François</given-names></name>
        <name><surname>Mariadassou</surname><given-names>Mahendra</given-names></name>
      </person-group>
      <article-title>Zero-inflation in the multivariate Poisson lognormal family</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://arxiv.org/abs/2405.14711</uri>
      <pub-id pub-id-type="doi">10.21203/rs.3.rs-4637786/v1</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-nlopt">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Johnson</surname><given-names>Steven G.</given-names></name>
      </person-group>
      <article-title>The NLopt nonlinear-optimization package</article-title>
      <publisher-name>https://github.com/stevengj/nlopt</publisher-name>
      <year iso-8601-date="2007">2007</year>
    </element-citation>
  </ref>
  <ref id="ref-blei2017variational">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Blei</surname><given-names>David M</given-names></name>
        <name><surname>Kucukelbir</surname><given-names>Alp</given-names></name>
        <name><surname>McAuliffe</surname><given-names>Jon D</given-names></name>
      </person-group>
      <article-title>Variational inference: A review for statisticians</article-title>
      <source>Journal of the American statistical Association</source>
      <year iso-8601-date="2017">2017</year>
      <uri>http://dx.doi.org/10.1080/01621459.2017.1285773</uri>
      <pub-id pub-id-type="doi">10.1080/01621459.2017.1285773</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-tmb">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kristensen</surname><given-names>Kasper</given-names></name>
        <name><surname>Nielsen</surname><given-names>Anders</given-names></name>
        <name><surname>Berg</surname><given-names>Casper W.</given-names></name>
        <name><surname>Skaug</surname><given-names>Hans</given-names></name>
        <name><surname>Bell</surname><given-names>Bradley M.</given-names></name>
      </person-group>
      <article-title>TMB: Automatic differentiation and laplace approximation</article-title>
      <source>Journal of Statistical Software</source>
      <year iso-8601-date="2016">2016</year>
      <pub-id pub-id-type="doi">10.18637/jss.v070.i05</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-plnmodels_package">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Chiquet</surname><given-names>Julien</given-names></name>
        <name><surname>Mariadassou</surname><given-names>Mahendra</given-names></name>
        <name><surname>Robin</surname><given-names>Stephane</given-names></name>
      </person-group>
      <article-title>PLNmodels: Poisson lognormal models</article-title>
      <year iso-8601-date="2021">2021</year>
      <uri>https://cran.r-project.org/web/packages/PLNmodels/index.html</uri>
      <pub-id pub-id-type="doi">10.32614/cran.package.plnmodels</pub-id>
    </element-citation>
  </ref>
</ref-list>
<fn-group>
  <fn id="fn1">
    <label>1</label><p>https://github.com/PLN-team/pyPLNmodels</p>
  </fn>
</fn-group>
</back>
</article>
