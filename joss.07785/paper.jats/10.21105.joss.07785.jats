<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">7785</article-id>
<article-id pub-id-type="doi">10.21105/joss.07785</article-id>
<title-group>
<article-title>Topography-based surface water modeling in Julia, with
support for infiltration and temporal developments</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-2245-9512</contrib-id>
<name>
<surname>Andersen</surname>
<given-names>Odd A.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>SINTEF Digital, Dept. of Mathematics and Cybernetics,
Norway</institution>
</institution-wrap>
</aff>
</contrib-group>
<volume>10</volume>
<issue>109</issue>
<fpage>7785</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>stormwater</kwd>
<kwd>topographical analysis</kwd>
<kwd>flash flooding</kwd>
<kwd>Julia</kwd>
<kwd>infiltration</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>SWIM (Surface Water Integrated Modeling) is a Julia software
  package for static modeling and prediction of surface water and urban
  flooding based on analysis of terrain topography, terrain properties,
  and infrastructure.</p>
  <p>SWIM consists of a collection of algorithms for analyzing terrain,
  identifying watershed boundaries, and providing a better understanding
  of how water accumulates and moves across the landscape. Such analyses
  are valuable for various purposes, including water resource
  management, flood modeling and mitigation, and environmental
  planning.</p>
  <p>The algorithms are based on the assumption of infinitesimal flow
  and the identification of <italic>spill points</italic>. Spill-point
  analyses are highly computationally efficient compared to tools based
  on numerical simulation, making it easy to work interactively and test
  out various scenarios and measures. SWIM offers unique functionality,
  such as simplified infiltration models for both permeable and
  impermeable surfaces, as well as the calculation of time series that
  model how water accumulates or drains over time without resorting to
  computationally intensive numerical time-stepping approaches.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The damage caused by intense rainfall in urban areas can be
  extremely costly. The stormwater problem is also becoming more severe
  due to population growth, urban densification, and increasingly
  frequent extreme weather events. The need for long-term adaptation and
  planning is therefore increasingly urgent, as is the need for adequate
  digital tools.</p>
  <p>Limitation on and lack of data often makes modeling and prediction
  of stormwater flow related to intensive rainfall challenging
  (<xref alt="Skaugen et al., 2020" rid="ref-SkaugenU003A2020" ref-type="bibr">Skaugen
  et al., 2020</xref>). Mathematical approaches to evaluate
  uncertainties
  (<xref alt="Beven, 2003" rid="ref-BevenU003A2003" ref-type="bibr">Beven,
  2003</xref>;
  <xref alt="Zhang et al., 2019" rid="ref-ZhangU003A2019" ref-type="bibr">Zhang
  et al., 2019</xref>) typically rely on the ability to run large
  numbers of simulations and scenarios. However, use of complex
  hydrological simulators
  (<xref alt="DHI, 2025" rid="ref-MIKESHE" ref-type="bibr">DHI,
  2025</xref>;
  <xref alt="Langevin, 2017" rid="ref-LangevinU003A2017" ref-type="bibr">Langevin,
  2017</xref>) are computationally very expensive and may render the
  analysis intractable for many applications and potential users.</p>
  <p>In urban areas with extensive impervious surfaces, topography is
  typically the primary driver of stormwater flow patterns and local
  accumulation of surface water. GIS-based models operate on a
  simplified premise where surface flow is solely determined by
  topography, and can provide an attractive modeling alternative
  (<xref alt="ESRI, 2024" rid="ref-ARCGIS" ref-type="bibr">ESRI,
  2024</xref>;
  <xref alt="Scalgo, 2025" rid="ref-SCALGO" ref-type="bibr">Scalgo,
  2025</xref>;
  <xref alt="Skaugen &amp; Onof, 2014" rid="ref-SkaugenU003A2014" ref-type="bibr">Skaugen
  &amp; Onof, 2014</xref>). Such models are generally easy to set up and
  run, and require considerably fewer computational resources than
  complex hydrological simulators do. However, drawbacks include:</p>
  <list list-type="bullet">
    <list-item>
      <p>Typically no ability to handle temporal developments or
      infiltration.</p>
    </list-item>
    <list-item>
      <p>Sensitive to data resolution and uncertainties.</p>
    </list-item>
    <list-item>
      <p>Lack of open-source alternatives adaptable to particular user
      or researcher needs.</p>
    </list-item>
  </list>
  <p>In response to these shortcomings, SWIM was developed as a
  computationally efficient, flexible open-source prototyping software
  library for stormwater modeling. It builds upon a GIS-based modeling
  approach, while enabling extension and generalization of the
  methodology.</p>
</sec>
<sec id="functionality">
  <title>Functionality</title>
  <p>SWIM is implemented in Julia
  (<xref alt="Bezanson et al., 2017" rid="ref-julia" ref-type="bibr">Bezanson
  et al., 2017</xref>), with computational performance as a key goal.
  Input data consists solely of raster data (2D matrices), for
  topography, terrain features, infrastructure and weather data.
  Functionality includes:</p>
  <list list-type="bullet">
    <list-item>
      <p>Static analysis, including delineating hierarchies of traps
      (lakes) and intermittent rivers, identifying corresponding
      watersheds, and estimating flow intensities across terrain.</p>
    </list-item>
    <list-item>
      <p>Integrating terrain characteristics into the analysis,
      including permanent water bodies (rivers, lakes, ocean),
      buildings, obstacles and drains.</p>
    </list-item>
    <list-item>
      <p>Simplified infiltration model that supports both permeable and
      impermeable surfaces.</p>
    </list-item>
    <list-item>
      <p>Dynamic analysis, including terrain response to precipitation
      events and infiltration over time, and routing of waters as ponds
      overflow.</p>
    </list-item>
  </list>
</sec>
<sec id="principle-of-topography-based-analysis">
  <title>Principle of topography-based analysis</title>
  <sec id="spill-regions-and-flow-graph">
    <title>Spill regions and flow graph</title>
    <p>Although input data consists of raster grids, the terrain and its
    properties is internally represented as directed graphs, which form
    the basis of analysis.</p>
    <p>The flow graph describes how water flows over the terrain from
    one node (grid cell) to the next. To create this graph from a
    digital elevation model (DEM), SWIM uses a deterministic eight-node
    (D8) single-flow direction (SFD) algorithm
    (<xref alt="Wilson et al., 2008" rid="ref-WilsonU003A2008" ref-type="bibr">Wilson
    et al., 2008</xref>) which generates a tree-structured, generally
    disconnected flow graph shown in
    <xref alt="[fig:upnode]" rid="figU003Aupnode">[fig:upnode]</xref>.
    Using the D8 algorithm, flow from a given node is always directed
    towards its steepest downhill neighbor, if any.</p>
    <fig>
      <caption><p>Spill graph generated from a small terrain grid.
      Inlet: selecting the steepest downstream neighbor (pink) of a cell
      (gray) using the D8 algorithm.
      <styled-content id="figU003Aupnode"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="spill_graph_inlet.png" />
    </fig>
    <p>Once generated, most analysis is done directly on the flow graph
    using standard graph concepts and algorithms. For instance, root
    nodes represent accumulation points in the terrain, connected
    components represent the associated watersheds, and flow intensity
    at a given node is obtained by integrating precipitation over all
    its upstream nodes.</p>
  </sec>
  <sec id="topological-structure-of-lakes-and-rivers">
    <title>Topological structure of lakes and rivers</title>
    <p>The spill graph serves as input to define a higher-level graph of
    traps (“ponds”, “lakes”) and the intermittent stream connecting
    them. Traps are delineated by identifying <italic>spill
    points</italic> (lowest elevation node along the boundary of the
    catchment area for a given accumulation point). A trap will fill up
    until its water level reaches the spillpoint, at which point it will
    overflow. Small traps typically coalesce into larger traps as they
    fill up, thereby defining a hierarchy of sub-traps and super-traps.
    An example of a <italic>trap structure graph</italic> representing
    both the upstream/downstream and the sub-trap/super-trap
    relationships between traps is shown in
    <xref alt="[fig:trap_structure]" rid="figU003Atrap_structure">[fig:trap_structure]</xref>.</p>
    <fig>
      <caption><p>An example of a trap structure graph, illustrating how
      smaller traps coalesce into larger traps, and how upstream traps
      overflow into downstream traps. An upstream trap is always a
      top-level trap spilling into a lowest-level sub-trap downstream
      (indicated with dashed blue
      lines)<styled-content id="figU003Atrap_structure"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="trap_structure.png" />
    </fig>
    <p>The concepts are illustrated on a simple synthetic surface in
    <xref alt="[fig:synthetic_matrix]" rid="figU003Asynthetic_matrix">[fig:synthetic_matrix]</xref>.
    On the upper row, the green and red traps are sub-traps of the
    orange trap, which again is an upstream trap to the blue one. On the
    lower row, we see how water gradually accumulates, making the
    sub-traps coalesce, and finally how water spills over to the
    downstream trap.</p>
    <fig>
      <caption><p>Small synthetic example of sub-traps, super-traps and
      downstream traps. The upper row shows the four traps (red, green,
      orange and blue) with their respective watersheds. The spill
      points can be seen as small black dots on the rightmost figure.
      The lower row illustrates the process of traps filling up,
      coalescing and spilling
      over.<styled-content id="figU003Asynthetic_matrix"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="synthetic_matrix.png" />
    </fig>
  </sec>
  <sec id="infiltration-and-temporal-evolution">
    <title>Infiltration and temporal evolution</title>
    <p>The routing of water across the terrain at any given time depends
    on the current state of each trap (whether it is still filling up or
    spilling over), current precipitation rate (which may vary
    spatially), and the rate of infiltration at each point. Infiltration
    at each node happens at a fixed rate (zero for impervious regions)
    capped by the node’s current inflow rate. For a given weather
    scenario, specified infiltration rates and an initial status
    (typically empty) for each trap, it is possible to construct a
    sequence of events that identifies the moment in time when each trap
    fills up, and how this influences the subsequent routing of water.
    This allows the user to determine the surface water flow and and
    extract water content of each trap at any given moment, how long it
    takes for each trap to fill up, where water currently is
    accumulating, and more.</p>
  </sec>
</sec>
<sec id="example">
  <title>Example</title>
  <p>The following brief example demonstrates the application of some
  basic SWIM functionality on real data.
  <xref alt="[fig:vulkan_model]" rid="figU003Avulkan_model">[fig:vulkan_model]</xref>
  presents a DEM of the Vulkan neighborhood around the Akerselva river
  in central Oslo, along with four stencils which serves as additional
  input to the analysis, all provided as raster grids with the same
  resolution.</p>
  <fig>
    <caption><p>Vulkan area, central Oslo. The four stencils on the
    right represent infrastructure, water bodies (rivers), permeable
    surfaces and point sinks.
    <styled-content id="figU003Avulkan_model"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="vulkan_model_and_stencils.png" />
  </fig>
  <p>The end state of a scenario with constant precipitation until all
  traps have been filled is shown in
  <xref alt="[fig:vulkan_analysis]" rid="figU003Avulkan_analysis">[fig:vulkan_analysis]</xref>.
  Here, all traps and the intermittent streams connecting them are shown
  on the left plot. The right plot shows a cutout where the logarithm of
  flow intensity has been visualized.</p>
  <fig>
    <caption><p>Vulkan area end state in a modeled precipitation
    scenario.
    <styled-content id="figU003Avulkan_analysis"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="vulkan_analysis.png" />
  </fig>
  <p>For additional and more in-depth examples, the reader is encouraged
  to have a look at the
  <ext-link ext-link-type="uri" xlink:href="https://sintefmath.github.io/SurfaceWaterIntegratedModeling.jl/dev/">online
  documentation</ext-link>.</p>
</sec>
<sec id="acknowledgments">
  <title>Acknowledgments</title>
  <p>The data used in the example above was originally obtained from
  Kartverket (the Norwegian Mapping Authority) under the Creative
  Commons Attribution 4.0 International (CC BY 4.0) license.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-BevenU003A2003">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Beven</surname><given-names>K. J.</given-names></name>
      </person-group>
      <source>Rainfall - runoff modelling: The primer</source>
      <publisher-name>Wiley</publisher-name>
      <year iso-8601-date="2003">2003</year>
      <isbn>9780470866719</isbn>
      <uri>https://onlinelibrary.wiley.com/doi/book/10.1002/9781119951001</uri>
    </element-citation>
  </ref>
  <ref id="ref-SkaugenU003A2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Skaugen</surname><given-names>Thomas</given-names></name>
        <name><surname>Lawrence</surname><given-names>Deborah</given-names></name>
        <name><surname>Ortega</surname><given-names>Rengifo Zenon</given-names></name>
      </person-group>
      <article-title>A parameter parsimonious approach for catchment scale urban hydrology – which processes are important?</article-title>
      <source>Journal of Hydrology X</source>
      <year iso-8601-date="2020">2020</year>
      <volume>8</volume>
      <issn>2589-9155</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S2589915520300110</uri>
      <pub-id pub-id-type="doi">10.1016/j.hydroa.2020.100060</pub-id>
      <fpage>100060</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-ZhangU003A2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Zhang</surname><given-names>Meng-Di</given-names></name>
        <name><surname>Zhang</surname><given-names>Jing</given-names></name>
        <name><surname>Song</surname><given-names>Yongyu</given-names></name>
      </person-group>
      <article-title>Preliminary research and application of MIKE SHE model in Jialingjiang River Basin</article-title>
      <source>IOP Conference Series: Earth and Environmental Science</source>
      <year iso-8601-date="2019">2019</year>
      <volume>304</volume>
      <uri>https://api.semanticscholar.org/CorpusID:204259188</uri>
      <pub-id pub-id-type="doi">10.1088/1755-1315/304/2/022088</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-LangevinU003A2017">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Langevin</surname><given-names>Hughes</given-names><suffix>C. D.</suffix></name>
      </person-group>
      <article-title>MODFLOW 6 modular hydrologic model: United States Geological Survey (USGS) software</article-title>
      <year iso-8601-date="2017">2017</year>
      <uri>https://doi.org/10.5066/F76Q1VQV</uri>
    </element-citation>
  </ref>
  <ref id="ref-MIKESHE">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>DHI</surname></name>
      </person-group>
      <article-title>MIKE SHE</article-title>
      <year iso-8601-date="2025">2025</year>
      <uri>https://support.dhigroup.com/download/MIKE-latest/</uri>
    </element-citation>
  </ref>
  <ref id="ref-SkaugenU003A2014">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Skaugen</surname><given-names>Thomas</given-names></name>
        <name><surname>Onof</surname><given-names>Christian</given-names></name>
      </person-group>
      <article-title>A rainfall-runoff model parameterized from GIS and runoff data</article-title>
      <source>Hydrological Processes</source>
      <year iso-8601-date="2014">2014</year>
      <volume>28</volume>
      <issue>15</issue>
      <uri>https://onlinelibrary.wiley.com/doi/abs/10.1002/hyp.9968</uri>
      <pub-id pub-id-type="doi">10.1002/hyp.9968</pub-id>
      <fpage>4529</fpage>
      <lpage>4542</lpage>
    </element-citation>
  </ref>
  <ref id="ref-ARCGIS">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>ESRI</surname></name>
      </person-group>
      <article-title>ArcGIS pro</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://www.esri.com/en-us/arcgis/products/arcgis-pro/overview</uri>
    </element-citation>
  </ref>
  <ref id="ref-SCALGO">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Scalgo</surname></name>
      </person-group>
      <article-title>Scalgo live</article-title>
      <year iso-8601-date="2025">2025</year>
      <uri>https://scalgo.com/en-US/</uri>
    </element-citation>
  </ref>
  <ref id="ref-WilsonU003A2008">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Wilson</surname><given-names>John P.</given-names></name>
        <name><surname>Aggett</surname><given-names>Graeme</given-names></name>
        <name><surname>Yongxin</surname><given-names>DENG</given-names></name>
        <name><surname>Lam</surname><given-names>Christine S.</given-names></name>
      </person-group>
      <article-title>Water in the landscape: A review of contemporary flow routing algorithms</article-title>
      <source>Advances in digital terrain analysis</source>
      <person-group person-group-type="editor">
        <name><surname>Zhou</surname><given-names>Qiming</given-names></name>
        <name><surname>Lees</surname><given-names>Brian</given-names></name>
        <name><surname>Tang</surname><given-names>Guo-an</given-names></name>
      </person-group>
      <publisher-name>Springer Berlin Heidelberg</publisher-name>
      <publisher-loc>Berlin, Heidelberg</publisher-loc>
      <year iso-8601-date="2008">2008</year>
      <isbn>978-3-540-77800-4</isbn>
      <uri>https://doi.org/10.1007/978-3-540-77800-4_12</uri>
      <pub-id pub-id-type="doi">10.1007/978-3-540-77800-4_12</pub-id>
      <fpage>213</fpage>
      <lpage>236</lpage>
    </element-citation>
  </ref>
  <ref id="ref-julia">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bezanson</surname><given-names>Jeff</given-names></name>
        <name><surname>Edelman</surname><given-names>Alan</given-names></name>
        <name><surname>Karpinski</surname><given-names>Stefan</given-names></name>
        <name><surname>Shah</surname><given-names>Viral B.</given-names></name>
      </person-group>
      <article-title>Julia: A fresh approach to numerical computing</article-title>
      <source>SIAM Review</source>
      <publisher-name>Society for Industrial &amp; Applied Mathematics (SIAM)</publisher-name>
      <year iso-8601-date="2017-01">2017</year><month>01</month>
      <volume>59</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1137/141000671</pub-id>
      <fpage>65</fpage>
      <lpage>98</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
