<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6653</article-id>
<article-id pub-id-type="doi">10.21105/joss.06653</article-id>
<title-group>
<article-title>BESMARTS: A toolkit for data-driven force field design
using binary-encoded SMARTS</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-7856-1156</contrib-id>
<name>
<surname>Gokey</surname>
<given-names>Trevor</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Chemistry, University of California, Irvine,
United States of America</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2025-05-06">
<day>6</day>
<month>5</month>
<year>2025</year>
</pub-date>
<volume>10</volume>
<issue>109</issue>
<fpage>6653</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>cheminformatics</kwd>
<kwd>graphs</kwd>
<kwd>forcefields</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>A popular method to model the potential energy of molecules is
  through the use of a force field. Force fields are a collection
  parameters that typically describe the bonded forces as harmonic
  spring bond stretching, angle bending, and sinusoidal torsion bending
  in addition to pairwise electrostatic and van der Waals interactions
  over non-bonded atoms. Each term requires one or more parameters,
  e.g. spring stiffness and length, and these must be assigned in some
  algorithmic way. Popular methods to assign parameters to molecules are
  generally opaque and difficult to extend. A relatively new method to
  assign parameters from Open Force Field uses molecular substructure
  queries called SMARTS to assign force field parameters. Using SMARTS
  patterns to assign parameters simplifies the task of extending force
  fields, but determining effective patterns has proven tedious and
  error prone. The goal of the BESMARTS package described here is to
  automate the process of searching SMARTS patterns to aid scientists to
  build better force fields.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p><monospace>BESMARTS</monospace> is a Python package for
  manipulating SMARTS patterns using bitwise operations with the goal of
  distinguishing two or more groups of molecular substructures. This
  functionality is needed for force field design where each SMARTS
  substructure maps to force field parameters such as harmonic bond
  lengths and force constants. The package contains functions to
  generate patterns that are able split a set of molecules into two or
  more groups by directly iterating over the information in the SMARTS
  pattern. Previous effort tackled this problem by using Monte-Carlo
  sampling of SMARTS patterns until a given partition was satisfied, but
  was too computationally expensive for general use
  (<xref alt="Bannan &amp; Mobley, 2019" rid="ref-bannan2019chemper" ref-type="bibr">Bannan
  &amp; Mobley, 2019</xref>). <monospace>BESMARTS</monospace> implements
  a novel approach to finding SMARTS patterns by iterating through a
  given SMARTS pattern and generating all possible ways to split a group
  into two groups using a minimum amount of information in the patterns.
  This is accomplished by treating the SMARTS as graphs with the SMARTS
  information, called primitives such as element, connectivity, ring
  membership, etc, as bit vectors. Each bit represents a particular
  primitive value in the pattern, e.g. [#6,#7] represents “carbon or
  nitrogen”. This package provides functionality to search for SMARTS
  patterns with a configurable search exhaustiveness, which controls the
  computational requirements of the exponential search in chemical
  space.</p>
  <p><monospace>BESMARTS</monospace> has already been used as a research
  tool in guiding experts in the development in the previously published
  Sage 2.1 force field
  (<xref alt="Behara et al., 2023" rid="ref-sage2.1" ref-type="bibr">Behara
  et al., 2023</xref>). A more in-depth description of the algorithms
  and methodology of the <monospace>BESMARTS</monospace> package has
  been previously described
  (<xref alt="Gokey &amp; Mobley, 2023" rid="ref-gokey2023hierarchical" ref-type="bibr">Gokey
  &amp; Mobley, 2023</xref>). This package should be useful to any work
  requiring a clustering based on SMARTS patterns, or any physical model
  that needs to assign parameters to particular sets of atoms in a
  molecular system that can be described with SMARTS patterns. We find
  the most utility in this package for building and extending force
  fields, but we have previously shown its utility as a general
  clustering method to create hierarchies of chemical space
  (<xref alt="Gokey &amp; Mobley, 2023" rid="ref-gokey2023hierarchical" ref-type="bibr">Gokey
  &amp; Mobley, 2023</xref>).</p>
</sec>
<sec id="background">
  <title>Background</title>
  <p>The simplified molecular-input line-entry system (SMILES) is
  popular in chemistry and related fields due to its human-friendly
  approach to transcribing molecules. From a SMILES string, SMARTS is a
  query language that determines whether a particular chemical group
  exists in the target molecule. These two languages together have
  enabled a wide range tools and applications.</p>
  <p>The SMARTS language has been recently used as a method for
  parameter assignment for potential energy functions. The collection of
  parameters is called a force field, and are a staple in many areas of
  chemistry including drug binding assessment, free-energy calculations,
  and molecular dynamics of macromolecules such as proteins. A
  prerequisite to using a force field is determining how the parameters
  are assigned to the molecules. Traditionally, determining how the
  parameters are applied has been through the use of specialized, opaque
  programs that are coupled to their respective force field. For
  example, the general AMBER force field (GAFF) typically refers to both
  how parameters are assigned and the parameter values themselves. As
  mentioned above, a recent advancement is the use of SMARTS patterns to
  determine where parameters are assigned. Using SMARTS patterns opens
  up the black-box nature of parameter assignment, and extending a force
  field simply requires adding or modifying SMARTS patterns. The problem
  herein this approach is that writing effective SMARTS patterns for
  force field parameters is difficult, even for experts. Although a
  cheminformatician may be able to design a clever SMARTS pattern to
  distinguish an exotic group that is similar in the chemical sense, the
  cheminformatician must also design the pattern such that the chemistry
  grouped together is also similar in the physical sense. The Open Force
  Field (OpenFF) Consortium has defined the SMIRNOFF standard for a
  force field based on a hierarchy of SMARTS patterns
  (<xref alt="Mobley et al., 2018" rid="ref-mobley2018escaping" ref-type="bibr">Mobley
  et al., 2018</xref>). Most of the SMARTS patterns were determined by
  experts, and extending the current set of SMARTS has proven tedious
  and error-prone. The difficulty in designing SMARTS patterns is
  compounded by the fact that the <italic>order</italic> of the patterns
  is also important in parameter assignment. Because a molecular
  substructure may match multiple SMARTS patterns in the hierarchy, the
  SMARTS patterns must be ordered in a way that each molecular
  substructure is assigned to its intended parameters.</p>
  <p>Here, we describe a set of tools based on binary-encoded SMARTS
  (BESMARTS) that facilitate the search for SMARTS patterns in a
  data-driven, automatic approach. The core utility of
  <monospace>BESMARTS</monospace> is a set of tools to perform bitwise
  operation between two SMARTS patterns. This is done by treating the
  patterns as graphs, and the SMARTS information, called primitives, is
  embedded in the nodes (atoms) and edges (bonds). Additionally, to
  enable searching SMARTS, the graphs can be iterated in a bitwise
  fashion over the SMARTS primitives. Doing so generates new SMARTS by
  turning off one more of the iterated bits. Molecules which no longer
  match the SMARTS pattern with removed bits therefore is split off from
  the original SMARTS. This corresponds to creating a new parameter in a
  force field. Finally, in order to collect a set of SMARTS into a
  usable hierarchy for force field design, two SMARTS can be compared
  using set operations, specifically subset and superset relations. This
  is a necessary operation to define a hierarchy of SMARTS, where we
  intend to specialize a particular force field parameter by writing a
  new SMARTS pattern that carves out a subset of chemistry of the
  original SMARTS. The automated search enabled by the
  <monospace>BESMARTS</monospace> package and explicit formation of a
  SMARTS hierarchy using operations defined here lies at the heart of
  force field design using SMARTS, and we hope that this work has
  utility to the broader community of force field designers.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We thank David Mobley for advisement on this work. We thank Caitlin
  Bannan and Christopher Bayly for valuable discussions. We thank the
  Open Force Field Consortium and Initiative for financial and
  scientific support, and the Open Molecular Software Foundation (OMSF)
  for its support of the Open Force Field Initiative.</p>
</sec>
<sec id="funding">
  <title>Funding</title>
  <p>We appreciate financial support from the National Institutes of
  Health (R01GM132386 and R35GM148236) and computing support from the
  UCI Research Cyberinfrastructure Center, supported in part by NSF
  Grant CNS-1828779.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-gokey2023hierarchical">
    <element-citation publication-type="manuscript">
      <person-group person-group-type="author">
        <name><surname>Gokey</surname><given-names>Trevor</given-names></name>
        <name><surname>Mobley</surname><given-names>David L</given-names></name>
      </person-group>
      <article-title>Hierarchical clustering of chemical space using binary-encoded SMARTS for building data-driven chemical perception models</article-title>
      <source>ChemRxiv</source>
      <publisher-name>Cambridge Open Engage</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <pub-id pub-id-type="doi">10.26434/chemrxiv-2023-v969f-v3</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-sage2.1">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Behara</surname><given-names>Pavan Kumar</given-names></name>
        <name><surname>Gokey</surname><suffix>Trevor</suffix></name>
        <name><surname>Cavinder</surname><given-names>Chapin</given-names></name>
        <name><surname>Horton</surname><given-names>Joshua</given-names></name>
      </person-group>
      <article-title>Sage-2.1.0</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/openforcefield/sage-2.1.0</uri>
    </element-citation>
  </ref>
  <ref id="ref-mobley2018escaping">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Mobley</surname><given-names>David L</given-names></name>
        <name><surname>Bannan</surname><given-names>Caitlin C</given-names></name>
        <name><surname>Rizzi</surname><given-names>Andrea</given-names></name>
        <name><surname>Bayly</surname><given-names>Christopher I</given-names></name>
        <name><surname>Chodera</surname><given-names>John D</given-names></name>
        <name><surname>Lim</surname><given-names>Victoria T</given-names></name>
        <name><surname>Lim</surname><given-names>Nathan M</given-names></name>
        <name><surname>Beauchamp</surname><given-names>Kyle A</given-names></name>
        <name><surname>Slochower</surname><given-names>David R</given-names></name>
        <name><surname>Shirts</surname><given-names>Michael R</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Escaping atom types in force fields using direct chemical perception</article-title>
      <source>Journal of chemical theory and computation</source>
      <publisher-name>ACS Publications</publisher-name>
      <year iso-8601-date="2018">2018</year>
      <volume>14</volume>
      <issue>11</issue>
      <pub-id pub-id-type="doi">10.1021/acs.jctc.8b00640</pub-id>
      <fpage>6076</fpage>
      <lpage>6092</lpage>
    </element-citation>
  </ref>
  <ref id="ref-bannan2019chemper">
    <element-citation publication-type="manuscript">
      <person-group person-group-type="author">
        <name><surname>Bannan</surname><given-names>Caitlin C.</given-names></name>
        <name><surname>Mobley</surname><given-names>David</given-names></name>
      </person-group>
      <article-title>ChemPer: An open source tool for automatically generating SMIRKS patterns</article-title>
      <source>ChemRxiv</source>
      <publisher-name>Cambridge Open Engage</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <pub-id pub-id-type="doi">10.26434/chemrxiv.8304578.v1</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
