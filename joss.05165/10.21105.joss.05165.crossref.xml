<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/5.3.1"
           xmlns:ai="http://www.crossref.org/AccessIndicators.xsd"
           xmlns:rel="http://www.crossref.org/relations.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           version="5.3.1"
           xsi:schemaLocation="http://www.crossref.org/schema/5.3.1 http://www.crossref.org/schemas/crossref5.3.1.xsd">
  <head>
    <doi_batch_id>20230823T222857-428726b91f1fd715273fdc73854462456abf36c0</doi_batch_id>
    <timestamp>20230823222857</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>https://joss.theoj.org</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>08</month>
          <year>2023</year>
        </publication_date>
        <journal_volume>
          <volume>8</volume>
        </journal_volume>
        <issue>88</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>ctbench - compile-time benchmarking and
analysis</title>
        </titles>
        <contributors>
          <person_name sequence="first" contributor_role="author">
            <given_name>Jules</given_name>
            <surname>Penuchot</surname>
            <ORCID>https://orcid.org/0000-0002-6377-6880</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Joel</given_name>
            <surname>Falcou</surname>
            <ORCID>https://orcid.org/0000-0001-5380-7375</ORCID>
          </person_name>
        </contributors>
        <publication_date>
          <month>08</month>
          <day>23</day>
          <year>2023</year>
        </publication_date>
        <pages>
          <first_page>5165</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.05165</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">10.5281/zenodo.8270239</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/5165</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.05165</doi>
          <resource>https://joss.theoj.org/papers/10.21105/joss.05165</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://joss.theoj.org/papers/10.21105/joss.05165.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="static-reflection">
            <article_title>P1240R2: Scalable reflection</article_title>
            <author>Vandevoorde</author>
            <cYear>2022</cYear>
            <unstructured_citation>Vandevoorde, D., Childers, W.,
Sutton, A., &amp; Vali, F. (2022). P1240R2: Scalable reflection.
https://wg21.link/p1240r2; WG21.</unstructured_citation>
          </citation>
          <citation key="more-constexpr-containers">
            <article_title>More constexpr containers</article_title>
            <author>Dimov</author>
            <cYear>2019</cYear>
            <unstructured_citation>Dimov, P., Dionne, L., Ranns, N.,
Smith, R., &amp; Vandevoorde, D. (2019). More constexpr containers.
https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0784r7.html</unstructured_citation>
          </citation>
          <citation key="metabench">
            <article_title>Metabench: A simple framework for
compile-time microbenchmarks</article_title>
            <author>Dionne</author>
            <cYear>2017</cYear>
            <unstructured_citation>Dionne, L., Dutra, B., Holmes, O.,
&amp; others. (2017). Metabench: A simple framework for compile-time
microbenchmarks.
https://github.com/ldionne/metabench/</unstructured_citation>
          </citation>
          <citation key="poacher">
            <article_title>Poacher: C++ compile-time compiling
experiments</article_title>
            <author>Penuchot</author>
            <cYear>2020</cYear>
            <unstructured_citation>Penuchot, J. (2020). Poacher: C++
compile-time compiling experiments.
https://github.com/jpenuchot/poacher/</unstructured_citation>
          </citation>
          <citation key="templight">
            <article_title>Measuring compilation time of C++ template
metaprograms</article_title>
            <author>Porkoláb</author>
            <cYear>2009</cYear>
            <unstructured_citation>Porkoláb, Z., Mihalicza, J., &amp;
Pataki, N. (2009). Measuring compilation time of C++ template
metaprograms.
http://aszt.inf.elte.hu/~gsd/s/cikkek/abel/comptime.pdf</unstructured_citation>
          </citation>
          <citation key="ctre">
            <article_title>Compile time regular expression in
C++</article_title>
            <author>Dusíková</author>
            <cYear>2018</cYear>
            <unstructured_citation>Dusíková, H. (2018). Compile time
regular expression in C++.
https://github.com/hanickadot/compile-time-regular-expressions</unstructured_citation>
          </citation>
          <citation key="ctbench-cppp21">
            <article_title>Ctbench: Compile time benchmarking for
clang</article_title>
            <author>Penuchot</author>
            <cYear>2021</cYear>
            <unstructured_citation>Penuchot, J. (2021). Ctbench: Compile
time benchmarking for clang.
https://www.youtube.com/watch?v=1RZY6skM0Rc</unstructured_citation>
          </citation>
          <citation key="time-trace">
            <article_title>Adds ‘-ftime-trace‘ option to clang that
produces chrome ‘chrome://tracing‘ compatible JSON profiling output
dumps</article_title>
            <author>Afanasyev</author>
            <cYear>2019</cYear>
            <unstructured_citation>Afanasyev, A. (2019). Adds
‘-ftime-trace‘ option to clang that produces chrome ‘chrome://tracing‘
compatible JSON profiling output dumps.
https://reviews.llvm.org/D58675</unstructured_citation>
          </citation>
          <citation key="meetingcpp22">
            <article_title>Meeting C++ - a totally constexpr standard
library</article_title>
            <author>Paul Keir</author>
            <cYear>2022</cYear>
            <unstructured_citation>Paul Keir, J. P., Joel Falcou.
(2022). Meeting C++ - a totally constexpr standard library.
https://www.youtube.com/watch?v=ekFPm7e__vI</unstructured_citation>
          </citation>
          <citation key="buildbench">
            <article_title>Build-bench</article_title>
            <author>Tingaud</author>
            <cYear>2017</cYear>
            <unstructured_citation>Tingaud, F. (2017). Build-bench.
https://build-bench.com/</unstructured_citation>
          </citation>
          <citation key="blazelib">
            <article_title>Blaze C++ linear algebra
library</article_title>
            <author>Iglberger</author>
            <cYear>2012</cYear>
            <unstructured_citation>Iglberger, K. (2012). Blaze C++
linear algebra library.
https://bitbucket.org/blaze-lib</unstructured_citation>
          </citation>
          <citation key="eigen">
            <article_title>Eigen</article_title>
            <author>Guennebaud</author>
            <volume>3</volume>
            <cYear>2010</cYear>
            <unstructured_citation>Guennebaud, G., Jacob, B., &amp;
others. (2010). Eigen. 3.
https://eigen.tuxfamily.org</unstructured_citation>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
