<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6181</article-id>
<article-id pub-id-type="doi">10.21105/joss.06181</article-id>
<title-group>
<article-title>dropout: an R Package for Addressing Dropouts, Missing
Values, and Sectional Challenges in Survey Data Analysis</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0007-3222-899X</contrib-id>
<name>
<surname>Mann</surname>
<given-names>Hendrik</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>University of Wuppertal, Germany</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-11-19">
<day>19</day>
<month>11</month>
<year>2023</year>
</pub-date>
<volume>9</volume>
<issue>95</issue>
<fpage>6181</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>r</kwd>
<kwd>dropout</kwd>
<kwd>missing values</kwd>
<kwd>participation</kwd>
<kwd>survey data</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Missing data can reduce the statistical power of a study and can
  produce biased estimates, leading to invalid conclusions
  (<xref alt="Kang, 2013" rid="ref-Kang2013" ref-type="bibr">Kang,
  2013</xref>). When working with survey data, capturing and
  categorizing missing values is crucial for maintaining data quality.
  The <monospace>dropout</monospace> package assists in distinguishing
  whether missing values are isolated instances, sectional missing
  values, or complete dropouts and offers the tools to identify those
  participants. This distinction enables effective data cleaning and
  provides insights into the study design and the response behaviors of
  participants.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p><monospace>dropout</monospace> is an R package
  (<xref alt="R Core Team, 2022" rid="ref-R" ref-type="bibr">R Core
  Team, 2022</xref>) available on CRAN that is designed to distinguish
  between different types of missing values in survey data. It allows
  users to identify whether missing values are due to complete dropouts
  - participants who stop answering the questionnaire completely,
  participants who skip whole sections, or isolated instances of NA
  values. Unlike current R packages that deal with missing values in
  data analysis by (visually) producing summary statistics that treat
  each missing value equally, such as <monospace>naniar</monospace>
  (<xref alt="Tierney &amp; Cook, 2023" rid="ref-naniar" ref-type="bibr">Tierney
  &amp; Cook, 2023</xref>) and <monospace>mde</monospace>
  (<xref alt="Gonzabato, 2022" rid="ref-mde" ref-type="bibr">Gonzabato,
  2022</xref>), <monospace>dropout</monospace> classifies missing values
  based on the occurrence of single missing values, section dropouts and
  complete dropouts. This allows <monospace>dropout</monospace> to
  produce summary statistics of different response patterns and relate
  them to the overall occurrence of missing values. Unlike
  <monospace>daqapo</monospace>
  (<xref alt="Martin, 2022" rid="ref-daqapo" ref-type="bibr">Martin,
  2022</xref>), a package that can also be used to find sequential gaps
  of missing values for participants, <monospace>dropout</monospace>
  allows you to use its summary statistics and detect participants based
  on their classified response pattern. This enables a simpler workflow
  for data cleaning and further analysis.</p>
</sec>
<sec id="usage">
  <title>Usage</title>
  <p><monospace>dropout</monospace> includes two essential functions,
  beginning with <monospace>drop_summary</monospace>. This function is
  designed to generate summary statistics for missing values in your
  dataset. It requires two primary inputs: the dataframe to analyze and
  the identifier of the last survey item. The latter is particularly
  important in cases where your data includes additional columns
  generated by the survey platform, such as participation time. These
  extra items can lead to biased results in the function, as no dropouts
  may be detected if the last column has no missing values. To counter
  this, if the last_col argument is left unspecified,
  <monospace>drop_summary</monospace> will automatically address the
  issue by setting <monospace>last_col</monospace> to the last column in
  the dataframe that contains missing values, and it will issue a
  warning to inform the user. For optimal usage of the
  <monospace>dropout</monospace> package, it’s generally good practice
  to ensure your dataframe either exclusively contains the survey items,
  or that the <monospace>last_col</monospace> argument is manually set
  to the last survey item in your dataset. Generally, it is essential to
  index all survey items in the dataframe in their correct order. An
  optional argument of the <monospace>drop_summary</monospace> function
  is <monospace>section_min</monospace>. This parameter plays a crucial
  role when <monospace>drop_summary</monospace> is used to detect
  sections that participants may have skipped. By default, it looks for
  at least three consecutive missing items to identify a skipped
  section. This threshold seems to be sensitive enough to differentiate
  between single missing values and section omissions. However, it’s
  advisable to experiment with different
  <monospace>section_min</monospace> settings to find the optimal
  threshold that aligns with your specific study design.</p>
  <p><monospace>drop_detect</monospace> works similarly to
  <monospace>drop_summary</monospace> and requires the same input
  arguments. However, instead of generating summary statistics for each
  question in your dataframe, drop_detect focuses on identifying
  dropouts for each participant. The output includes a logical column
  indicating whether a participant dropped out, and if so, it specifies
  the question and the index in the dataframe where this occurred. This
  functionality allows for the filtering of dropouts based on specific
  columns or indexes. Furthermore, the <monospace>last_col</monospace>
  argument in <monospace>drop_detect</monospace> is particularly useful
  for identifying participants who skipped specific sections. This can
  be achieved either by creating a subset of the dataframe containing
  only the items from that section or by setting the last_col argument
  to the last item of the section. These and other applications can be
  easily integrated with verbs from the tidyverse
  (<xref alt="Wickham et al., 2019" rid="ref-tidyverse" ref-type="bibr">Wickham
  et al., 2019</xref>).</p>
</sec>
<sec id="examples">
  <title>Examples</title>
  <p>For the following examples we will use an adapted version of the
  Flying Etiquette by five-thirty-eight dataset
  (<xref alt="Hickey, 2014" rid="ref-flying" ref-type="bibr">Hickey,
  2014</xref>) that is included in the <monospace>dropout</monospace>
  package. In these workflow examples, I will be using dplyr verbs
  (<xref alt="Wickham et al., 2023" rid="ref-dplyr" ref-type="bibr">Wickham
  et al., 2023</xref>) — although this is not necessary.</p>
  <p>As illustrated with the <monospace>flying</monospace> dataset
  example, even though all columns are arranged in the correct order of
  survey items, the last column survey_type does not correspond to a
  survey item. In such scenarios, the dropout package intuitively
  addresses this issue by disregarding the non-survey column and
  automatically setting the last_col argument to
  <monospace>location_census_region</monospace>. This adjustment is
  accompanied by a warning to inform the user. However, in more complex
  situations, it’s advisable to either create a subset of your data or
  manually set the last_col argument to the actual last survey item. We
  will demonstrate this approach in the following examples.</p>
  <code language="r script"># install.packages(c(&quot;dropout&quot;, &quot;tidyverse&quot;))

library(dropout)
library(tidyverse)
data(flying)</code>
  <p>Initially, we use the <monospace>drop_summary</monospace> function
  to generate an overview of the different types of missing values in
  our dataframe. From this analysis, it becomes evident that certain
  parts of the survey experience higher dropout rates. Notably, 18
  participants dropped out early, at the third survey item, culminating
  in a total of 42 dropouts by the end of the survey. The ´section_na´
  column reveals that 164 participants skipped an entire section of the
  questionnaire, or at least a consecutive portion identifiable as a
  section in this context. Furthermore, single missing values are
  particularly prevalent in responses to the household income
  question.</p>
  <code language="r script">flying %&gt;% 
drop_summary(last_col = &quot;location_census_region&quot;) %&gt;% 
print(n = Inf) </code>
  <p>In the subsequent step, we aim to refine our dataset to include
  only those survey participants who did not experience an early dropout
  at the third question and who completed the survey without any
  dropouts. To achieve this, we utilize the drop_detect function, which
  identifies participants according to dropout status at specified
  points within the survey. By merging the output with our original
  data, we can then apply a filter to retain only the desired
  respondents. Once filtered, we remove the additional columns
  introduced by <monospace>drop_detect</monospace> as they are no longer
  necessary for further analysis. While not demonstrated in this
  example, this method of indexing is particularly advantageous when we
  need to perform complex manipulations, such as excluding all
  participants who dropped out before reaching the tenth item in the
  survey.</p>
  <code language="r script">flying_dropouts &lt;- flying %&gt;% 
drop_detect(last_col = &quot;location_census_region&quot;)

head(flying_dropouts)

flying_cleaned &lt;- flying_dropouts %&gt;% 
bind_cols(flying) %&gt;% 
filter(dropout_col != &quot;seat_recline&quot; | dropout == FALSE) %&gt;% 
select(-starts_with(&quot;dropout&quot;)) </code>
  <p>Next, we aim to exclude the 164 participants who skipped an entire
  section of the survey without fully dropping out. This can be
  accomplished through two approaches. The first method involves setting
  the <monospace>last_col</monospace> argument of the
  <monospace>drop_detect</monospace> function to the last column of the
  omitted section. By doing so, all participants who skipped the entire
  section will be flagged as dropouts, making it straightforward to
  exclude them. The second method requires creating a subset of the
  dataset that includes only the columns of the concerned section. This
  subset can then be used to specifically filter for section-based
  dropouts. It is important to note that when working with such a
  subset, the indices provided by <monospace>dropout_index</monospace>
  might correspond to the subset’s dataframe and not the original one.
  This distinction is crucial for accurately mapping the dropout
  information back to the complete dataset, when using a subset starting
  not from column one of the origional dataset. In method 2 this is not
  an issue.</p>
  <code language="r script"># method 1 (recommended as indexes of dropout_index will still match the data)
flying_cleaned %&gt;% 
drop_detect(last_col = &quot;smoking_violation&quot;) %&gt;% 
bind_cols(flying_cleaned) %&gt;% 
filter(dropout_col != &quot;seat_recline&quot; | dropout == FALSE) %&gt;% 
select(-starts_with(&quot;dropout&quot;)) 

# method 2 (if the dropout_index will still match the data depends on the subset)
flying_cleaned %&gt;% 
select(1:22) %&gt;% 
drop_detect() %&gt;% 
bind_cols(flying_cleaned) %&gt;% 
filter(dropout_col != &quot;seat_recline&quot; | dropout == FALSE) %&gt;% 
select(-starts_with(&quot;dropout&quot;)) </code>
  <p>In this article’s concluding section, we explore the practical
  applications of these techniques in analyzing distinct dropout
  behaviors. Through the visualisation in
  <xref alt="[fig:fig1]" rid="figU003Afig1">[fig:fig1]</xref>, we will
  contrast participants who omitted a particular survey section with
  those who partially completed it or had missing values that did not
  start at the beginning of the section. We will segment this
  comparative analysis by gender to illustrate how one might investigate
  varying dropout behaviors across different demographic groups. This
  approach exemplifies how data on dropout patterns can be dissected to
  yield insights into the participant experience and inform improvements
  in survey design.</p>
  <code language="r script"># library(ggplot)

flying_section &lt;- flying_cleaned %&gt;% 
select(3:22) %&gt;% 
drop_detect(last_col = &quot;smoking_violation&quot;) %&gt;%
bind_cols(flying_cleaned) %&gt;% 
filter(dropout_col == &quot;seat_recline&quot;) %&gt;% 
count(gender) %&gt;% 
rename(omitted = n)

figure1 &lt;- flying_cleaned %&gt;%
count(gender) %&gt;%
rename(N = n) %&gt;%
drop_na() %&gt;%
left_join(flying_section) %&gt;%
mutate(completed = N - omitted) %&gt;%
pivot_longer(3:4, values_to = &quot;n&quot;, names_to = &quot;condition&quot;) %&gt;%
  ggplot(aes(x = gender, y = n, fill = condition)) +
  geom_col(position = &quot;dodge&quot;)</code>
  <p>Both the drop_summary and drop_detect functions are designed for
  seamless integration into data analysis workflows and pipelines. These
  functions facilitate an easy visualization of their output. In the
  following example of
  <xref alt="[fig:fig2]" rid="figU003Afig2">[fig:fig2]</xref>, we
  utilize the drop_summary function to visually represent missing values
  in the dataframe. The visualization distinctly categorizes the missing
  values into three types: dropouts, section_na (entire sections left
  out), and single_na (individual missing values).</p>
  <code language="r script">fig2 &lt;- flying %&gt;% 
  drop_summary(last_col = &quot;location_census_region&quot;) %&gt;% 
  select(column_name, dropout, section_na, single_na) %&gt;% 
  pivot_longer(-column_name, names_to = &quot;missing&quot;, values_to = &quot;values&quot;) %&gt;% 
  mutate(column_name = fct_inorder(column_name)) %&gt;%
    ggplot(aes(x = column_name, y = values, group = missing, col = missing))+
    geom_line()+
    geom_point()+
    scale_x_discrete(guide = guide_axis(angle = 45))+
    xlab(&quot;items&quot;)+
    ylab(&quot;missing values&quot;)</code>
</sec>
<sec id="figures">
  <title>Figures</title>
  <fig>
    <caption><p>Analyzing Dropout Patterns and Missing Values with the
    ‘dropout’ Package. This graph illustrates the proportions of male
    and female participants who either omitted or completed the section
    of the survey from ‘seat_recline’ to ‘smoking_validation’. It
    compares those who skipped this entire section (labeled as
    ‘omitted’) with those who either fully completed it or ceased
    responding past this section (labeled as
    ‘completed’).<styled-content id="figU003Afig1"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/Figures/fig1.pdf" />
  </fig>
  <fig>
    <caption><p>Visualization of Missing Values in the Flying Dataset.
    Note: A concentration of missing values is observed in the section
    ranging from ‘seat_recline’ to ‘smoking_violation’, as indicated by
    the ‘section_na’ category. Additionally, the ‘household income’
    variable is notably omitted by a portion of the participants,
    categorized as ‘single_na’ values. This pattern highlights specific
    areas in the survey where participant engagement varies.
    <styled-content id="figU003Afig2"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/Figures/fig2.pdf" />
  </fig>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-flying">
    <element-citation publication-type="webpage">
      <person-group person-group-type="author">
        <name><surname>Hickey</surname><given-names>Walt</given-names></name>
      </person-group>
      <article-title>41 percent of fliers think you’re rude if you recline your seat</article-title>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2014">2014</year>
      <uri>https://github.com/fivethirtyeight/data/tree/master/flying-etiquette-survey</uri>
    </element-citation>
  </ref>
  <ref id="ref-daqapo">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Martin</surname><given-names>Niels</given-names></name>
      </person-group>
      <source>Daqapo: Data quality assessment for process-oriented data</source>
      <year iso-8601-date="2022">2022</year>
      <uri>https://CRAN.R-project.org/package=daqapo</uri>
    </element-citation>
  </ref>
  <ref id="ref-naniar">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Tierney</surname><given-names>Nicholas</given-names></name>
        <name><surname>Cook</surname><given-names>Dianne</given-names></name>
      </person-group>
      <article-title>Expanding tidy data principles to facilitate missing data exploration, visualization and assessment of imputations</article-title>
      <source>Journal of Statistical Software</source>
      <year iso-8601-date="2023">2023</year>
      <volume>105</volume>
      <issue>7</issue>
      <pub-id pub-id-type="doi">10.18637/jss.v105.i07</pub-id>
      <fpage>1</fpage>
      <lpage>31</lpage>
    </element-citation>
  </ref>
  <ref id="ref-mde">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Gonzabato</surname><given-names>Nelson</given-names></name>
      </person-group>
      <source>Mde: Missing data explorer</source>
      <year iso-8601-date="2022">2022</year>
      <uri>https://CRAN.R-project.org/package=mde</uri>
    </element-citation>
  </ref>
  <ref id="ref-Kang2013">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kang</surname><given-names>Hyun</given-names></name>
      </person-group>
      <article-title>The prevention and handling of the missing data</article-title>
      <source>Korean Journal of Anesthesiology</source>
      <publisher-name>The Korean Society of Anesthesiologists</publisher-name>
      <year iso-8601-date="2013">2013</year>
      <volume>64</volume>
      <issue>5</issue>
      <issn>2005-7563</issn>
      <uri>http://dx.doi.org/10.4097/kjae.2013.64.5.402</uri>
      <pub-id pub-id-type="doi">10.4097/kjae.2013.64.5.402</pub-id>
      <fpage>402</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-tidyverse">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wickham</surname><given-names>Hadley</given-names></name>
        <name><surname>Averick</surname><given-names>Mara</given-names></name>
        <name><surname>Bryan</surname><given-names>Jennifer</given-names></name>
        <name><surname>Chang</surname><given-names>Winston</given-names></name>
        <name><surname>McGowan</surname><given-names>Lucy D’Agostino</given-names></name>
        <name><surname>François</surname><given-names>Romain</given-names></name>
        <name><surname>Grolemund</surname><given-names>Garrett</given-names></name>
        <name><surname>Hayes</surname><given-names>Alex</given-names></name>
        <name><surname>Henry</surname><given-names>Lionel</given-names></name>
        <name><surname>Hester</surname><given-names>Jim</given-names></name>
        <name><surname>Kuhn</surname><given-names>Max</given-names></name>
        <name><surname>Pedersen</surname><given-names>Thomas Lin</given-names></name>
        <name><surname>Miller</surname><given-names>Evan</given-names></name>
        <name><surname>Bache</surname><given-names>Stephan Milton</given-names></name>
        <name><surname>Müller</surname><given-names>Kirill</given-names></name>
        <name><surname>Ooms</surname><given-names>Jeroen</given-names></name>
        <name><surname>Robinson</surname><given-names>David</given-names></name>
        <name><surname>Seidel</surname><given-names>Dana Paige</given-names></name>
        <name><surname>Spinu</surname><given-names>Vitalie</given-names></name>
        <name><surname>Takahashi</surname><given-names>Kohske</given-names></name>
        <name><surname>Vaughan</surname><given-names>Davis</given-names></name>
        <name><surname>Wilke</surname><given-names>Claus</given-names></name>
        <name><surname>Woo</surname><given-names>Kara</given-names></name>
        <name><surname>Yutani</surname><given-names>Hiroaki</given-names></name>
      </person-group>
      <article-title>Welcome to the tidyverse</article-title>
      <source>Journal of Open Source Software</source>
      <year iso-8601-date="2019">2019</year>
      <volume>4</volume>
      <issue>43</issue>
      <pub-id pub-id-type="doi">10.21105/joss.01686</pub-id>
      <fpage>1686</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-R">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <string-name>R Core Team</string-name>
      </person-group>
      <source>R: A language and environment for statistical computing</source>
      <publisher-name>R Foundation for Statistical Computing</publisher-name>
      <publisher-loc>Vienna, Austria</publisher-loc>
      <year iso-8601-date="2022">2022</year>
      <uri>https://www.R-project.org/</uri>
    </element-citation>
  </ref>
  <ref id="ref-dplyr">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Wickham</surname><given-names>Hadley</given-names></name>
        <name><surname>François</surname><given-names>Romain</given-names></name>
        <name><surname>Henry</surname><given-names>Lionel</given-names></name>
        <name><surname>Müller</surname><given-names>Kirill</given-names></name>
        <name><surname>Vaughan</surname><given-names>Davis</given-names></name>
      </person-group>
      <source>Dplyr: A grammar of data manipulation</source>
      <year iso-8601-date="2023">2023</year>
      <uri>https://dplyr.tidyverse.org</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
