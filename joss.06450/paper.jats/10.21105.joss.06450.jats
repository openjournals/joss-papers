<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6450</article-id>
<article-id pub-id-type="doi">10.21105/joss.06450</article-id>
<title-group>
<article-title>SeqMetrics: a unified library for performance metrics
calculation in Python</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0004-9040-3459</contrib-id>
<name>
<surname>Rubab</surname>
<given-names>Fazila</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-7446-6805</contrib-id>
<name>
<surname>Iftikhar</surname>
<given-names>Sara</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-0031-745X</contrib-id>
<name>
<surname>Abbas</surname>
<given-names>Ather</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Environmental AI Research Group, Islamabad,
Pakistan</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>King Abdullah University of Science and Technology, Thuwal,
Saudi Arabia</institution>
</institution-wrap>
</aff>
</contrib-group>
<volume>9</volume>
<issue>99</issue>
<fpage>6450</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>modeling</kwd>
<kwd>errors</kwd>
<kwd>performance metrics</kwd>
<kwd>data analysis</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Current Python infrastructure lacks a robust, unified, and
  simplified library for error and performance metrics calculations. The
  SeqMetrics application responds to this critical need, providing a
  robust toolkit for evaluating regression and classification models
  with a comprehensive suite of performance metrics suitable for tabular
  and time series data. Designed for versatility, the library offers 112
  regression and 22 classification metrics through both functional and
  class-based APIs. The design of the library ensures seamless
  integration into various coding environments. The web-based graphical
  user interface (GUI) of SeqMetrics enhances user accessibility,
  allowing efficient input through data arrays or file imports. It
  serves to users of varied programming expertise, offering a
  user-friendly interface for rigorous model assessment. The library
  prioritizes computational efficiency and has minimal dependencies with
  straightforward pip installation from PyPI. Rigorous testing of
  Seqmetrics ensures robustness, supported by extensive documentation
  for effective utilization by people from diverse backgrounds. Overall,
  SeqMetrics bridges the gap in Python’s scientific analysis toolkit,
  contributing to data analysis.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Performance metrics and errors measure the distance and similarity
  between two arrays
  (<xref alt="Botchkarev, 2019" rid="ref-Botchkarev" ref-type="bibr">Botchkarev,
  2019</xref>). Quantification and analysis of model performance through
  error and performance metrics is a crucial step in any scientific
  modeling exercise
  (<xref alt="Gleckler et al., 2008" rid="ref-Gleckler2008" ref-type="bibr">Gleckler
  et al., 2008</xref>). However, Python lacks a unified library
  encompassing performance metrics across diverse fields for
  one-dimensional numerical data. Existing Python libraries for
  performance evaluation offer only a limited number of metrics. For
  instance, the metrics sub-module from Keras
  (<xref alt="Chollet &amp; others, 2015" rid="ref-chollet2015keras" ref-type="bibr">Chollet
  &amp; others, 2015</xref>) contains only 24 metrics, while
  scikit-learn’s
  (<xref alt="Pedregosa et al., 2011" rid="ref-pedregosa2011scikit" ref-type="bibr">Pedregosa
  et al., 2011</xref>) metrics module covers 45 metrics. The
  TorchMetrics library
  (<xref alt="Detlefsen et al., 2022" rid="ref-detlefsen2022torchmetrics" ref-type="bibr">Detlefsen
  et al., 2022</xref>) offers a comprehensive list of over 100 metrics
  from diverse fields. However, it provides only 48 that are intended
  for 1-dimensional numerical data. Morevoer, the library’s module-based
  API requires understanding of Object Oriented Programming and its
  simpler functional API does not cover all metrics. There are also some
  subject-specific libraries. These include NeuralHydrology
  (<xref alt="Kratzert et al., 2022" rid="ref-Kratzert2022" ref-type="bibr">Kratzert
  et al., 2022</xref>), hydroeval
  (<xref alt="Hallouin, 2021" rid="ref-hydroeval2021" ref-type="bibr">Hallouin,
  2021</xref>), and HydroErr
  (<xref alt="Roberts et al., 2021" rid="ref-wade2018hydroerr" ref-type="bibr">Roberts
  et al., 2021</xref>), which address the needs of hydrology and water
  sciences. However, these resources lack more general sets of metrics,
  which the experts in these domains often require. Another limitation
  of these otherwise valuable libraries is their wide range of
  dependencies. For example, TorchMetrics depends on PyTorch
  (<xref alt="Paszke et al., 2019" rid="ref-paszke2019pytorch" ref-type="bibr">Paszke
  et al., 2019</xref>), which itself depends on several other libraries.
  This can lead to dependency conflicts due to version constraints,
  complicating the maintenance of multiple libraries within a single
  Python environment
  (<xref alt="Wang et al., 2020" rid="ref-Wang2020" ref-type="bibr">Wang
  et al., 2020</xref>). Addressing this gap is imperative to provide
  researchers a unified platform for comprehensive model evaluation and
  with minimal requirements, streamlining their computational workflows
  and enhancing accuracy and reproducibility across various domains
  (<xref alt="Mukherjee et al., 2021" rid="ref-Mukherjee2021" ref-type="bibr">Mukherjee
  et al., 2021</xref>). The SeqMetrics application addresses the
  critical need for a robust and versatile toolkit for assessing and
  comparing regression and classification model performance across a
  spectrum of domains. With a comprehensive suite of performance metrics
  for sequential (tabular and time series) data, spanning traditional
  statistical measures to specialized atmospheric sciences metrics, the
  software serves as a valuable resource for researchers, analysts, and
  practitioners in fields such as hydrology, finance, and engineering.
  By providing a standardized platform for evaluating model performance
  through a diverse set of metrics, the application facilitates the
  rigorous validation and optimization of regression and classification
  models, contributing to informed decision-making processes and
  ensuring the reliability of predictive modeling in complex and dynamic
  systems.</p>
</sec>
<sec id="api-design">
  <title>API design</title>
  <p>The SeqMetrics library offers a comprehensive suite of 112
  regression metrics and 22 classification metrics to facilitate a
  detailed assessment of model performance. Regression metrics such as
  R-squared, Mean Squared Error (MSE), and Root MSE are provided for use
  with continuous variables. On the other hand, for categorical data,
  there are classification metrics including accuracy, precision,
  recall, F1 score, and the area under the ROC curve, among others. From
  a programming perspective, the SeqMetrics library employs a modular
  architecture, offering functional and class-based APIs for smooth
  integration across diverse coding environments. The class-based API
  consists of <monospace>RegressionMetrics</monospace> and
  <monospace>ClassificationMetrics</monospace> classes
  (<xref alt="[fig1]" rid="fig1">[fig1]</xref>a), which provide users
  with a structured approach for model evaluation. The user has to first
  initialize these classes by providing the data and then all the
  performance metrics are available from the respective instances of the
  classes. Conversely, the functional API offers a more simplified
  approach to access these metrics without initializing the classes
  initially (<xref alt="[fig1]" rid="fig1">[fig1]</xref>b). All the
  functions which calculate performance metrics receive two arrays as
  obligatory input arguments and return a scalar value as output. With a
  unified API design and minimal dependency only on NumPy, the library
  prioritizes efficiency in computational tasks. It ensures
  straightforward installation via pip from the Python Package Index
  (PyPI), a widely adopted standard, which not only streamlines the
  process but also contributes to the overall efficiency of the
  application for the broader scientific community.</p>
  <fig>
    <caption><p>Comparison of class-based and functional
    API<styled-content id="fig1"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="jpeg" xlink:href="fig1.jpg" />
  </fig>
</sec>
<sec id="graphical-user-interface">
  <title>Graphical User Interface</title>
  <p>The SeqMetrics GUI offers a user-friendly and intuitive platform
  for seamless error calculation. This interface is built and deployed
  using streamlit at
  <ext-link ext-link-type="uri" xlink:href="https://seqmetrics.streamlit.app">https://seqmetrics.streamlit.app</ext-link>.
  There are two ways of providing input in this web-based GUI. The first
  method consists of providing the input data arrays by copying and
  pasting the true and predicted arrays
  (<xref alt="[fig2]" rid="fig2">[fig2]</xref>). Another way is by
  importing CSV or Excel files into the interface
  (<xref alt="[fig3]" rid="fig3">[fig3]</xref>). This streamlines the
  process of entering true and predicted values for evaluation. The GUI
  provides a clean and organized layout, guiding users through the
  evaluation workflow with clear instructions. With its simplicity and
  ease of use, the GUI empowers users to perform regression and
  classification model assessments effortlessly. The SeqMetrics GUI
  enhances accessibility and efficiency in evaluating model performance
  for both seasoned data scientists and beginners, without compromising
  on robustness and precision. Therefore, the design of the SeqMetrics
  is equally beneficial for advanced programmers as well as for those
  with limited programming knowledge.</p>
  <fig>
    <caption><p>Method of copying and pasting arrays in SeqMetrics
    GUI<styled-content id="fig2"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="jpeg" xlink:href="fig2.jpg" />
  </fig>
  <fig>
    <caption><p>Method of reading data from files in SeqMetrics
    GUI<styled-content id="fig3"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="jpeg" xlink:href="fig3.jpg" />
  </fig>
  <p>The streamlit-based GUI can also be launched locally without having
  to upload the data on streamlit servers. This can be useful for users
  with data-privacy concerns or those without internet connection. The
  steps to launch streamlit GUI locally involve cloning the respository,
  installing the requirements and streamlit Python package and then
  launching the streamlit app. These steps are given below:</p>
  <preformat>    git clone https://github.com/AtrCheema/SeqMetrics.git
    cd SeqMetrics
    pip install -r requirements.txt
    pip install streamlit
    streamlit run app.py
  </preformat>
</sec>
<sec id="testing-and-documentation">
  <title>Testing and documentation</title>
  <p>Following the ‘unit test’ protocol, the library undergoes
  comprehensive testing of all regression and classification metrics.
  The library is tested for multiple scenarios especially for the
  classification case which includes numerical and logits inputs,
  ensuring robustness in various classification contexts such as binary,
  multiclass, and multilabel. Such comprehensive testing ensures the
  robustness and accuracy of each metric, providing users with reliable
  results. Additionally, the library features extensive documentation,
  with detailed docstrings for each function and class, accompanied by
  fully executable examples. This thorough documentation enhances user
  understanding and facilitates efficient utilization of the library’s
  capabilities in both regression and classification scenarios.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-Gleckler2008">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Gleckler</surname><given-names>P. J.</given-names></name>
        <name><surname>Taylor</surname><given-names>K. E.</given-names></name>
        <name><surname>Doutriaux</surname><given-names>C.</given-names></name>
      </person-group>
      <article-title>Performance metrics for climate models</article-title>
      <source>Journal of Geophysical Research: Atmospheres</source>
      <year iso-8601-date="2008">2008</year>
      <volume>113</volume>
      <issue>D6</issue>
      <uri>https://agupubs.onlinelibrary.wiley.com/doi/abs/10.1029/2007JD008972</uri>
      <pub-id pub-id-type="doi">10.1029/2007JD008972</pub-id>
      <fpage></fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Botchkarev">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Botchkarev</surname><given-names>Alexei</given-names></name>
      </person-group>
      <article-title>Performance metrics (error measures) in machine learning regression, forecasting and prognostics: Properties and typology</article-title>
      <source>Interdisciplinary Journal of Information, Knowledge, and Management</source>
      <year iso-8601-date="2019">2019</year>
      <volume>14</volume>
      <issue></issue>
      <uri>https://arxiv.org/abs/1809.03006</uri>
      <pub-id pub-id-type="doi">10.28945/4184</pub-id>
      <fpage>45</fpage>
      <lpage>76</lpage>
    </element-citation>
  </ref>
  <ref id="ref-chollet2015keras">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Chollet</surname><given-names>François</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Keras</article-title>
      <publisher-name>https://github.com/fchollet/keras; GitHub</publisher-name>
      <year iso-8601-date="2015">2015</year>
    </element-citation>
  </ref>
  <ref id="ref-detlefsen2022torchmetrics">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Detlefsen</surname><given-names>Nicki Skafte</given-names></name>
        <name><surname>Borovec</surname><given-names>Jiri</given-names></name>
        <name><surname>Schock</surname><given-names>Justus</given-names></name>
        <name><surname>Jha</surname><given-names>Ananya Harsh</given-names></name>
        <name><surname>Koker</surname><given-names>Teddy</given-names></name>
        <name><surname>Di Liello</surname><given-names>Luca</given-names></name>
        <name><surname>Stancl</surname><given-names>Daniel</given-names></name>
        <name><surname>Quan</surname><given-names>Changsheng</given-names></name>
        <name><surname>Grechkin</surname><given-names>Maxim</given-names></name>
        <name><surname>Falcon</surname><given-names>William</given-names></name>
      </person-group>
      <article-title>TorchMetrics - measuring reproducibility in PyTorch</article-title>
      <source>Journal of Open Source Software</source>
      <year iso-8601-date="2022">2022</year>
      <volume>7</volume>
      <issue>70</issue>
      <pub-id pub-id-type="doi">10.21105/joss.04101</pub-id>
      <fpage>4101</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-pedregosa2011scikit">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Pedregosa</surname><given-names>Fabian</given-names></name>
        <name><surname>Varoquaux</surname><given-names>Gaël</given-names></name>
        <name><surname>Gramfort</surname><given-names>Alexandre</given-names></name>
        <name><surname>Michel</surname><given-names>Vincent</given-names></name>
        <name><surname>Thirion</surname><given-names>Bertrand</given-names></name>
        <name><surname>Grisel</surname><given-names>Olivier</given-names></name>
        <name><surname>Blondel</surname><given-names>Mathieu</given-names></name>
        <name><surname>Prettenhofer</surname><given-names>Peter</given-names></name>
        <name><surname>Weiss</surname><given-names>Ron</given-names></name>
        <name><surname>Dubourg</surname><given-names>Vincent</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Scikit-learn: Machine learning in Python</article-title>
      <source>the Journal of machine Learning research</source>
      <publisher-name>JMLR. org</publisher-name>
      <year iso-8601-date="2011">2011</year>
      <volume>12</volume>
      <uri>http://jmlr.org/papers/v12/pedregosa11a.html</uri>
      <fpage>2825</fpage>
      <lpage>2830</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Kratzert2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kratzert</surname><given-names>Frederik</given-names></name>
        <name><surname>Gauch</surname><given-names>Martin</given-names></name>
        <name><surname>Nearing</surname><given-names>Grey</given-names></name>
        <name><surname>Klotz</surname><given-names>Daniel</given-names></name>
      </person-group>
      <article-title>NeuralHydrology — a Python library for deep learning research in hydrology</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <volume>7</volume>
      <issue>71</issue>
      <uri>https://doi.org/10.21105/joss.04050</uri>
      <pub-id pub-id-type="doi">10.21105/joss.04050</pub-id>
      <fpage>4050</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-hydroeval2021">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Hallouin</surname><given-names>Thibault</given-names></name>
      </person-group>
      <article-title>Hydroeval: An evaluator for streamflow time series in Python</article-title>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <pub-id pub-id-type="doi">10.5281/zenodo.2591217</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-wade2018hydroerr">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Roberts</surname><given-names>Wade</given-names></name>
        <name><surname>Williams</surname><given-names>Gustavious</given-names></name>
        <name><surname>Jackson</surname><given-names>Elise</given-names></name>
        <name><surname>Nelson</surname><given-names>James</given-names></name>
        <name><surname>Ames</surname><given-names>Daniel</given-names></name>
      </person-group>
      <article-title>Hydrostats: A Python package for characterizing errors between observed and predicted time series</article-title>
      <source>Hydrology</source>
      <publisher-name>MDPI</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <volume>5</volume>
      <uri>https://www.mdpi.com/2306-5338/5/4/66</uri>
      <pub-id pub-id-type="doi">10.3390/hydrology5040066</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Wang2020">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Wang</surname><given-names>Ying</given-names></name>
        <name><surname>Wen</surname><given-names>Ming</given-names></name>
        <name><surname>Liu</surname><given-names>Yepang</given-names></name>
        <name><surname>Wang</surname><given-names>Yibo</given-names></name>
        <name><surname>Li</surname><given-names>Zhenming</given-names></name>
        <name><surname>Wang</surname><given-names>Chao</given-names></name>
        <name><surname>Yu</surname><given-names>Hai</given-names></name>
        <name><surname>Cheung</surname><given-names>Shing-Chi</given-names></name>
        <name><surname>Xu</surname><given-names>Chang</given-names></name>
        <name><surname>Zhu</surname><given-names>Zhiliang</given-names></name>
      </person-group>
      <article-title>Watchman: Monitoring dependency conflicts for Python library ecosystem</article-title>
      <source>Proceedings of the ACM/IEEE 42nd international conference on software engineering</source>
      <publisher-name>Association for Computing Machinery</publisher-name>
      <publisher-loc>New York, NY, USA</publisher-loc>
      <year iso-8601-date="2020">2020</year>
      <isbn>9781450371216</isbn>
      <uri>https://doi.org/10.1145/3377811.3380426</uri>
      <pub-id pub-id-type="doi">10.1145/3377811.3380426</pub-id>
      <fpage>125</fpage>
      <lpage>135</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Mukherjee2021">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Mukherjee</surname><given-names>Suchita</given-names></name>
        <name><surname>Almanza</surname><given-names>Abigail</given-names></name>
        <name><surname>Rubio-González</surname><given-names>Cindy</given-names></name>
      </person-group>
      <article-title>Fixing dependency errors for Python build reproducibility</article-title>
      <source>Proceedings of the 30th ACM SIGSOFT international symposium on software testing and analysis</source>
      <publisher-name>Association for Computing Machinery</publisher-name>
      <publisher-loc>New York, NY, USA</publisher-loc>
      <year iso-8601-date="2021">2021</year>
      <isbn>9781450384599</isbn>
      <uri>https://doi.org/10.1145/3460319.3464797</uri>
      <pub-id pub-id-type="doi">10.1145/3460319.3464797</pub-id>
      <fpage>439</fpage>
      <lpage>451</lpage>
    </element-citation>
  </ref>
  <ref id="ref-paszke2019pytorch">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Paszke</surname><given-names>Adam</given-names></name>
        <name><surname>Gross</surname><given-names>Sam</given-names></name>
        <name><surname>Massa</surname><given-names>Francisco</given-names></name>
        <name><surname>Lerer</surname><given-names>Adam</given-names></name>
        <name><surname>Bradbury</surname><given-names>James</given-names></name>
        <name><surname>Chanan</surname><given-names>Gregory</given-names></name>
        <name><surname>Killeen</surname><given-names>Trevor</given-names></name>
        <name><surname>Lin</surname><given-names>Zeming</given-names></name>
        <name><surname>Gimelshein</surname><given-names>Natalia</given-names></name>
        <name><surname>Antiga</surname><given-names>Luca</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>PyTorch: An imperative style, high-performance deep learning library</article-title>
      <source>Advances in neural information processing systems</source>
      <year iso-8601-date="2019">2019</year>
      <volume>32</volume>
      <uri>https://doi.org/10.48550/arXiv.1912.01703</uri>
      <pub-id pub-id-type="doi">10.48550/arXiv.1912.01703</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
