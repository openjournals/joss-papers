<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">7743</article-id>
<article-id pub-id-type="doi">10.21105/joss.07743</article-id>
<title-group>
<article-title>MRI-NUFFT: Doing non-Cartesian MRI has never been
easier</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-6998-232X</contrib-id>
<name>
<surname>Comby</surname>
<given-names>Pierre-Antoine</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-5317-2522</contrib-id>
<name>
<surname>Daval-Frérot</surname>
<given-names>Guillaume</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Pan</surname>
<given-names>Caini</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Tanabene</surname>
<given-names>Asma</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="aff" rid="aff-5"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Oudjman</surname>
<given-names>Léna</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Cencini</surname>
<given-names>Matteo</given-names>
</name>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-5374-962X</contrib-id>
<name>
<surname>Ciuciu</surname>
<given-names>Philippe</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-9859-6006</contrib-id>
<name>
<surname>GR</surname>
<given-names>Chaithya</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="corresp" rid="cor-2"><sup>*</sup></xref>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>MIND, Inria, France</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Université Paris-Saclay / CEA, France</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Chipiron, France</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>INFN, Pisa Division, Italy</institution>
</institution-wrap>
</aff>
<aff id="aff-5">
<institution-wrap>
<institution>Siemens Healthineers, Princeton, United States of
America</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
<corresp id="cor-2">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-09-20">
<day>20</day>
<month>9</month>
<year>2024</year>
</pub-date>
<volume>10</volume>
<issue>108</issue>
<fpage>7743</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>MRI</kwd>
<kwd>NUFFT</kwd>
<kwd>Numpy</kwd>
<kwd>CUDA</kwd>
<kwd>Torch</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>MRI-NUFFT is a python package that provides a universal interface
  to various Non-Uniform Fast Fourier Transform libraries running on CPU
  or GPU (gpuNUFFT, finufft, cufinufft, pyNFFT), adding compatibility
  with standard array library (NumPy, CuPy, PyTorch, TensorFlow, etc.)
  On top of these libraries it extends the existing NUFFT operations to
  provide a physical model of the MRI acquisition process
  (e.g. multi-coil acquisition and static-field inhomogeneities). It
  also provides a wide variety of customizable implementations of
  non-Cartesian sampling trajectories, as well as density compensation
  methods. Finally, it proposes optimized auto-differentiation with
  respect to the data and sampling locations for machine learning. With
  MRI-NUFFT one can experiment with non-Cartesian sampling in MRI, get
  access to the latest advances in the field and state-of-the-art
  sampling patterns.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>MRI is an non-invasive biomedical imaging technique, where raw data
  is sampled in the spatial frequency domain (k-space) and final images
  are obtained by applying an inverse (fast) Fourier transform on this
  data. Traditionally, the data is sampled on a Cartesian grid (often
  partially by skipping lines to accelerate the acquisition) and
  reconstructed using FFT-based algorithms. However, the Cartesian
  approach is not always the best choice for data collection, and
  non-Cartesian sampling schemes have been proposed to improve image
  quality, reduce acquisition time or enable new imaging modalities. But
  the reconstruction of non-Cartesian data is more challenging and
  requires the use of non-uniform fast Fourier transform (NUFFT)
  algorithms. Several NUFFT libraries have been developed in the past
  few years, but they are not always easy to use or don’t account for
  the specificities of MRI data acquisition (e.g. multi-coil
  acquisition, static-field inhomogeneities, density compensation,
  etc.). Also their performances can vary a lot depending on the use
  cases (2D vs 3D data, number of coils, etc.).</p>
  <p>Moreover, non-Cartesian acquisitions are still an active research
  field, with new sampling patterns being proposed regularly. With
  MRI-NUFFT one can easily experiment with these new patterns and
  compare them to existing ones. Furthermore, there has been a growing
  interest in using deep learning to jointly learn MRI acquisition and
  reconstruction, which requires to compute the gradients of the
  reconstruction with respect to the raw data and/or the sampling
  locations.</p>
</sec>
<sec id="features">
  <title>Features</title>
  <fig>
    <caption><p>MRI-NUFFT as an interface for non-Cartesian
    MRI</p></caption>
    <graphic mimetype="image" mime-subtype="svg+xml" xlink:href="../_static/mri-nufft-scheme.svg" />
  </fig>
  <sec id="nufft-library-compatibility">
    <title>NUFFT Library compatibility</title>
    <p>MRI-NUFFT is compatible with the following NUFFT librairies:
    finufft[Alex H. Barnett et al.
    (<xref alt="2019" rid="ref-barnett_nufft_2019" ref-type="bibr">2019</xref>)](<xref alt="A. H. Barnett, 2020" rid="ref-barnett_aliasing_2020" ref-type="bibr">A.
    H. Barnett, 2020</xref>),
    cufinufft(<xref alt="Shih et al., 2021" rid="ref-shih_cufinufft_2021" ref-type="bibr">Shih
    et al., 2021</xref>),
    gpuNUFFT(<xref alt="Knoll et al., 2014" rid="ref-knoll_gpunufft_2014" ref-type="bibr">Knoll
    et al., 2014</xref>),
    TorchKbNufft(<xref alt="Muckley et al., 2020" rid="ref-muckley_torchkbnufft_2020" ref-type="bibr">Muckley
    et al., 2020</xref>), pyNFFT,
    SigPy(<xref alt="Ong Frank &amp; Lustig Michael, 2019" rid="ref-ong_frank_sigpy_2019" ref-type="bibr">Ong
    Frank &amp; Lustig Michael, 2019</xref>) and
    BART(<xref alt="Uecker et al., 2015" rid="ref-uecker_berkley_2015" ref-type="bibr">Uecker
    et al., 2015</xref>). Using our
    <ext-link ext-link-type="uri" xlink:href="https://github.com/mind-inria/mri-nufft-benchmark/">benchmark</ext-link>
    we can also determine which NUFFT implementation provides the best
    performances both in term of computation time and memory footprint.
    At the time of writing, cufinufft and gpuNUFFT provide the best
    performances by leveraging CUDA acceleration. MRI-NUFFT supports as
    well standard array libraries (NumPy, CuPy, PyTorch, TensorFlow,
    etc.) and optimizes data copies, relying on the array-API standard.
    It also provides several enhancements on top of these backends,
    notably an optimized 2.5D NUFFT (for stacks of 2D non uniform
    trajectories, commonly used in MRI), and a data-consistency term for
    iterative reconstruction (<inline-formula><alternatives>
    <tex-math><![CDATA[\mathcal{F}_\Omega^*(\mathcal{F}_\Omega x - y)]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msubsup><mml:mi>ℱ</mml:mi><mml:mi>Ω</mml:mi><mml:mo>*</mml:mo></mml:msubsup><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>ℱ</mml:mi><mml:mi>Ω</mml:mi></mml:msub><mml:mi>x</mml:mi><mml:mo>−</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>).</p>
  </sec>
  <sec id="extended-fourier-model">
    <title>Extended Fourier Model</title>
    <p>MRI-NUFFT provides a physical model of the MRI acquisition
    process, including multi-coil acquisition and static-field
    inhomogeneities. This model is compatible with the NUFFT libraries,
    and can be used to simulate the acquisition of MRI data, or to
    reconstruct data from a given set of measurements. Namely we provide
    a linear operator that encapsulates the forward and adjoint NUFFT
    operators, the coil sensitivity maps and (optionally) the static
    field inhomogeneities. The forward model is described by the
    following equation: <disp-formula><alternatives>
    <tex-math><![CDATA[y(\boldsymbol{\nu}_i) = \sum_{j=1}^N x(\boldsymbol{u}_j) e^{-2\imath\pi\boldsymbol{u}_j\cdot\boldsymbol{\nu_i}} + n_i, \quad i=1,\dots,M]]></tex-math>
    <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>y</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>𝛎</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:munderover><mml:mi>x</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>𝐮</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mi>−</mml:mi><mml:mn>2</mml:mn><mml:mo>ı</mml:mo><mml:mi>π</mml:mi><mml:msub><mml:mi>𝐮</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>⋅</mml:mo><mml:msub><mml:mi>𝛎</mml:mi><mml:mi>𝐢</mml:mi></mml:msub></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mspace width="1.0em"></mml:mspace><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></alternatives></disp-formula>
    where: <inline-formula><alternatives>
    <tex-math><![CDATA[x(\boldsymbol{u})]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>x</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐮</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
    is the spatially varying image contrast acquired;
    <inline-formula><alternatives>
    <tex-math><![CDATA[y_1, \dots, y_M]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>
    are the sampled points at frequency locations;
    <inline-formula><alternatives>
    <tex-math><![CDATA[\Omega=\lbrace \boldsymbol{\nu}_1, \dots, \boldsymbol{\nu}_M \in [-1/2, 1/2]^d\rbrace]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>Ω</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false" form="prefix">{</mml:mo><mml:msub><mml:mi>𝛎</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>𝛎</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="true" form="prefix">[</mml:mo><mml:mi>−</mml:mi><mml:mn>1</mml:mn><mml:mi>/</mml:mi><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mi>/</mml:mi><mml:mn>2</mml:mn><mml:mo stretchy="true" form="postfix">]</mml:mo></mml:mrow><mml:mi>d</mml:mi></mml:msup><mml:mo stretchy="false" form="postfix">}</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>;
    <inline-formula><alternatives>
    <tex-math><![CDATA[\boldsymbol{u}_j]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>𝐮</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
    are the <inline-formula><alternatives>
    <tex-math><![CDATA[N]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>N</mml:mi></mml:math></alternatives></inline-formula>
    spatial locations of image voxels, and
    <inline-formula><alternatives>
    <tex-math><![CDATA[n_i]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>n</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
    is a zero-mean complex-valued Gaussian noise, modeling the thermal
    noise of the scanner.</p>
    <p>This can also be formulated using the operator notation
    <inline-formula><alternatives>
    <tex-math><![CDATA[\boldsymbol{y} = \mathcal{F}_\Omega (\boldsymbol{x}) + \boldsymbol{n}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>𝐲</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>ℱ</mml:mi><mml:mi>Ω</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>𝐧</mml:mi></mml:mrow></mml:math></alternatives></inline-formula></p>
    <p>As the sampling locations <inline-formula><alternatives>
    <tex-math><![CDATA[\Omega]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>Ω</mml:mi></mml:math></alternatives></inline-formula>
    are non-uniform and the image locations
    <inline-formula><alternatives>
    <tex-math><![CDATA[\boldsymbol{u}_j]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>𝐮</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
    are uniform, <inline-formula><alternatives>
    <tex-math><![CDATA[\mathcal{F}_\Omega]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ℱ</mml:mi><mml:mi>Ω</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
    is a NUDFT operator, and the equation above describe a Type 2 NUDFT.
    Similarly the adjoint operator is a Type 1 NUDFT:</p>
    <table-wrap>
      <caption>
        <p>Correspondence Table between NUFFT and MRI acquisition
        model.</p>
      </caption>
      <table>
        <colgroup>
          <col width="18%" />
          <col width="16%" />
          <col width="30%" />
          <col width="36%" />
        </colgroup>
        <thead>
          <tr>
            <th align="left">NUFFT Type</th>
            <th align="left">Operation</th>
            <th align="left">MRI Transform</th>
            <th align="left">Operator</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="left">Type 1</td>
            <td align="left">Adjoint</td>
            <td align="left">K-space <inline-formula><alternatives>
            <tex-math><![CDATA[\to]]></tex-math>
            <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mo>→</mml:mo></mml:math></alternatives></inline-formula>
            image</td>
            <td align="left"><inline-formula><alternatives>
            <tex-math><![CDATA[\mathcal{F}_\Omega^*]]></tex-math>
            <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msubsup><mml:mi>ℱ</mml:mi><mml:mi>Ω</mml:mi><mml:mo>*</mml:mo></mml:msubsup></mml:math></alternatives></inline-formula></td>
          </tr>
          <tr>
            <td align="left">Type 2</td>
            <td align="left">Forward</td>
            <td align="left">Image <inline-formula><alternatives>
            <tex-math><![CDATA[\to]]></tex-math>
            <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mo>→</mml:mo></mml:math></alternatives></inline-formula>
            k-space</td>
            <td align="left"><inline-formula><alternatives>
            <tex-math><![CDATA[\mathcal{F}_\Omega]]></tex-math>
            <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ℱ</mml:mi><mml:mi>Ω</mml:mi></mml:msub></mml:math></alternatives></inline-formula></td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <sec id="parallel-imaging-model">
      <title>Parallel Imaging Model</title>
      <p>In MRI the acquired signal can be received by multiple antennas
      (&quot;coils&quot;). Each coil possesses a specific sensitivity
      profile (i.e. each sees the object differently due to its physical
      layout).</p>
      <p><disp-formula><alternatives>
      <tex-math><![CDATA[\begin{aligned}
      \tilde{\boldsymbol{y}} = \begin{bmatrix}
       \mathcal{F}_\Omega S_1 \\
       \vdots  \\
       \mathcal{F}_\Omega S_L \\
       \end{bmatrix}
       \boldsymbol{x} + \boldsymbol{n}_\ell  = \mathcal{F}_\Omega S \otimes \boldsymbol{x} + \tilde{\boldsymbol{n}}
      \end{aligned}]]></tex-math>
      <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mtable><mml:mtr><mml:mtd columnalign="right" style="text-align: right"><mml:mover><mml:mi>𝐲</mml:mi><mml:mo accent="true">̃</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">[</mml:mo><mml:mtable><mml:mtr><mml:mtd columnalign="center" style="text-align: center"><mml:msub><mml:mi>ℱ</mml:mi><mml:mi>Ω</mml:mi></mml:msub><mml:msub><mml:mi>S</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center" style="text-align: center"><mml:mi>⋮</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center" style="text-align: center"><mml:msub><mml:mi>ℱ</mml:mi><mml:mi>Ω</mml:mi></mml:msub><mml:msub><mml:mi>S</mml:mi><mml:mi>L</mml:mi></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center" style="text-align: center"></mml:mtd></mml:mtr></mml:mtable><mml:mo stretchy="true" form="postfix">]</mml:mo></mml:mrow><mml:mi>𝐱</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>𝐧</mml:mi><mml:mo>ℓ</mml:mo></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>ℱ</mml:mi><mml:mi>Ω</mml:mi></mml:msub><mml:mi>S</mml:mi><mml:mo>⊗</mml:mo><mml:mi>𝐱</mml:mi><mml:mo>+</mml:mo><mml:mover><mml:mi>𝐧</mml:mi><mml:mo accent="true">̃</mml:mo></mml:mover></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula></p>
      <p>where <inline-formula><alternatives>
      <tex-math><![CDATA[S_1, \dots, S_L]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>L</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>
      are the sensitivity maps of each coil. Such maps can be acquired
      separately by sampling the k-space low frequencies, or estimated
      from the data.</p>
    </sec>
    <sec id="off-resonance-correction-model">
      <title>Off-resonance correction model</title>
      <p>The constant magnetic field <inline-formula><alternatives>
      <tex-math><![CDATA[B_0]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>B</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
      applied in an MRI machine (typically 1.5, 3 or 7 Teslas) is
      inherently disturbed by metal implants or even simply by
      difference in magnetic susceptibilities of tissues (such at
      air-tissue interfaces close to the nose and ear canals). Those
      field perturbations introduce a spatially varying phase shift in
      the acquired frequencies (noted <inline-formula><alternatives>
      <tex-math><![CDATA[\Delta\omega_0]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>Δ</mml:mi><mml:msub><mml:mi>ω</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>),
      causing the physical model to deviate from the ideal Fourier
      model. Fortunately, this inhomogeneity map can be acquired
      separately or estimated then integrated as:</p>
      <p><disp-formula><alternatives>
      <tex-math><![CDATA[y(t_i) = \int_{\mathbb{R}^d} x(\boldsymbol{u}) e^{-2\imath\pi \boldsymbol{u} \cdot\boldsymbol{\nu_i} + \Delta\omega(\boldsymbol{u}) t_i} d\boldsymbol{u}]]></tex-math>
      <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>y</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mo>∫</mml:mo><mml:msup><mml:mi>ℝ</mml:mi><mml:mi>d</mml:mi></mml:msup></mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐮</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mi>−</mml:mi><mml:mn>2</mml:mn><mml:mo>ı</mml:mo><mml:mi>π</mml:mi><mml:mi>𝐮</mml:mi><mml:mo>⋅</mml:mo><mml:msub><mml:mi>𝛎</mml:mi><mml:mi>𝐢</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>Δ</mml:mi><mml:mi>ω</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐮</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msup><mml:mi>d</mml:mi><mml:mi>𝐮</mml:mi></mml:mrow></mml:math></alternatives></disp-formula></p>
      <p>where <inline-formula><alternatives>
      <tex-math><![CDATA[t_i]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
      is the time at which the frequency <inline-formula><alternatives>
      <tex-math><![CDATA[\nu_i]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ν</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
      is acquired. With these mixed-domain field perturbations, the
      Fourier model does not hold anymore and the FFT algorithm can no
      longer be used. The main solution
      (<xref alt="Sutton et al., 2003" rid="ref-sutton_fast_2003" ref-type="bibr">Sutton
      et al., 2003</xref>) is to interpolate the mixed-domain
      exponential term by splitting it into single-domain weights
      <inline-formula><alternatives>
      <tex-math><![CDATA[b_{m, \ell}]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mo>ℓ</mml:mo></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>
      and <inline-formula><alternatives>
      <tex-math><![CDATA[c_{\ell, n}]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mo>ℓ</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>,
      where <inline-formula><alternatives>
      <tex-math><![CDATA[L \ll M, N]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>L</mml:mi><mml:mo>≪</mml:mo><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
      regular Fourier transforms are performed to approximate the
      non-Fourier transform.</p>
      <p><disp-formula><alternatives>
      <tex-math><![CDATA[x(\boldsymbol{u_n}) = \sum_{\ell=1}^L c_{\ell, n} \sum_{m}^M y(t_m) b_{m, \ell} e^{2\imath\pi \boldsymbol{u} \cdot \boldsymbol{\nu_i}}]]></tex-math>
      <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>x</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>𝐮</mml:mi><mml:mi>𝐧</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mo>ℓ</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>L</mml:mi></mml:munderover><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mo>ℓ</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:munderover><mml:mo>∑</mml:mo><mml:mi>m</mml:mi><mml:mi>M</mml:mi></mml:munderover><mml:mi>y</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mo>ℓ</mml:mo></mml:mrow></mml:msub><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>ı</mml:mo><mml:mi>π</mml:mi><mml:mi>𝐮</mml:mi><mml:mo>⋅</mml:mo><mml:msub><mml:mi>𝛎</mml:mi><mml:mi>𝐢</mml:mi></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:math></alternatives></disp-formula></p>
      <p>The coefficients <inline-formula><alternatives>
      <tex-math><![CDATA[B=(b_{m, \ell}) \in \mathbb{C}^{M\times L}]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>B</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mo>ℓ</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msup><mml:mi>ℂ</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>×</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>
      and <inline-formula><alternatives>
      <tex-math><![CDATA[C=(c_\ell, n) \in \mathbb{C}^{L\times N}]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>C</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mo>ℓ</mml:mo></mml:msub><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msup><mml:mi>ℂ</mml:mi><mml:mrow><mml:mi>L</mml:mi><mml:mo>×</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>
      can be estimated within MRI-NUFFT.</p>
    </sec>
  </sec>
  <sec id="trajectories-generation-and-expansions">
    <title>Trajectories generation and expansions</title>
    <p>MRI-NUFFT comes with a wide variety of non-Cartesian trajectory
    generation routines that have been gathered from the literature. It
    also provides ways to extend existing trajectories and export them
    to specific formats, for use in other toolkits and on MRI
    hardware.</p>
  </sec>
  <sec id="auto-differentiation-for-data-and-sampling-pattern">
    <title>Auto-differentiation for data and sampling pattern</title>
    <p>Following the formulation of
    (<xref alt="Wang &amp; Fessler, 2023" rid="ref-wang_efficient_2023" ref-type="bibr">Wang
    &amp; Fessler, 2023</xref>), MRI-NUFFT provides automatic
    differentiation for all NUFFT backends, with respect to both
    gradients and data (image or k-space). This enables efficient
    backpropagation through NUFFT operators and supports research on
    learned sampling model and image reconstruction network.</p>
  </sec>
</sec>
<sec id="mri-nufft-utilization">
  <title>MRI-NUFFT utilization</title>
  <p>MRI-NUFFT is already used in conjunction with other software such
  as SNAKE-fMRI
  (<xref alt="Comby et al., 2024" rid="ref-comby_snake-fmri_2024" ref-type="bibr">Comby
  et al., 2024</xref>), deepinv
  (<xref alt="Tachella et al., 2023" rid="ref-tachella_deepinverse_2023" ref-type="bibr">Tachella
  et al., 2023</xref>) and PySAP-MRI
  (<xref alt="Farrens et al., 2020" rid="ref-farrens_pysap_2020" ref-type="bibr">Farrens
  et al., 2020</xref>;
  <xref alt="Gueddari et al., 2020" rid="ref-gueddari_pysap-mri_2020" ref-type="bibr">Gueddari
  et al., 2020</xref>)</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-shih_cufinufft_2021">
    <element-citation publication-type="manuscript">
      <person-group person-group-type="author">
        <name><surname>Shih</surname><given-names>Yu-hsuan</given-names></name>
        <name><surname>Wright</surname><given-names>Garrett</given-names></name>
        <name><surname>Andén</surname><given-names>Joakim</given-names></name>
        <name><surname>Blaschke</surname><given-names>Johannes</given-names></name>
        <name><surname>Barnett</surname><given-names>Alex H.</given-names></name>
      </person-group>
      <article-title>cuFINUFFT: A load-balanced GPU library for general-purpose nonuniform FFTs</article-title>
      <year iso-8601-date="2021-03-25">2021</year><month>03</month><day>25</day>
      <date-in-citation content-type="access-date"><year iso-8601-date="2021-12-10">2021</year><month>12</month><day>10</day></date-in-citation>
      <uri>http://arxiv.org/abs/2102.08463</uri>
      <pub-id pub-id-type="doi">10.48550/arXiv.2102.08463</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-barnett_aliasing_2020">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Barnett</surname><given-names>A. H.</given-names></name>
      </person-group>
      <article-title>Aliasing error of the exp(\beta \sqrt{1-z^2}) kernel in the nonuniform fast fourier transform</article-title>
      <year iso-8601-date="2020">2020</year>
      <uri>https://arxiv.org/abs/2001.09405</uri>
      <pub-id pub-id-type="doi">10.48550/arXiv.2001.09405</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-barnett_nufft_2019">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Barnett</surname><given-names>Alex H.</given-names></name>
        <name><surname>Magland</surname><given-names>Jeremy F.</given-names></name>
        <name><surname>Klinteberg</surname><given-names>Ludvig af</given-names></name>
      </person-group>
      <article-title>A parallel non-uniform fast fourier transform library based on an &quot;exponential of semicircle&quot; kernel</article-title>
      <year iso-8601-date="2019">2019</year>
      <uri>https://arxiv.org/abs/1808.06736</uri>
      <pub-id pub-id-type="doi">10.48550/arXiv.1808.06736</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-uecker_berkley_2015">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Uecker</surname><given-names>Martin</given-names></name>
        <name><surname>Ong</surname><given-names>Frank</given-names></name>
        <name><surname>Tamir</surname><given-names>J</given-names></name>
      </person-group>
      <article-title>Berkley advanced reconstruction toolbox</article-title>
      <source>Proc. Intl. Soc. Mag. Reson. Med. 23</source>
      <publisher-loc>Toronto</publisher-loc>
      <year iso-8601-date="2015">2015</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-12-19">2023</year><month>12</month><day>19</day></date-in-citation>
      <uri>https://zenodo.org/records/10277939</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.592960</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-ong_frank_sigpy_2019">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <string-name>Ong Frank</string-name>
        <string-name>Lustig Michael</string-name>
      </person-group>
      <article-title>SigPy: A Python Package for High Performance Iterative Reconstruction</article-title>
      <source>ISMRM 2019</source>
      <year iso-8601-date="2019">2019</year>
    </element-citation>
  </ref>
  <ref id="ref-sutton_fast_2003">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Sutton</surname><given-names>B. P.</given-names></name>
        <name><surname>Noll</surname><given-names>D. C.</given-names></name>
        <name><surname>Fessler</surname><given-names>J. A.</given-names></name>
      </person-group>
      <article-title>Fast, iterative image reconstruction for MRI in the presence of field inhomogeneities</article-title>
      <source>IEEE Transactions on Medical Imaging</source>
      <year iso-8601-date="2003-02">2003</year><month>02</month>
      <volume>22</volume>
      <issue>2</issue>
      <issn>1558-254X</issn>
      <pub-id pub-id-type="doi">10.1109/TMI.2002.808360</pub-id>
      <fpage>178</fpage>
      <lpage>188</lpage>
    </element-citation>
  </ref>
  <ref id="ref-wang_efficient_2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wang</surname><given-names>Guanhua</given-names></name>
        <name><surname>Fessler</surname><given-names>Jeffrey A.</given-names></name>
      </person-group>
      <article-title>Efficient approximation of Jacobian matrices involving a non-uniform fast Fourier transform (NUFFT)</article-title>
      <source>IEEE Transactions on Computational Imaging</source>
      <year iso-8601-date="2023">2023</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2024-04-11">2024</year><month>04</month><day>11</day></date-in-citation>
      <volume>9</volume>
      <issn>2333-9403</issn>
      <uri>http://arxiv.org/abs/2111.02912</uri>
      <pub-id pub-id-type="doi">10.1109/TCI.2023.3240081</pub-id>
      <fpage>43</fpage>
      <lpage>54</lpage>
    </element-citation>
  </ref>
  <ref id="ref-knoll_gpunufft_2014">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Knoll</surname><given-names>Florian</given-names></name>
        <name><surname>Schwarzl</surname><given-names>Andreas</given-names></name>
        <name><surname>Diwoky</surname><given-names>Clemens</given-names></name>
        <name><surname>Sodickson</surname><given-names>Daniel K.</given-names></name>
      </person-group>
      <article-title>gpuNUFFT - an open source GPU library for 3D regridding with direct matlab interface</article-title>
      <year iso-8601-date="2014">2014</year>
      <uri>https://api.semanticscholar.org/CorpusID:53652346</uri>
    </element-citation>
  </ref>
  <ref id="ref-muckley_torchkbnufft_2020">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Muckley</surname><given-names>M. J.</given-names></name>
        <name><surname>Stern</surname><given-names>R.</given-names></name>
        <name><surname>Murrell</surname><given-names>T.</given-names></name>
        <name><surname>Knoll</surname><given-names>F.</given-names></name>
      </person-group>
      <article-title>TorchKbNufft: A high-level, hardware-agnostic non-uniform fast Fourier transform</article-title>
      <source>ISMRM workshop on data sampling &amp; image reconstruction</source>
      <year iso-8601-date="2020">2020</year>
    </element-citation>
  </ref>
  <ref id="ref-comby_snake-fmri_2024">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Comby</surname><given-names>Pierre-Antoine</given-names></name>
        <name><surname>Vignaud</surname><given-names>Alexandre</given-names></name>
        <name><surname>Ciuciu</surname><given-names>Philippe</given-names></name>
      </person-group>
      <article-title>SNAKE-fMRI: A modular fMRI data simulator from the space-time domain to k-space and back</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://arxiv.org/abs/2404.08282</uri>
      <pub-id pub-id-type="doi">10.48550/arXiv.2404.08282</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-farrens_pysap_2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Farrens</surname><given-names>S.</given-names></name>
        <name><surname>Grigis</surname><given-names>A.</given-names></name>
        <name><surname>El Gueddari</surname><given-names>L.</given-names></name>
        <name><surname>Ramzi</surname><given-names>Z.</given-names></name>
        <name><surname>G.r.</surname><given-names>Chaithya</given-names></name>
        <name><surname>Starck</surname><given-names>S.</given-names></name>
        <name><surname>Sarthou</surname><given-names>B.</given-names></name>
        <name><surname>Cherkaoui</surname><given-names>H.</given-names></name>
        <name><surname>Ciuciu</surname><given-names>P.</given-names></name>
        <name><surname>Starck</surname><given-names>J. -L.</given-names></name>
      </person-group>
      <article-title>PySAP: Python Sparse Data Analysis Package for multidisciplinary image processing</article-title>
      <source>Astronomy and Computing</source>
      <year iso-8601-date="2020-07-01">2020</year><month>07</month><day>01</day>
      <date-in-citation content-type="access-date"><year iso-8601-date="2024-09-27">2024</year><month>09</month><day>27</day></date-in-citation>
      <volume>32</volume>
      <issn>2213-1337</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S2213133720300561</uri>
      <pub-id pub-id-type="doi">10.1016/j.ascom.2020.100402</pub-id>
      <fpage>100402</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-tachella_deepinverse_2023">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Tachella</surname><given-names>Julian</given-names></name>
        <name><surname>Chen</surname><given-names>Dongdong</given-names></name>
        <name><surname>Hurault</surname><given-names>Samuel</given-names></name>
        <name><surname>Terris</surname><given-names>Matthieu</given-names></name>
        <name><surname>Wang</surname><given-names>Andrew</given-names></name>
      </person-group>
      <article-title>DeepInverse: A deep learning framework for inverse problems in imaging</article-title>
      <year iso-8601-date="2023-06">2023</year><month>06</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2024-09-27">2024</year><month>09</month><day>27</day></date-in-citation>
      <uri>https://github.com/deepinv/deepinv</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.7982256</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-gueddari_pysap-mri_2020">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Gueddari</surname><given-names>Loubna</given-names></name>
        <name><surname>Gr</surname><given-names>Chaithya</given-names></name>
        <name><surname>Ramzi</surname><given-names>Zaccharie</given-names></name>
        <name><surname>Farrens</surname><given-names>Samuel</given-names></name>
        <name><surname>Starck</surname><given-names>Sophie</given-names></name>
        <name><surname>Grigis</surname><given-names>Antoine</given-names></name>
        <name><surname>Starck</surname><given-names>Jean-Luc</given-names></name>
        <name><surname>Ciuciu</surname><given-names>Philippe</given-names></name>
      </person-group>
      <article-title>PySAP-MRI: A python package for MR image reconstruction</article-title>
      <source>ISMRM workshop on data sampling and image reconstruction</source>
      <year iso-8601-date="2020">2020</year>
      <uri>https://inria.hal.science/hal-02399267</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
