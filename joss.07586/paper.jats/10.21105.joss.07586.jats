<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">7586</article-id>
<article-id pub-id-type="doi">10.21105/joss.07586</article-id>
<title-group>
<article-title>SynxFlow: A GPU-accelerated Python package for
multi-hazard simulations</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-5784-9211</contrib-id>
<name>
<surname>Xia</surname>
<given-names>Xilin</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-9114-2642</contrib-id>
<name>
<surname>Ming</surname>
<given-names>Xiaodong</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>School of Engineering, University of Birmingham,
Birmingham, UK</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Ping An P&amp;C Insurance Company of China, Shenzhen,
China</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-10-27">
<day>27</day>
<month>10</month>
<year>2024</year>
</pub-date>
<volume>10</volume>
<issue>110</issue>
<fpage>7586</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>flood</kwd>
<kwd>landslide</kwd>
<kwd>debris flow</kwd>
<kwd>GPU</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>SynxFlow can dynamically simulate flood inundation, landslides
  runout and debris flows using multiple CUDA-enabled GPUs. It also
  offers a Python interface for users to set up simulations and
  visualise outputs. The software is interoperable with popular packages
  such as numpy, pandas and rasterio. Therefore, SynxFlow can be
  integrated into data science workflows to streamline and accelerate
  hazard risk assessment tasks.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Natural hazards like floods, landslides, and debris flows cause
  significant damage each year, and due to climate change, the frequency
  and severity of these events are increasing. This rising threat
  highlights an urgent need to develop tools that can enhance our
  understanding of these risks, supporting crucial applications like
  early warning systems and comprehensive risk assessments.</p>
  <p>Effectively assessing these risks requires integrating data from
  multiple sources—such as climate, geological, hydrological, and
  environmental data, while also accounting for complex, interacting
  hazards. For comprehensive risk assessment over a large region,
  processing vast amounts of data swiftly is essential, often
  necessitating cloud-based computing or the use of high-performance
  computing (HPC) systems. These HPC systems, especially when enhanced
  with Graphics Processing Units (GPUs), allow faster processing of
  complex simulations.</p>
  <p>However, current modeling tools show significant limitations in
  meeting the growing demands of multi-hazard risk assessment and in
  leveraging modern computing technologies. For example, tools like
  LISFLOOD-FP 8.0
  (<xref alt="Shaw et al., 2021" rid="ref-Shaw2021" ref-type="bibr">Shaw
  et al., 2021</xref>) and TRITON
  (<xref alt="Morales-Hernández et al., 2021" rid="ref-MoralesHernandez2021" ref-type="bibr">Morales-Hernández
  et al., 2021</xref>) offer GPU acceleration, but their scope is
  restricted to flood simulations and they lack native Python interfaces
  — making integration with data science workflows cumbersome. GeoClaw
  (<xref alt="Berger &amp; LeVeque, 1998" rid="ref-BergerLeVeque98" ref-type="bibr">Berger
  &amp; LeVeque, 1998</xref>;
  <xref alt="Clawpack Development Team, 2024" rid="ref-clawpack" ref-type="bibr">Clawpack
  Development Team, 2024</xref>) supports multiple hazards and is
  Python-compatible, yet its single-GPU acceleration makes it
  inefficient for large-scale, high-resolution applications.</p>
  <p>HEC-RAS
  (<xref alt="US Army Corps of Engineers, 2025" rid="ref-HEC-RAS" ref-type="bibr">US
  Army Corps of Engineers, 2025</xref>) is widely used due to its
  user-friendly graphical interface and support for third-party Python
  automation. However, it does not support multi-GPU acceleration,
  cannot simulate landslide runout, and remains proprietary software —
  limiting both customisation and open development. These constraints
  highlight a critical gap: existing tools are either too specialised,
  insufficiently scalable, or poorly integrated with modern data and
  compute ecosystems.</p>
  <p>To this end, we believe modern multi-hazard simulation software
  should be</p>
  <list list-type="order">
    <list-item>
      <p>Performant – The software should utilise modern GPU-based HPC
      systems to accelerate complex simulations, enabling faster data
      processing and real-time hazard prediction. This is crucial for
      rapid risk assessment over large regions with multiple
      hazards.</p>
    </list-item>
    <list-item>
      <p>Accessible – The software should be open-source and
      easy-to-deploy, allowing transparency and collaboration.
      Accessible deployment options also lower infrastructure barriers,
      enabling use in diverse settings.</p>
    </list-item>
    <list-item>
      <p>Interoperable – The software should integrate seamlessly with
      popular data science tools to leverage advanced analytics and
      machine learning. It should also enable easy coupling of various
      hazard simulations. This is crucial for comprehensive and
      effective risk analytics.</p>
    </list-item>
  </list>
  <p>The SynxFlow project is our attempt to achieve this vision.</p>
</sec>
<sec id="design-and-implementation">
  <title>Design and Implementation</title>
  <p>The software is a Python package with the following two parts:</p>
  <sec id="solvers">
    <title>Solvers</title>
    <p>There are three modules, flood, landslide and debris, solving the
    shallow water type equations using CUDA-enabled multiple GPUs, to
    simulate flood inundation, landslides runout and debris flows
    respectively. The solvers can predict the depth and velocities of
    these hazards. The flood solver, inherited from Pypims
    (<xref alt="Xia &amp; Ming, 2023" rid="ref-Xia2023b" ref-type="bibr">Xia
    &amp; Ming, 2023</xref>), is a Python-bound version of the
    open-source code hipims-cuda
    (<xref alt="HEMLab, 2020" rid="ref-HEMLab2020" ref-type="bibr">HEMLab,
    2020</xref>). Since the start of the SynxFlow project, the landslide
    solver of hipims-cuda has also been Python-bound and added to
    SynxFlow, and a debris flow solver has been implemented. These
    solvers use Godunov-type shock-capturing finite volume methods,
    which are documented in Xia et al.
    (<xref alt="2017" rid="ref-Xia2017" ref-type="bibr">2017</xref>),
    Xia &amp; Liang
    (<xref alt="2018" rid="ref-Xia2018d" ref-type="bibr">2018</xref>)
    and Xia et al.
    (<xref alt="2023" rid="ref-Xia2023" ref-type="bibr">2023</xref>).
    The numerical methods have been extensively tested in both
    theoretical and real-world scenarios, demonstrating robustness and
    efficiency for practical applications.</p>
  </sec>
  <sec id="io-input-and-output">
    <title>IO (Input and Output)</title>
    <p>The IO module comprises of several classes and functions that
    generates the inputs to the solvers and process their outputs. The
    IO functionality for the flood solver is based on the open-source
    hipims-io
    (<xref alt="Ming &amp; Xia, 2023" rid="ref-Ming2023" ref-type="bibr">Ming
    &amp; Xia, 2023</xref>) package, which has been extended to support
    the landslide and debris solvers. To set up a simulation, the users
    need to define an object using the ‘InputModel’ class, using common
    data formats including numpy arrays and pandas dataframes among
    others. An ‘OutputModel’ type object can be used to perform a
    variety of visualisation tasks including plotting maps, hydrographs
    and creating animations. To assist users, the IO module also provide
    functionalities to process geospatial data such as rasters and
    shapefiles. The IO module effectively integrates the solvers into
    data science workflows, streamlining hazard risk assessment tasks,
    and also enables coupling between solvers to facilitate multi-hazard
    simulations. The Python-based IO module also enables controlling
    scripts to be generated by Large Language Models (LLMs) such as
    ChatGPT and Gemini, which offers huge potential for automation.</p>
    <p>Compared with existing software, SynxFlow is unique for its
    combination of open-source accessibility, multi-GPU acceleration,
    multi-hazard simulation capabilities, and a Python-based user
    interface.</p>
  </sec>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The development of the code was enabled by the Baskerville Tier-2
  HPC, which is funded by the EPSRC and UKRI through the World Class
  Labs scheme (EP/T022221/1) and the Digital Research Infrastructure
  programme (EP/W032244/1).</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-Xia2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Xia</surname><given-names>Xilin</given-names></name>
        <name><surname>Liang</surname><given-names>Qiuhua</given-names></name>
        <name><surname>Ming</surname><given-names>Xiaodong</given-names></name>
        <name><surname>Hou</surname><given-names>Jingming</given-names></name>
      </person-group>
      <article-title>An efficient and stable hydrodynamic model with novel source term discretization schemes for overland flow and flood simulations</article-title>
      <source>Water Resources Research</source>
      <year iso-8601-date="2017-05">2017</year><month>05</month>
      <volume>53</volume>
      <uri>http://doi.wiley.com/10.1002/2017WR021696</uri>
      <pub-id pub-id-type="doi">10.1002/2016WR020055</pub-id>
      <fpage>3730</fpage>
      <lpage>3759</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Xia2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Xia</surname><given-names>Xilin</given-names></name>
        <name><surname>Jarsve</surname><given-names>Kristine Thorkildsen</given-names></name>
        <name><surname>Dijkstra</surname><given-names>Tom</given-names></name>
        <name><surname>Liang</surname><given-names>Qiuhua</given-names></name>
        <name><surname>Meng</surname><given-names>Xingmin</given-names></name>
        <name><surname>Chen</surname><given-names>Guan</given-names></name>
      </person-group>
      <article-title>An integrated hydrodynamic model for runoff-generated debris flows with novel formulation of bed erosion and deposition</article-title>
      <source>Engineering Geology</source>
      <publisher-name>Elsevier B.V.</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <volume>326</volume>
      <issue>October</issue>
      <uri>https://doi.org/10.1016/j.enggeo.2023.107310</uri>
      <pub-id pub-id-type="doi">10.1016/j.enggeo.2023.107310</pub-id>
      <fpage>107310</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-HEMLab2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>HEMLab</surname></name>
      </person-group>
      <article-title>hipims-cuda, commit 4aa7516</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <uri>https://github.com/HEMLab/HiPIMS-CUDA</uri>
    </element-citation>
  </ref>
  <ref id="ref-Ming2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ming</surname><given-names>Xiaodong</given-names></name>
        <name><surname>Xia</surname><given-names>Xilin</given-names></name>
      </person-group>
      <article-title>hipims-io, commit bafc98d</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/mingxiaodong/hipims_io_python</uri>
    </element-citation>
  </ref>
  <ref id="ref-Xia2023b">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Xia</surname><given-names>Xilin</given-names></name>
        <name><surname>Ming</surname><given-names>Xiaodong</given-names></name>
      </person-group>
      <article-title>pypims, commit 27376f9</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/pypims/pypims</uri>
    </element-citation>
  </ref>
  <ref id="ref-Xia2018d">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Xia</surname><given-names>Xilin</given-names></name>
        <name><surname>Liang</surname><given-names>Qiuhua</given-names></name>
      </person-group>
      <article-title>A new depth-averaged model for flow-like landslides over complex terrains with curvatures and steep slopes</article-title>
      <source>Engineering Geology</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2018-02">2018</year><month>02</month>
      <volume>234</volume>
      <issue>January</issue>
      <uri>https://doi.org/10.1016/j.enggeo.2018.01.011 http://linkinghub.elsevier.com/retrieve/pii/S0013795217306324</uri>
      <pub-id pub-id-type="doi">10.1016/j.enggeo.2018.01.011</pub-id>
      <fpage>174</fpage>
      <lpage>191</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Shaw2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Shaw</surname><given-names>James</given-names></name>
        <name><surname>Kesserwani</surname><given-names>Georges</given-names></name>
        <name><surname>Neal</surname><given-names>Jeffrey</given-names></name>
        <name><surname>Bates</surname><given-names>Paul</given-names></name>
        <name><surname>Sharifian</surname><given-names>Mohammad Kazem</given-names></name>
      </person-group>
      <article-title>LISFLOOD-FP 8.0: the new discontinuous Galerkin shallow-water solver for multi-core CPUs and GPUs</article-title>
      <source>Geoscientific Model Development</source>
      <year iso-8601-date="2021">2021</year>
      <volume>14</volume>
      <uri>https://gmd.copernicus.org/articles/14/3577/2021/</uri>
      <pub-id pub-id-type="doi">10.5194/gmd-14-3577-2021</pub-id>
      <fpage>3577</fpage>
      <lpage>3602</lpage>
    </element-citation>
  </ref>
  <ref id="ref-MoralesHernandez2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Morales-Hernández</surname><given-names>Mario</given-names></name>
        <name><surname>Sharif</surname><given-names>Md Bulbul</given-names></name>
        <name><surname>Kalyanapu</surname><given-names>Alfred</given-names></name>
        <name><surname>Ghafoor</surname><given-names>S. K.</given-names></name>
        <name><surname>Dullo</surname><given-names>T. T.</given-names></name>
        <name><surname>Gangrade</surname><given-names>S.</given-names></name>
        <name><surname>Kao</surname><given-names>Shih-Chieh</given-names></name>
        <name><surname>Norman</surname><given-names>M. R.</given-names></name>
        <name><surname>Evans</surname><given-names>K. J.</given-names></name>
      </person-group>
      <article-title>TRITON: A Multi-GPU Open Source 2D Hydrodynamic Flood Model</article-title>
      <source>Environmental Modelling &amp; Software</source>
      <year iso-8601-date="2021">2021</year>
      <volume>141</volume>
      <uri>https://doi.org/10.1016/j.envsoft.2021.105034</uri>
      <pub-id pub-id-type="doi">10.1016/j.envsoft.2021.105034</pub-id>
      <fpage>105034</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-HEC-RAS">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>US Army Corps of Engineers</string-name>
      </person-group>
      <article-title>HEC-RAS River Analysis System</article-title>
      <year iso-8601-date="2025">2025</year>
      <uri>https://www.hec.usace.army.mil/software/hec-ras/</uri>
    </element-citation>
  </ref>
  <ref id="ref-clawpack">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>Clawpack Development Team</string-name>
      </person-group>
      <article-title>Clawpack software</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>http://www.clawpack.org</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.13376470</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-BergerLeVeque98">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Berger</surname><given-names>M. J.</given-names></name>
        <name><surname>LeVeque</surname><given-names>R. J.</given-names></name>
      </person-group>
      <article-title>Adaptive mesh refinement using wave-propagation algorithms for hyperbolic systems</article-title>
      <source>SIAM J. Numer. Anal.</source>
      <year iso-8601-date="1998">1998</year>
      <volume>35</volume>
      <pub-id pub-id-type="doi">10.1137/S0036142997315974</pub-id>
      <fpage>2298</fpage>
      <lpage>2316</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
