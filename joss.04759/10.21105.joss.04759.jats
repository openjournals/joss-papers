<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">4759</article-id>
<article-id pub-id-type="doi">10.21105/joss.04759</article-id>
<title-group>
<article-title>QuantNBody: a Python package for quantum chemistry and
physics to build and manipulate many-body operators and wave
functions.</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-8818-3379</contrib-id>
<name>
<surname>Yalouz</surname>
<given-names>Saad</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Gullin</surname>
<given-names>Martin Rafael</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Sekaran</surname>
<given-names>Sajanthan</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Laboratoire de Chimie Quantique, Institut de Chimie,
CNRS/Université de Strasbourg, 4 rue Blaise Pascal, 67000 Strasbourg,
France</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2022-03-11">
<day>11</day>
<month>3</month>
<year>2022</year>
</pub-date>
<volume>7</volume>
<issue>80</issue>
<fpage>4759</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>quantum physics and chemistry</kwd>
<kwd>quantum many-body systems</kwd>
<kwd>exact diagonalization</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The ‘QuantNBody’ package is a Python toolkit for quantum
  chemists/physicists interested in methods development to study quantum
  many-body problems ranging from electronic structure to condensed
  matter theory. It provides a quick and easy way to build matrix
  representations of bosonic and fermionic quantum many-body operators
  (e.g., Hamiltonians, spin or excitation operators) and get access to
  quantities/objects of interest (e.g., energies, reduced density
  matrices, many-body wave functions). The code includes various native
  functions and it is flexible enough to help users in building their
  own numerical tools to implement new methods.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The manipulation of many-body operators in the language of second
  quantization is a crucial step for accessing the properties of model
  or <italic>ab initio</italic> systems in quantum chemistry and
  physics. From a numerical point of view, this requires developing
  codes that can build matrix representations of quantum operators in a
  given quantum many-body basis (e.g., Hamiltonians, spin or excitation
  operators). In a great majority of cases, this aspect is kept as a
  ‘’blackbox’’ in codes to spare the users from cumbersome numerical
  parts and to facilitate the use of already implemented methods.
  Nevertheless, this type of implementation can appear as a real
  obstacle for researchers in need of reliable numerical tools to
  quickly develop and test new methodologies based on second
  quantization algebra.</p>
  <p>The ‘QuantNBody’ code was designed to answer this problem: it is a
  theoretician-friendly package which provides an efficient and
  simple-to-use numerical toolkit to help create and manipulate
  operators and wavefunctions related to quantum many-body systems (with
  either fermionic or bosonic particles). It allows straightforward
  implementations of second quantization into numerical objects (i.e.,
  matrices) in order to facilitate the conversion of analytical
  developments into compact and easy to write numerical Python
  codes.</p>
  <p>The user-friendly philosophy of QuantNBody regarding second
  quantization encoding can be compared (to some extent) to the FermiLib
  module originally developped for OpenFermion
  (<xref alt="McClean et al., 2020" rid="ref-mcclean2020openfermion" ref-type="bibr">McClean
  et al., 2020</xref>) (a quantum computing oriented package). In
  practice, the advantage of QuantNBody lies in its particle number
  conserving encoding which differs from what is done in OpenFermion
  (where the full Fockspace is encoded). As a result, QuantNBody allows
  the realization of larger scale calculations (up to 8 electrons in 8
  spatial molecular orbitals in a few seconds). This new toolkit opens
  new perspectives for many-body simulations in Python and then
  completes the panel of already existing theoretician-friendly packages
  dedicated to many-body systems such as Quimb
  (<xref alt="Gray, 2018" rid="ref-gray2018quimb" ref-type="bibr">Gray,
  2018</xref>), Quspin
  (<xref alt="Weinberg &amp; Bukov, 2017" rid="ref-weinberg2017quspin" ref-type="bibr">Weinberg
  &amp; Bukov, 2017</xref>,
  <xref alt="2019" rid="ref-weinberg2019quspin" ref-type="bibr">2019</xref>),
  QuTIP
  (<xref alt="J. Robert Johansson et al., 2012" rid="ref-johansson2012qutip" ref-type="bibr">J.
  Robert Johansson et al., 2012</xref>;
  <xref alt="J. R. Johansson et al., 2013" rid="ref-johansson2013qutip" ref-type="bibr">J.
  R. Johansson et al., 2013</xref>), Yao
  (<xref alt="Luo et al., 2020" rid="ref-luo2020yao" ref-type="bibr">Luo
  et al., 2020</xref>) and OpenFermion
  (<xref alt="McClean et al., 2020" rid="ref-mcclean2020openfermion" ref-type="bibr">McClean
  et al., 2020</xref>).</p>
</sec>
<sec id="framework-of-the-package">
  <title>Framework of the package</title>
  <p>The QuantNbody package employs the SciPy library
  (<xref alt="Virtanen et al., 2020" rid="ref-2020SciPy-NMeth" ref-type="bibr">Virtanen
  et al., 2020</xref>) for the creation of sparse matrices
  representation of many-body operators. The Numba package
  (<xref alt="Lam et al., 2015" rid="ref-lam2015numba" ref-type="bibr">Lam
  et al., 2015</xref>) is also used to accelerate calculation when
  possible. The framework of the package lies in two fundamental
  ingredients. The first one is the creation of a reference many-body
  vector basis (based on a total number of quantum particles and
  modes/orbitals to fill) in which second quantization operators can be
  represented. The second ingredient consists in creating a general tool
  that can help build any particle-number conserving many-body operator
  which is: the single-body hopping operators
  <inline-formula><alternatives>
  <tex-math><![CDATA[a^\dagger_p a_q]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msubsup><mml:mi>a</mml:mi><mml:mi>p</mml:mi><mml:mo>†</mml:mo></mml:msubsup><mml:msub><mml:mi>a</mml:mi><mml:mi>q</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>.
  Once these two ingredients have been created, the user can employ
  various pre-built functions in order to (i) construct different types
  of many-body operators (e.g., Hamiltonians, spin and excitation
  operators), (ii) manipulate/visualize quantum many-body states. All
  the native functions have been thought to facilitate calculations for
  new users and young students. Beyond this, the QuantNBody package has
  been also designed to provide flexibility to experimented users to
  develop their own tools to implement/test their own methods.</p>
</sec>
<sec id="a-quick-illustration">
  <title>A quick illustration</title>
  <p>As an illustration of the various types of system one can treat
  with the QuantNBody package, we describe here a few native many-body
  Hamiltonians which have already been implemented for fermionic and
  bosonic problems.</p>
  <sec id="fermionic-systems">
    <title>Fermionic systems</title>
    <p>Different fermionic Hamiltonians can be straightforwardly built
    with the QuantNBody package. For example, a pre-built function of
    the package allows a quick implementation of the quantum chemistry
    <italic>ab initio</italic> molecular electronic structure
    Hamiltonian
    <named-content id="eqU003Amol" content-type="equation"><disp-formula><alternatives>
    <tex-math><![CDATA[
    \hat{H}= \sum_{p,q} h_{pq} \sum_\sigma^{\uparrow,\downarrow} a^\dagger_{p,\sigma} a_{q,\sigma} 
    + \frac{1}{2} \sum_{p,q,r,s}  g_{pqrs} \sum_{\sigma,\tau}^{\uparrow,\downarrow} a^\dagger_{p,\sigma} a^\dagger_{r,\tau} a_{s,\tau} a_{q,\sigma}  ,]]></tex-math>
    <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mover><mml:mi>H</mml:mi><mml:mo accent="true">̂</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi></mml:mrow></mml:msub><mml:munderover><mml:mo>∑</mml:mo><mml:mi>σ</mml:mi><mml:mrow><mml:mo>↑</mml:mo><mml:mo>,</mml:mo><mml:mo>↓</mml:mo></mml:mrow></mml:munderover><mml:msubsup><mml:mi>a</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi></mml:mrow><mml:mo>†</mml:mo></mml:msubsup><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>σ</mml:mi><mml:mo>,</mml:mo><mml:mi>τ</mml:mi></mml:mrow><mml:mrow><mml:mo>↑</mml:mo><mml:mo>,</mml:mo><mml:mo>↓</mml:mo></mml:mrow></mml:munderover><mml:msubsup><mml:mi>a</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi></mml:mrow><mml:mo>†</mml:mo></mml:msubsup><mml:msubsup><mml:mi>a</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>τ</mml:mi></mml:mrow><mml:mo>†</mml:mo></mml:msubsup><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>τ</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula></named-content>
    where <inline-formula><alternatives>
    <tex-math><![CDATA[a^\dagger_{i,\sigma}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msubsup><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi></mml:mrow><mml:mo>†</mml:mo></mml:msubsup></mml:math></alternatives></inline-formula>
    (<inline-formula><alternatives>
    <tex-math><![CDATA[a_{i,\sigma}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>)
    are the fermionic creation (annihilation) operators in the orbital
    <inline-formula><alternatives>
    <tex-math><![CDATA[i]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>i</mml:mi></mml:math></alternatives></inline-formula>
    with spin <inline-formula><alternatives>
    <tex-math><![CDATA[\sigma]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>σ</mml:mi></mml:math></alternatives></inline-formula>.
    In a similar way, another native function has been also created to
    numerically build the Fermi-Hubbard Hamiltonian from condensed
    matter theory
    <named-content id="eqU003AFH" content-type="equation"><disp-formula><alternatives>
    <tex-math><![CDATA[
    \hat{H}_{FH} = -t  \sum_{i,j} \sum_\sigma^{\uparrow,\downarrow} a^\dagger_{i,\sigma} a_{j,\sigma} 
    + U \sum_{i}  a^\dagger_{i,\uparrow}a_{i,\uparrow} a^\dagger_{i,\downarrow} a_{i,\downarrow},]]></tex-math>
    <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mover><mml:mi>H</mml:mi><mml:mo accent="true">̂</mml:mo></mml:mover><mml:mrow><mml:mi>F</mml:mi><mml:mi>H</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mi>t</mml:mi><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:munderover><mml:mo>∑</mml:mo><mml:mi>σ</mml:mi><mml:mrow><mml:mo>↑</mml:mo><mml:mo>,</mml:mo><mml:mo>↓</mml:mo></mml:mrow></mml:munderover><mml:msubsup><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi></mml:mrow><mml:mo>†</mml:mo></mml:msubsup><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi>U</mml:mi><mml:munder><mml:mo>∑</mml:mo><mml:mi>i</mml:mi></mml:munder><mml:msubsup><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mo>↑</mml:mo></mml:mrow><mml:mo>†</mml:mo></mml:msubsup><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mo>↑</mml:mo></mml:mrow></mml:msub><mml:msubsup><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mo>↓</mml:mo></mml:mrow><mml:mo>†</mml:mo></mml:msubsup><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mo>↓</mml:mo></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula></named-content>
    In practice, native functions are already implemented in the
    QuantNBody package to build both types of fermionic Hamiltonians.
    This implementation is based on the use of the already built
    single-body hopping operators mentioned earlier to generate the one-
    and two-body fermionic excitation operators (present in Eq.
    <xref alt="2" rid="eqU003AFH">2</xref> and Eq.
    <xref alt="1" rid="eqU003Amol">1</xref>). Nevertheless, the
    one-/two-body integrals (i.e., <inline-formula><alternatives>
    <tex-math><![CDATA[h_{pq}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>,
    <inline-formula><alternatives>
    <tex-math><![CDATA[g_{pqrs}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>q</mml:mi><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>
    and <inline-formula><alternatives>
    <tex-math><![CDATA[t]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>t</mml:mi></mml:math></alternatives></inline-formula>
    and <inline-formula><alternatives>
    <tex-math><![CDATA[U]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>U</mml:mi></mml:math></alternatives></inline-formula>)
    have to be defined by the user. They can be set as pure parameters
    or obtained from external chemistry Python packages like PySCF
    (<xref alt="Sun et al., 2020" rid="ref-sun2020recent" ref-type="bibr">Sun
    et al., 2020</xref>) or Psi4
    (<xref alt="Parrish et al., 2017" rid="ref-parrish2017psi4" ref-type="bibr">Parrish
    et al., 2017</xref>). As an illustration, we show in Fig. 1 results
    one can produce with the package for both fermionic Hamiltonians. We
    focus here on the calculation of the ground state (noted
    <inline-formula><alternatives>
    <tex-math><![CDATA[| \Psi_0\rangle]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="false" form="prefix">|</mml:mo><mml:msub><mml:mi>Ψ</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false" form="postfix">⟩</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>)
    in a H<inline-formula><alternatives>
    <tex-math><![CDATA[_2]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi></mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
    molecule and a Fermi-Hubbard dimer, and evaluate several associated
    properties (energy and many-body basis decomposition).</p>
    <fig>
      <caption><p>H<inline-formula><alternatives>
      <tex-math><![CDATA[_2]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi></mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
      molecule and Fermi-Hubbard dimer. <bold>Left column:</bold> ground
      state energy and decomposition in the many-body basis for the
      dissociation of the H<inline-formula><alternatives>
      <tex-math><![CDATA[_2]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi></mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
      molecule in a minimal basis (STO-3G) using integrals from Psi4
      (<xref alt="Parrish et al., 2017" rid="ref-parrish2017psi4" ref-type="bibr">Parrish
      et al., 2017</xref>). <bold>Right column:</bold> similar
      properties for the Fermi-Hubbard dimer as a function of
      <inline-formula><alternatives>
      <tex-math><![CDATA[U/t]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>U</mml:mi><mml:mi>/</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
      (2 electrons on 2 sites and <inline-formula><alternatives>
      <tex-math><![CDATA[t = 1]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>).</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/figure_fermion.png" xlink:title="" />
    </fig>
  </sec>
  <sec id="bosonic-systems">
    <title>Bosonic systems</title>
    <p>Bosonic Hamiltonians can also be numerically built with the
    QuantNBody package. For example, a pre-built function allows a quick
    implementation of the Bose-Hubbard Hamiltonian
    <disp-formula><alternatives>
    <tex-math><![CDATA[\hat{H}_{BH} = -t  \sum_{i,j}   a^\dagger_{i} a_{j} 
    + U \sum_{i}  a^\dagger_{i} a_{i}  ( a^\dagger_{i} a_{i}  -1 ) ,]]></tex-math>
    <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mover><mml:mi>H</mml:mi><mml:mo accent="true">̂</mml:mo></mml:mover><mml:mrow><mml:mi>B</mml:mi><mml:mi>H</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mi>t</mml:mi><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:msubsup><mml:mi>a</mml:mi><mml:mi>i</mml:mi><mml:mo>†</mml:mo></mml:msubsup><mml:msub><mml:mi>a</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>U</mml:mi><mml:munder><mml:mo>∑</mml:mo><mml:mi>i</mml:mi></mml:munder><mml:msubsup><mml:mi>a</mml:mi><mml:mi>i</mml:mi><mml:mo>†</mml:mo></mml:msubsup><mml:msub><mml:mi>a</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msubsup><mml:mi>a</mml:mi><mml:mi>i</mml:mi><mml:mo>†</mml:mo></mml:msubsup><mml:msub><mml:mi>a</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
    where <inline-formula><alternatives>
    <tex-math><![CDATA[a^\dagger_{i}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msubsup><mml:mi>a</mml:mi><mml:mi>i</mml:mi><mml:mo>†</mml:mo></mml:msubsup></mml:math></alternatives></inline-formula>
    (<inline-formula><alternatives>
    <tex-math><![CDATA[a_{i}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>a</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula>)
    are now the bosonic creation (annihilation) operators of the local
    site <inline-formula><alternatives>
    <tex-math><![CDATA[i]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>i</mml:mi></mml:math></alternatives></inline-formula>.
    Here again, the native function implementing the Bose-Hubbard
    Hamiltonian in the QuantNBody package manages on its own the
    building of all the one- and two-body bosonic operators via the
    already built single-particle hopping operators. The one-/two-body
    integrals (i.e., <inline-formula><alternatives>
    <tex-math><![CDATA[t]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>t</mml:mi></mml:math></alternatives></inline-formula>
    and <inline-formula><alternatives>
    <tex-math><![CDATA[U]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>U</mml:mi></mml:math></alternatives></inline-formula>)
    have to be defined by the user. As an illustration, we present in
    Fig. 2 the ground state properties one can obtain using the native
    function that implements the Bose-Hubbard Hamiltonian (two bosons on
    two sites).</p>
    <fig>
      <caption><p>Bose-Hubbard dimer with two bosons. <bold>Left
      column:</bold> illustration of the system. <bold>Right
      column:</bold> ground state energy and its decomposition in the
      many-body basis for the Bose-Hubbard dimer as a function of
      <inline-formula><alternatives>
      <tex-math><![CDATA[U/t]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>U</mml:mi><mml:mi>/</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
      (with <inline-formula><alternatives>
      <tex-math><![CDATA[t = 1]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>).</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/figure_boson.png" xlink:title="" />
    </fig>
  </sec>
</sec>
<sec id="related-projects">
  <title>Related projects</title>
  <p>The QuantNBody package is being currently used in the “Laboratoire
  de Chimie Quantique de Strasbourg” in several projects dedicated to
  strongly correlated systems. These projects including the study of
  spin properties in metal-ligand molecular systems
  (<xref alt="Roseiro et al., 2022" rid="ref-roseiro2022excited" ref-type="bibr">Roseiro
  et al., 2022</xref>), the development of embedding methods for large
  fermionic systems
  (<xref alt="Yalouz et al., 2022" rid="ref-yalouz2022quantum" ref-type="bibr">Yalouz
  et al., 2022</xref>) and the development of orbital optimisation
  techniques for fermionic excited states
  (<xref alt="Yalouz &amp; Robert, 2022" rid="ref-yalouz2022orthogonally" ref-type="bibr">Yalouz
  &amp; Robert, 2022</xref>) to cite but a few. As future developments,
  we plan to extend the capacities of the package to the treatment of
  hybrid systems mixing both fermions and bosons degrees of freedom
  (e.g., for polaritonic chemistry or exciton-phonon systems).</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>Saad Yalouz acknowledges support from the Interdisciplinary
  Thematic Institute ITI-CSC via the IdEx Unistra (ANR-10-IDEX-0002)
  within the program Investissement d’Avenir.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-parrish2017psi4">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Parrish</surname><given-names>Robert M</given-names></name>
        <name><surname>Burns</surname><given-names>Lori A</given-names></name>
        <name><surname>Smith</surname><given-names>Daniel GA</given-names></name>
        <name><surname>Simmonett</surname><given-names>Andrew C</given-names></name>
        <name><surname>DePrince III</surname><given-names>A Eugene</given-names></name>
        <name><surname>Hohenstein</surname><given-names>Edward G</given-names></name>
        <name><surname>Bozkaya</surname><given-names>Ugur</given-names></name>
        <name><surname>Sokolov</surname><given-names>Alexander Yu</given-names></name>
        <name><surname>Di Remigio</surname><given-names>Roberto</given-names></name>
        <name><surname>Richard</surname><given-names>Ryan M</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Psi4 1.1: An open-source electronic structure program emphasizing automation, advanced libraries, and interoperability</article-title>
      <source>Journal of chemical theory and computation</source>
      <publisher-name>ACS Publications</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <volume>13</volume>
      <issue>7</issue>
      <uri>https://doi.org/10.1021/acs.jctc.7b00174</uri>
      <pub-id pub-id-type="doi">10.1021/acs.jctc.7b00174</pub-id>
      <fpage>3185</fpage>
      <lpage>3197</lpage>
    </element-citation>
  </ref>
  <ref id="ref-sun2020recent">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Sun</surname><given-names>Qiming</given-names></name>
        <name><surname>Zhang</surname><given-names>Xing</given-names></name>
        <name><surname>Banerjee</surname><given-names>Samragni</given-names></name>
        <name><surname>Bao</surname><given-names>Peng</given-names></name>
        <name><surname>Barbry</surname><given-names>Marc</given-names></name>
        <name><surname>Blunt</surname><given-names>Nick S</given-names></name>
        <name><surname>Bogdanov</surname><given-names>Nikolay A</given-names></name>
        <name><surname>Booth</surname><given-names>George H</given-names></name>
        <name><surname>Chen</surname><given-names>Jia</given-names></name>
        <name><surname>Cui</surname><given-names>Zhi-Hao</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Recent developments in the PySCF program package</article-title>
      <source>The Journal of chemical physics</source>
      <publisher-name>AIP Publishing LLC</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <volume>153</volume>
      <issue>2</issue>
      <uri>https://doi.org/10.1063/5.0006074</uri>
      <pub-id pub-id-type="doi">10.1063/5.0006074</pub-id>
      <fpage>024109</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-gray2018quimb">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Gray</surname><given-names>Johnnie</given-names></name>
      </person-group>
      <article-title>Quimb: A Python library for quantum information and many-body calculations</article-title>
      <source>Journal of Open Source Software</source>
      <year iso-8601-date="2018">2018</year>
      <volume>3</volume>
      <issue>29</issue>
      <uri>https://doi.org/10.21105/joss.00819</uri>
      <pub-id pub-id-type="doi">10.21105/joss.00819</pub-id>
      <fpage>819</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-weinberg2017quspin">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Weinberg</surname><given-names>Phillip</given-names></name>
        <name><surname>Bukov</surname><given-names>Marin</given-names></name>
      </person-group>
      <article-title>QuSpin: A python package for dynamics and exact diagonalisation of quantum many body systems. Part i: Spin chains</article-title>
      <source>SciPost Physics</source>
      <year iso-8601-date="2017">2017</year>
      <volume>2</volume>
      <issue>1</issue>
      <uri>https://scipost.org/10.21468/SciPostPhys.2.1.003</uri>
      <pub-id pub-id-type="doi">10.21468/scipostphys.2.1.003</pub-id>
      <fpage>003</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-weinberg2019quspin">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Weinberg</surname><given-names>Phillip</given-names></name>
        <name><surname>Bukov</surname><given-names>Marin</given-names></name>
      </person-group>
      <article-title>QuSpin: A python package for dynamics and exact diagonalisation of quantum many body systems. Part II: Bosons, fermions and higher spins</article-title>
      <source>SciPost Physics</source>
      <year iso-8601-date="2019">2019</year>
      <volume>7</volume>
      <issue>2</issue>
      <uri>https://scipost.org/10.21468/SciPostPhys.7.2.020</uri>
      <pub-id pub-id-type="doi">10.21468/SciPostPhys.7.2.020</pub-id>
      <fpage>020</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-mcclean2020openfermion">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>McClean</surname><given-names>Jarrod R</given-names></name>
        <name><surname>Rubin</surname><given-names>Nicholas C</given-names></name>
        <name><surname>Sung</surname><given-names>Kevin J</given-names></name>
        <name><surname>Kivlichan</surname><given-names>Ian D</given-names></name>
        <name><surname>Bonet-Monroig</surname><given-names>Xavier</given-names></name>
        <name><surname>Cao</surname><given-names>Yudong</given-names></name>
        <name><surname>Dai</surname><given-names>Chengyu</given-names></name>
        <name><surname>Fried</surname><given-names>E Schuyler</given-names></name>
        <name><surname>Gidney</surname><given-names>Craig</given-names></name>
        <name><surname>Gimby</surname><given-names>Brendan</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>OpenFermion: The electronic structure package for quantum computers</article-title>
      <source>Quantum Science and Technology</source>
      <publisher-name>IOP Publishing</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <volume>5</volume>
      <issue>3</issue>
      <uri>https://doi.org/10.1088/2058-9565/ab8ebc</uri>
      <pub-id pub-id-type="doi">10.1088/2058-9565/ab8ebc</pub-id>
      <fpage>034014</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-2020SciPy-NMeth">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
        <name><surname>Haberland</surname><given-names>Matt</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Burovski</surname><given-names>Evgeni</given-names></name>
        <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
        <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
        <name><surname>Bright</surname><given-names>Jonathan</given-names></name>
        <name><surname>van der Walt</surname><given-names>Stéfan J.</given-names></name>
        <name><surname>Brett</surname><given-names>Matthew</given-names></name>
        <name><surname>Wilson</surname><given-names>Joshua</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>Mayorov</surname><given-names>Nikolay</given-names></name>
        <name><surname>Nelson</surname><given-names>Andrew R. J.</given-names></name>
        <name><surname>Jones</surname><given-names>Eric</given-names></name>
        <name><surname>Kern</surname><given-names>Robert</given-names></name>
        <name><surname>Larson</surname><given-names>Eric</given-names></name>
        <name><surname>Carey</surname><given-names>C J</given-names></name>
        <name><surname>Polat</surname><given-names>İlhan</given-names></name>
        <name><surname>Feng</surname><given-names>Yu</given-names></name>
        <name><surname>Moore</surname><given-names>Eric W.</given-names></name>
        <name><surname>VanderPlas</surname><given-names>Jake</given-names></name>
        <name><surname>Laxalde</surname><given-names>Denis</given-names></name>
        <name><surname>Perktold</surname><given-names>Josef</given-names></name>
        <name><surname>Cimrman</surname><given-names>Robert</given-names></name>
        <name><surname>Henriksen</surname><given-names>Ian</given-names></name>
        <name><surname>Quintero</surname><given-names>E. A.</given-names></name>
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Archibald</surname><given-names>Anne M.</given-names></name>
        <name><surname>Ribeiro</surname><given-names>Antônio H.</given-names></name>
        <name><surname>Pedregosa</surname><given-names>Fabian</given-names></name>
        <name><surname>van Mulbregt</surname><given-names>Paul</given-names></name>
        <string-name>SciPy 1.0 Contributors</string-name>
      </person-group>
      <article-title>SciPy 1.0: Fundamental algorithms for scientific computing in Python</article-title>
      <source>Nature Methods</source>
      <year iso-8601-date="2020">2020</year>
      <volume>17</volume>
      <pub-id pub-id-type="doi">10.1038/s41592-019-0686-2</pub-id>
      <fpage>261</fpage>
      <lpage>272</lpage>
    </element-citation>
  </ref>
  <ref id="ref-lam2015numba">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Lam</surname><given-names>Siu Kwan</given-names></name>
        <name><surname>Pitrou</surname><given-names>Antoine</given-names></name>
        <name><surname>Seibert</surname><given-names>Stanley</given-names></name>
      </person-group>
      <article-title>Numba: A LLVM-based python JIT compiler</article-title>
      <source>Proceedings of the second workshop on the LLVM compiler infrastructure in HPC</source>
      <year iso-8601-date="2015">2015</year>
      <pub-id pub-id-type="doi">10.1145/2833157.2833162</pub-id>
      <fpage>1</fpage>
      <lpage>6</lpage>
    </element-citation>
  </ref>
  <ref id="ref-johansson2012qutip">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Johansson</surname><given-names>J Robert</given-names></name>
        <name><surname>Nation</surname><given-names>Paul D</given-names></name>
        <name><surname>Nori</surname><given-names>Franco</given-names></name>
      </person-group>
      <article-title>QuTiP: An open-source python framework for the dynamics of open quantum systems</article-title>
      <source>Computer Physics Communications</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2012">2012</year>
      <volume>183</volume>
      <issue>8</issue>
      <uri>https://doi.org/10.1016/j.cpc.2012.02.021</uri>
      <pub-id pub-id-type="doi">10.1016/j.cpc.2012.02.021</pub-id>
      <fpage>1760</fpage>
      <lpage>1772</lpage>
    </element-citation>
  </ref>
  <ref id="ref-johansson2013qutip">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Johansson</surname><given-names>J. R.</given-names></name>
        <name><surname>Nation</surname><given-names>P. D.</given-names></name>
        <name><surname>Nori</surname><given-names>Franco</given-names></name>
      </person-group>
      <article-title>QuTiP 2: A python framework for the dynamics of open quantum systems</article-title>
      <source>Computer Physics Communications</source>
      <year iso-8601-date="2013">2013</year>
      <volume>184</volume>
      <issue>4</issue>
      <issn>0010-4655</issn>
      <uri>https://doi.org/10.1016/j.cpc.2012.11.019</uri>
      <pub-id pub-id-type="doi">10.1016/j.cpc.2012.11.019</pub-id>
      <fpage>1234</fpage>
      <lpage>1240</lpage>
    </element-citation>
  </ref>
  <ref id="ref-luo2020yao">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Luo</surname><given-names>Xiu-Zhe</given-names></name>
        <name><surname>Liu</surname><given-names>Jin-Guo</given-names></name>
        <name><surname>Zhang</surname><given-names>Pan</given-names></name>
        <name><surname>Wang</surname><given-names>Lei</given-names></name>
      </person-group>
      <article-title>Yao.jl: Extensible, efficient framework for quantum algorithm design</article-title>
      <source>Quantum</source>
      <publisher-name>Verein zur Förderung des Open Access Publizierens in den Quantenwissenschaften</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <volume>4</volume>
      <uri>https://doi.org/10.22331/q-2020-10-11-341</uri>
      <pub-id pub-id-type="doi">10.22331/q-2020-10-11-341</pub-id>
      <fpage>341</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-roseiro2022excited">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Roseiro</surname><given-names>Pablo</given-names></name>
        <name><surname>Brook</surname><given-names>David JR</given-names></name>
        <name><surname>Amor</surname><given-names>Nadia Ben</given-names></name>
        <name><surname>Robert</surname><given-names>Vincent</given-names></name>
        <name><surname>Yalouz</surname><given-names>Saad</given-names></name>
      </person-group>
      <article-title>Excited state spinmerism in high-field fe (II)-verdazyl molecular complex: Versatile local spins for quantum information</article-title>
      <source>arXiv preprint arXiv:2210.02325</source>
      <year iso-8601-date="2022">2022</year>
      <uri>https://doi.org/10.48550/arXiv.2210.02325</uri>
    </element-citation>
  </ref>
  <ref id="ref-yalouz2022quantum">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Yalouz</surname><given-names>Saad</given-names></name>
        <name><surname>Sekaran</surname><given-names>Sajanthan</given-names></name>
        <name><surname>Fromager</surname><given-names>Emmanuel</given-names></name>
        <name><surname>Saubanère</surname><given-names>Matthieu</given-names></name>
      </person-group>
      <article-title>Quantum embedding of multi-orbital fragments using the block-householder transformation</article-title>
      <source>The Journal of Chemical Physics</source>
      <publisher-name>AIP Publishing LLC</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <volume>157</volume>
      <issue>21</issue>
      <uri>https://doi.org/10.1063/5.0125683</uri>
      <fpage>214112</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-yalouz2022orthogonally">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Yalouz</surname><given-names>Saad</given-names></name>
        <name><surname>Robert</surname><given-names>Vincent</given-names></name>
      </person-group>
      <article-title>Orthogonally constrained orbital optimization: Assessing changes of optimal orbitals for orthogonal multi-reference states</article-title>
      <source>arXiv preprint arXiv:2211.08329</source>
      <year iso-8601-date="2022">2022</year>
      <uri>https://doi.org/10.48550/arXiv.2211.08329</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
