<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">4754</article-id>
<article-id pub-id-type="doi">10.21105/joss.04754</article-id>
<title-group>
<article-title>TLViz: Visualising and analysing tensor decomposition
models with Python</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">0000-0002-9571-8829</contrib-id>
<name>
<surname>Roald</surname>
<given-names>Marie</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-5159-9012</contrib-id>
<name>
<surname>Moe</surname>
<given-names>Yngve Mardal</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Simula Metropolitan Center for Digital Engineering,
Norway</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Oslo Metropolitan University, Norway</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Independent Researcher, Norway</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<volume>7</volume>
<issue>79</issue>
<fpage>4754</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>tensor decompositions</kwd>
<kwd>data mining</kwd>
<kwd>data visualisation</kwd>
<kwd>TensorLy</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="introduction">
  <title>Introduction</title>
  <p>Multi-way data, also known as tensor data or data cubes, occur in
  many applications, such as text mining
  (<xref alt="Bader et al., 2008" rid="ref-bader2008discussion" ref-type="bibr">Bader
  et al., 2008</xref>), neuroscience
  (<xref alt="Andersen &amp; Rayens, 2004" rid="ref-andersen2004structure" ref-type="bibr">Andersen
  &amp; Rayens, 2004</xref>) and chemical analysis
  (<xref alt="Bro, 1997" rid="ref-bro1997parafac" ref-type="bibr">Bro,
  1997</xref>). Uncovering the meaningful patterns within such data can
  provide crucial insights into the data source, and tensor
  decompositions have proven an effective tool for this task. In
  particular, the PARAFAC model, also known as CANDECOMP/PARAFAC (CP) or
  the canonical polyadic decomposition (CPD), has shown great promise
  for extracting interpretable components. PARAFAC has, for example,
  extracted topics from an email corpus
  (<xref alt="Bader et al., 2008" rid="ref-bader2008discussion" ref-type="bibr">Bader
  et al., 2008</xref>) and chemical spectra from fluorescence
  spectroscopy data
  (<xref alt="Bro, 1997" rid="ref-bro1997parafac" ref-type="bibr">Bro,
  1997</xref>). For a thorough introduction to tensor methods, we refer
  the reader to
  (<xref alt="Tamara G. Kolda &amp; Bader, 2009" rid="ref-kolda2009tensor" ref-type="bibr">Tamara
  G. Kolda &amp; Bader, 2009</xref>) and
  (<xref alt="Bro, 1997" rid="ref-bro1997parafac" ref-type="bibr">Bro,
  1997</xref>). The goal of TensorLy-Visualisation (TLViz) is to provide
  utilities for analysing, visualising and working with tensor
  decompositions for data analysis in Python.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Python has become a language of choice for data science for both
  industrial and academic research. Open source tools, such as
  scikit-learn
  (<xref alt="Pedregosa et al., 2011" rid="ref-pedregosa2011scikit" ref-type="bibr">Pedregosa
  et al., 2011</xref>) and Pandas
  (<xref alt="McKinney, 2010" rid="ref-mckinney-proc-scipy-2010" ref-type="bibr">McKinney,
  2010</xref>) have made a variety of machine learning methods
  accessible within Python. Recently, TensorLy has made tensor methods
  also available in Python
  (<xref alt="Kossaifi et al., 2019" rid="ref-kossaifi2016tensorly" ref-type="bibr">Kossaifi
  et al., 2019</xref>), providing seamless integration of multi-way data
  mining methods within the python scientific environment. However,
  while TensorLy is an open-source, community-driven package for
  calculating tensor decompositions, it does not include tools for
  analysing or visualising the tensor decomposition models. Because
  tensor decompositions provide powerful tools to extract insight from
  multi-way data, effective visualisations are crucial as they are
  needed to communicate this insight. Furthermore, visualisation and
  evaluation are essential steps in the multi-way analysis pipeline —
  without tools for these steps, we cannot find suitable models.</p>
  <p>There is, to our knowledge, no free open source software (FOSS)
  that facilitates all these steps. Some tools cover part of this scope,
  such as Tensor Toolbox for MATLAB
  (<xref alt="Tamara G. Kolda &amp; Bader, 2006" rid="ref-osti_1230898" ref-type="bibr">Tamara
  G. Kolda &amp; Bader, 2006</xref>), which provides some functionality
  for model evaluation; and the N-Way toolbox for
  MATLAB(<xref alt="Andersson &amp; Bro, 2000" rid="ref-andersson2000n" ref-type="bibr">Andersson
  &amp; Bro, 2000</xref>) and Higher Order Tensor ToolBOX (HOTTBOX) for
  Python
  (<xref alt="Kisil et al., 2021" rid="ref-kisil2021hottbox" ref-type="bibr">Kisil
  et al., 2021</xref>), which both provide limited functionality for
  model evaluation and visualisation. Finally, PLSToolbox covers most of
  our scope, but it is a closed-source commercial software. There is,
  therefore, a growing need for FOSS tools for the visualisation and
  evaluation of tensor decompositions.</p>
</sec>
<sec id="example">
  <title>Example</title>
  <p>The PARAFAC model is straightforward, but there are several
  pitfalls to consider. Two main pitfalls are the scaling and
  permutation indeterminacy
  (<xref alt="Bro, 1997" rid="ref-bro1997parafac" ref-type="bibr">Bro,
  1997</xref>). The order of the components does not matter, and the
  magnitude of one factor matrix can be scaled arbitrarily so long as
  another factor matrix is inversely scaled (an even number of
  components may even change sign). Therefore, it can be time-consuming
  and cumbersome to go from having fitted a PARAFAC model to visualising
  it. TLViz takes care of these hurdles in a transparent way. The code
  below shows how easily we can use TLViz and TensorLy to analyse a
  fluorescence spectroscopy dataset.</p>
  <code language="python">import tlviz
import matplotlib.pyplot as plt
from tensorly.decomposition import parafac

def fit_parafac(dataset, num_components, num_inits):
    model_candidates = [
        parafac(dataset.data, num_components, init=&quot;random&quot;, random_state=i)
        for i in range(num_inits)
    ]
    model = tlviz.multimodel_evaluation.get_model_with_lowest_error(
        model_candidates, dataset
    )
    return tlviz.postprocessing.postprocess(model, dataset)

data = tlviz.data.load_aminoacids()
cp_tensor = fit_parafac(data, 3, num_inits=3)
tlviz.visualisation.components_plot(cp_tensor)
plt.show()</code>
  <preformat>Loading Aminoacids dataset from:
Bro, R, PARAFAC: Tutorial and applications, Chemometrics and Intelligent
   ↩ Laboratory Systems, 1997, 38, 149-171</preformat>
  <fig>
    <caption><p>An example figure showing the component vectors of a
    three-component PARAFAC model fitted to a fluorescence spectroscopy
    dataset</p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/paper_demo.pdf" xlink:title="" />
  </fig>
  <p>The above code uses TensorLy to fit five three-component PARAFAC
  models to the data. Then it uses TLViz to do the following steps:</p>
  <list list-type="order">
    <list-item>
      <p>Select the model that gave the lowest reconstruction error.</p>
    </list-item>
    <list-item>
      <p>Normalise the component vectors, storing their magnitude in a
      separate weight-vector.</p>
    </list-item>
    <list-item>
      <p>Permute the components in descending weight (i.e. signal
      strength) order.</p>
    </list-item>
    <list-item>
      <p>Flip the components, so they point in a logical direction
      compared to the data.</p>
    </list-item>
    <list-item>
      <p>Convert the factor matrices into Pandas DataFrames with logical
      indices.</p>
    </list-item>
    <list-item>
      <p>Plot the components using matplotlib.</p>
    </list-item>
  </list>
  <p>All these steps are well documented with references to the
  literature. This makes it easy for new practitioners to analyse
  multi-way data without falling for known pitfalls.</p>
</sec>
<sec id="overview">
  <title>Overview</title>
  <p>TLViz follows the procedural paradigm, and all of TLViz’s
  functionality lies in functions separated over 8 public modules:</p>
  <list list-type="order">
    <list-item>
      <p><monospace>tlviz.data</monospace> - various open datasets</p>
    </list-item>
    <list-item>
      <p><monospace>tlviz.factor_tools</monospace> - transforms and
      compares PARAFAC models without using reference data</p>
    </list-item>
    <list-item>
      <p><monospace>tlviz.model_evaluation</monospace> - evaluates a
      PARAFAC model</p>
    </list-item>
    <list-item>
      <p><monospace>tlviz.multimodel_evaluation</monospace> - compares
      and evaluates multiple models at once</p>
    </list-item>
    <list-item>
      <p><monospace>tlviz.outliers</monospace> - finds data points that
      may be outliers</p>
    </list-item>
    <list-item>
      <p><monospace>tlviz.postprocessing</monospace> - post-processes
      PARAFAC models, usually used before visualising</p>
    </list-item>
    <list-item>
      <p><monospace>tlviz.utils</monospace> - general utilities that can
      be useful (e.g. forming dense tensors from decompositions)</p>
    </list-item>
    <list-item>
      <p><monospace>tlviz.visualisation</monospace> - visualising
      component models</p>
    </list-item>
  </list>
  <p>A core design choice behind TLViz is how to store metadata.
  Consider the example above. It is necessary to know the values along
  the x-axis to interpret these components. Therefore, we use xarray
  DataArrays to store data tensors
  (<xref alt="Hoyer &amp; Hamman, 2017" rid="ref-hoyer2017xarray" ref-type="bibr">Hoyer
  &amp; Hamman, 2017</xref>), keeping the correct indices for each
  tensor mode (i.e. axis), and Pandas DataFrames to store factor
  matrices. However, TensorLy works with NumPy arrays. TLViz, therefore,
  provides useful tools to add the coordinates from an xarray DataArray
  onto the factor matrices obtained with TensorLy. Furthrmore, all
  functions of TLViz support both labelled and unlabelled decompositions
  (i.e. DataFrames and NumPy arrays) and will use the labels whenever
  possible.</p>
  <p>The visualisation module uses matplotlib to create the plots, and
  the goal of this module is to facilitate fast prototyping and
  exploratory analysis. However, TLViz can also seamlessly convert
  factor matrices into tidy tables, which are better suited for
  visualisation libraries such as Seaborn
  (<xref alt="Waskom, 2021" rid="ref-Waskom2021" ref-type="bibr">Waskom,
  2021</xref>) and PlotLy Express, thus making it painless to combine
  tensor decomposition with the plotting library that best suits the
  user’s specific needs.</p>
  <p>To be easy to use, scientific software should have thorough and
  accurate documentation. For TLViz, this means two things: Explaining
  what the code does and why this is important. Therefore, we have taken
  care to review the literature, citing original sources wherever
  possible. By gathering the references together with the API
  documentation and examples, we make it straightforward for researchers
  new to the field to discover suitable references for their
  analysis.</p>
  <p>The gallery of examples provided by TLViz explains the tools
  included in the package and how to use them. The gallery contains,
  among others, examples that explain how to select the number of
  components in PARAFAC models, how to detect outliers and how to
  combine TLViz with PlotLy to get interactive visualisations. All
  examples include relevant references, making it easy for new
  practitioners to get started.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We want to thank Jean Kossaifi for valuable feedback and for
  creating the TensorLy project.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-bader2008discussion">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Bader</surname><given-names>Brett W</given-names></name>
        <name><surname>Berry</surname><given-names>Michael W</given-names></name>
        <name><surname>Browne</surname><given-names>Murray</given-names></name>
      </person-group>
      <article-title>Discussion tracking in enron email using PARAFAC</article-title>
      <source>Survey of text mining II</source>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2008">2008</year>
      <pub-id pub-id-type="doi">10.1007/978-1-84800-046-9_8</pub-id>
      <fpage>147</fpage>
      <lpage>163</lpage>
    </element-citation>
  </ref>
  <ref id="ref-kolda2009tensor">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kolda</surname><given-names>Tamara G</given-names></name>
        <name><surname>Bader</surname><given-names>Brett W</given-names></name>
      </person-group>
      <article-title>Tensor decompositions and applications</article-title>
      <source>SIAM review</source>
      <publisher-name>SIAM</publisher-name>
      <year iso-8601-date="2009">2009</year>
      <volume>51</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1137/07070111X</pub-id>
      <fpage>455</fpage>
      <lpage>500</lpage>
    </element-citation>
  </ref>
  <ref id="ref-bro1997parafac">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bro</surname><given-names>Rasmus</given-names></name>
      </person-group>
      <article-title>PARAFAC. Tutorial and applications</article-title>
      <source>Chemometrics and intelligent laboratory systems</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="1997">1997</year>
      <volume>38</volume>
      <issue>2</issue>
      <pub-id pub-id-type="doi">10.1016/S0169-7439(97)00032-4</pub-id>
      <fpage>149</fpage>
      <lpage>171</lpage>
    </element-citation>
  </ref>
  <ref id="ref-andersen2004structure">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Andersen</surname><given-names>Anders H</given-names></name>
        <name><surname>Rayens</surname><given-names>William S</given-names></name>
      </person-group>
      <article-title>Structure-seeking multilinear methods for the analysis of fMRI data</article-title>
      <source>NeuroImage</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2004">2004</year>
      <volume>22</volume>
      <issue>2</issue>
      <pub-id pub-id-type="doi">10.1016/j.neuroimage.2004.02.026</pub-id>
      <fpage>728</fpage>
      <lpage>739</lpage>
    </element-citation>
  </ref>
  <ref id="ref-kossaifi2016tensorly">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kossaifi</surname><given-names>Jean</given-names></name>
        <name><surname>Panagakis</surname><given-names>Yannis</given-names></name>
        <name><surname>Anandkumar</surname><given-names>Anima</given-names></name>
        <name><surname>Pantic</surname><given-names>Maja</given-names></name>
      </person-group>
      <article-title>TensorLy: Tensor learning in python</article-title>
      <source>Journal of Machine Learning Research</source>
      <year iso-8601-date="2019">2019</year>
      <volume>20</volume>
      <issue>26</issue>
      <uri>http://jmlr.org/papers/v20/18-277.html</uri>
      <fpage>1</fpage>
      <lpage>6</lpage>
    </element-citation>
  </ref>
  <ref id="ref-pedregosa2011scikit">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Pedregosa</surname><given-names>Fabian</given-names></name>
        <name><surname>Varoquaux</surname><given-names>Gaël</given-names></name>
        <name><surname>Gramfort</surname><given-names>Alexandre</given-names></name>
        <name><surname>Michel</surname><given-names>Vincent</given-names></name>
        <name><surname>Thirion</surname><given-names>Bertrand</given-names></name>
        <name><surname>Grisel</surname><given-names>Olivier</given-names></name>
        <name><surname>Blondel</surname><given-names>Mathieu</given-names></name>
        <name><surname>Prettenhofer</surname><given-names>Peter</given-names></name>
        <name><surname>Weiss</surname><given-names>Ron</given-names></name>
        <name><surname>Dubourg</surname><given-names>Vincent</given-names></name>
        <name><surname>Vanderplas</surname><given-names>Jake</given-names></name>
        <name><surname>Passos</surname><given-names>Alexandre</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Brucher</surname><given-names>Matthieu</given-names></name>
        <name><surname>Perrot</surname><given-names>Matthieu</given-names></name>
        <name><surname>Duchesnay</surname></name>
      </person-group>
      <article-title>Scikit-learn: Machine learning in python</article-title>
      <source>Journal of Machine Learning Research</source>
      <year iso-8601-date="2011">2011</year>
      <volume>12</volume>
      <issue>85</issue>
      <uri>http://jmlr.org/papers/v12/pedregosa11a.html</uri>
      <fpage>2825</fpage>
      <lpage>2830</lpage>
    </element-citation>
  </ref>
  <ref id="ref-mckinney-proc-scipy-2010">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>McKinney</surname></name>
      </person-group>
      <article-title>Data Structures for Statistical Computing in Python</article-title>
      <source>Proceedings of the 9th Python in Science Conference</source>
      <person-group person-group-type="editor">
        <name><surname>Walt</surname></name>
        <name><surname>Millman</surname></name>
      </person-group>
      <year iso-8601-date="2010">2010</year>
      <pub-id pub-id-type="doi">10.25080/Majora-92bf1922-00a</pub-id>
      <fpage>56 </fpage>
      <lpage> 61</lpage>
    </element-citation>
  </ref>
  <ref id="ref-osti_1230898">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Kolda</surname><given-names>Tamara G.</given-names></name>
        <name><surname>Bader</surname><given-names>Brett W.</given-names></name>
      </person-group>
      <article-title>MATLAB tensor toolbox, version 00</article-title>
      <year iso-8601-date="2006-08">2006</year><month>08</month>
      <uri>https://www.osti.gov/biblio/1230898</uri>
      <pub-id pub-id-type="doi"></pub-id>
    </element-citation>
  </ref>
  <ref id="ref-andersson2000n">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Andersson</surname><given-names>Claus A</given-names></name>
        <name><surname>Bro</surname><given-names>Rasmus</given-names></name>
      </person-group>
      <article-title>The n-way toolbox for MATLAB</article-title>
      <source>Chemometrics and intelligent laboratory systems</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2000">2000</year>
      <volume>52</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1016/S0169-7439(00)00071-X</pub-id>
      <fpage>1</fpage>
      <lpage>4</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Waskom2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Waskom</surname><given-names>Michael L.</given-names></name>
      </person-group>
      <article-title>Seaborn: Statistical data visualization</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <volume>6</volume>
      <issue>60</issue>
      <uri>https://doi.org/10.21105/joss.03021</uri>
      <pub-id pub-id-type="doi">10.21105/joss.03021</pub-id>
      <fpage>3021</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-hoyer2017xarray">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hoyer</surname><given-names>Stephan</given-names></name>
        <name><surname>Hamman</surname><given-names>Joe</given-names></name>
      </person-group>
      <article-title>Xarray: ND labeled arrays and datasets in python</article-title>
      <source>Journal of Open Research Software</source>
      <publisher-name>Ubiquity Press</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <volume>5</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.5334/jors.148</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-kisil2021hottbox">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kisil</surname><given-names>Ilya</given-names></name>
        <name><surname>Calvi</surname><given-names>Giuseppe G</given-names></name>
        <name><surname>Dees</surname><given-names>Bruno S</given-names></name>
        <name><surname>Mandic</surname><given-names>Danilo P</given-names></name>
      </person-group>
      <article-title>HOTTBOX: Higher order tensor ToolBOX</article-title>
      <source>arXiv preprint arXiv:2111.15662</source>
      <year iso-8601-date="2021">2021</year>
      <pub-id pub-id-type="doi">10.48550/arXiv.2111.15662</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
