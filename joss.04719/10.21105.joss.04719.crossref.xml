<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/5.3.1"
           xmlns:ai="http://www.crossref.org/AccessIndicators.xsd"
           xmlns:rel="http://www.crossref.org/relations.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           version="5.3.1"
           xsi:schemaLocation="http://www.crossref.org/schema/5.3.1 http://www.crossref.org/schemas/crossref5.3.1.xsd">
  <head>
    <doi_batch_id>20221128T082239-96516417faaf3d5ce1f232ac84a776754daa39be</doi_batch_id>
    <timestamp>20221128082239</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>https://joss.theoj.org/</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>11</month>
          <year>2022</year>
        </publication_date>
        <journal_volume>
          <volume>7</volume>
        </journal_volume>
        <issue>79</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>strucscan: A lightweight Python-based framework for
high-throughput material simulation</title>
        </titles>
        <contributors>
          <person_name sequence="first" contributor_role="author">
            <given_name>Isabel</given_name>
            <surname>Pietka</surname>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Ralf</given_name>
            <surname>Drautz</surname>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Thomas</given_name>
            <surname>Hammerschmidt</surname>
          </person_name>
        </contributors>
        <publication_date>
          <month>11</month>
          <day>28</day>
          <year>2022</year>
        </publication_date>
        <pages>
          <first_page>4719</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.04719</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">10.5281/zenodo.7313602</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/4719</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.04719</doi>
          <resource>https://joss.theoj.org/papers/10.21105/joss.04719</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://joss.theoj.org/papers/10.21105/joss.04719.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="Kresse-96">
            <article_title>Efficiency of ab-initio total energy
calculations for metals and semiconductors using a plane-wave basis
set</article_title>
            <author>Kresse</author>
            <journal_title>Computational Materials
Science</journal_title>
            <volume>6</volume>
            <doi>10.1016/0927-0256(96)00008-0</doi>
            <cYear>1996</cYear>
            <unstructured_citation>Kresse, G., &amp; Furthmüller, J.
(1996). Efficiency of ab-initio total energy calculations for metals and
semiconductors using a plane-wave basis set. Computational Materials
Science, 6, 15–50.
https://doi.org/10.1016/0927-0256(96)00008-0</unstructured_citation>
          </citation>
          <citation key="Kresse-99">
            <article_title>From ultrasoft pseudopotentials to the
projector augmented-wave method</article_title>
            <author>Kresse</author>
            <journal_title>Physical Review B</journal_title>
            <volume>59</volume>
            <doi>10.1103/PhysRevB.59.1758</doi>
            <cYear>1999</cYear>
            <unstructured_citation>Kresse, G., &amp; Joubert, D. (1999).
From ultrasoft pseudopotentials to the projector augmented-wave method.
Physical Review B, 59, 1758–1775.
https://doi.org/10.1103/PhysRevB.59.1758</unstructured_citation>
          </citation>
          <citation key="Kresse-96b">
            <article_title>Efficient iterative schemes for ab initio
total-energy calculations using a plane-wave basis set</article_title>
            <author>Kresse</author>
            <journal_title>Physical Review B</journal_title>
            <volume>54</volume>
            <doi>10.1103/physrevb.54.11169</doi>
            <cYear>1996</cYear>
            <unstructured_citation>Kresse, G., &amp; Furthmüller, J.
(1996). Efficient iterative schemes for ab initio total-energy
calculations using a plane-wave basis set. Physical Review B, 54,
11169–11186.
https://doi.org/10.1103/physrevb.54.11169</unstructured_citation>
          </citation>
          <citation key="asr">
            <article_title>Atomic simulation recipes: A python framework
and library for automated workflows</article_title>
            <author>Gjerding</author>
            <journal_title>Computational Materials
Science</journal_title>
            <volume>199</volume>
            <doi>10.1016/j.commatsci.2021.110731</doi>
            <cYear>2021</cYear>
            <unstructured_citation>Gjerding, M., Skovhus, T., Rasmussen,
A., Bertoldo, F., Larsen, A. H., Mortensen, J. J., &amp; Thygesen, K. S.
(2021). Atomic simulation recipes: A python framework and library for
automated workflows. Computational Materials Science, 199, 110731.
https://doi.org/10.1016/j.commatsci.2021.110731</unstructured_citation>
          </citation>
          <citation key="pyiron">
            <article_title>Pyiron: An integrated development environment
for computational materials science</article_title>
            <author>Janssen</author>
            <journal_title>Computational Materials
Science</journal_title>
            <volume>163</volume>
            <doi>10.1016/j.commatsci.2018.07.043</doi>
            <cYear>2019</cYear>
            <unstructured_citation>Janssen, J., Surendralal, S.,
Lysogorskiy, Y., Todorova, M., Hickel, T., Drautz, R., &amp; Neugebauer,
J. (2019). Pyiron: An integrated development environment for
computational materials science. Computational Materials Science, 163,
24–36.
https://doi.org/10.1016/j.commatsci.2018.07.043</unstructured_citation>
          </citation>
          <citation key="atomate">
            <article_title>Atomate: A high-level interface to generate,
execute, and analyze computational materials science
workflows</article_title>
            <author>Mathew</author>
            <journal_title>Computational Materials
Science</journal_title>
            <volume>139</volume>
            <doi>10.1016/j.commatsci.2017.07.030</doi>
            <cYear>2017</cYear>
            <unstructured_citation>Mathew, K., Montoya, J. H.,
Faghaninia, A., Dwarakanath, S., Aykol, M., Tang, H., Chu, I., Smidt,
T., Bocklund, B., Horton, M., Dagdelen, J., Wood, B., Liu, Z.-K.,
Neaton, J., Ong, S. P., Persson, K., &amp; Jain, A. (2017). Atomate: A
high-level interface to generate, execute, and analyze computational
materials science workflows. Computational Materials Science, 139,
140–152.
https://doi.org/10.1016/j.commatsci.2017.07.030</unstructured_citation>
          </citation>
          <citation key="FireWorks">
            <article_title>FireWorks: A dynamic workflow system designed
for high-throughput applications</article_title>
            <author>Jain</author>
            <journal_title>Concurrency and Computation: Practice and
Experience</journal_title>
            <volume>27</volume>
            <doi>10.1002/cpe.3505</doi>
            <cYear>2015</cYear>
            <unstructured_citation>Jain, A., Ong, S. P., Chen, W.,
Medasani, B., Qu, X., Kocher, M., Brafman, M., Petretto, G., Rignanese,
G.-M., Hautier, G., Gunter, D., &amp; Persson, K. A. (2015). FireWorks:
A dynamic workflow system designed for high-throughput applications.
Concurrency and Computation: Practice and Experience, 27, 5037–5059.
https://doi.org/10.1002/cpe.3505</unstructured_citation>
          </citation>
          <citation key="sge">
            <article_title>Sun grid engine: Towards creating a compute
power grid</article_title>
            <author>Gentzsch</author>
            <doi>10.1109/CCGRID.2001.923173</doi>
            <cYear>2001</cYear>
            <unstructured_citation>Gentzsch, W. (2001). Sun grid engine:
Towards creating a compute power grid. 35.
https://doi.org/10.1109/CCGRID.2001.923173</unstructured_citation>
          </citation>
          <citation key="slurm">
            <article_title>SLURM: Simple linux utility for resource
management</article_title>
            <author>Jette</author>
            <doi>10.1007/10968987_3</doi>
            <cYear>2002</cYear>
            <unstructured_citation>Jette, M. A., Yoo, A. B., &amp;
Grondona, M. (2002). SLURM: Simple linux utility for resource
management. 44–60.
https://doi.org/10.1007/10968987_3</unstructured_citation>
          </citation>
          <citation key="ase">
            <article_title>The atomic simulation environmenta python
library for working with atoms</article_title>
            <author>Larsen</author>
            <journal_title>Journal of Physics: Condensed
Matter</journal_title>
            <volume>29</volume>
            <doi>10.1088/1361-648x/aa680e</doi>
            <cYear>2017</cYear>
            <unstructured_citation>Larsen, A. H., Mortensen, J. J.,
Blomqvist, J., Castelli, I. E., Christensen, R., Dułak, M., Friis, J.,
Groves, M. N., Hammer, B., Hargus, C., Hermes, E. D., Jennings, P. C.,
Jensen, P. B., Kermode, J., Kitchin, J. R., Kolsbjerg, E. L., Kubal, J.,
Kaasbjerg, K., Lysgaard, S., … Jacobsen, K. W. (2017). The atomic
simulation environmenta python library for working with atoms. Journal
of Physics: Condensed Matter, 29, 273002.
https://doi.org/10.1088/1361-648x/aa680e</unstructured_citation>
          </citation>
          <citation key="strucscan">
            <article_title>Topologically close-packed phases in binary
transition-metal compounds: Matching high-throughput ab initio
calculations to an empirical structure map</article_title>
            <author>Hammerschmidt</author>
            <journal_title>New Journal of Physics</journal_title>
            <volume>15</volume>
            <doi>10.1088/1367-2630/15/11/115016</doi>
            <cYear>2013</cYear>
            <unstructured_citation>Hammerschmidt, T., Bialon, A. F.,
Pettifor, D. G., &amp; Drautz, R. (2013). Topologically close-packed
phases in binary transition-metal compounds: Matching high-throughput ab
initio calculations to an empirical structure map. New Journal of
Physics, 15, 115016.
https://doi.org/10.1088/1367-2630/15/11/115016</unstructured_citation>
          </citation>
          <citation key="aiida">
            <article_title>AiiDA 1.0, a scalable computational
infrastructure for automated reproducible workflows and data
provenance</article_title>
            <author>Huber</author>
            <journal_title>Scientific Data</journal_title>
            <issue>300</issue>
            <volume>7</volume>
            <doi>10.1038/s41597-020-00638-4</doi>
            <cYear>2020</cYear>
            <unstructured_citation>Huber, S. P., Zoupanos, S., &amp; al,
M. U. et. (2020). AiiDA 1.0, a scalable computational infrastructure for
automated reproducible workflows and data provenance. Scientific Data,
7(300).
https://doi.org/10.1038/s41597-020-00638-4</unstructured_citation>
          </citation>
          <citation key="pymatgen">
            <article_title>Python materials genomics (pymatgen): A
robust, open-source python library for materials
analysis</article_title>
            <author>Ong</author>
            <journal_title>Computational Materials
Science</journal_title>
            <volume>68</volume>
            <doi>10.1016/j.commatsci.2012.10.028</doi>
            <cYear>2013</cYear>
            <unstructured_citation>Ong, S. P., Richards, W. D., Jain,
A., Hautier, G., Kocher, M., Cholia, S., Gunter, D., Chevrier, V. L.,
Persson, K. A., &amp; Ceder, G. (2013). Python materials genomics
(pymatgen): A robust, open-source python library for materials analysis.
Computational Materials Science, 68, 314–319.
https://doi.org/10.1016/j.commatsci.2012.10.028</unstructured_citation>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
