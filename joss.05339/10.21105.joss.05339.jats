<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">5339</article-id>
<article-id pub-id-type="doi">10.21105/joss.05339</article-id>
<title-group>
<article-title>msmhelper: A Python package for Markov state modeling of
protein dynamics</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-2863-2646</contrib-id>
<name>
<surname>Nagel</surname>
<given-names>Daniel</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-3302-3044</contrib-id>
<name>
<surname>Stock</surname>
<given-names>Gerhard</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Biomolecular Dynamics, Institute of Physics,
Albert-Ludwigs-Universität Freiburg, 79104 Freiburg,
Germany</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-03-10">
<day>10</day>
<month>3</month>
<year>2023</year>
</pub-date>
<volume>8</volume>
<issue>85</issue>
<fpage>5339</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>markov state model</kwd>
<kwd>protein dynamics</kwd>
<kwd>MD</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Proteins function through complex conformational changes that can
  be difficult to study experimentally. Molecular dynamics simulations
  provide high spatiotemporal resolution, but generate massive amounts
  of data that require specialized analysis. Markov state modeling is a
  common approach to interpret simulations, which involves identifying
  biologically relevant conformations and modeling the dynamics as
  memoryless transitions between them. Markov models can complement
  experimental data with atomistic information, leading to a deeper
  understanding of protein behavior.</p>
  <p>In this work, we present <monospace>msmhelper</monospace>, a Python
  package that provides a user-friendly and computationally efficient
  implementation for estimating and validating Markov state models of
  protein dynamics. Given a set of metastable conformational states, the
  package offers a wide range of functionalities to improve model
  predictions, including dynamical correction techniques such as the
  Hummer-Szabo projection formalism, dynamical coring, and Gaussian
  filtering, as well as methods for predicting experimentally relevant
  timescales and pathways.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Markov state modeling (MSM) has emerged as an important tool for
  the analysis of molecular dynamics (MD) simulations of protein
  dynamics
  (<xref alt="Bowman et al., 2013" rid="ref-Bowman13" ref-type="bibr">Bowman
  et al., 2013</xref>;
  <xref alt="Buchete &amp; Hummer, 2008" rid="ref-Buchete08" ref-type="bibr">Buchete
  &amp; Hummer, 2008</xref>;
  <xref alt="Prinz et al., 2011" rid="ref-Prinz11" ref-type="bibr">Prinz
  et al., 2011</xref>;
  <xref alt="Wang et al., 2018" rid="ref-Wang17" ref-type="bibr">Wang et
  al., 2018</xref>). In the general workflow of MSM, clustering into
  hundreds to thousands of microstates is crucial to accurately
  represent the free energy landscape and correct for non-optimal cuts
  between states. However, to comprehend the underlying biological
  processes, it is essential to cluster these microstates into a few
  macrostates that describe the dynamics as jumps between biologically
  relevant metastable conformations. Despite the assumption that
  microstate dynamics can be modeled by Markovian jumps, this is
  generally not the case for coarse-grained macrostate dynamics due to
  insufficient timescale separation between intrastate and interstate
  dynamics. To address this challenge, <monospace>msmhelper</monospace>
  includes various dynamical correction techniques, including a Gaussian
  filtering approach to include short-term time-information in the
  geometric-based clustering step
  (<xref alt="Nagel et al., 2023" rid="ref-Nagel23" ref-type="bibr">Nagel
  et al., 2023</xref>), dynamical coring
  (<xref alt="Nagel et al., 2019" rid="ref-Nagel19" ref-type="bibr">Nagel
  et al., 2019</xref>) to correct for spurious intrastate fluctuations
  at the barrier, misclassified as interstate fluctuations, and the
  Hummer-Szabo projection formalism
  (<xref alt="Hummer &amp; Szabo, 2015" rid="ref-Hummer15" ref-type="bibr">Hummer
  &amp; Szabo, 2015</xref>), enabling an optimal projection of
  microstate dynamics onto the macrostate space. Moreover,
  <monospace>msmhelper</monospace> provides an easy-to-use interface for
  common MSM analyses, including the estimation of the transition
  matrix, the validation via Chapman-Kolmogorov tests and implied
  timescales, and the estimation of biological relevant pathways
  including their time scales, based on the concept of
  <monospace>MSMPathfinder</monospace>
  (<xref alt="Nagel et al., 2020" rid="ref-Nagel20" ref-type="bibr">Nagel
  et al., 2020</xref>).</p>
  <p>There are well-established Python packages, in particular PyEMMA
  (<xref alt="Scherer et al., 2015" rid="ref-pyemma" ref-type="bibr">Scherer
  et al., 2015</xref>) and MSMBuilder
  (<xref alt="Beauchamp et al., 2011" rid="ref-msmbuilder" ref-type="bibr">Beauchamp
  et al., 2011</xref>), providing a comprehensive set of tools for the
  entire MSM workflow, from feature extraction and projection of MD
  simulations onto collective variables, to clustering and dynamical
  lumping to identify metastable conformations, and ultimately to the
  estimation of Markov models and the prediction of relevant dynamics.
  In contrast to them, <monospace>msmhelper</monospace> focuses only on
  the estimation and analysis of Markov state models starting from given
  (micro- and or macro-) state trajectories. Furthermore—to the best of
  the authors’ knowledge—this is the first publicly available Python
  implementation of some methodologies not implemented in
  <monospace>PyEmma</monospace> and <monospace>MSMBuilder</monospace>,
  including dynamical coring, the Hummer-Szabo projection formalism, and
  the estimation of waiting time based pathways. Additionally, this
  package provides a rich command-line interface for common analysis,
  including the creation of publication-ready figures of the implied
  timescales, the Chapman-Kolmogorov test, different visualizations of
  the waiting time distributions, and a comprehensive state
  representation. The latter two techniques were suggested in Nagel et
  al. (<xref alt="2023" rid="ref-Nagel23" ref-type="bibr">2023</xref>),
  which uses <monospace>msmhelper</monospace> to analyze protein
  dynamics.</p>
  <p>Since Markov state modeling is usually done on local computers, it
  is important to provide sufficiently fast performance. By using
  <monospace>numpy</monospace>
  (<xref alt="Harris et al., 2020" rid="ref-numpy" ref-type="bibr">Harris
  et al., 2020</xref>) and just-in-time compilation via
  <monospace>numba</monospace>
  (<xref alt="Lam et al., 2015" rid="ref-numba" ref-type="bibr">Lam et
  al., 2015</xref>), all performance-critical methods in
  <monospace>msmhelper</monospace> have been optimized. As a result,
  <monospace>msmhelper</monospace> can be much faster than conventional
  multi-purpose programs such as <monospace>PyEmma</monospace>. For
  example, adopting a 10-state trajectory with
  <inline-formula><alternatives>
  <tex-math><![CDATA[10^5]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msup><mml:mn>10</mml:mn><mml:mn>5</mml:mn></mml:msup></mml:math></alternatives></inline-formula>
  time steps, both the run time of the MSM estimation (transition
  probability matrix) and its validation by the well-established
  Chapman-Kolmogorov test are more than an order of magnitude faster. If
  we compare the performance of the Markov chain Monte Carlo (MCMC)
  propagation, which is commonly used to determine pathways including
  their corresponding time scale distributions,
  <monospace>msmhelper</monospace> outperforms
  <monospace>PyEMMA</monospace> by up to two orders of magnitude. More
  details and additional benchmarks, including source code, can be found
  in the documentation.</p>
</sec>
<sec id="example">
  <title>Example</title>
  <fig>
    <caption><p>MSM of villin headpiece, data taken from Nagel et al.
    (<xref alt="2023" rid="ref-Nagel23" ref-type="bibr">2023</xref>).
    (top left) Compact structural representation of the states, called
    contact representation, (top center) implied timescales to validate
    the Markovianity of the model, (top right) Chapman-Kolmogorov test
    for models based on different lag times compared to the MD
    simulation, (bottom left) waiting time distribution of the folding
    time for varying lag times compared, and (bottom center) detailed
    comparison of folding time distributions to the MD
    simulation.<styled-content id="figU003Acli"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/figure.pdf" />
  </fig>
  <p>In the following, we briefly demonstrate the capabilities of the
  provided command-line interface. For this purpose, we use the publicly
  available micro- and macrostate trajectories of the villin headpiece
  (see,
  <xref alt="Nagel et al., 2023" rid="ref-Nagel23" ref-type="bibr">Nagel
  et al., 2023</xref>). It is a well-studied fast folding protein, that
  allows us to test common MSM analysis, including state
  characterization, MSM validation, and folding timescale estimation.
  All results shown in
  <xref alt="[fig:cli]" rid="figU003Acli">[fig:cli]</xref> were
  generated directly from the command-line interface of
  <monospace>msmhelper</monospace>. (Top left) To characterize the
  structure of the metastable states, Nagel et al.
  (<xref alt="2023" rid="ref-Nagel23" ref-type="bibr">2023</xref>)
  introduced a contact-based representation, each state is described by
  the distribution of contacts within the contact clusters obtained
  using the correlation-based feature selection method MoSAIC
  (<xref alt="Diez et al., 2022" rid="ref-Diez22" ref-type="bibr">Diez
  et al., 2022</xref>). (Top center) When estimating a Markov state
  model, selecting a sufficiently long lag time
  <inline-formula><alternatives>
  <tex-math><![CDATA[\tau_\text{lag}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>τ</mml:mi><mml:mtext mathvariant="normal">lag</mml:mtext></mml:msub></mml:math></alternatives></inline-formula>
  is of importance to ensure the Markovianity of the data (see, e.g.,
  <xref alt="Prinz et al., 2011" rid="ref-Prinz11" ref-type="bibr">Prinz
  et al., 2011</xref>). That is, the implied timescales
  <inline-formula><alternatives>
  <tex-math><![CDATA[t_i]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  should be constant, given by <inline-formula><alternatives>
  <tex-math><![CDATA[t_i = - \tau_\text{lag} / \log(\lambda_i)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>τ</mml:mi><mml:mtext mathvariant="normal">lag</mml:mtext></mml:msub><mml:mi>/</mml:mi><mml:mo>log</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>,
  where <inline-formula><alternatives>
  <tex-math><![CDATA[\lambda_i]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>λ</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  denotes the <inline-formula><alternatives>
  <tex-math><![CDATA[i]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>i</mml:mi></mml:math></alternatives></inline-formula>-th
  largest left-handed eigenvalue. (Top right) Another approach to
  validate the Markovianity is the Chapman-Kolmogorov test which
  compares the model’s predictions of time evolution with the results of
  molecular dynamics (MD) simulations. (Bottom) To relate to experiment,
  we compare the predicted folding time distributions with the MD
  simulation results. Using the median, interquartile range (IQR), and
  corresponding bounds.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The computationally efficient implementations of
  <monospace>msmhelper</monospace> are made possible by
  <monospace>numba</monospace>
  (<xref alt="Lam et al., 2015" rid="ref-numba" ref-type="bibr">Lam et
  al., 2015</xref>) and <monospace>numpy</monospace>
  (<xref alt="Harris et al., 2020" rid="ref-numpy" ref-type="bibr">Harris
  et al., 2020</xref>), the visualizations are based on
  <monospace>matplotlib</monospace>
  (<xref alt="Hunter, 2007" rid="ref-matplotlib" ref-type="bibr">Hunter,
  2007</xref>) and <monospace>prettypyplot</monospace>
  (<xref alt="Nagel, 2022" rid="ref-prettypyplot" ref-type="bibr">Nagel,
  2022</xref>), and the command-line interface is realized with
  <monospace>click</monospace>
  (<xref alt="The Pallets Projects, 2022" rid="ref-click" ref-type="bibr">The
  Pallets Projects, 2022</xref>).</p>
  <p>Furthermore, the authors thank Georg Diez, Sofia Sartore, Miriam
  Jäger, Emanuel Dorbath, and Ahmed Ali for valuable discussions and
  testing the software package.</p>
  <p>This work has been supported by the Deutsche Forschungsgemeinschaft
  (DFG) via the Research Unit FOR 5099 “Reducing complexity of
  nonequilibrium” (project No. 431945604). The authors acknowledge
  support by the High Performance and Cloud Computing Group at the
  Zentrum für Datenverarbeitung of the University of Tübingen and the
  Rechenzentrum of the University of Freiburg, the state of
  Baden-Württemberg through bwHPC and the DFG through Grant Nos. INST
  37/935-1 FUGG (RV bw16I016) and INST 39/963-1 FUGG (RV bw18A004).</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-numba">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Lam</surname><given-names>Siu Kwan</given-names></name>
        <name><surname>Pitrou</surname><given-names>Antoine</given-names></name>
        <name><surname>Seibert</surname><given-names>Stanley</given-names></name>
      </person-group>
      <article-title>Numba: A LLVM-based python JIT compiler</article-title>
      <source>Proceedings of the second workshop on the LLVM compiler infrastructure in HPC</source>
      <publisher-name>Association for Computing Machinery</publisher-name>
      <publisher-loc>New York, NY, USA</publisher-loc>
      <year iso-8601-date="2015">2015</year>
      <isbn>9781450340052</isbn>
      <uri>https://doi.org/10.1145/2833157.2833162</uri>
      <pub-id pub-id-type="doi">10.1145/2833157.2833162</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-numpy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>Walt</surname><given-names>Stéfan J. van der</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Wieser</surname><given-names>Eric</given-names></name>
        <name><surname>Taylor</surname><given-names>Julian</given-names></name>
        <name><surname>Berg</surname><given-names>Sebastian</given-names></name>
        <name><surname>Smith</surname><given-names>Nathaniel J.</given-names></name>
        <name><surname>Kern</surname><given-names>Robert</given-names></name>
        <name><surname>Picus</surname><given-names>Matti</given-names></name>
        <name><surname>Hoyer</surname><given-names>Stephan</given-names></name>
        <name><surname>Kerkwijk</surname><given-names>Marten H. van</given-names></name>
        <name><surname>Brett</surname><given-names>Matthew</given-names></name>
        <name><surname>Haldane</surname><given-names>Allan</given-names></name>
        <name><surname>Río</surname><given-names>Jaime Fernández del</given-names></name>
        <name><surname>Wiebe</surname><given-names>Mark</given-names></name>
        <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
        <name><surname>Gérard-Marchant</surname><given-names>Pierre</given-names></name>
        <name><surname>Sheppard</surname><given-names>Kevin</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
        <name><surname>Abbasi</surname><given-names>Hameer</given-names></name>
        <name><surname>Gohlke</surname><given-names>Christoph</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
      </person-group>
      <article-title>Array programming with NumPy</article-title>
      <source>Nature</source>
      <publisher-name>Springer Science; Business Media LLC</publisher-name>
      <year iso-8601-date="2020-09">2020</year><month>09</month>
      <volume>585</volume>
      <issue>7825</issue>
      <uri>https://doi.org/10.1038/s41586-020-2649-2</uri>
      <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
      <fpage>357</fpage>
      <lpage>362</lpage>
    </element-citation>
  </ref>
  <ref id="ref-matplotlib">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hunter</surname><given-names>J. D.</given-names></name>
      </person-group>
      <article-title>Matplotlib: A 2D graphics environment</article-title>
      <source>Computing in Science &amp; Engineering</source>
      <publisher-name>IEEE COMPUTER SOC</publisher-name>
      <year iso-8601-date="2007">2007</year>
      <volume>9</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1109/MCSE.2007.55</pub-id>
      <fpage>90</fpage>
      <lpage>95</lpage>
    </element-citation>
  </ref>
  <ref id="ref-prettypyplot">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Nagel</surname><given-names>Daniel</given-names></name>
      </person-group>
      <article-title>Prettypyplot: Publication ready matplotlib figures made simple</article-title>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2022-11">2022</year><month>11</month>
      <pub-id pub-id-type="doi">10.5281/zenodo.7278311</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-click">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <string-name>The Pallets Projects</string-name>
      </person-group>
      <article-title>Click: Python composable command line interface toolkit</article-title>
      <year iso-8601-date="2022">2022</year>
      <uri>https://palletsprojects.com/p/click</uri>
    </element-citation>
  </ref>
  <ref id="ref-pyemma">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Scherer</surname><given-names>Martin K.</given-names></name>
        <name><surname>Trendelkamp-Schroer</surname><given-names>Benjamin</given-names></name>
        <name><surname>Paul</surname><given-names>Fabian</given-names></name>
        <name><surname>Pérez-Hernández</surname><given-names>Guillermo</given-names></name>
        <name><surname>Hoffmann</surname><given-names>Moritz</given-names></name>
        <name><surname>Plattner</surname><given-names>Nuria</given-names></name>
        <name><surname>Wehmeyer</surname><given-names>Christoph</given-names></name>
        <name><surname>Prinz</surname><given-names>Jan-Hendrik</given-names></name>
        <name><surname>Noé</surname><given-names>Frank</given-names></name>
      </person-group>
      <article-title>PyEMMA 2: A Software Package for Estimation, Validation, and Analysis of Markov Models</article-title>
      <source>J. Chem. Theory Comput.</source>
      <year iso-8601-date="2015-10">2015</year><month>10</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2015-10-19">2015</year><month>10</month><day>19</day></date-in-citation>
      <volume>11</volume>
      <issn>1549-9618</issn>
      <uri>http://dx.doi.org/10.1021/acs.jctc.5b00743</uri>
      <pub-id pub-id-type="doi">10.1021/acs.jctc.5b00743</pub-id>
      <fpage>5525</fpage>
      <lpage>5542</lpage>
    </element-citation>
  </ref>
  <ref id="ref-msmbuilder">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Beauchamp</surname><given-names>Kyle A.</given-names></name>
        <name><surname>Bowman</surname><given-names>Gregory R.</given-names></name>
        <name><surname>Lane</surname><given-names>Thomas J.</given-names></name>
        <name><surname>Maibaum</surname><given-names>Lutz</given-names></name>
        <name><surname>Haque</surname><given-names>Imran S.</given-names></name>
        <name><surname>Pande</surname><given-names>Vijay S.</given-names></name>
      </person-group>
      <article-title>MSMBuilder2: Modeling Conformational Dynamics on the Picosecond to Millisecond Scale</article-title>
      <source>J. Chem. Theory Comput.</source>
      <year iso-8601-date="2011">2011</year>
      <volume>7</volume>
      <issue>10</issue>
      <uri>https://doi.org/10.1021/ct200463m</uri>
      <pub-id pub-id-type="doi">10.1021/ct200463m</pub-id>
      <fpage>3412</fpage>
      <lpage>3419</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Hummer15">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hummer</surname><given-names>Gerhard</given-names></name>
        <name><surname>Szabo</surname><given-names>Attila</given-names></name>
      </person-group>
      <article-title>Optimal Dimensionality Reduction of Multistate Kinetic and Markov-State Models</article-title>
      <source>J. Phys. Chem. B</source>
      <year iso-8601-date="2015">2015</year>
      <volume>119</volume>
      <issue>29</issue>
      <uri>https://doi.org/10.1021/jp508375q</uri>
      <pub-id pub-id-type="doi">10.1021/jp508375q</pub-id>
      <fpage>9029</fpage>
      <lpage>9037</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Nagel19">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Nagel</surname><given-names>Daniel</given-names></name>
        <name><surname>Weber</surname><given-names>Anna</given-names></name>
        <name><surname>Lickert</surname><given-names>Benjamin</given-names></name>
        <name><surname>Stock</surname><given-names>Gerhard</given-names></name>
      </person-group>
      <article-title>Dynamical coring of Markov state models</article-title>
      <source>J. Chem. Phys.</source>
      <year iso-8601-date="2019">2019</year>
      <volume>150</volume>
      <issue>9</issue>
      <uri>https://doi.org/10.1063/1.5081767</uri>
      <pub-id pub-id-type="doi">10.1063/1.5081767</pub-id>
      <fpage>094111</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Nagel20">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Nagel</surname><given-names>Daniel</given-names></name>
        <name><surname>Weber</surname><given-names>Anna</given-names></name>
        <name><surname>Stock</surname><given-names>Gerhard</given-names></name>
      </person-group>
      <article-title>MSMPathfinder: Identification of Pathways in Markov State Models</article-title>
      <source>J. Chem. Theory Comput.</source>
      <year iso-8601-date="2020">2020</year>
      <volume>16</volume>
      <issue>12</issue>
      <uri>https://doi.org/10.1021/acs.jctc.0c00774</uri>
      <pub-id pub-id-type="doi">10.1021/acs.jctc.0c00774</pub-id>
      <fpage>7874</fpage>
      <lpage>7882</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Nagel23">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Nagel</surname><given-names>Daniel</given-names></name>
        <name><surname>Satore</surname><given-names>Sofia</given-names></name>
        <name><surname>Stock</surname><given-names>Gerhard</given-names></name>
      </person-group>
      <article-title>Selecting Features for Markov Modeling: A Case Study on HP35</article-title>
      <publisher-name>arXiv</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://arxiv.org/abs/2303.03814</uri>
      <pub-id pub-id-type="doi">10.48550/arXiv.2303.03814</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Buchete08">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Buchete</surname><given-names>Nicolae-Viorel</given-names></name>
        <name><surname>Hummer</surname><given-names>Gerhard</given-names></name>
      </person-group>
      <article-title>Coarse master equations for peptide folding dynamics</article-title>
      <source>J. Phys. Chem. B</source>
      <year iso-8601-date="2008">2008</year>
      <volume>112</volume>
      <issue>19</issue>
      <uri>https://doi.org/10.1021/jp0761665</uri>
      <pub-id pub-id-type="doi">10.1021/jp0761665</pub-id>
      <fpage>6057</fpage>
      <lpage>6069</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Prinz11">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Prinz</surname><given-names>Jan-Hendrik</given-names></name>
        <name><surname>Wu</surname><given-names>Hao</given-names></name>
        <name><surname>Sarich</surname><given-names>Marco</given-names></name>
        <name><surname>Keller</surname><given-names>Bettina</given-names></name>
        <name><surname>Senne</surname><given-names>Martin</given-names></name>
        <name><surname>Held</surname><given-names>Martin</given-names></name>
        <name><surname>Chodera</surname><given-names>John D.</given-names></name>
        <name><surname>Schütte</surname><given-names>Christof</given-names></name>
        <name><surname>Noé</surname><given-names>Frank</given-names></name>
      </person-group>
      <article-title>Markov models of molecular kinetics: Generation and validation</article-title>
      <source>J. Chem. Phys.</source>
      <year iso-8601-date="2011">2011</year>
      <volume>134</volume>
      <issue>17</issue>
      <uri>https://doi.org/10.1063/1.3565032</uri>
      <pub-id pub-id-type="doi">10.1063/1.3565032</pub-id>
      <fpage>174105</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Bowman13">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Bowman</surname><given-names>G. R.</given-names></name>
        <name><surname>Pande</surname><given-names>V. S.</given-names></name>
        <name><surname>Noé</surname><given-names>F.</given-names></name>
      </person-group>
      <source>An Introduction to Markov State Models and Their Application to Long Timescale Molecular Simulation</source>
      <publisher-name>Springer Netherlands</publisher-name>
      <year iso-8601-date="2013">2013</year>
      <isbn>9789400776067</isbn>
      <uri>https://doi.org/10.1007/978-94-007-7606-7</uri>
      <pub-id pub-id-type="doi">10.1007/978-94-007-7606-7</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Wang17">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wang</surname><given-names>Wei</given-names></name>
        <name><surname>Cao</surname><given-names>Siqin</given-names></name>
        <name><surname>Zhu</surname><given-names>Lizhe</given-names></name>
        <name><surname>Huang</surname><given-names>Xuhui</given-names></name>
      </person-group>
      <article-title>Constructing Markov state models to elucidate the functional conformational changes of complex biomolecules</article-title>
      <source>Wiley Interdiscip. Rev. Comput. Mol. Sci.</source>
      <year iso-8601-date="2018">2018</year>
      <volume>8</volume>
      <issue>1</issue>
      <uri>https://wires.onlinelibrary.wiley.com/doi/abs/10.1002/wcms.1343</uri>
      <pub-id pub-id-type="doi">10.1002/wcms.1343</pub-id>
      <fpage>e1343</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Diez22">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Diez</surname><given-names>Georg</given-names></name>
        <name><surname>Nagel</surname><given-names>Daniel</given-names></name>
        <name><surname>Stock</surname><given-names>Gerhard</given-names></name>
      </person-group>
      <article-title>Correlation-based feature selection to identify functional dynamics in proteins</article-title>
      <source>J. Chem. Theory Comput.</source>
      <year iso-8601-date="2022">2022</year>
      <volume>18</volume>
      <issue>8</issue>
      <uri>https://doi.org/10.1021/acs.jctc.2c00337</uri>
      <pub-id pub-id-type="doi">10.1021/acs.jctc.2c00337</pub-id>
      <fpage>5079</fpage>
      <lpage>5088</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
