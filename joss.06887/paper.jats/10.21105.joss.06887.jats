<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6887</article-id>
<article-id pub-id-type="doi">10.21105/joss.06887</article-id>
<title-group>
<article-title>t8code - modular adaptive mesh refinement in the exascale
era</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-2783-3286</contrib-id>
<name>
<surname>Holke</surname>
<given-names>Johannes</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author" equal-contrib="yes" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-6297-9494</contrib-id>
<name>
<surname>Markert</surname>
<given-names>Johannes</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-6305-1572</contrib-id>
<name>
<surname>Knapp</surname>
<given-names>David</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-7484-3674</contrib-id>
<string-name>Lukas Dreyer</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-2753-3873</contrib-id>
<string-name>Sandro Elsweijer</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<string-name>Niklas Böing</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<string-name>Ioannis Lilikakis</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-0784-2182</contrib-id>
<string-name>Jakob Fussbroich</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<string-name>Tabea Leistikow</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-8384-9282</contrib-id>
<string-name>Florian Becker</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<name>
<surname>Uenlue</surname>
<given-names>Veli</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-4950-7297</contrib-id>
<name>
<surname>Albers</surname>
<given-names>Ole</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-9843-1041</contrib-id>
<name>
<surname>Burstedde</surname>
<given-names>Carsten</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-3637-3231</contrib-id>
<name>
<surname>Basermann</surname>
<given-names>Achim</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-4016-9113</contrib-id>
<string-name>Hergl, Chiara</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Julia</surname>
<given-names>Weber</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Schoenlein</surname>
<given-names>Kathrin</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Ackerschott</surname>
<given-names>Jonas</given-names>
</name>
<xref ref-type="aff" rid="aff-10"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Evgenii</surname>
<given-names>Andreev</given-names>
</name>
<xref ref-type="aff" rid="aff-10"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Csati</surname>
<given-names>Zoltan</given-names>
</name>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Dutka</surname>
<given-names>Alexandra</given-names>
</name>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Geihe</surname>
<given-names>Benedict</given-names>
</name>
<xref ref-type="aff" rid="aff-5"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Kestener</surname>
<given-names>Pierre</given-names>
</name>
<xref ref-type="aff" rid="aff-6"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Kirby</surname>
<given-names>Andrew</given-names>
</name>
<xref ref-type="aff" rid="aff-7"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Ranocha</surname>
<given-names>Hendrik</given-names>
</name>
<xref ref-type="aff" rid="aff-8"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Schlottke-Lakemper</surname>
<given-names>Michael</given-names>
</name>
<xref ref-type="aff" rid="aff-9"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>German Aerospace Center (DLR), Institute of Software
Technology, Department High-Performance Computing, Cologne,
Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Rheinische Friedrich-Wilhelms-Universität Bonn, Institute
for Numerical Simulations and Hausdorff Center for Mathematics,
Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Forschungszentrum Juelich (JSC)</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>CERFACS</institution>
</institution-wrap>
</aff>
<aff id="aff-5">
<institution-wrap>
<institution>University of Cologne</institution>
</institution-wrap>
</aff>
<aff id="aff-6">
<institution-wrap>
<institution>CEA</institution>
</institution-wrap>
</aff>
<aff id="aff-7">
<institution-wrap>
<institution>University of Wyoming</institution>
</institution-wrap>
</aff>
<aff id="aff-8">
<institution-wrap>
<institution>University of Hamburg</institution>
</institution-wrap>
</aff>
<aff id="aff-9">
<institution-wrap>
<institution>RWTH Aachen</institution>
</institution-wrap>
</aff>
<aff id="aff-10">
<institution-wrap>
<institution>unaffiliated</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-10-29">
<day>29</day>
<month>10</month>
<year>2024</year>
</pub-date>
<volume>10</volume>
<issue>105</issue>
<fpage>6887</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>C</kwd>
<kwd>C++</kwd>
<kwd>adaptive mesh refinement</kwd>
<kwd>exascale</kwd>
<kwd>hybrid meshes</kwd>
<kwd>modularity</kwd>
<kwd>high performance computing</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>In this paper, we present our scalable dynamic adaptive mesh
  refinement (AMR) library <monospace>t8code</monospace>, which was
  officially released in 2022
  (<xref alt="Holke et al., 2022" rid="ref-Holke_t8code_2022" ref-type="bibr">Holke
  et al., 2022</xref>). <monospace>t8code</monospace> is written in
  C/C++, open source, and readily available at
  <ext-link ext-link-type="uri" xlink:href="https://dlr-amr.github.io/t8code/">dlr-amr.github.io/t8code</ext-link>.
  It is developed and maintained at the
  <ext-link ext-link-type="uri" xlink:href="https://www.dlr.de/sc/en/">Institute
  of Software Technology</ext-link> of the German Aerospace Center
  (DLR). AMR is a widely used method of locally adapting the mesh
  resolution according to an adequate error indicator in grid-based
  applications - especially in the context of computational fluid
  dynamics. Our software library provides fast and memory efficient
  parallel algorithms for dynamic AMR to handle tasks such as mesh
  adaptation, load-balancing, ghost computation, feature search and
  more. <monospace>t8code</monospace> can manage meshes with over one
  trillion mesh elements
  (<xref alt="Holke et al., 2021" rid="ref-holke_optimized_2021" ref-type="bibr">Holke
  et al., 2021</xref>) and scales up to one million parallel processes
  (<xref alt="Holke, 2018" rid="ref-holke_scalable_2018" ref-type="bibr">Holke,
  2018</xref>). It is intended to be used as mesh management backend in
  scientific and engineering simulation codes paving the way towards
  high-performance applications of the upcoming exascale era.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>Adaptive Mesh Refinement has been established as a successful
  approach for scientific and engineering simulations over the past
  decades
  (<xref alt="Babuvška &amp; Rheinboldt, 1978" rid="ref-BABUVSKA1978" ref-type="bibr">Babuvška
  &amp; Rheinboldt, 1978</xref>;
  <xref alt="Bangerth et al., 2007" rid="ref-DEAL2" ref-type="bibr">Bangerth
  et al., 2007</xref>;
  <xref alt="Dörfler, 1996" rid="ref-DOERFLER1996" ref-type="bibr">Dörfler,
  1996</xref>;
  <xref alt="Teunissen &amp; Keppens, 2019" rid="ref-TEUNISSEN2019106866" ref-type="bibr">Teunissen
  &amp; Keppens, 2019</xref>). By modifying the mesh resolution locally
  according to problem specific indicators, the computational power is
  efficiently concentrated where needed and the overall memory usage is
  reduced by orders of magnitude. However, managing adaptive meshes and
  associated data is a very challenging task, especially for parallel
  codes. Implementing fast and scalable AMR routines generally leads to
  a large development overhead motivating the need for external mesh
  management libraries like <monospace>t8code</monospace>. Our target
  audiences are scientists and application developers working on
  grid-based simulation and visualization frameworks who are looking for
  a comprehensive and versatile mesh management solution. Besides
  offering AMR we also aim to lower the threshold to parallelize their
  codes by solely interacting with t8code’s API. Alternative AMR
  libraries with a similar range of features are p4est
  (<xref alt="Burstedde et al., 2011a" rid="ref-BursteddeWilcoxGhattas11" ref-type="bibr">Burstedde
  et al., 2011a</xref>), libMesh
  (<xref alt="Kirk et al., 2006" rid="ref-libMeshPaper" ref-type="bibr">Kirk
  et al., 2006</xref>), PARAMESH
  (<xref alt="MacNeice et al., 2000" rid="ref-macneice2000paramesh" ref-type="bibr">MacNeice
  et al., 2000</xref>), and SAMRAI
  (<xref alt="Gunney, 2013" rid="ref-gunney2013scalable" ref-type="bibr">Gunney,
  2013</xref>).</p>
  <p>In contrast to the other AMR solutions, only
  <monospace>t8code</monospace> natively supports recursive refinement
  on a wide range of element types: vertices, lines, quadrilaterals,
  triangles, hexahedra, tetrahedra, prisms, and pyramids. Additionally,
  extensions to other refinement patterns and element shapes are
  straightforwardly supported due to <monospace>t8code</monospace>’s
  modular code structure and clear distinction between low- and
  high-level mesh operations. This gives our AMR solution an unique
  position in the market catering for a wide range of use cases.
  Currently, <monospace>t8code</monospace> is optimized for grid-based
  applications using face-to-face connectivity between elements, such as
  Finite-Volume and Discontinuous Galerkin methods. In the future, we
  plan to support node-to-node connectivity and hanging nodes resolution
  to further increase the range of applications, such as Finite Element
  methods.</p>
</sec>
<sec id="exemplary-application">
  <title>Exemplary application</title>
  <p><xref alt="[fig:visploremesh]" rid="figU003Avisploremesh">[fig:visploremesh]</xref>
  depicts an examplary adapted mesh managed by
  <monospace>t8code</monospace> using two different element types: quads
  and triangles. Shown is the temperature profile of a convection
  simulation of a model planet’s mantle (source: Institute of Planetary
  Research, DLR). The original, uniform mesh consists of over 158
  million quad cells allocating 6.818 GB of memory. By applying AMR to
  the data the memory usage could be reduced down to 20% with a
  compression error of less than 1%. The error measure was chosen to be
  the norm of the variance between refinement resp. coarsening steps.
  That is, starting from the uniform mesh at highest refinement level
  (<inline-formula><alternatives>
  <tex-math><![CDATA[l = 8]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mn>8</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>),
  the mesh was successively coarsened until the disagreement from the
  original data reached 1%. It should be noted that
  <monospace>t8code</monospace>’s primary objective is to provide
  flexible adaptive mesh management. The layout of the data inside an
  element and its interpretation regarding, for example, when and how to
  refine/coarsen is up to the application.</p>
  <fig>
    <caption><p>Visualization of a planetary mantle convection
    simulation (source: Institute of Planetary Research, DLR). Shown is
    the 2D slice of the temperature profile. Left: original uniform
    data. The highlighting of the grid lines was omitted for visual
    clarity. Middle: adapted mesh with quad elements. Right: adapted
    mesh with triangle elements. The original data living on a uniform
    quad mesh was first transferred to a triangle mesh and adapted
    afterwards. This shows the versatility of t8code regarding to the
    choice of mesh elements.
    <styled-content id="figU003Avisploremesh"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Gaia_original_vs_AMR.png" />
  </fig>
</sec>
<sec id="fundamental-concepts">
  <title>Fundamental Concepts</title>
  <p><monospace>t8code</monospace> is based on the forest-of-trees
  approach. The starting point for usage of
  <monospace>t8code</monospace> is an unstructured conformal input mesh,
  which we denote a coarse mesh. This coarse mesh describes the geometry
  of the computational domain and is usually provided by a mesh
  generator such as Gmsh
  (<xref alt="Geuzaine &amp; Remacle, 2009" rid="ref-geuzaine2009gmsh" ref-type="bibr">Geuzaine
  &amp; Remacle, 2009</xref>). Each of the coarse mesh cells is then
  viewed as the root of a refinement tree. These trees are refined
  recursively in a structured pattern, resulting in a collection of
  trees, which we call a forest. <monospace>t8code</monospace> stores
  only a minimal amount of information about the finest elements of the
  mesh - the leaves of the trees - in order to reconstruct the whole
  forest.</p>
  <p>By enumerating the leaves in a recursive refinement pattern we
  obtain a space-filling curve (SFC) logic. Via these SFCs, all elements
  in a refinement tree are assigned an integer-based index and are
  stored in linear order. Element coordinates or element neighbors do
  not need to be stored explicitly but can be reconstructed from the SFC
  index. Fast bitwise SFC operations ensure optimal runtimes and
  diminish the need for memory lookups. Moreover, the SFC is used to
  distribute the forest mesh across multiple processes, so that each
  process only stores a unique portion of the SFC. See
  <xref alt="[fig:SpaceFillingCurves]" rid="figU003ASpaceFillingCurves">[fig:SpaceFillingCurves]</xref>
  for an illustration of the concept.</p>
  <p>While being successfully applied to quadrilateral and hexahedral
  meshes
  (<xref alt="Burstedde et al., 2011b" rid="ref-burstedde_p4est_2011" ref-type="bibr">Burstedde
  et al., 2011b</xref>;
  <xref alt="Weinzierl, 2019" rid="ref-weinzierl_peano_2019" ref-type="bibr">Weinzierl,
  2019</xref>), these SFC techniques are extended by
  <monospace>t8code</monospace> in a modular fashion, such that
  arbitrary element shapes are supported. We achieve this modularity
  through a novel decoupling approach that separates high-level (mesh
  global) algorithms from low-level (element local) implementations. All
  high-level algorithms can be applied to different implementations of
  element shapes and refinement patterns. A mix of different element
  shapes in the same mesh is also supported.</p>
  <p>Mesh adaptation as it is done in t8code leads to hanging nodes.
  Numerical methods have to specifically handle these non-conforming
  interfaces. Finite-Volume schemes or Discontinuous Galerkin methods
  naturally treat this problem via so-called mortar methods. In the
  future, it is planned to also support hanging nodes resolving routines
  by inserting transition elements conformally connecting elements at
  different refinement levels.</p>
  <fig>
    <caption><p>Left: Exemplary t8code forest mesh consisting of two
    trees (k0, k1) distributed over three parallel processes p0 to p2.
    The SFC is represented by a black curve tracing only the finest
    elements (leaves) of each tree. Right: Sketch of the associated
    mixed shape (a triangle and a quad) mesh refined up to level three.
    <styled-content id="figU003ASpaceFillingCurves"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="t8code_sfc_hybrid_tree_vs_mesh.png" />
  </fig>
</sec>
<sec id="performance">
  <title>Performance</title>
  <p><monospace>t8code</monospace> supports distributed coarse meshes of
  arbitrary size and complexity, which we tested for up to 370 million
  coarse mesh cells
  (<xref alt="Burstedde &amp; Holke, 2017" rid="ref-burstedde_coarse_2017" ref-type="bibr">Burstedde
  &amp; Holke, 2017</xref>). Moreover, we conducted various performance
  studies on the JUQUEEN and the JUWELS supercomputers at the Jülich
  Supercomputing Center. In
  <xref alt="Table 1" rid="tabU003At8code_runtimes">Table 1</xref>,
  (<xref alt="Holke et al., 2021" rid="ref-holke_optimized_2021" ref-type="bibr">Holke
  et al., 2021</xref>) we show that <monospace>t8code</monospace>’s
  ghost routine is exceptionally fast with proper scaling of up to 1.1
  trillion mesh elements. Computing ghost layers around parallel domains
  is usually the most expensive of all mesh operations. To put these
  results into perspective, we conducted scaling tests on the terrabyte
  cluster at Leibniz Supercomputing Centre comparing the ghost layer
  creation runtimes of p4est and t8code. In
  <xref alt="[fig:ghost_layer_runtimes]" rid="figU003Aghost_layer_runtimes">[fig:ghost_layer_runtimes]</xref>
  the measured runtimes of both libraries are plotted over the number of
  processes. The p4est library has been established as one of the most
  performant meshing libraries
  (<xref alt="Burstedde et al., 2011a" rid="ref-BursteddeWilcoxGhattas11" ref-type="bibr">Burstedde
  et al., 2011a</xref>) specializing on adaptive quadrilateral and
  hexahedral meshes. Clearly, t8code shows near perfect scaling for
  tetrahedral meshes on par with p4est. The absolute runtime of t8code
  is around 1.5 times the runtime of p4est measured on a per ghost
  element basis. This is expected since the ghost layer algorithm is
  more complex and thus a bit less optimized, while supporting a wider
  range of element types.</p>
  <p>Furthermore, in a prototype code
  (<xref alt="Dreyer, 2021" rid="ref-Dreyer2021" ref-type="bibr">Dreyer,
  2021</xref>) implementing a high-order Discontinuous Galerkin (DG)
  method for advection-diffusion equations on dynamically adaptive
  hexahedral meshes we can report of a 12 times speed-up compared to
  non-AMR meshes with only an overall 15% runtime contribution of
  <monospace>t8code</monospace>. In
  <xref alt="[fig:t8code_runtimes]" rid="figU003At8code_runtimes">[fig:t8code_runtimes]</xref>
  we compare the runtimes over number of processes of the DG solver and
  the summed mesh operations done by t8code which are ghost computation,
  ghost data exchange, partitioning (load balancing), refinement, and
  coarsening as well as balancing ensuring only a difference of one
  refinement level among element’s face neighbors. From the graphs in
  <xref alt="[fig:t8code_runtimes]" rid="figU003At8code_runtimes">[fig:t8code_runtimes]</xref>
  we clearly see that <monospace>t8code</monospace> only takes around
  15% to 20% of overall runtime compared to the solver.</p>
  <table-wrap>
    <table>
      <colgroup>
        <col width="24%" />
        <col width="28%" />
        <col width="29%" />
        <col width="12%" />
      </colgroup>
      <thead>
        <tr>
          <th align="center"># Process</th>
          <th align="center"># Elements</th>
          <th align="center"># Elem. / process</th>
          <th align="center">Ghost</th>
        </tr>
      </thead>
      <tfoot>
        <tr>
          <td align="center" colspan="4">Table 1: Runtimes on JUQUEEN
          for the ghost layer computation for a distributed mesh
          consisting of 1.1 trillion elements.
          <styled-content id="tabU003At8code_runtimes"></styled-content></td>
        </tr>
      </tfoot>
      <tbody>
        <tr>
          <td align="center"><preformat>49,152</preformat></td>
          <td align="center">1,099,511,627,776</td>
          <td align="center"><preformat>22,369,621</preformat></td>
          <td align="center">2.08 s</td>
        </tr>
        <tr>
          <td align="center"><preformat>98,304</preformat></td>
          <td align="center">1,099,511,627,776</td>
          <td align="center"><preformat>11,184,811</preformat></td>
          <td align="center">1.43 s</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <fig>
    <caption><p>Runtimes of ghost layer creation on the terrabyte
    cluster for p4est and t8code. The meshes have been refined into a
    Menger sponge for hexahedral mesh with p4est (max. level 12) and a
    Sierpinski sponge for the tetrahedral mesh in t8code (max. level 13)
    to create a fractal pattern with billions of elements as a stress
    test. To make the two runs comparable the runtimes have been divided
    by the average local number of ghost elements on a MPI rank.
    <styled-content id="figU003Aghost_layer_runtimes"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="plot-timings-per-num-ghosts.png" />
  </fig>
  <fig>
    <caption><p>Runtimes on JUQUEEN of the solver and summed mesh
    operations of our DG prototype code coupled with
    <monospace>t8code</monospace>. Mesh operations are ghost
    computation, ghost data exchange, partitioning (load balancing),
    refinement and coarsening as well as balancing (max. difference of
    one level of refinement of neighboring elements). t8code only takes
    around 15% to 20% of the overall runtime.
    <styled-content id="figU003At8code_runtimes"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="t8code-runtimes-simple.png" />
  </fig>
</sec>
<sec id="research-projects">
  <title>Research Projects</title>
  <p>Even though <monospace>t8code</monospace> is a newcomer to the
  market, it is already in use as the mesh management backend in various
  research projects, most notably in the earth system modeling (ESM)
  community. In the
  <ext-link ext-link-type="uri" xlink:href="https://dlr-amr.github.io/adaptex/">ADAPTEX</ext-link>
  project <monospace>t8code</monospace> is integrated with the
  <ext-link ext-link-type="uri" xlink:href="https://trixi-framework.github.io/">Trixi
  framework</ext-link>
  (<xref alt="Schlottke-Lakemper et al., 2020" rid="ref-schlottkelakemper2020trixi" ref-type="bibr">Schlottke-Lakemper
  et al., 2020</xref>) - a modern computational fluid dynamics code
  written in
  <ext-link ext-link-type="uri" xlink:href="https://julialang.org/">Julia</ext-link>.
  Over the next years several ESM applications are planned to couple to
  this combination, including
  <ext-link ext-link-type="uri" xlink:href="https://messy-interface.org">MESSy</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://helmholtz.software/software/mptrac">MPTrac</ext-link>,
  and
  <ext-link ext-link-type="uri" xlink:href="https://helmholtz.software/software/serghei">SERGHEI</ext-link>.
  Moreover, <monospace>t8code</monospace> also plays an important role
  in several DLR funded research projects, e.g.,
  <ext-link ext-link-type="uri" xlink:href="https://www.dlr.de/en/research-and-transfer/projects-and-missions/visplore">VisPlore</ext-link>
  (massive data visualization),
  <ext-link ext-link-type="uri" xlink:href="https://elib.dlr.de/201347/">HYTAZER</ext-link>
  (hydrogen tank certification), and
  <ext-link ext-link-type="uri" xlink:href="https://www.dlr.de/en/ra/research-transfer/projects/dlr-projects/green-propulsion-free-flight-demonstrator-the-lander">Greenstars</ext-link>
  (additive rocket engine manufacturing).</p>
</sec>
<sec id="further-information">
  <title>Further Information</title>
  <p>For further information beyond this short note and also for code
  examples, we refer to our
  <ext-link ext-link-type="uri" xlink:href="https://dlr-amr.github.io/t8code/pages/documentation.html">Documentation</ext-link>
  and
  <ext-link ext-link-type="uri" xlink:href="https://github.com/DLR-AMR/t8code/wiki">Wiki</ext-link>
  reachable via our homepage
  <ext-link ext-link-type="uri" xlink:href="https://dlr-amr.github.io/t8code/">dlr-amr.github.io/t8code</ext-link>
  and our technical publications on <monospace>t8code</monospace>
  (<xref alt="Becker, 2021" rid="ref-Becker_hanging_faces" ref-type="bibr">Becker,
  2021</xref>;
  <xref alt="Burstedde &amp; Holke, 2016" rid="ref-burstedde_tetrahedral_2016" ref-type="bibr">Burstedde
  &amp; Holke, 2016</xref>,
  <xref alt="2017" rid="ref-burstedde_coarse_2017" ref-type="bibr">2017</xref>;
  <xref alt="Dreyer, 2021" rid="ref-Dreyer2021" ref-type="bibr">Dreyer,
  2021</xref>;
  <xref alt="Elsweijer, 2021" rid="ref-elsweijer_curved_2021" ref-type="bibr">Elsweijer,
  2021</xref>,
  <xref alt="2022" rid="ref-elsweijer_evaluation_2022" ref-type="bibr">2022</xref>;
  <xref alt="Fußbroich, 2023" rid="ref-Fussbroich_towards_2023" ref-type="bibr">Fußbroich,
  2023</xref>;
  <xref alt="Holke, 2018" rid="ref-holke_scalable_2018" ref-type="bibr">Holke,
  2018</xref>;
  <xref alt="Holke et al., 2021" rid="ref-holke_optimized_2021" ref-type="bibr">Holke
  et al., 2021</xref>,
  <xref alt="2022" rid="ref-Holke_t8code_2022" ref-type="bibr">2022</xref>;
  <xref alt="Knapp, 2020" rid="ref-Knapp20" ref-type="bibr">Knapp,
  2020</xref>;
  <xref alt="Lilikakis, 2022" rid="ref-Lilikakis_removing" ref-type="bibr">Lilikakis,
  2022</xref>).</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>Johannes Holke thanks the Bonn International School Graduate School
  of Mathematics (BIGS) for funding the initial development of
  <monospace>t8code</monospace>. Further development work was funded by
  the German Research Foundation as part of project 467255783, the
  European Union via NextGenerationEU and the German Federal Ministry of
  Research and Education (BMBF) as part of the ADAPTEX and PADME-AM
  projects. Development work was performed as part of the Helmholtz
  School for Data Science in Life, Earth and Energy (HDS-LEE) and
  received funding from the Helmholtz Association of German Research
  Centres. The development team of <monospace>t8code</monospace> thanks
  the Institute of Software Technology and the German Aerospace Center
  (DLR).</p>
  <p>The authors state that there are no conflicts of interest.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-Holke_t8code_2022">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Holke</surname><given-names>Johannes</given-names></name>
        <name><surname>Burstedde</surname><given-names>Carsten</given-names></name>
        <name><surname>Knapp</surname><given-names>David</given-names></name>
        <name><surname>Dreyer</surname><given-names>Lukas</given-names></name>
        <name><surname>Elsweijer</surname><given-names>Sandro</given-names></name>
        <name><surname>Uenlue</surname><given-names>Veli</given-names></name>
        <name><surname>Markert</surname><given-names>Johannes</given-names></name>
        <name><surname>Lilikakis</surname><given-names>Ioannis</given-names></name>
        <name><surname>Boeing</surname><given-names>Niklas</given-names></name>
      </person-group>
      <article-title>t8code</article-title>
      <year iso-8601-date="2022">2022</year>
      <uri>https://github.com/dlr-amr/t8code</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.7034838</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-holke_scalable_2018">
    <element-citation publication-type="thesis">
      <person-group person-group-type="author">
        <name><surname>Holke</surname><given-names>Johannes</given-names></name>
      </person-group>
      <article-title>Scalable algorithms for parallel tree-based adaptive mesh refinement with general element types</article-title>
      <publisher-name>Rheinische Friedrich-Wilhelms-Universität Bonn</publisher-name>
      <year iso-8601-date="2018">2018</year>
      <uri>https://hdl.handle.net/20.500.11811/7661</uri>
    </element-citation>
  </ref>
  <ref id="ref-holke_optimized_2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Holke</surname><given-names>Johannes</given-names></name>
        <name><surname>Knapp</surname><given-names>David</given-names></name>
        <name><surname>Burstedde</surname><given-names>Carsten</given-names></name>
      </person-group>
      <article-title>An Optimized, Parallel Computation of the Ghost Layer for Adaptive Hybrid Forest Meshes</article-title>
      <source>SIAM Journal on Scientific Computing</source>
      <year iso-8601-date="2021">2021</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2021-11-18">2021</year><month>11</month><day>18</day></date-in-citation>
      <issn>1064-8275</issn>
      <uri>https://epubs.siam.org/doi/abs/10.1137/20M1383033</uri>
      <pub-id pub-id-type="doi">10.1137/20M1383033</pub-id>
      <fpage>C359</fpage>
      <lpage>C385</lpage>
    </element-citation>
  </ref>
  <ref id="ref-elsweijer_curved_2021">
    <element-citation publication-type="report">
      <person-group person-group-type="author">
        <name><surname>Elsweijer</surname><given-names>Sandro</given-names></name>
      </person-group>
      <article-title>Curved Domain Adaptive Mesh Refinement with Hexahedra</article-title>
      <publisher-name>Hochschule Bonn-Rhein-Sieg</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2022-01-14">2022</year><month>01</month><day>14</day></date-in-citation>
      <uri>https://elib.dlr.de/143537/</uri>
    </element-citation>
  </ref>
  <ref id="ref-elsweijer_evaluation_2022">
    <element-citation publication-type="thesis">
      <person-group person-group-type="author">
        <name><surname>Elsweijer</surname><given-names>Sandro</given-names></name>
      </person-group>
      <article-title>Evaluation and generic application scenarios for curved hexahedral adaptive mesh refinement</article-title>
      <publisher-name>Hochschule Bonn-Rhein-Sieg</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <uri>https://elib.dlr.de/186561/</uri>
      <pub-id pub-id-type="doi">10.13140/RG.2.2.34714.11203</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-burstedde_tetrahedral_2016">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Burstedde</surname><given-names>Carsten</given-names></name>
        <name><surname>Holke</surname><given-names>Johannes</given-names></name>
      </person-group>
      <article-title>A tetrahedral space-filling curve for nonconforming adaptive meshes</article-title>
      <source>SIAM Journal on Scientific Computing</source>
      <year iso-8601-date="2016">2016</year>
      <volume>38</volume>
      <pub-id pub-id-type="doi">10.1137/15M1040049</pub-id>
      <fpage>C471</fpage>
      <lpage>C503</lpage>
    </element-citation>
  </ref>
  <ref id="ref-weinzierl_peano_2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Weinzierl</surname><given-names>Tobias</given-names></name>
      </person-group>
      <article-title>The Peano Software-Parallel, Automaton-based, Dynamically Adaptive Grid Traversals</article-title>
      <source>ACM Transactions on Mathematical Software</source>
      <year iso-8601-date="2019">2019</year>
      <volume>45</volume>
      <issue>2</issue>
      <issn>0098-3500</issn>
      <pub-id pub-id-type="doi">10.1145/3319797</pub-id>
      <fpage>1</fpage>
      <lpage>41</lpage>
    </element-citation>
  </ref>
  <ref id="ref-burstedde_p4est_2011">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Burstedde</surname><given-names>Carsten</given-names></name>
        <name><surname>Wilcox</surname><given-names>Lucas C.</given-names></name>
        <name><surname>Ghattas</surname><given-names>Omar</given-names></name>
      </person-group>
      <article-title>p4est: Scalable Algorithms for Parallel Adaptive Mesh Refinement on Forests of Octrees</article-title>
      <source>SIAM Journal on Scientific Computing</source>
      <year iso-8601-date="2011">2011</year>
      <volume>33</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1137/100791634</pub-id>
      <fpage>1103</fpage>
      <lpage>1133</lpage>
    </element-citation>
  </ref>
  <ref id="ref-burstedde_coarse_2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Burstedde</surname><given-names>Carsten</given-names></name>
        <name><surname>Holke</surname><given-names>Johannes</given-names></name>
      </person-group>
      <article-title>Coarse Mesh Partitioning for Tree-Based AMR</article-title>
      <source>SIAM Journal on Scientific Computing</source>
      <year iso-8601-date="2017">2017</year>
      <volume>Vol. 39</volume>
      <pub-id pub-id-type="doi">10.1137/16M1103518</pub-id>
      <fpage>C364</fpage>
      <lpage>C392</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Knapp20">
    <element-citation publication-type="thesis">
      <person-group person-group-type="author">
        <name><surname>Knapp</surname><given-names>David</given-names></name>
      </person-group>
      <article-title>A space-filling curve for pyramidal adaptive mesh refinement</article-title>
      <publisher-name>Rheinische Friedrich-Wilhelms-Universität Bonn</publisher-name>
      <year iso-8601-date="2020">2020</year>
    </element-citation>
  </ref>
  <ref id="ref-Becker_hanging_faces">
    <element-citation publication-type="thesis">
      <person-group person-group-type="author">
        <name><surname>Becker</surname><given-names>Florian</given-names></name>
      </person-group>
      <article-title>Removing hanging faces from tree-based adaptive meshes for numerical simulations</article-title>
      <publisher-name>Universität zu Köln</publisher-name>
      <year iso-8601-date="2021">2021</year>
    </element-citation>
  </ref>
  <ref id="ref-Lilikakis_removing">
    <element-citation publication-type="thesis">
      <person-group person-group-type="author">
        <name><surname>Lilikakis</surname><given-names>Ioannis</given-names></name>
      </person-group>
      <article-title>Algorithms for tree-based adaptive meshes with incomplete trees</article-title>
      <publisher-name>Universität zu Köln</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <uri>https://elib.dlr.de/191968/</uri>
    </element-citation>
  </ref>
  <ref id="ref-Dreyer2021">
    <element-citation publication-type="thesis">
      <person-group person-group-type="author">
        <name><surname>Dreyer</surname><given-names>Lukas</given-names></name>
      </person-group>
      <article-title>The local discontinuous galerkin method for the advection-diffusion equation on adaptive meshes</article-title>
      <publisher-name>Rheinische Friedrich-Wilhems-Universität Bonn</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <uri>https://elib.dlr.de/143969/</uri>
    </element-citation>
  </ref>
  <ref id="ref-Fussbroich_towards_2023">
    <element-citation publication-type="thesis">
      <person-group person-group-type="author">
        <name><surname>Fußbroich</surname><given-names>Jakob</given-names></name>
      </person-group>
      <article-title>Towards high-order, hybrid adaptive mesh refinement: Implementation and evaluation of curved unstructured mesh elements</article-title>
      <publisher-name>Technische Hochschule Köln</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://elib.dlr.de/200442/</uri>
    </element-citation>
  </ref>
  <ref id="ref-TEUNISSEN2019106866">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Teunissen</surname><given-names>J.</given-names></name>
        <name><surname>Keppens</surname><given-names>R.</given-names></name>
      </person-group>
      <article-title>A geometric multigrid library for quadtree/octree AMR grids coupled to MPI-AMRVAC</article-title>
      <source>Computer Physics Communications</source>
      <year iso-8601-date="2019">2019</year>
      <volume>245</volume>
      <issn>0010-4655</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S001046551930253X</uri>
      <pub-id pub-id-type="doi">10.1016/j.cpc.2019.106866</pub-id>
      <fpage>106866</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-DEAL2">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bangerth</surname><given-names>W.</given-names></name>
        <name><surname>Hartmann</surname><given-names>R.</given-names></name>
        <name><surname>Kanschat</surname><given-names>G.</given-names></name>
      </person-group>
      <article-title>Deal.II: A general-purpose object-oriented finite element library</article-title>
      <source>ACM Trans. Math. Softw.</source>
      <publisher-name>Association for Computing Machinery</publisher-name>
      <publisher-loc>New York, NY, USA</publisher-loc>
      <year iso-8601-date="2007">2007</year>
      <volume>33</volume>
      <issue>4</issue>
      <issn>0098-3500</issn>
      <uri>https://doi.org/10.1145/1268776.1268779</uri>
      <pub-id pub-id-type="doi">10.1145/1268776.1268779</pub-id>
      <fpage>24</fpage>
      <lpage>es</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DOERFLER1996">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Dörfler</surname><given-names>Willy</given-names></name>
      </person-group>
      <article-title>A convergent adaptive algorithm for poisson’s equation</article-title>
      <source>SIAM Journal on Numerical Analysis</source>
      <year iso-8601-date="1996">1996</year>
      <volume>33</volume>
      <issue>3</issue>
      <uri>https://doi.org/10.1137/0733054</uri>
      <pub-id pub-id-type="doi">10.1137/0733054</pub-id>
      <fpage>1106</fpage>
      <lpage>1124</lpage>
    </element-citation>
  </ref>
  <ref id="ref-BABUVSKA1978">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Babuvška</surname><given-names>I.</given-names></name>
        <name><surname>Rheinboldt</surname><given-names>W. C.</given-names></name>
      </person-group>
      <article-title>Error estimates for adaptive finite element computations</article-title>
      <source>SIAM Journal on Numerical Analysis</source>
      <year iso-8601-date="1978">1978</year>
      <volume>15</volume>
      <issue>4</issue>
      <uri>https://doi.org/10.1137/0715049</uri>
      <pub-id pub-id-type="doi">10.1137/0715049</pub-id>
      <fpage>736</fpage>
      <lpage>754</lpage>
    </element-citation>
  </ref>
  <ref id="ref-schlottkelakemper2020trixi">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Schlottke-Lakemper</surname><given-names>Michael</given-names></name>
        <name><surname>Gassner</surname><given-names>Gregor J</given-names></name>
        <name><surname>Ranocha</surname><given-names>Hendrik</given-names></name>
        <name><surname>Winters</surname><given-names>Andrew R</given-names></name>
      </person-group>
      <article-title>Trixi.jl: Adaptive high-order numerical simulations of hyperbolic PDEs in Julia</article-title>
      <year iso-8601-date="2020">2020</year>
      <uri>https://github.com/trixi-framework/Trixi.jl</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.3996439</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-BursteddeWilcoxGhattas11">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Burstedde</surname><given-names>Carsten</given-names></name>
        <name><surname>Wilcox</surname><given-names>Lucas C.</given-names></name>
        <name><surname>Ghattas</surname><given-names>Omar</given-names></name>
      </person-group>
      <article-title>p4est: Scalable algorithms for parallel adaptive mesh refinement on forests of octrees</article-title>
      <source>SIAM Journal on Scientific Computing</source>
      <year iso-8601-date="2011">2011</year>
      <volume>33</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1137/100791634</pub-id>
      <fpage>1103</fpage>
      <lpage>1133</lpage>
    </element-citation>
  </ref>
  <ref id="ref-libMeshPaper">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kirk</surname><given-names>Benjamin S.</given-names></name>
        <name><surname>Peterson</surname><given-names>John W.</given-names></name>
        <name><surname>Stogner</surname><given-names>Roy H.</given-names></name>
        <name><surname>Carey</surname><given-names>Graham F.</given-names></name>
      </person-group>
      <article-title>libMesh: A c++ library for parallel adaptive mesh refinement/coarsening simulations</article-title>
      <source>Engineering with Computers</source>
      <year iso-8601-date="2006">2006</year>
      <volume>22</volume>
      <issue>3–4</issue>
      <uri>https://doi.org/10.1007/s00366-006-0049-3</uri>
      <fpage>237</fpage>
      <lpage>254</lpage>
    </element-citation>
  </ref>
  <ref id="ref-macneice2000paramesh">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>MacNeice</surname><given-names>Peter</given-names></name>
        <name><surname>Olson</surname><given-names>Kevin M</given-names></name>
        <name><surname>Mobarry</surname><given-names>Clark</given-names></name>
        <name><surname>De Fainchtein</surname><given-names>Rosalinda</given-names></name>
        <name><surname>Packer</surname><given-names>Charles</given-names></name>
      </person-group>
      <article-title>PARAMESH: A parallel adaptive mesh refinement community toolkit</article-title>
      <source>Computer physics communications</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2000">2000</year>
      <volume>126</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.17632/3mh69zf2ft.1</pub-id>
      <fpage>330</fpage>
      <lpage>354</lpage>
    </element-citation>
  </ref>
  <ref id="ref-gunney2013scalable">
    <element-citation publication-type="report">
      <person-group person-group-type="author">
        <name><surname>Gunney</surname><given-names>BN</given-names></name>
      </person-group>
      <article-title>Scalable mesh management for patch-based amr</article-title>
      <publisher-name>Lawrence Livermore National Lab.(LLNL), Livermore, CA (United States)</publisher-name>
      <year iso-8601-date="2013">2013</year>
    </element-citation>
  </ref>
  <ref id="ref-geuzaine2009gmsh">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Geuzaine</surname><given-names>Christophe</given-names></name>
        <name><surname>Remacle</surname><given-names>Jean-François</given-names></name>
      </person-group>
      <article-title>Gmsh: A 3-d finite element mesh generator with built-in pre-and post-processing facilities</article-title>
      <source>International journal for numerical methods in engineering</source>
      <publisher-name>Wiley Online Library</publisher-name>
      <year iso-8601-date="2009">2009</year>
      <volume>79</volume>
      <issue>11</issue>
      <fpage>1309</fpage>
      <lpage>1331</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
