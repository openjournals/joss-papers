<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">7110</article-id>
<article-id pub-id-type="doi">10.21105/joss.07110</article-id>
<title-group>
<article-title>MocoExtendProblem: Interface Between OpenSim and MATLAB
for Rapidly Developing Direct Collocation Goals in Moco</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0001-6775-6596</contrib-id>
<name>
<surname>Sundararajan</surname>
<given-names>Aravind</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-3737-2302</contrib-id>
<name>
<surname>Joshi</surname>
<given-names>Varun</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-5780-2405</contrib-id>
<name>
<surname>Umberger</surname>
<given-names>Brian R.</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-9614-7813</contrib-id>
<name>
<surname>O’Neill</surname>
<given-names>Matthew C.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Anatomy, Midwestern University, Glendale
Arizona, United States of America</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>School of Kinesiology, University of Michigan, Ann Arbor,
Michigan, United States of America</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-06-02">
<day>2</day>
<month>6</month>
<year>2024</year>
</pub-date>
<volume>10</volume>
<issue>108</issue>
<fpage>7110</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>locomotion</kwd>
<kwd>kinematics</kwd>
<kwd>biomechanics</kwd>
<kwd>optimal control</kwd>
<kwd>musculoskeletal model</kwd>
<kwd>simulation</kwd>
<kwd>C++</kwd>
<kwd>toolchain</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>MocoExtendProblem (<monospace>MEP</monospace>) is a framework to
  rapidly develop novel goals for biomechanical optimal control problems
  using OpenSim Moco
  (<xref alt="Dembia et al., 2020" rid="ref-Dembia2020" ref-type="bibr">Dembia
  et al., 2020</xref>) and MATLAB (The MathWorks, Inc., Natick, MA,
  USA). <monospace>MEP</monospace> features several templates for
  testing and prototyping novel MocoGoals as well as a build tool to
  create a MEX function using OpenSim’s API for MATLAB in lieu of
  rebuilding OpenSim from source or building a plugin and generating an
  .omoco file from C++ to load the problem into MATLAB. Instead, users
  structure and design custom goals in C++, build them with the provided
  tool, and call custom goals from within MATLAB scripts.</p>
  <p>This repository features:</p>
  <list list-type="bullet">
    <list-item>
      <p>A <monospace>build.m</monospace> script that compiles goals in
      the <monospace>custom_goals</monospace> directory and procedurally
      constructs the C++/MATLAB class implementations and compiles the
      MEX interface.</p>
    </list-item>
    <list-item>
      <p>Compatibility tested with OpenSim 4.2-4.5.</p>
      <list list-type="bullet">
        <list-item>
          <p>Support for OpenSim versions 4.2-4.4 require unique
          considerations to custom goal development and build pipeline
          since Booleans for division by duration, distance and mass
          were migrated to the abstract MocoGoal.</p>
        </list-item>
      </list>
    </list-item>
    <list-item>
      <p>The ability to include <monospace>MEP</monospace> as a
      submodule, build, and use valid custom goals.</p>
    </list-item>
    <list-item>
      <p>Three example custom goals in the
      <monospace>custom_goals</monospace> and
      <monospace>custom_goals_compat</monospace> directories.</p>
    </list-item>
  </list>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>OpenSim is an open-source software platform for modeling
  musculoskeletal structures and creating dynamic simulations of
  movement Seth et al.
  (<xref alt="2018" rid="ref-Seth2018" ref-type="bibr">2018</xref>).
  OpenSim enables researchers and clinicians to investigate how
  biological and non-biological structures respond to different loads,
  postures and activities in both static and dynamic situations. OpenSim
  has been used to study a wide range of biomechanical problems, such as
  the mechanics of walking and running (e.g.
  <xref alt="Falisse et al., 2019" rid="ref-Falisse2019" ref-type="bibr">Falisse
  et al., 2019</xref>), the impact of injury or disease on movement
  (e.g.
  <xref alt="Johnson et al., 2022" rid="ref-Johnson2022" ref-type="bibr">Johnson
  et al., 2022</xref>), and the effectiveness of rehabilitation
  exercises (e.g.
  <xref alt="Spomer et al., 2023" rid="ref-Spomer2023" ref-type="bibr">Spomer
  et al., 2023</xref>).</p>
  <p>While OpenSim originally featured several single-shooting methods
  like Computed Muscle Control and static optimization to solve for
  kinematics, kinetics and controls, OpenSim now includes Moco
  (<xref alt="Dembia et al., 2020" rid="ref-Dembia2020" ref-type="bibr">Dembia
  et al., 2020</xref>) which employs an optimization paradigm called
  direct collocation for solving curve-fitting problems that range from
  solving for muscle forces, to tracking experimental data, and fully
  predictive simulations that solve the optimal control problem (OCP)
  subject to some predefined goals and constraints. Direct collocation
  is a numerical optimal control method
  (<xref alt="Kelly, 2017" rid="ref-Kelly2017" ref-type="bibr">Kelly,
  2017</xref>) that is computationally efficient compared to
  single-shooting algorithms and is used extensively in computational
  approaches to understanding biological movement. While direct
  collocation is powerful, OpenSim Moco only provides a small predefined
  set of optimization goals which can be modified easily using OpenSim’s
  MATLAB API; However, more sophisticated goals such as the 3 stability
  criteria explored in the showcases require understanding the C++ API
  and ability to build a custom plugin or building OpenSim from source.
  It can be daunting for many users to develop custom goals without
  experience in building software written in C++. We developed
  <monospace>MEP</monospace> so Moco users without experience in
  compiling C++ can still write and test custom goals.</p>
  <p><monospace>MEP</monospace> was developed using MATLAB (v. 2022a),
  which is a multimodal software platform that is commonly used by
  biomechanics researchers. Typically, OpenSim interfaces are generated
  automatically with SWIG (Simplified Wrapper and Interface Generator),
  as opposed to developing an interface with MATLAB classes and MEX
  (MATLAB Executable), which can be challenging for even experienced
  biomechanists because of the complexity of developing the
  MATLAB-OpenSim API plugin and the need to develop a C++ interface for
  this plugin. <monospace>MEP</monospace> only requires that CMake and
  msbuild from Visual Studio (VS) 2019 or higher as well as the C++
  desktop development workload for VS to use MATLAB’s MEX compiler with
  VS.</p>
  <p>With <monospace>MEP</monospace>, OpenSim 4.5 users can simply run
  <monospace>build.m</monospace> to compile MocoGoals placed in the
  custom_goals directory, or in the custom_goals_compat directory for
  OpenSim versions 4.2-4.4. <monospace>build.m</monospace> will
  procedurally construct both <monospace>extend_problem.m</monospace>
  and <monospace>ExtendProblem.cpp</monospace> by parsing the header
  files of the discovered goals within the
  <monospace>custom_goals</monospace> directory. Both
  <monospace>ExtendProblem.cpp</monospace> and
  <monospace>extend_problem.m</monospace> generate bindings to
  instantiate custom goals placed in the custom_goals directory. Custom
  goals can be compiled with Visual Studio 2019 or higher and then
  MATLAB’s MEX compiler is used to compile ExtendProblem.
  <monospace>ExtendProblem.cpp</monospace> leverages the C++ library
  mexplus
  (<xref alt="Yamaguchi, 2018" rid="ref-Yamaguchi2018" ref-type="bibr">Yamaguchi,
  2018</xref>) to gain access to MEX entry points through C++
  macros.</p>
  <fig>
    <caption><p><monospace>MEP</monospace> framework. The researcher
    runs the <monospace>build.m</monospace> script (orange) that
    subsequently calls methods in the utils folder (red) which are
    tasked with reading the <monospace>custom_goals</monospace> folder
    (green) and procedurally construct the mex and the interface class
    that calls the mex (blue). Each custom goal (green) is handled as
    its own compiled
    plugin.<styled-content id="figU003Afiles"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="file_tree.png" />
  </fig>
  <p>To create a new goal with <monospace>MEP</monospace>:</p>
  <list list-type="order">
    <list-item>
      <p>OpenSim 4.5+ users should copy a goal folder in the
      <monospace>custom_goals</monospace> directory while 4.2-4.4 users
      should copy a goal folder in
      <monospace>custom_goals_compat</monospace> to serve as a
      template.</p>
    </list-item>
    <list-item>
      <p>Replace mentions of the original goal name to that of your new
      custom goal name in each of the 5 files and file names, being
      careful to also modify the include guards in the dll and register
      types header files.</p>
    </list-item>
    <list-item>
      <p>Reimplement constructProperties(), initializeOnModelImpl(),
      calcIntegrandImpl(), calcGoalImpl() such that they describe your
      custom goal.</p>
    </list-item>
  </list>
  <p>To incorporate extend_problem goals into an existing MATLAB script,
  a C-style pointer to the instantiated MocoProblem is passed as a
  constructor argument to the <monospace>extend_problem.m</monospace>
  class that wraps the <monospace>MEP</monospace> MEX. Class methods of
  <monospace>extend_problem.m</monospace>
  (<xref alt="[fig:files]" rid="figU003Afiles">[fig:files]</xref>; blue)
  are then used to add custom goals to the MocoProblem broadly using the
  following syntax:</p>
  <code language="matlab">cptr = uint64(problem.getCPtr(problem)); % c-style pointer to instantiated MocoProblem
ep = extend_problem(cptr);               % instantiate procedurally-generated ExtendProblem class
ep.addMocoCustomGoal('custom_goal',weight,power,divide_by_distance); %add custom goal to the MocoProblem</code>
  <p>This paradigm has implications for OpenSim and MATLAB developers
  beyond the scope of just incorporating novel MocoGoals; these same
  strategies can be used to extend other OpenSim classes and easily
  incorporate them into existing MATLAB-OpenSim scripts. We have posted
  all tools, instructions and simulation results related to this project
  on
  <ext-link ext-link-type="uri" xlink:href="https://github.com/Aravind-Sundararajan/MocoExtendProblem">GitHub</ext-link>
  and
  <ext-link ext-link-type="uri" xlink:href="https://simtk.org/projects/moco-ep">SimTK.org</ext-link>.</p>
  <sec id="requirements">
    <title>Requirements</title>
    <list list-type="bullet">
      <list-item>
        <p>install
        <ext-link ext-link-type="uri" xlink:href="https://cmake.org/download/">cmake</ext-link>
        (tested with 3.23.3) and Visual Studio 2019+ with the C++
        desktop development workload.</p>
      </list-item>
      <list-item>
        <p>install MATLAB (tested with 2022a/b), and configure MEX one
        time with mex -setup C++ to use VS.</p>
      </list-item>
      <list-item>
        <p>Download and install OpenSim from
        <ext-link ext-link-type="uri" xlink:href="https://simtk.org">SimTK</ext-link>
        and follow the documentation for setting up OpenSim’s
        <ext-link ext-link-type="uri" xlink:href="https://opensimconfluence.atlassian.net/wiki/spaces/OpenSim/pages/53089380/Scripting+with+Matlab">MATLAB
        scripting environment</ext-link>.</p>
      </list-item>
    </list>
  </sec>
</sec>
<sec id="showcases">
  <title>Showcases</title>
  <p>To demonstrate the utility of this framework, we generated a
  two-dimensional (2-D) walking simulation using the MATLAB-OpenSim API
  (<xref alt="Denton &amp; Umberger, 2023" rid="ref-Denton2023" ref-type="bibr">Denton
  &amp; Umberger, 2023</xref>). The base code uses the built-in
  MocoControlEffortGoal and MocoAverageSpeedGoal to generate tracking
  and predictive simulations of minimum effort walking at an average
  speed of 1.3 <inline-formula><alternatives>
  <tex-math><![CDATA[m s^{-1}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>m</mml:mi><mml:msup><mml:mi>s</mml:mi><mml:mrow><mml:mi>−</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>.
  Additionally, each objective function includes implicit acceleration
  which minimizes the integral of squared continuous joint acceleration
  variables, and an auxiliary derivative term that minimizes the
  integral of squared derivative continuous variables such as fiber
  velocity to ensure smooth trajectories (<inline-formula><alternatives>
  <tex-math><![CDATA[ACC_{smoothing}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>A</mml:mi><mml:mi>C</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>).</p>
  <p>Since Moco lacks built-in gait stability goals, we developed three
  stability goals using <monospace>MEP</monospace>
  <monospace>build.m</monospace> to create an ExtendProblem class that
  adds these to an existing MocoProblem
  (<xref alt="[fig:files]" rid="figU003Afiles">[fig:files]</xref>;
  blue). The first is a base of support
  (<xref alt="Equation 1" rid="eqU003Acost_bos">Equation 1</xref> BOS)
  criterion in which the whole-body center of mass (COM) is optimized to
  lay between the two hindfeet COMs projected to the ground reference
  frame in the transverse plane. The second is a zero-moment-point goal
  (<xref alt="Equation 2" rid="eqU003Acost_zmp">Equation 2</xref> ZMP)
  where the whole-body COM tracks the computed zero-tilting moment
  location in the transverse plane. The third is a marker acceleration
  minimization goal
  (<xref alt="Equation 3" rid="eqU003Acost_acc">Equation 3</xref>
  <inline-formula><alternatives>
  <tex-math><![CDATA[ACC_{marker}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>A</mml:mi><mml:mi>C</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>k</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>)
  that minimizes the explicit accelerations of a marker placed on the
  head (marker location is arbitrary and can be set by the user).</p>
  <p><monospace>MEP</monospace>’s <monospace>build.m</monospace> was
  used to generate an ExtendProblem class that adds these new stability
  cost terms:</p>
  <p><named-content id="eqU003Acost_bos" content-type="equation"><disp-formula><alternatives>
  <tex-math><![CDATA[
  J_{BOS} = W_1 EFF^{2} + W_2 ACC_{smoothing} + W_3 BOS]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>B</mml:mi><mml:mi>O</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mi>E</mml:mi><mml:mi>F</mml:mi><mml:msup><mml:mi>F</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mi>A</mml:mi><mml:mi>C</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mi>B</mml:mi><mml:mi>O</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:math></alternatives></disp-formula></named-content></p>
  <p><named-content id="eqU003Acost_zmp" content-type="equation"><disp-formula><alternatives>
  <tex-math><![CDATA[
  J_{ZMP} = W_1 EFF^{2} + W_2 ACC_{smoothing} + W_3 ZMP]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>Z</mml:mi><mml:mi>M</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mi>E</mml:mi><mml:mi>F</mml:mi><mml:msup><mml:mi>F</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mi>A</mml:mi><mml:mi>C</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mi>Z</mml:mi><mml:mi>M</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:math></alternatives></disp-formula></named-content></p>
  <p><named-content id="eqU003Acost_acc" content-type="equation"><disp-formula><alternatives>
  <tex-math><![CDATA[
  J_{ACC} = W_1 EFF^{2} + W_2 ACC_{smoothing} + W_3 ACC_{marker}]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>C</mml:mi><mml:mi>C</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mi>E</mml:mi><mml:mi>F</mml:mi><mml:msup><mml:mi>F</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mi>A</mml:mi><mml:mi>C</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mi>A</mml:mi><mml:mi>C</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>k</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></disp-formula></named-content></p>
  <p>The results of each multi-objective predictive simulation, in which
  the stability criterion was compiled using <monospace>MEP</monospace>,
  is shown against the results from a tracking simulation
  (<xref alt="[fig:stability]" rid="figU003Astability">[fig:stability]</xref>;
  <xref alt="Table 1" rid="tabU003Acosts">Table 1</xref>) that
  closely-matched experimental data
  (<xref alt="Denton &amp; Umberger, 2023" rid="ref-Denton2023" ref-type="bibr">Denton
  &amp; Umberger, 2023</xref>). As the purpose was to demonstrate the
  utility of <monospace>MEP</monospace>, we did not tune the stability
  term weights to match the tracking result as closely as possible.</p>
  <fig>
    <caption><p>Sagittal plane hip, knee and ankle angles (a-c),
    vertical and A-P ground reaction forces (d-e), the 11
    degree-of-freedom, 18 muscle sagittal plane human walking model used
    for tracking and predictive simulations
    (f)<styled-content id="figU003Astability"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="stability.png" />
  </fig>
  <table-wrap>
    <caption>
      <p>Objective cost and term breakdown for three predictive
      simulations using
      <monospace>MEP</monospace>.<styled-content id="tabU003Acosts"></styled-content></p>
    </caption>
    <table>
      <colgroup>
        <col width="17%" />
        <col width="21%" />
        <col width="18%" />
        <col width="21%" />
        <col width="22%" />
      </colgroup>
      <thead>
        <tr>
          <th align="center"></th>
          <th align="center">Objective cost</th>
          <th align="center">Effort cost</th>
          <th align="center">Smoothing cost</th>
          <th align="center">Stability cost</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td align="center"><inline-formula><alternatives>
          <tex-math><![CDATA[J_{BOS}]]></tex-math>
          <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>B</mml:mi><mml:mi>O</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula></td>
          <td align="center">3.759046</td>
          <td align="center">2.270912</td>
          <td align="center">0.683608</td>
          <td align="center">0.794155</td>
        </tr>
        <tr>
          <td align="center"><inline-formula><alternatives>
          <tex-math><![CDATA[J_{ZMP}]]></tex-math>
          <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>Z</mml:mi><mml:mi>M</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula></td>
          <td align="center">4.184254</td>
          <td align="center">2.751212</td>
          <td align="center">0.725837</td>
          <td align="center">0.686290</td>
        </tr>
        <tr>
          <td align="center"><inline-formula><alternatives>
          <tex-math><![CDATA[J_{ACC}]]></tex-math>
          <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>J</mml:mi><mml:mrow><mml:mi>A</mml:mi><mml:mi>C</mml:mi><mml:mi>C</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula></td>
          <td align="center">4.774932</td>
          <td align="center">3.797785</td>
          <td align="center">0.793123</td>
          <td align="center">0.174308</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <p>While these examples used planar gait simulations,
  <monospace>MEP</monospace> is agnostic to model complexity or task,
  and is being used successfully in our ongoing research (e.g.
  <xref alt="Joshi et al., 2022" rid="ref-Joshi2022" ref-type="bibr">Joshi
  et al., 2022</xref>;
  <xref alt="Sundararajan et al., 2023" rid="ref-Sundararajan2023" ref-type="bibr">Sundararajan
  et al., 2023</xref>) of locomotor performance in humans and other
  animals. An additional benefit of sequestering novel goals into
  <monospace>MEP</monospace> is being able to back-port goals from a
  newer OpenSim version to an older version (i.e. taking a goal from
  OpenSim 4.4 and bringing that functionality to 4.2). Ultimately,
  <monospace>MEP</monospace> offers a modular framework to rapidly
  develop, test and compare novel MocoGoals for features beyond OpenSim
  Moco’s current scope.</p>
</sec>
<sec id="funding">
  <title>Funding</title>
  <p>This work was supported by the National Science Foundation (BCS
  2018436 and BCS 2018523).</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-Kelly2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kelly</surname><given-names>Matthew</given-names></name>
      </person-group>
      <article-title>An Introduction to Trajectory Optimization: How to Do Your Own Direct Collocation</article-title>
      <source>SIAM Review</source>
      <year iso-8601-date="2017">2017</year>
      <volume>59</volume>
      <issue>4</issue>
      <uri> https://doi.org/10.1137/16M1062569</uri>
      <pub-id pub-id-type="doi">10.1137/16M1062569</pub-id>
      <fpage>849</fpage>
      <lpage>904</lpage>
    </element-citation>
  </ref>
  <ref id="ref-delp2007">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Delp</surname><given-names>Scott</given-names></name>
        <name><surname>Anderson</surname><given-names>Frank</given-names></name>
        <name><surname>Arnold</surname><given-names>Allison</given-names></name>
        <name><surname>Loan</surname><given-names>Peter</given-names></name>
        <name><surname>Habib</surname><given-names>A.</given-names></name>
        <name><surname>John</surname><given-names>Chand</given-names></name>
        <name><surname>Guendelman</surname><given-names>Eran</given-names></name>
        <name><surname>Thelen</surname><given-names>Darryl</given-names></name>
      </person-group>
      <article-title>OpenSim: Open-source software to create and analyze dynamic simulations of movement</article-title>
      <source>Biomedical Engineering, IEEE Transactions on</source>
      <year iso-8601-date="2007-12">2007</year><month>12</month>
      <volume>54</volume>
      <pub-id pub-id-type="doi">10.1109/TBME.2007.901024</pub-id>
      <fpage>1940 </fpage>
      <lpage> 1950</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Dembia2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Dembia</surname><given-names>C. L.</given-names></name>
        <name><surname>Bianco</surname><given-names>N. A.</given-names></name>
        <name><surname>Falisse</surname><given-names>A.</given-names></name>
        <name><surname>Hicks</surname><given-names>J. L.</given-names></name>
        <name><surname>Delp</surname><given-names>S L.</given-names></name>
      </person-group>
      <article-title>OpenSim Moco: Musculoskeletal optimal control</article-title>
      <source>PLoS Computational Biology</source>
      <publisher-name>Public Library of Science</publisher-name>
      <year iso-8601-date="2020-12">2020</year><month>12</month>
      <volume>16</volume>
      <issue>12</issue>
      <uri>10.1371/journal.pcbi.1008493</uri>
      <pub-id pub-id-type="doi">10.1371/journal.pcbi.1008493</pub-id>
      <fpage>1</fpage>
      <lpage>21</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Denton2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Denton</surname><given-names>A. N.</given-names></name>
        <name><surname>Umberger</surname><given-names>B. R.</given-names></name>
      </person-group>
      <article-title>Computational performance of musculoskeletal simulation in OpenSim Moco using parallel computing</article-title>
      <source>International Journal for Numerical Methods in Biomedical Engineering</source>
      <year iso-8601-date="2023">2023</year>
      <volume>39</volume>
      <issue>12</issue>
      <uri>https://onlinelibrary.wiley.com/doi/abs/10.1002/cnm.3777</uri>
      <pub-id pub-id-type="doi">10.1002/cnm.3777</pub-id>
      <fpage>e3777</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Falisse2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Falisse</surname><given-names>A.</given-names></name>
        <name><surname>Serrancolí</surname><given-names>Gil</given-names></name>
        <name><surname>Dembia</surname><given-names>C. L.</given-names></name>
        <name><surname>Gillis</surname><given-names>J</given-names></name>
        <name><surname>Jonkers</surname><given-names>I</given-names></name>
        <name><surname>De Groote</surname><given-names>F.</given-names></name>
      </person-group>
      <article-title>Rapid predictive simulations with complex musculoskeletal models suggest that diverse healthy and pathological human gaits can emerge from similar control strategies</article-title>
      <source>Journal of The Royal Society Interface</source>
      <year iso-8601-date="2019">2019</year>
      <volume>16</volume>
      <issue>157</issue>
      <uri>https://royalsocietypublishing.org/doi/abs/10.1098/rsif.2019.0402</uri>
      <pub-id pub-id-type="doi">10.1098/rsif.2019.0402</pub-id>
      <fpage>20190402</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Johnson2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Johnson</surname><given-names>R. T.</given-names></name>
        <name><surname>Bianco</surname><given-names>N. A.</given-names></name>
        <name><surname>Finley</surname><given-names>J M.</given-names></name>
      </person-group>
      <article-title>Patterns of asymmetry and energy cost generated from predictive simulations of hemiparetic gait</article-title>
      <source>PLoS Computational Biology</source>
      <publisher-name>Public Library of Science</publisher-name>
      <year iso-8601-date="2022-09">2022</year><month>09</month>
      <volume>18</volume>
      <issue>9</issue>
      <pub-id pub-id-type="doi">10.1371/journal.pcbi.1010466</pub-id>
      <fpage>1</fpage>
      <lpage>26</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Joshi2022">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Joshi</surname><given-names>V.</given-names></name>
        <name><surname>Boyer</surname><given-names>K.</given-names></name>
        <name><surname>Umberger</surname><given-names>B. R.</given-names></name>
      </person-group>
      <article-title>Optimal control gait simulations of older adults predict foot placement trends not captured by reflex-based models</article-title>
      <source>the Proceedings of the North American Congress on Biomechanics</source>
      <publisher-name>North American Congress on Biomechanics</publisher-name>
      <year iso-8601-date="2022">2022</year>
    </element-citation>
  </ref>
  <ref id="ref-Seth2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Seth</surname><given-names>A.</given-names></name>
        <name><surname>Hicks</surname><given-names>J. L.</given-names></name>
        <name><surname>Uchida</surname><given-names>T. K.</given-names></name>
        <name><surname>Habib</surname><given-names>Ayman</given-names></name>
        <name><surname>Dembia</surname><given-names>C. L.</given-names></name>
        <name><surname>Dunne</surname><given-names>J. J.</given-names></name>
        <name><surname>Ong</surname><given-names>C. F.</given-names></name>
        <name><surname>DeMers</surname><given-names>Matthew S.</given-names></name>
        <name><surname>Rajagopal</surname><given-names>A.</given-names></name>
        <name><surname>Millard</surname><given-names>M.</given-names></name>
        <name><surname>Hamner</surname><given-names>Samuel R.</given-names></name>
        <name><surname>Arnold</surname><given-names>E. M.</given-names></name>
        <name><surname>Yong</surname><given-names>Jennifer R.</given-names></name>
        <name><surname>Lakshmikanth</surname><given-names>S. K.</given-names></name>
        <name><surname>Sherman</surname><given-names>M. A.</given-names></name>
        <name><surname>Ku</surname><given-names>J. P.</given-names></name>
        <name><surname>Delp</surname><given-names>S. L.</given-names></name>
      </person-group>
      <article-title>OpenSim: Simulating musculoskeletal dynamics and neuromuscular control to study human and animal movement</article-title>
      <source>PLoS Computational Biology</source>
      <publisher-name>Public Library of Science</publisher-name>
      <year iso-8601-date="2018-07">2018</year><month>07</month>
      <volume>14</volume>
      <issue>7</issue>
      <pub-id pub-id-type="doi">10.1371/journal.pcbi.1006223</pub-id>
      <fpage>1</fpage>
      <lpage>20</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Spomer2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Spomer</surname><given-names>Alyssa</given-names></name>
        <name><surname>Conner</surname><given-names>Benjamin</given-names></name>
        <name><surname>Schwartz</surname><given-names>Michael</given-names></name>
        <name><surname>Lerner</surname><given-names>Zachary</given-names></name>
        <name><surname>Steele</surname><given-names>Katherine</given-names></name>
      </person-group>
      <article-title>Audiovisual biofeedback amplifies plantarflexor adaptation during walking among children with cerebral palsy</article-title>
      <source>Journal of NeuroEngineering and Rehabilitation</source>
      <year iso-8601-date="2023-12">2023</year><month>12</month>
      <volume>20</volume>
      <pub-id pub-id-type="doi">10.1186/s12984-023-01279-5</pub-id>
      <fpage></fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Sundararajan2023">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Sundararajan</surname><given-names>A.</given-names></name>
        <name><surname>Larson</surname><given-names>S. G.</given-names></name>
        <name><surname>Umberger</surname><given-names>B. R.</given-names></name>
        <name><surname>O’Neill</surname><given-names>M. C.</given-names></name>
      </person-group>
      <article-title>Optimal Control Simulations of 3-D Walking in Humans and Bipedal Chimpanzee</article-title>
      <source>the Proceedings of The American Society of Biomechanics</source>
      <publisher-name>American Society of Biomechanics</publisher-name>
      <year iso-8601-date="2023">2023</year>
    </element-citation>
  </ref>
  <ref id="ref-Yamaguchi2018">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Yamaguchi</surname><given-names>K.</given-names></name>
      </person-group>
      <article-title>mexplus</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2018">2018</year>
      <uri>https://github.com/kyamagu/mexplus</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
