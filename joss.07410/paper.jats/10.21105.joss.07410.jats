<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">7410</article-id>
<article-id pub-id-type="doi">10.21105/joss.07410</article-id>
<title-group>
<article-title>Snk: A Snakemake CLI and Workflow Management
System</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-7070-0078</contrib-id>
<name>
<surname>Wirth</surname>
<given-names>Wytamma</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-3166-4614</contrib-id>
<name>
<surname>Mutch</surname>
<given-names>Simon</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-1274-6750</contrib-id>
<name>
<surname>Turnbull</surname>
<given-names>Robert</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Peter Doherty Institute for Infection and Immunity,
University of Melbourne, Australia</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Melbourne Data Analytics Platform, University of Melbourne,
Melbourne 3010, Australia</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-09-25">
<day>25</day>
<month>9</month>
<year>2024</year>
</pub-date>
<volume>9</volume>
<issue>103</issue>
<fpage>7410</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2024</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>Snakemake</kwd>
<kwd>Workflow</kwd>
<kwd>Bioinformatics</kwd>
<kwd>Reproducibility</kwd>
<kwd>Command Line Interface</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Snk (pronounced “snek”) is a workflow management tool designed to
  simplify the use of Snakemake workflows by dynamically generating
  command-line interfaces (CLIs). Snk allows complex Snakemake workflows
  to be used as modular components in larger systems that can be
  executed and managed from the command line with minimal overhead. This
  enables researchers and developers to integrate and manage
  sophisticated workflows seamlessly. Snk significantly improves the
  interoperability and accessibility of Snakemake workflows, making it
  easier to use and share computational pipelines in various research
  fields.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The integration of bioinformatic analyses into comprehensive
  pipelines (aka workflows) has revolutionised the field by improving
  the robustness and reproducibility of analyses. One of the most
  popular workflow frameworks is Snakemake
  (<xref alt="Mölder et al., 2021" rid="ref-10.12688U002Ff1000research.29032.2" ref-type="bibr">Mölder
  et al., 2021</xref>). Snakemake is a user-friendly and adaptable
  make-style workflow framework with a powerful specification language
  built atop of the Python programming language. Despite its success,
  Snakemake workflows are often developed for specific research analysis
  rather than as general-purpose reusable tools. That is, Snakemake
  workflows are typically built for the reproducibility of a single
  analysis but not necessarily built for flexibility.</p>
  <p>To improve their utility, Snakemake workflows developers often
  encapsulate workflows within CLI tools by producing wrapper code to
  abstract the workflow execution, sometimes called
  workflows-as-applications or workflows packages
  (<xref alt="Roach et al., 2022" rid="ref-roach_ten_2022" ref-type="bibr">Roach
  et al., 2022</xref>). These wrappers serve as intermediaries between
  the end-user (via the CLI) and the workflow execution, enabling
  developers to tailor the Snakemake experience to specific use cases.
  For example, the pangolin CLI tool wraps a Snakemake workflow for
  SARS-CoV-2 lineage assignment
  (<xref alt="O’Toole et al., 2022" rid="ref-otoole_pango_2022" ref-type="bibr">O’Toole
  et al., 2022</xref>). Initiatives like Snaketool have simplified the
  development of Snakemake-based CLIs by offering a template for
  developers
  (<xref alt="Roach et al., 2022" rid="ref-roach_ten_2022" ref-type="bibr">Roach
  et al., 2022</xref>). Nonetheless, the onus remains on the developer
  to create and maintain the CLI wrappers for their workflow.</p>
  <p>Here we present Snk, a Snakemake workflow management system that
  allows users to install Snakemake workflows as dynamically generated
  CLIs. Thus users can create a CLI for their (or others’) Snakemake
  workflows with minimal to no code changes required. The Snk-generated
  CLIs follow best practices and include several features out of the box
  that improve user experience. The CLIs can be configured at install
  time or via a <monospace>snk.yaml</monospace> configuration file. Snk
  is readily available for installation via PyPI and Conda, using the
  commands <monospace>pip install snk</monospace> and
  <monospace>conda install snk</monospace>, respectively.</p>
  <p>Snk has two distinct major functions; managing the installation of
  workflows, and dynamical generating CLIs from Snakemake configuration
  files. To install a workflow as a CLI, users can specify the file
  path, URL, or GitHub name (username/repo) of a workflow. Snk copies
  (clones) workflows into a managed directory structure, creates a CLI
  entry point, and optionally creates an isolated virtual environment
  for each workflow. Workflows can be installed from specific commits,
  tags, or branches, ensuring reproducibility. The advent of Snk allows
  users to utilise the Snakemake workflow catalog
  (<ext-link ext-link-type="uri" xlink:href="https://snakemake.github.io/snakemake-workflow-catalog">https://snakemake.github.io/snakemake-workflow-catalog</ext-link>)
  as a searchable package index of Snk-installable Snakemake tools. The
  snk install command is flexible and can be used to install diverse
  workflows using installation options. For example, the
  <ext-link ext-link-type="uri" xlink:href="https://github.com/snakemake-workflows/dna-seq-gatk-variant-calling">dna-seq-gatk-variant-calling
  workflow</ext-link> (release tag v2.1.1) can be installed as a CLI
  named <monospace>variant-calling</monospace> with Snakemake v8.10.8
  and Pandas and NumPy dependencies using the following command:</p>
  <code language="bash">snk install \
  snakemake-workflows/dna-seq-gatk-variant-calling \
  --name variant-calling \
  --snakemake 8.10.8 \
  -d pandas==1.5.3 \
  -d numpy==1.26.4 \
  -t v2.1.1</code>
  <p>The workflow will then be accessible via the
  <monospace>variant-calling</monospace> CLI in the terminal (Figure 1).
  Additionally, the <monospace>snk</monospace> command can be used to
  list and uninstall workflows installed with Snk. The complete
  documentation for managing workflows can be found at
  <ext-link ext-link-type="uri" xlink:href="https://snk.wytamma.com/managing_workflows">https://snk.wytamma.com/managing_workflows</ext-link>.</p>
  <fig>
    <caption><p>The <monospace>variant-calling</monospace> CLI generated
    by Snk.</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="variant-calling-cli.png" />
  </fig>
  <p>The core functionality of Snk is the dynamic creation of CLIs.
  Internally snk uses the <monospace>Snk-CLI</monospace> sister package
  to generate the CLI. By default key values pairs of the Snakemake
  configfile are mapped to CLI option. For example,
  <monospace>samples: samples.tsv</monospace> in the configfile will
  generate a <monospace>--samples</monospace> option in the CLI with the
  default value <monospace>samples.tsv</monospace> (Figure 2). The CLI
  generated by snk is highly customisable and can be configured via a
  snk.yaml file placed in the workflow directory. The snk.yaml file can
  configure many aspects of CLI including subcommands, ASCII art, help
  messages, resource files, default values, and much more. Complete
  documentation for the Snk config file can be found at
  <ext-link ext-link-type="uri" xlink:href="https://snk.wytamma.com/snk_config_file">https://snk.wytamma.com/snk_config_file</ext-link>.</p>
  <fig>
    <caption><p>The run command of the
    <monospace>variant-calling</monospace> CLI dynamically generated
    from the Snakemake configfile. Several standard options are provided
    in the Options section, e.g., <monospace>--dry</monospace>
    (equivalent to Snakemakes <monospace>--dry-run</monospace>),
    <monospace>--dag</monospace> to create a DAG plot of the workflow,
    and <monospace>--cores</monospace> witch defaults to all. The
    Workflow Configuration section contains the options dynamically
    generated from the configfile. Snk-CLI automatically infers the
    defaults and types of the options and creates flags for boolean
    options.</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="variant-calling-cli-run.png" />
  </fig>
  <p>Developers can also directly use the Snk-CLI package to generate
  CLIs for their Snakemake workflows. By using the
  <monospace>CLI</monospace> class from Snk-CLI, developers can build a
  fully featured workflow package without having to write a Snakemake
  wrapper. We provide a guide for using Snk-CLI to build self-contained
  workflow packages at
  <ext-link ext-link-type="uri" xlink:href="https://snk.wytamma.com/workflow_packages">https://snk.wytamma.com/workflow_packages</ext-link>.
  The Snk-CLI package is available via PyPI and can be installed using
  the command <monospace>pip install snk-cli</monospace>.</p>
  <p>Snk is a powerful tool that simplifies the use of Snakemake
  workflows by dynamically generating CLIs. Snk is open-source software
  released under the MIT license. Snk documentation, source code, and
  issue tracker are available at
  <ext-link ext-link-type="uri" xlink:href="https://github.com/Wytamma/snk">https://github.com/Wytamma/snk</ext-link>.
  We welcome contributions and feedback from the community to improve
  Snk and make it a valuable tool for the Snakemake community and
  reproducible research at large.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The authors would like to thank Katherine Eaton
  (<monospace>@ktmeaton</monospace>) for her valuable open-source
  contributions. Additionally, we acknowledge all users who opened
  issues and submitted pull requests, as their input has been
  instrumental in enhancing this project. We also extend our gratitude
  to the editors and reviewers at the Journal of Open Source Software
  (JOSS) for their support and constructive feedback.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-otoole_pango_2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>O’Toole</surname><given-names>Áine</given-names></name>
        <name><surname>Pybus</surname><given-names>Oliver G.</given-names></name>
        <name><surname>Abram</surname><given-names>Michael E.</given-names></name>
        <name><surname>Kelly</surname><given-names>Elizabeth J.</given-names></name>
        <name><surname>Rambaut</surname><given-names>Andrew</given-names></name>
      </person-group>
      <article-title>Pango lineage designation and assignment using SARS-CoV-2 spike gene nucleotide sequences</article-title>
      <source>BMC Genomics</source>
      <year iso-8601-date="2022-02">2022</year><month>02</month>
      <volume>23</volume>
      <issue>1</issue>
      <issn>1471-2164</issn>
      <uri>https://doi.org/10.1186/s12864-022-08358-2</uri>
      <pub-id pub-id-type="doi">10.1186/s12864-022-08358-2</pub-id>
      <fpage>121</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-roach_ten_2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Roach</surname><given-names>Michael J.</given-names></name>
        <name><surname>Pierce-Ward</surname><given-names>N. Tessa</given-names></name>
        <name><surname>Suchecki</surname><given-names>Radoslaw</given-names></name>
        <name><surname>Mallawaarachchi</surname><given-names>Vijini</given-names></name>
        <name><surname>Papudeshi</surname><given-names>Bhavya</given-names></name>
        <name><surname>Handley</surname><given-names>Scott A.</given-names></name>
        <name><surname>Brown</surname><given-names>C. Titus</given-names></name>
        <name><surname>Watson-Haigh</surname><given-names>Nathan S.</given-names></name>
        <name><surname>Edwards</surname><given-names>Robert A.</given-names></name>
      </person-group>
      <article-title>Ten simple rules and a template for creating workflows-as-applications</article-title>
      <source>PLOS Computational Biology</source>
      <person-group person-group-type="editor">
        <name><surname>Markel</surname><given-names>Scott</given-names></name>
      </person-group>
      <year iso-8601-date="2022-12">2022</year><month>12</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2024-10-02">2024</year><month>10</month><day>02</day></date-in-citation>
      <volume>18</volume>
      <issue>12</issue>
      <issn>1553-7358</issn>
      <uri>https://dx.plos.org/10.1371/journal.pcbi.1010705</uri>
      <pub-id pub-id-type="doi">10.1371/journal.pcbi.1010705</pub-id>
      <fpage>e1010705</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-10.12688U002Ff1000research.29032.2">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Mölder</surname><given-names>Felix</given-names></name>
        <name><surname>Jablonski</surname><given-names>Kim PHilipp</given-names></name>
        <name><surname>Letcher</surname><given-names>Brice</given-names></name>
        <name><surname>Hall</surname><given-names>Michael B.</given-names></name>
        <name><surname>Tomkins-Tinch</surname><suffix>Christopher H</suffix></name>
        <name><surname>Sochat</surname><given-names>Vanessa</given-names></name>
        <name><surname>Forster</surname><given-names>Jan</given-names></name>
        <name><surname>Lee</surname><given-names>Soohyun</given-names></name>
        <name><surname>Twardziok</surname><given-names>Sven O.</given-names></name>
        <name><surname>Kanitz</surname><given-names>Alexander</given-names></name>
        <name><surname>Wilm</surname><given-names>Andreas</given-names></name>
        <name><surname>Holtgrewe</surname><given-names>Manuel</given-names></name>
        <name><surname>Rahmann</surname><given-names>Sven</given-names></name>
        <name><surname>Nahnsen</surname><given-names>Sven</given-names></name>
        <name><surname>Köster</surname><given-names>Johannes</given-names></name>
      </person-group>
      <article-title>Sustainable data analysis with snakemake [version 2; peer review: 2 approved]</article-title>
      <source>F1000Research</source>
      <year iso-8601-date="2021">2021</year>
      <volume>10</volume>
      <issue>33</issue>
      <pub-id pub-id-type="doi">10.12688/f1000research.29032.2</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
