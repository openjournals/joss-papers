<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6574</article-id>
<article-id pub-id-type="doi">10.21105/joss.06574</article-id>
<title-group>
<article-title>Renard: A Modular Pipeline for Extracting Character
Networks from Narrative Texts</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-4629-0923</contrib-id>
<name>
<surname>Amalvy</surname>
<given-names>Arthur</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-2619-2835</contrib-id>
<name>
<surname>Labatut</surname>
<given-names>Vincent</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-1203-9108</contrib-id>
<name>
<surname>Dufour</surname>
<given-names>Richard</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Laboratoire Informatique d’Avignon, France</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Laboratoire des Sciences du Numérique de Nantes,
France</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-02-29">
<day>29</day>
<month>2</month>
<year>2024</year>
</pub-date>
<volume>9</volume>
<issue>98</issue>
<fpage>6574</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>character networks</kwd>
<kwd>pipeline</kwd>
<kwd>nlp</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Renard (<italic>Relationships Extraction from NARrative
  Documents</italic>) is a Python library that allows users to define
  custom natural language processing (NLP) pipelines to extract
  character networks from narrative texts. Contrary to the few existing
  tools, Renard can extract <italic>dynamic</italic> networks, as well
  as the more common static networks. Renard pipelines are modular:
  users can choose the implementation of each NLP subtask needed to
  extract a character network. This allows users to specialize pipelines
  to particular types of texts and to study the impact of each subtask
  on the extracted network.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>Character networks (i.e., graphs where vertices represent
  characters and edges represent their relationships) extracted from
  narrative texts are useful in a number of applications, from
  visualization to literary analysis
  (<xref alt="Labatut &amp; Bost, 2019" rid="ref-labatut-2019" ref-type="bibr">Labatut
  &amp; Bost, 2019</xref>). There are different ways of modeling
  relationships (co-occurrences, conversations, actions, etc.), and
  networks can be static or dynamic (i.e., series of networks
  representing the evolution of relationships through time). This
  variety means one can extract different kinds of networks depending on
  the targeted applications. While some authors extract these networks
  by relying on manually annotated data
  (<xref alt="Park, Kim, &amp; Cho, 2013" rid="ref-park-2013-character_networks" ref-type="bibr">Park,
  Kim, &amp; Cho, 2013</xref>;
  <xref alt="Park, Kim, Hwang, et al., 2013" rid="ref-park-2013-character_networksb" ref-type="bibr">Park,
  Kim, Hwang, et al., 2013</xref>;
  <xref alt="Rochat, 2014" rid="ref-rochat-2014-phd_thesis" ref-type="bibr">Rochat,
  2014</xref>,
  <xref alt="2015" rid="ref-rochat-2015-character_networks_zola" ref-type="bibr">2015</xref>;
  <xref alt="Rochat &amp; Triclot, 2017" rid="ref-rochat-2017" ref-type="bibr">Rochat
  &amp; Triclot, 2017</xref>), it is a time-costly endeavor, and the
  fully automatic extraction of these networks is therefore of interest.
  Unfortunately, there are only a few existing software packages and
  tools that can extract character networks
  (<xref alt="Métrailler, 2023" rid="ref-metrailler-2023-charnetto" ref-type="bibr">Métrailler,
  2023</xref>;
  <xref alt="Sparavigna &amp; Marazzato, 2015" rid="ref-sparavigna-2015-chaplin" ref-type="bibr">Sparavigna
  &amp; Marazzato, 2015</xref>), but none of these can output dynamic
  networks. Furthermore, automatically extracting a character network
  requires solving several successive natural language processing tasks,
  such as named entity recognition (NER) or coreference resolution, and
  algorithms carrying these tasks are bound to make errors. To our
  knowledge, the cascading impact of these errors on the quality of the
  extracted networks has yet to be studied extensively. This is an
  important issue since knowing which tasks have more influence on the
  extracted networks would allow prioritizing research efforts.</p>
  <p>Renard is a fully configurable pipeline that can extract static and
  dynamic networks from narrative texts. We base Renard on the generic
  character network extraction framework highlighted by the survey of
  Labatut &amp; Bost
  (<xref alt="2019" rid="ref-labatut-2019" ref-type="bibr">2019</xref>).
  We design it so that it is as modular as possible, which allows the
  user to select the implementation of each extraction step as needed.
  This has several advantages:</p>
  <list list-type="order">
    <list-item>
      <p>Depending on the input text, the user can choose the most
      relevant series of steps and configure each of them as needed.
      Therefore, the pipeline can be specialized for different types of
      texts, allowing for better performance.</p>
    </list-item>
    <list-item>
      <p>The pipeline can easily incorporate new advances in NLP, by
      simply implementing a new step when necessary.</p>
    </list-item>
    <list-item>
      <p>One can study the impact of the performance of each step on the
      quality of the extracted networks.</p>
    </list-item>
  </list>
  <p>We intend for Renard to be used by digital humanities researchers
  as well as NLP researchers and practitioners. The former category of
  users can use Renard to quickly extract character networks for
  literary analysis. Meanwhile, the latter can use Renard to easily
  represent textual content using networks, which can be used as inputs
  for downstream NLP tasks (classification, recommendation…).</p>
</sec>
<sec id="design-and-main-features">
  <title>Design and Main Features</title>
  <p>Renard is centered about the concept of a
  <italic>pipeline</italic>. In Renard, a pipeline is a series of
  sequential <italic>steps</italic> that are run one after the other in
  order to extract a character network from a text. When using Renard,
  the user simply <italic>describes</italic> this pipeline in Python by
  specifying this series of steps, and can apply it to different texts
  afterwards. The following code block exemplifies that philosophy:</p>
  <code language="python">from renard.pipeline import Pipeline
from renard.pipeline.tokenization import NLTKTokenizer
from renard.pipeline.ner import NLTKNamedEntityRecognizer
from renard.pipeline.character_unification import GraphRulesCharacterUnifier
from renard.pipeline.graph_extraction import CoOccurrencesGraphExtractor

with open(&quot;./my_doc.txt&quot;) as f:
    text = f.read()

pipeline = Pipeline(
    [
        NLTKTokenizer(),
        NLTKNamedEntityRecognizer(),
        GraphRulesCharacterUnifier(min_appearance=10),
        # users can pass 'dynamic=True' and specify the
        # 'dynamic_window' argument to extract a dynamic network
        # instead of a static one.
        CoOccurrencesGraphExtractor(
            co_occurrences_dist=10, dynamic=False
        )
    ]
)

out = pipeline(text)</code>
  <fig id="figU003App_network">
    <caption><p>Co-occurrence character network of Jane Austen’s “Pride
    and Prejudice”, extracted automatically using Renard. Vertex size
    and color denote degree, while edge thickness and color denote the
    number of co-occurrences between two characters.</p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="./pp.pdf" />
  </fig>
  <p>As an example, Figure
  <xref alt="[fig:pp_network]" rid="figU003App_network">[fig:pp_network]</xref>
  shows the co-occurrence character network of Jane Austen’s 1813 novel
  “Pride and Prejudice”, extracted using the Renard pipeline above.
  While this network is static, users can also extract a dynamic network
  by passing the <monospace>dynamic=True</monospace> argument to the
  last step of the pipeline, and specifying the
  <monospace>dynamic_window</monospace> argument: in that case, Renard
  outputs a list of graphs corresponding to a dynamic network instead of
  a single network<xref ref-type="fn" rid="fn1">1</xref>. Renard uses
  the NetworkX Python library
  (<xref alt="Hagbert et al., 2008" rid="ref-hagberg-2008-networkx" ref-type="bibr">Hagbert
  et al., 2008</xref>) to manipulate graphs, ensuring compatibility with
  a wide array of tools and formats.</p>
  <p>To allow for custom needs, we design Renard to be very flexible. If
  a step is not available in Renard, we encourage users to either:</p>
  <list list-type="bullet">
    <list-item>
      <p>Externally perform the computation corresponding to the desired
      step, and inject the results back into the pipeline at
      runtime,</p>
    </list-item>
    <list-item>
      <p>Implement their own step to integrate their custom processing
      into Renard by subclassing the existing
      <monospace>PipelineStep</monospace> class. If necessary, this
      <monospace>PipelineStep</monospace> can act as an adapter to an
      external process that may or may not be written in Python.</p>
    </list-item>
  </list>
  <p>The flexibility of this approach introduces the possibility of
  creating invalid pipelines because steps often require information
  computed by previously run steps: for example, solving the NER task
  requires a tokenized version of the input text. To counteract this
  issue, each step therefore declares its requirements and the new
  information it produces, which allows Renard to check whether a
  pipeline is valid, and to explain at runtime to the user why it may
  not be<xref ref-type="fn" rid="fn2">2</xref>.</p>
  <table-wrap>
    <caption>
      <p>Existing steps and their supported languages in Renard.
      <styled-content id="tabU003Asteps"></styled-content></p>
    </caption>
    <table>
      <colgroup>
        <col width="66%" />
        <col width="34%" />
      </colgroup>
      <thead>
        <tr>
          <th>Step</th>
          <th>Supported Languages</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><monospace>StanfordCoreNLPPipeline</monospace></td>
          <td>eng</td>
        </tr>
        <tr>
          <td><monospace>CustomSubstitutionPreprocessor</monospace></td>
          <td>any</td>
        </tr>
        <tr>
          <td><monospace>NLTKTokenizer</monospace></td>
          <td>eng, fra, rus, ita, spa… (12 other)</td>
        </tr>
        <tr>
          <td><monospace>QuoteDetector</monospace></td>
          <td>any</td>
        </tr>
        <tr>
          <td><monospace>NLTKNamedEntityRecognizer</monospace></td>
          <td>eng, rus</td>
        </tr>
        <tr>
          <td><monospace>BertNamedEntityRecognizer</monospace></td>
          <td>eng, fra</td>
        </tr>
        <tr>
          <td><monospace>BertCoreferenceResolver</monospace></td>
          <td>eng</td>
        </tr>
        <tr>
          <td><monospace>SpacyCorefereeCoreferenceResolver</monospace></td>
          <td>eng</td>
        </tr>
        <tr>
          <td><monospace>NaiveCharacterUnifier</monospace></td>
          <td>any</td>
        </tr>
        <tr>
          <td><monospace>GraphRulesCharacterUnifier</monospace>
          (inspired from Vala et al.
          (<xref alt="2015" rid="ref-vala-2015-character_detection" ref-type="bibr">2015</xref>))</td>
          <td>eng, fra</td>
        </tr>
        <tr>
          <td><monospace>BertSpeakerDetector</monospace></td>
          <td>eng</td>
        </tr>
        <tr>
          <td><monospace>CoOccurencesGraphExtractor</monospace></td>
          <td>any</td>
        </tr>
        <tr>
          <td><monospace>ConversationalGraphExtractor</monospace></td>
          <td>any</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <p>Renard lets users select the targeted language of its their custom
  pipelines. A pipeline can be configured to run in any language, as
  long as each of its steps supports it. Table
  <xref alt="1" rid="tabU003Asteps">1</xref> shows all the currently
  available steps in Renard and their supported languages.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-sparavigna-2015-chaplin">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Sparavigna</surname><given-names>A. C.</given-names></name>
        <name><surname>Marazzato</surname><given-names>R.</given-names></name>
      </person-group>
      <article-title>Analysis of a play by means of CHAPLIN, the characters and places interaction network software</article-title>
      <source>International Journal of Sciences</source>
      <year iso-8601-date="2015">2015</year>
      <volume>4</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.18483/ijSci.662</pub-id>
      <fpage>60</fpage>
      <lpage>68</lpage>
    </element-citation>
  </ref>
  <ref id="ref-metrailler-2023-charnetto">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Métrailler</surname><given-names>C.</given-names></name>
      </person-group>
      <article-title>Charnetto</article-title>
      <year iso-8601-date="2023">2023</year>
      <uri>https://gitlab.com/maned_wolf/charnetto</uri>
    </element-citation>
  </ref>
  <ref id="ref-labatut-2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Labatut</surname><given-names>V.</given-names></name>
        <name><surname>Bost</surname><given-names>X.</given-names></name>
      </person-group>
      <article-title>Extraction and analysis of fictional character networks : A survey</article-title>
      <source>ACM Computing Surveys</source>
      <year iso-8601-date="2019">2019</year>
      <volume>52</volume>
      <pub-id pub-id-type="doi">10.1145/3344548</pub-id>
      <fpage>89</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-park-2013-character_networks">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Park</surname><given-names>G.</given-names></name>
        <name><surname>Kim</surname><given-names>S.</given-names></name>
        <name><surname>Cho</surname><given-names>H.</given-names></name>
      </person-group>
      <article-title>Structural analysis on social network constructed from characters in literature texts</article-title>
      <source>Journal of Computers</source>
      <year iso-8601-date="2013">2013</year>
      <volume>8</volume>
      <pub-id pub-id-type="doi">10.4304/jcp.8.9.2442-2447</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-park-2013-character_networksb">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Park</surname><given-names>G.</given-names></name>
        <name><surname>Kim</surname><given-names>S.</given-names></name>
        <name><surname>Hwang</surname><given-names>H.</given-names></name>
        <name><surname>Cho</surname><given-names>H.</given-names></name>
      </person-group>
      <article-title>Complex system analysis of social networks extracted from literary fictions</article-title>
      <source>International Journal of Machine Learning and Computing</source>
      <year iso-8601-date="2013">2013</year>
      <pub-id pub-id-type="doi">10.7763/IJMLC.2013.V3.282</pub-id>
      <fpage>107</fpage>
      <lpage>111</lpage>
    </element-citation>
  </ref>
  <ref id="ref-rochat-2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Rochat</surname><given-names>Y.</given-names></name>
        <name><surname>Triclot</surname><given-names>M.</given-names></name>
      </person-group>
      <article-title>Les réseaux de personnages de science-fiction : Échantillons de lectures intermédiaires</article-title>
      <source>ReS Futurae</source>
      <year iso-8601-date="2017">2017</year>
      <volume>10</volume>
      <pub-id pub-id-type="doi">10.4000/resf.1183</pub-id>
      <fpage>1183</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-rochat-2014-phd_thesis">
    <element-citation publication-type="thesis">
      <person-group person-group-type="author">
        <name><surname>Rochat</surname><given-names>Y.</given-names></name>
      </person-group>
      <article-title>Character networks and centrality</article-title>
      <publisher-name>Université de Lausanne</publisher-name>
      <year iso-8601-date="2014-12">2014</year><month>12</month>
      <uri>https://serval.unil.ch/resource/serval:BIB_663137B68131.P001/REF.pdf</uri>
    </element-citation>
  </ref>
  <ref id="ref-rochat-2015-character_networks_zola">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Rochat</surname><given-names>Y.</given-names></name>
      </person-group>
      <article-title>Character network analysis of Émile Zola’s Les Rougon-Macquart</article-title>
      <source>Digital humanities 2015</source>
      <year iso-8601-date="2015">2015</year>
      <uri>https://infoscience.epfl.ch/record/210573?ln=en</uri>
    </element-citation>
  </ref>
  <ref id="ref-hagberg-2008-networkx">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Hagbert</surname><given-names>A. A.</given-names></name>
        <name><surname>Schult</surname><given-names>D. A.</given-names></name>
        <name><surname>Swart</surname><given-names>P. J.</given-names></name>
      </person-group>
      <article-title>Exploring network structure, dynamics and function using NetworkX</article-title>
      <source>7th python in science conference (SciPy2008)</source>
      <year iso-8601-date="2008">2008</year>
      <uri>https://www.osti.gov/biblio/960616</uri>
    </element-citation>
  </ref>
  <ref id="ref-vala-2015-character_detection">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Vala</surname><given-names>H.</given-names></name>
        <name><surname>Jurgens</surname><given-names>D.</given-names></name>
        <name><surname>Piper</surname><given-names>A.</given-names></name>
        <name><surname>Ruths</surname><given-names>D.</given-names></name>
      </person-group>
      <article-title>Mr. Bennet, his coachman, and the archbishop walk into a bar but only one of them gets recognized: On the difficulty of detecting characters in literary texts</article-title>
      <source>Conference on empirical methods in natural language processing</source>
      <year iso-8601-date="2015">2015</year>
      <pub-id pub-id-type="doi">10.18653/v1/D15-1088</pub-id>
      <fpage>769</fpage>
      <lpage>774</lpage>
    </element-citation>
  </ref>
</ref-list>
<fn-group>
  <fn id="fn1">
    <label>1</label><p>See
    <ext-link ext-link-type="uri" xlink:href="https://compnet.github.io/Renard/pipeline.html#dynamic-graphs">the
    documentation on dynamic networks</ext-link> for more details.</p>
  </fn>
  <fn id="fn2">
    <label>2</label><p>See
    <ext-link ext-link-type="uri" xlink:href="https://compnet.github.io/Renard/pipeline.html#the-pipeline">the
    documentation</ext-link> for more details on steps requirements.</p>
  </fn>
</fn-group>
</back>
</article>
