<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">7625</article-id>
<article-id pub-id-type="doi">10.21105/joss.07625</article-id>
<title-group>
<article-title>Phitter: A library designed to streamline the process of
fitting andanalyzing probability distributions</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0002-2766-642X</contrib-id>
<name>
<surname>Monterrosa</surname>
<given-names>Sebastián José Herrera</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0000-0390-1558</contrib-id>
<name>
<surname>Pinilla</surname>
<given-names>Carlos Andrés Masmela</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Pontificia Universidad Javeriana</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-03-26">
<day>26</day>
<month>3</month>
<year>2024</year>
</pub-date>
<volume>10</volume>
<issue>109</issue>
<fpage>7625</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>Statistics</kwd>
<kwd>Probability Distributions</kwd>
<kwd>Data Analysis</kwd>
<kwd>Machine Learning</kwd>
<kwd>Simulation</kwd>
<kwd>Monte Carlo</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Phitter is an open-source Python library designed to streamline the
  process of fitting and analyzing probability distributions for
  applications in statistics, data science, operations research, and
  machine learning. It provides a comprehensive catalog of over 80
  continuous and discrete distributions, multiple goodness-of-fit
  measures (Chi-Square, Kolmogorov-Smirnov, and Anderson-Darling),
  interactive visualizations for exploratory data analysis and model
  validation, and detailed modeling guides with spreadsheet
  implementations. By reducing the complexity of distribution fitting,
  Phitter helps researchers and practitioners identify distributions
  that best model their data.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>Fitting probability distributions to empirical data is a
  cornerstone of numerous scientific and engineering disciplines,
  underpinning applications such as stochastic modeling, risk
  assessment, and event simulation
  (<xref alt="Vose, 2008" rid="ref-vose2008risk" ref-type="bibr">Vose,
  2008</xref>). While fitting certain distributions, like the normal
  distribution, is straightforward due to easily derived parameters from
  sample statistics, the task becomes significantly more complex when
  selecting the best-fitting distribution from a large set of candidates
  or when estimating parameters for distributions requiring advanced
  techniques.</p>
  <p>Commercial software packages that automate distribution fitting
  exist, but their cost and proprietary nature restrict access for many
  researchers and practitioners. Within the open-source scientific
  Python ecosystem, the <monospace>scipy.stats</monospace> module
  (<xref alt="Virtanen et al., 2020" rid="ref-2020SciPy-NMeth" ref-type="bibr">Virtanen
  et al., 2020</xref>) provides a robust foundation, offering
  implementations of numerous probability distributions and parameter
  estimation capabilities. However, it requires users to individually
  select and fit each distribution, lacking a unified interface to
  systematically evaluate all distributions against a dataset. Each
  distribution is defined by shape, location, and scale parameters, and
  parameter estimation is typically performed using maximum likelihood
  estimation (MLE). While MLE is highly accurate, it is also
  computationally intensive, especially when applied across many
  candidate distributions.</p>
  <p>To address these challenges, there is a clear need for an
  accessible, open-source Python library tailored for automated
  probability distribution fitting that:</p>
  <list list-type="bullet">
    <list-item>
      <p>Provides implementations for a wide range of common
      distributions.</p>
    </list-item>
    <list-item>
      <p>Employs efficient parameter estimation techniques, prioritizing
      computational speed without sacrificing accuracy.</p>
    </list-item>
    <list-item>
      <p>Offers a user-friendly interface for fitting distributions,
      analyzing results, and visualizing outcomes.</p>
    </list-item>
  </list>
  <p><bold>Phitter</bold> has been developed to meet these requirements,
  offering the scientific community a specialized tool that streamlines
  and standardizes the process of probability distribution fitting. By
  bridging the gap between general-purpose statistical libraries and
  proprietary software, Phitter enhances accessibility and usability for
  researchers and practitioners.</p>
</sec>
<sec id="key-features">
  <title>Key Features</title>
  <list list-type="order">
    <list-item>
      <p>Phitter implements probability distributions as standardized as
      possible according to the following sources:
      (<xref alt="McLaughlin, 2001" rid="ref-mclaughlin2001compendium" ref-type="bibr">McLaughlin,
      2001</xref>;
      <xref alt="Walck &amp; others, 1996" rid="ref-walck1996hand" ref-type="bibr">Walck
      &amp; others, 1996</xref>;
      <xref alt="Wikipedia, 2025" rid="ref-wikiU003AList_of_probability_distributions" ref-type="bibr">Wikipedia,
      2025</xref>)</p>
    </list-item>
    <list-item>
      <p><bold>Accelerated Parameter Estimation:</bold> For a subset of
      implemented distributions, Phitter utilizes direct solving of the
      distribution’s parametric equation system. This approach offers
      significant computational speed advantages compared to iterative
      methods like standard Maximum Likelihood Estimation (MLE),
      particularly beneficial for large datasets. Performance benchmarks
      detailing estimation times are provided
      <ext-link ext-link-type="uri" xlink:href="https://docs-phitter-kernel.netlify.app/documentation/benchmarks/continuous/continuous-parameters-estimation.html">Estimation
      Time Parameters for Continuous Distributions</ext-link>. Where
      direct parametric solutions are not implemented or feasible,
      Phitter seamlessly integrates with and leverages the
      well-established MLE implementation provided by the SciPy library
      (<monospace>scipy.stats.rv_continuous.fit</monospace> and related
      methods). This ensures broad applicability across a wide range of
      distributions while prioritizing speed where possible.</p>
    </list-item>
    <list-item>
      <p><bold>Anderson Darling:</bold> Phitter evaluetes the
      Anderson-Darling distribution according this article
      (<xref alt="Marsaglia &amp; Marsaglia, 2004" rid="ref-marsaglia2004evaluating" ref-type="bibr">Marsaglia
      &amp; Marsaglia, 2004</xref>).</p>
    </list-item>
    <list-item>
      <p><bold>Comprehensive Distribution Documentation:</bold> Phitter
      is accompanied by detailed documentation for both continuous and
      discrete distributions
      <ext-link ext-link-type="uri" xlink:href="https://docs-phitter-kernel.netlify.app/documentation/distributions/continuous-distributions.html">Continuous
      Distributions</ext-link> and
      <ext-link ext-link-type="uri" xlink:href="https://docs-phitter-kernel.netlify.app/documentation/distributions/discrete-distributions.html">Discrete
      Distributions</ext-link>. This documentation outlines the
      mathematical formulations used and provides Excel and Google Sheet
      implementation for each distribution.</p>
    </list-item>
    <list-item>
      <p><bold>Fit characteristics:</bold></p>
    </list-item>
  </list>
  <list list-type="bullet">
    <list-item>
      <p><bold>Extensive Distribution Library:</bold> Access to over 80
      continuous and discrete probability distributions.</p>
    </list-item>
    <list-item>
      <p><bold>Multiple Goodness-of-Fit Tests:</bold> Offers a choice of
      Kolmogorov-Smirnov (K-S), Chi-Square, and Anderson-Darling (A-D)
      tests for quantitative fit evaluation.</p>
    </list-item>
    <list-item>
      <p><bold>Parallel Processing:</bold> Utilizes multiprocessing for
      faster evaluation of multiple distributions, particularly
      effective for large datasets (e.g., 100K+ samples).</p>
    </list-item>
    <list-item>
      <p><bold>Integrated Visualizations:</bold> Provides built-in
      plotting functions (Histogram/PDF overlay, ECDF vs. CDF, Q-Q
      plots) for visual assessment of distribution fits.</p>
    </list-item>
    <list-item>
      <p><bold>Automated Modeling Guides:</bold> Generates detailed
      reports for best-fit distributions, including parameters, key
      formulas (PDF, CDF, PPF), usage recommendations, and
      implementation details.</p>
    </list-item>
  </list>
  <list list-type="order">
    <list-item>
      <label>6.</label>
      <p><bold>Simulation</bold>: Phitter not only incorporates a robust
      set of functionalities for fitting and analyzing over 80
      probability distributions, both continuous and discrete, but also
      offers capabilities for simulating processes and queues: FIFO,
      LIFO and PBS.</p>
    </list-item>
  </list>
</sec>
<sec id="comparison-with-existing-tools">
  <title>Comparison with Existing Tools</title>
  <p>The process of fitting probability distributions to data is a
  fundamental step in various scientific and analytical disciplines. It
  allows for the modeling of random phenomena, enabling tasks such as
  statistical inference, forecasting, and simulation. Several Python
  libraries have been developed to facilitate this process, providing
  tools for identifying the best-fitting theoretical distribution for a
  given dataset. This section describes two such prominent libraries:
  <monospace>distfit</monospace>
  (<xref alt="Taskesen, 2020" rid="ref-Taskesen_distfit_is_a_2020" ref-type="bibr">Taskesen,
  2020</xref>) and <monospace>fitter</monospace>
  (<xref alt="Cokelaer et al., 2024" rid="ref-Thomas2024cokelaer" ref-type="bibr">Cokelaer
  et al., 2024</xref>).</p>
  <sec id="the-distfit-library">
    <title>The <monospace>distfit</monospace> Library</title>
    <p>The <monospace>distfit</monospace> library, created by Erdogan
    Taskesen and released in 2020, is a Python package designed for
    fitting probability density functions to univariate data. It can
    determine the best fit from 89 theoretical distributions using
    metrics like RSS/SSE, Wasserstein, KS, and Energy. Beyond parametric
    fitting, <monospace>distfit</monospace> also supports non-parametric
    methods (quantile and percentile) and discrete fitting using the
    binomial distribution. The library offers functionalities for
    predictions and a range of visualizations, including basic plots, QQ
    plots, and the ability to overlay multiple fitted distributions.
    Notably, <monospace>distfit</monospace> supports parallel computing
    to enhance performance and is available under the MIT License .</p>
  </sec>
  <sec id="the-fitter-library">
    <title>The <monospace>fitter</monospace> Library</title>
    <p>The <monospace>fitter</monospace> library, developed by Thomas
    Cokelaer, is a Python tool for simplifying the process of fitting
    probability distributions to data. It automatically attempts to fit
    a dataset to around 80 distributions from the SciPy package, ranking
    them based on the sum of the square errors (SSE).
    <monospace>fitter</monospace> supports parallelism to speed up the
    fitting process, especially with larger datasets [9, 10, 9]. It also
    provides a standalone command-line application for fitting
    distributions from CSV files. Users can manually specify a subset of
    distributions for fitting if desired. The library is under active
    development and is licensed under the GNU Library or Lesser General
    Public License (LGPL).</p>
  </sec>
  <sec id="speed-comparison-phitter-vs-distfit-vs-fitter">
    <title>Speed Comparison: Phitter vs Distfit vs Fitter</title>
    <p>The following table presents a performance comparison of the
    Phitter, Distfit, and Fitter libraries in terms of parameter
    estimation time using their default configurations. Each library was
    evaluated on normally distributed datasets of varying sizes: 100,
    1,000, 10,000, 100,000, and 1,000,000 samples.</p>
    <table-wrap>
      <table>
        <colgroup>
          <col width="38%" />
          <col width="11%" />
          <col width="11%" />
          <col width="11%" />
          <col width="13%" />
          <col width="16%" />
        </colgroup>
        <thead>
          <tr>
            <th align="left">Library / Sample Size</th>
            <th align="right">100</th>
            <th align="right">1,000</th>
            <th align="right">10,000</th>
            <th align="right">100,000</th>
            <th align="right">1,000,000</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="left"><bold>Phitter</bold></td>
            <td align="right">1.120</td>
            <td align="right">1.818</td>
            <td align="right">9.102</td>
            <td align="right">79.829</td>
            <td align="right">791.674</td>
          </tr>
          <tr>
            <td align="left"><bold>Distfit</bold></td>
            <td align="right">2.604</td>
            <td align="right">5.279</td>
            <td align="right">28.575</td>
            <td align="right">299.398</td>
            <td align="right">2726.630</td>
          </tr>
          <tr>
            <td align="left"><bold>Fitter</bold></td>
            <td align="right">37.252</td>
            <td align="right">30.380</td>
            <td align="right">31.522</td>
            <td align="right">401.644</td>
            <td align="right">1322.134</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <list list-type="bullet">
      <list-item>
        <p><bold>Phitter</bold> tests 75 continuous probability
        distributions.</p>
      </list-item>
      <list-item>
        <p><bold>Distfit</bold> evaluates 85 continuous distributions.
        See
        <ext-link ext-link-type="uri" xlink:href="https://erdogant.github.io/distfit/pages/html/Parametric.html">Distfit
        Parametric Distributions</ext-link>.</p>
      </list-item>
      <list-item>
        <p><bold>Fitter</bold> iterates over all continuous
        distributions available in <monospace>scipy.stats</monospace>,
        automatically excluding those whose parameter estimation exceeds
        30 seconds.</p>
      </list-item>
    </list>
  </sec>
  <sec id="goodness-of-fit-comparison">
    <title>Goodness-of-Fit Comparison</title>
    <list list-type="bullet">
      <list-item>
        <p><bold>Phitter</bold> supports statistical goodness-of-fit
        tests including <bold>Chi-Square</bold>,
        <bold>Kolmogorov–Smirnov</bold>, and
        <bold>Anderson–Darling</bold>.</p>
      </list-item>
      <list-item>
        <p><bold>Distfit</bold>, by default, relies on error-based
        metrics such as <bold>RSS/SSE</bold>, <bold>Wasserstein
        distance</bold>, and <bold>energy distance</bold>. It does not
        perform hypothesis testing unless explicitly instructed to use a
        function from
        <monospace>scipy.stats.goodness_of_fit</monospace>.</p>
      </list-item>
      <list-item>
        <p><bold>Fitter</bold> always reports the
        <bold>Kolmogorov–Smirnov</bold> test statistic and p-value.
        However, its primary selection criterion is the minimization of
        the <bold>sum of squared errors (SSE)</bold>.</p>
      </list-item>
    </list>
  </sec>
</sec>
<sec id="documentation">
  <title>Documentation</title>
  <p>Find the complete Phitter documentation
  <ext-link ext-link-type="uri" xlink:href="https://docs-phitter-kernel.netlify.app/">here</ext-link>.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-marsaglia2004evaluating">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Marsaglia</surname><given-names>George</given-names></name>
        <name><surname>Marsaglia</surname><given-names>John</given-names></name>
      </person-group>
      <article-title>Evaluating the anderson-darling distribution</article-title>
      <source>Journal of statistical software</source>
      <year iso-8601-date="2004">2004</year>
      <volume>9</volume>
      <fpage>1</fpage>
      <lpage>5</lpage>
    </element-citation>
  </ref>
  <ref id="ref-walck1996hand">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Walck</surname><given-names>Christian</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <source>Hand-book on statistical distributions for experimentalists</source>
      <publisher-name>Stockholms universitet</publisher-name>
      <year iso-8601-date="1996">1996</year>
    </element-citation>
  </ref>
  <ref id="ref-mclaughlin2001compendium">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>McLaughlin</surname><given-names>Michael P</given-names></name>
      </person-group>
      <source>A compendium of common probability distributions</source>
      <publisher-name>Michael P. McLaughlin</publisher-name>
      <year iso-8601-date="2001">2001</year>
    </element-citation>
  </ref>
  <ref id="ref-vose2008risk">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Vose</surname><given-names>David</given-names></name>
      </person-group>
      <source>Risk analysis: A quantitative guide</source>
      <publisher-name>John Wiley &amp; Sons</publisher-name>
      <year iso-8601-date="2008">2008</year>
    </element-citation>
  </ref>
  <ref id="ref-2020SciPy-NMeth">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
        <name><surname>Haberland</surname><given-names>Matt</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Burovski</surname><given-names>Evgeni</given-names></name>
        <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
        <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
        <name><surname>Bright</surname><given-names>Jonathan</given-names></name>
        <name><surname>van der Walt</surname><given-names>Stéfan J.</given-names></name>
        <name><surname>Brett</surname><given-names>Matthew</given-names></name>
        <name><surname>Wilson</surname><given-names>Joshua</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>Mayorov</surname><given-names>Nikolay</given-names></name>
        <name><surname>Nelson</surname><given-names>Andrew R. J.</given-names></name>
        <name><surname>Jones</surname><given-names>Eric</given-names></name>
        <name><surname>Kern</surname><given-names>Robert</given-names></name>
        <name><surname>Larson</surname><given-names>Eric</given-names></name>
        <name><surname>Carey</surname><given-names>C J</given-names></name>
        <name><surname>Polat</surname><given-names>İlhan</given-names></name>
        <name><surname>Feng</surname><given-names>Yu</given-names></name>
        <name><surname>Moore</surname><given-names>Eric W.</given-names></name>
        <name><surname>VanderPlas</surname><given-names>Jake</given-names></name>
        <name><surname>Laxalde</surname><given-names>Denis</given-names></name>
        <name><surname>Perktold</surname><given-names>Josef</given-names></name>
        <name><surname>Cimrman</surname><given-names>Robert</given-names></name>
        <name><surname>Henriksen</surname><given-names>Ian</given-names></name>
        <name><surname>Quintero</surname><given-names>E. A.</given-names></name>
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Archibald</surname><given-names>Anne M.</given-names></name>
        <name><surname>Ribeiro</surname><given-names>Antônio H.</given-names></name>
        <name><surname>Pedregosa</surname><given-names>Fabian</given-names></name>
        <name><surname>van Mulbregt</surname><given-names>Paul</given-names></name>
        <string-name>SciPy 1.0 Contributors</string-name>
      </person-group>
      <article-title>SciPy 1.0: Fundamental Algorithms for Scientific Computing in Python</article-title>
      <source>Nature Methods</source>
      <year iso-8601-date="2020">2020</year>
      <volume>17</volume>
      <pub-id pub-id-type="doi">10.1038/s41592-019-0686-2</pub-id>
      <fpage>261</fpage>
      <lpage>272</lpage>
    </element-citation>
  </ref>
  <ref id="ref-wikiU003AList_of_probability_distributions">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Wikipedia</surname></name>
      </person-group>
      <article-title>List of probability distributions — Wikipedia, the free encyclopedia</article-title>
      <publisher-name>http://en.wikipedia.org/w/index.php?title=List%20of%20probability%20distributions&amp;oldid=1282462828</publisher-name>
      <year iso-8601-date="2025">2025</year>
    </element-citation>
  </ref>
  <ref id="ref-Taskesen_distfit_is_a_2020">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Taskesen</surname><given-names>Erdogan</given-names></name>
      </person-group>
      <article-title>distfit is a python library for probability density fitting.</article-title>
      <year iso-8601-date="2020-01">2020</year><month>01</month>
      <uri>https://erdogant.github.io/distfit</uri>
    </element-citation>
  </ref>
  <ref id="ref-Thomas2024cokelaer">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Cokelaer</surname><given-names>Thomas</given-names></name>
        <name><surname>Kravchenko</surname><given-names>Arseny</given-names></name>
        <name><surname>lahdjirayhan</surname></name>
        <name><surname>msat59</surname></name>
        <name><surname>Ferrari</surname><given-names>Vitor</given-names></name>
        <name><surname>Varma</surname><given-names>Ashutosh</given-names></name>
        <name><surname>L</surname><given-names>Brian</given-names></name>
        <name><surname>Stringari</surname><given-names>Caio Eadi</given-names></name>
        <name><surname>Brueffer</surname><given-names>Christian</given-names></name>
        <name><surname>Broda</surname><given-names>Eike</given-names></name>
        <name><surname>Pruesse</surname><given-names>Elmar</given-names></name>
        <name><surname>Singaravelan</surname><given-names>Karthikeyan</given-names></name>
        <name><surname>Russo</surname><given-names>Stefano Alberto</given-names></name>
        <name><surname>Li</surname><given-names>Zhengyi</given-names></name>
        <name><surname>padgham</surname></name>
        <name><surname>negodfre</surname></name>
      </person-group>
      <source>Cokelaer/fitter: v1.7.1</source>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2024-06-24">2024</year><month>06</month><day>24</day>
      <uri>https://zenodo.org/doi/10.5281/zenodo.12514960</uri>
      <pub-id pub-id-type="doi">10.5281/ZENODO.12514960</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
