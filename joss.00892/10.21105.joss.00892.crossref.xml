<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/4.4.0" xmlns:ai="http://www.crossref.org/AccessIndicators.xsd" xmlns:rel="http://www.crossref.org/relations.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="4.4.0" xsi:schemaLocation="http://www.crossref.org/schema/4.4.0 http://www.crossref.org/schemas/crossref4.4.0.xsd">
  <head>
    <doi_batch_id>7fc6267ceefe4c8e2c187de0860a85f2</doi_batch_id>
    <timestamp>20181018163325</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>http://joss.theoj.org</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>10</month>
          <year>2018</year>
        </publication_date>
        <journal_volume>
          <volume>3</volume>
        </journal_volume>
        <issue>30</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>YAD: A Learning-based Inductive Logic Programming Tool</title>
        </titles>
        <contributors><person_name sequence="first" contributor_role="author"><given_name>Ali</given_name><surname>Kamandi</surname></person_name><person_name sequence="additional" contributor_role="author"><given_name>Hamed</given_name><surname>Karimi</surname><ORCID>http://orcid.org/0000-0002-9132-593X</ORCID></person_name></contributors>
        <publication_date>
          <month>10</month>
          <day>18</day>
          <year>2018</year>
        </publication_date>
        <pages>
          <first_page>892</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.00892</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">https://doi.org/10.6084/m9.figshare.7189043</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/892</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.00892</doi>
          <resource>http://joss.theoj.org/papers/10.21105/joss.00892</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">http://www.theoj.org/openjournals/joss-papers/joss.00892/10.21105.joss.00892.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="ref1">
            <doi>10.1007/BF03037227</doi>
          </citation>
          <citation key="ref2">
            <unstructured_citation>1. Introduction. 1.1. Inductive concept learning. 1.2. Background knowledge. 1.3. Language bias. 1.4. Inductive logic programming. 1.5. Imperfect data. 1.6. Applications of ILP &#x2013; 2. Inductive logic programming. 2.1. Logic programming and deductive database terminology. 2.2. Empirical ILP. 2.3. Interactive ILP. 2.4. Structuring the hypothesis space &#x2013; 3. Basic ILP techniques. 3.1. Generalization techniques. 3.2. Specialization techniques &#x2013; 4. An overview of empirical ILP systems. 4.1. An overview of FOIL. 4.2. An overview of GOLEM. 4.3. An overview of MOBAL. 4.4. Other empirical ILP systems &#x2013; 5. LINUS: Using attribute-value learners in an ILP framework. 5.1. An outline of the LINUS environment. 5.2. Attribute-value learning. 5.3. Using background knowledge in learning. 5.4. The LINUS algorithm. 5.5. The complexity of learning constrained DHDB clauses. 5.6. Weakening the language bias. 5.7. Learning determinate clauses with DINUS., Lavra&#x10D;, Nada. and D&#x17E;eroski, Sa&#x161;o, 0134578708, 293, E. Horwood, Inductive logic programming : techniques and applications, 1994</unstructured_citation>
          </citation>
          <citation key="ref3">
            <doi>10.1007/978-3-642-13840-9_13</doi>
          </citation>
          <citation key="ref4">
            <doi>10.1109/ICWR.2018.8387247</doi>
          </citation>
          <citation key="ref5">
            <unstructured_citation>Srinivasan, Ashwin, The Aleph Manual, 2007</unstructured_citation>
          </citation>
          <citation key="ref6">
            <doi>10.1007/3-540-56602-3_124</doi>
          </citation>
          <citation key="ref7">
            <doi>10.1007/BF00117105</doi>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
