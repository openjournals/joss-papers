<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">3742</article-id>
<article-id pub-id-type="doi">10.21105/joss.03742</article-id>
<title-group>
<article-title>OpenCMP: An Open-Source Computational Multiphysics
Package</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-7328-775X</contrib-id>
<name>
<surname>Monte</surname>
<given-names>Elizabeth Julia</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-0233-0172</contrib-id>
<name>
<surname>Vasile</surname>
<given-names>Alexandru Andrei</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-1745-9454</contrib-id>
<name>
<surname>Lowman</surname>
<given-names>James</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">0000-0002-1772-0376</contrib-id>
<name>
<surname>Abukhdeir</surname>
<given-names>Nasser Mohieddin</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Chemical Engineering, University of Waterloo,
Ontario, Canada</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Department of Physics and Astronomy, University of
Waterloo, Ontario, Canada</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<volume>7</volume>
<issue>73</issue>
<fpage>3742</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>finite element method</kwd>
<kwd>discontinuous Galerkin FEM</kwd>
<kwd>computational multiphysics</kwd>
<kwd>computational fluid dynamics</kwd>
<kwd>diffuse interface method</kwd>
<kwd>immersed boundary method</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>OpenCMP is a computational multiphysics software package based on
  the finite element method
  (<xref alt="Ferziger &amp; Perić, 2002" rid="ref-Ferziger2002" ref-type="bibr">Ferziger
  &amp; Perić, 2002</xref>). It is primarily intended for
  physicochemical processes in which fluid convection plays a
  significant role. OpenCMP uses the NGSolve finite element library
  (<xref alt="Schöberl, n.d." rid="ref-ngsolve" ref-type="bibr">Schöberl,
  n.d.</xref>) for spatial discretization and provides a configuration
  file-based interface for pre-implemented models and time
  discretization schemes. It also integrates with Netgen
  (<xref alt="Schöberl, n.d." rid="ref-ngsolve" ref-type="bibr">Schöberl,
  n.d.</xref>) and Gmsh
  (<xref alt="Geuzaine &amp; Remacle, 2009" rid="ref-Geuzaine2009" ref-type="bibr">Geuzaine
  &amp; Remacle, 2009</xref>) for geometry construction and meshing.
  Additionally, it provides users with built-in functionality for
  post-processing, error analysis, and data export for visualisation
  using Netgen
  (<xref alt="Schöberl, n.d." rid="ref-ngsolve" ref-type="bibr">Schöberl,
  n.d.</xref>) or ParaView
  (<xref alt="Ahrens et al., 2005" rid="ref-Ahrens2005" ref-type="bibr">Ahrens
  et al., 2005</xref>).</p>
  <p>OpenCMP development follows the principles of ease of use,
  performance, and extensibility. The configuration file-based user
  interface is intended to be concise, readable, and intuitive.
  Furthermore, the code base is structured and documented
  (<xref alt="Monte, Elizabeth J, 2021" rid="ref-Monte2021a" ref-type="bibr">Monte,
  Elizabeth J, 2021</xref>) such that experienced users with appropriate
  background can add their own models with minimal modifications to
  existing code. The finite element method enables the use of high-order
  polynomial interpolants for increased simulation accuracy, however,
  continuous finite element methods suffer from stability and accuracy
  (conservation) for fluid convection-dominated problems. OpenCMP
  addresses this by providing discontinuous Galerkin method
  (<xref alt="Cockburn et al., 2000" rid="ref-Cockburn2000" ref-type="bibr">Cockburn
  et al., 2000</xref>) solvers, which are locally conservative and
  improve simulation stability for convection-dominated problems.
  Finally, OpenCMP implements the diffuse interface or diffuse domain
  method
  (<xref alt="Monte et al., 2021" rid="ref-Monte2021" ref-type="bibr">Monte
  et al., 2021</xref>;
  <xref alt="Nguyen et al., 2018" rid="ref-Nguyen2018" ref-type="bibr">Nguyen
  et al., 2018</xref>), which a type of continuous immersed boundary
  method
  (<xref alt="Mittal &amp; Iaccarino, 2005" rid="ref-Mittal2005" ref-type="bibr">Mittal
  &amp; Iaccarino, 2005</xref>). This method enables complex domains to
  be meshed by non-conforming structured meshes for improved simulation
  stability and reduced computational complexity, under certain
  conditions
  (<xref alt="Monte et al., 2021" rid="ref-Monte2021" ref-type="bibr">Monte
  et al., 2021</xref>).</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>Simulation-based analysis continues to revolutionize the
  engineering design process. Simulations offer a fast, inexpensive, and
  safe alternative to physical prototyping for preliminary design
  screening and optimization. Simulations can also offer more detailed
  insight into the physical phenomena of interest than is feasible from
  experimentation. Computational multiphysics is an area of particular
  importance since coupled physical and chemical processes are
  ubiquitous in science and engineering.</p>
  <p>However, there are several barriers to more wide spread use of
  simulations. One such barrier is the lack of user-friendly finite
  element-based open-source simulation software. Many of the most
  widely-used computational multiphysics software packages, such as
  COMSOL Multiphysics
  (<xref alt="COMSOL Multiphysics®, n.d." rid="ref-comsol" ref-type="bibr"><italic>COMSOL
  Multiphysics®</italic>, n.d.</xref>) or ANSYS Fluent
  (<xref alt="Ansys® Fluent, n.d." rid="ref-fluent" ref-type="bibr"><italic>Ansys®
  Fluent</italic>, n.d.</xref>), are closed-source and cost-prohibitive.
  Furthermore, the predominance of the finite volume method for fluid
  dynamics simulations inherently limits simulation accuracy for a given
  mesh compared to the finite element method
  (<xref alt="Ferziger &amp; Perić, 2002" rid="ref-Ferziger2002" ref-type="bibr">Ferziger
  &amp; Perić, 2002</xref>). Many high-quality open-source packages
  exist which use the finite element method, such as the computational
  multiphysics software MOOSE
  (<xref alt="Permann et al., 2020" rid="ref-Permann2020" ref-type="bibr">Permann
  et al., 2020</xref>), the finite element libraries NGSolve
  (<xref alt="Schöberl, n.d." rid="ref-ngsolve" ref-type="bibr">Schöberl,
  n.d.</xref>) or FEniCS
  (<xref alt="Alnaes et al., 2015" rid="ref-Alnaes2015" ref-type="bibr">Alnaes
  et al., 2015</xref>). However, these packages require that the user
  has a relatively detailed understanding of the finite element method,
  such as derivation of the weak formulation of the problem, along with
  programming experience. Alternatively, open-source finite volume-based
  packages such OpenFOAM
  (<xref alt="OpenFOAM V9 User Guide, n.d." rid="ref-OpenFOAM" ref-type="bibr"><italic>OpenFOAM
  V9 User Guide</italic>, n.d.</xref>) and SU2
  (<xref alt="Economon et al., 2016" rid="ref-SU2" ref-type="bibr">Economon
  et al., 2016</xref>) are more accessible to the broader scientific and
  engineering community in that they require a less detailed
  understanding of numerical methods and programming, instead requiring
  an understanding of the command line interface (CLI) and configuration
  through a set of configuration files.</p>
  <p>A second barrier is the complex geometries inherent to many
  real-world problems. Conformal meshing of these complex geometries is
  time and labour intensive and frequently requires user-interaction,
  making conformal mesh-based simulations infeasible for high-throughput
  design screening of many industrially-relevant processes
  (<xref alt="Yu et al., 2015" rid="ref-Yu2015" ref-type="bibr">Yu et
  al., 2015</xref>). A possible solution is the use of immersed boundary
  methods
  (<xref alt="Mittal &amp; Iaccarino, 2005" rid="ref-Mittal2005" ref-type="bibr">Mittal
  &amp; Iaccarino, 2005</xref>) to allow the use of non-conforming
  structured meshes - simple and fast to generate - for any geometry.
  Use of structured meshes can also potentially improve simulation
  stability compared to unstructured meshes
  (<xref alt="Yu et al., 2015" rid="ref-Yu2015" ref-type="bibr">Yu et
  al., 2015</xref>). The diffuse interface has been shown by Monte et
  al. (<xref alt="2021" rid="ref-Monte2021" ref-type="bibr">2021</xref>)
  to significantly speed-up inherently low accuracy simulations - such
  as those used for preliminary design screening and optimization -
  compared to conformal mesh-based simulations. Providing an easy-to-use
  publicly available implementation of this method would enable broader
  use by the research community and further development.</p>
  <p>The goal of OpenCMP is to fill this evident need for an open-source
  computational multiphysics package which is user-friendly, based on
  the finite element method, and which implements the diffuse interface
  method. OpenCMP is built on top of the NGSolve finite element library
  (<xref alt="Schöberl, n.d." rid="ref-ngsolve" ref-type="bibr">Schöberl,
  n.d.</xref>) to take advantage of its extensive finite element spaces,
  high performance solvers, and preconditioners. OpenCMP provides
  pre-implemented models and a configuration file-based user interface
  in order to be accessible to the general simulation community, not
  just finite element experts. The user interface is designed to be
  intuitive, readable, and requires no programming experience - solely
  knowledge of the CLI. Users must choose the model that suites their
  application, but need no experience with the actual numerical
  implementation of said model. Finally, OpenCMP provides a publicly
  available implementation of the diffuse interface method with support
  for stabilized Dirichlet boundary conditions
  (<xref alt="Nguyen et al., 2018" rid="ref-Nguyen2018" ref-type="bibr">Nguyen
  et al., 2018</xref>).</p>
</sec>
<sec id="features">
  <title>Features</title>
  <p>The table below summarizes the current capabilities of OpenCMP. The
  numerical solvers for each of these models have been verified using
  common benchmarks
  (<xref alt="Monte, Elizabeth J, 2021" rid="ref-Monte2021a" ref-type="bibr">Monte,
  Elizabeth J, 2021</xref>). Future work on OpenCMP will focus on adding
  models - for multi-phase flow, turbulence, and heat transfer - and
  enabling running simulations in parallel over multiple nodes with MPI
  (<xref alt="Message Passing Interface Forum, 2015" rid="ref-mpi" ref-type="bibr">Message
  Passing Interface Forum, 2015</xref>).</p>
  <table-wrap>
    <table>
      <colgroup>
        <col width="22%" />
        <col width="78%" />
      </colgroup>
      <thead>
        <tr>
          <th>Feature</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>Meshing</td>
          <td>Accepts Netgen
          (<xref alt="Schöberl, n.d." rid="ref-ngsolve" ref-type="bibr">Schöberl,
          n.d.</xref>) or Gmsh
          (<xref alt="Geuzaine &amp; Remacle, 2009" rid="ref-Geuzaine2009" ref-type="bibr">Geuzaine
          &amp; Remacle, 2009</xref>) meshes</td>
        </tr>
        <tr>
          <td>Numerical Methods</td>
          <td>Standard continuous Galerkin finite element method</td>
        </tr>
        <tr>
          <td></td>
          <td>Discontinuous Galerkin finite element method</td>
        </tr>
        <tr>
          <td></td>
          <td>Diffuse interface method</td>
        </tr>
        <tr>
          <td>Models</td>
          <td>Poisson (Heat) equation</td>
        </tr>
        <tr>
          <td></td>
          <td>Stokes equations</td>
        </tr>
        <tr>
          <td></td>
          <td>Incompressible Navier-Stokes (INS) equations</td>
        </tr>
        <tr>
          <td></td>
          <td>Multicomponent Mixture INS equations</td>
        </tr>
        <tr>
          <td>Time Schemes</td>
          <td>First-, second-, and third- order discretizations</td>
        </tr>
        <tr>
          <td></td>
          <td>Adaptive time-stepping</td>
        </tr>
        <tr>
          <td>Solvers</td>
          <td>Direct or iterative solvers</td>
        </tr>
        <tr>
          <td></td>
          <td>Direct, Jacobi, or multigrid preconditioners</td>
        </tr>
        <tr>
          <td></td>
          <td>Oseen
          (<xref alt="Cockburn et al., 2003" rid="ref-Cockburn2003" ref-type="bibr">Cockburn
          et al., 2003</xref>) or IMEX
          (<xref alt="Ascher et al., 1995" rid="ref-Ascher1995" ref-type="bibr">Ascher
          et al., 1995</xref>) linearization of nonlinear models</td>
        </tr>
        <tr>
          <td>Post-Processing</td>
          <td>Error norms calculated based on reference solutions</td>
        </tr>
        <tr>
          <td></td>
          <td>Mesh and polynomial refinement convergence tests</td>
        </tr>
        <tr>
          <td></td>
          <td>General simulation parameters (surface traction,
          divergence of velocity…)</td>
        </tr>
        <tr>
          <td></td>
          <td>Exports results to Netgen
          (<xref alt="Schöberl, n.d." rid="ref-ngsolve" ref-type="bibr">Schöberl,
          n.d.</xref>) or ParaView
          (<xref alt="Ahrens et al., 2005" rid="ref-Ahrens2005" ref-type="bibr">Ahrens
          et al., 2005</xref>) format</td>
        </tr>
        <tr>
          <td>Performance</td>
          <td>Multi-threading</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <p>Further information, including
  <ext-link ext-link-type="uri" xlink:href="https://opencmp.io/getting_started/installation_guide.html">installation
  instructions</ext-link> and
  <ext-link ext-link-type="uri" xlink:href="https://opencmp.io/tutorials/index.html">tutorials</ext-link>
  can be found on the OpenCMP
  <ext-link ext-link-type="uri" xlink:href="https://opencmp.io/">website</ext-link>.
  The tutorials are intended to guide new users through the various
  features offered in OpenCMP. Notes on the
  <ext-link ext-link-type="uri" xlink:href="https://opencmp.io/mathematical_notes/index.html">mathematical
  foundations</ext-link> of the various models and
  <ext-link ext-link-type="uri" xlink:href="https://opencmp.io/source/modules.html">code
  documentation</ext-link> are also provided.</p>
  <p>Software testing is provided through integration tests, which
  confirm the accuracy of the implemented models and time discretization
  schemes, and unit tests which currently offer 72% line coverage.
  Further information regarding performance verification of OpenCMP is
  given by Monte, Elizabeth J
  (<xref alt="2021" rid="ref-Monte2021a" ref-type="bibr">2021</xref>).</p>
</sec>
<sec id="user-interface">
  <title>User Interface</title>
  <p>Drawing inspiration from packages like
  <ext-link ext-link-type="uri" xlink:href="https://openfoam.org/">OpenFOAM</ext-link>
  and
  <ext-link ext-link-type="uri" xlink:href="https://su2code.github.io/">SU2</ext-link>,
  the OpenCMP user interface is organized around configuration files and
  the CLI. Each simulation requires its own directory to hold its
  configuration files and outputs. This is known as the run directory or
  <monospace>run_dir/</monospace>. The standard layout of this directory
  is shown below.</p>
  <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/images/user_interface.pdf" />
  <p>The main directory and each subdirectory contain a configuration
  file (e.g., <monospace>bc_config</monospace>). These are plaintext
  files that specify the simulation parameters and run conditions.</p>
  <p>The configuration file in the main directory contains general
  information about the simulation including which model, mesh, finite
  element spaces, and solver should be used. It also contains
  information about how the simulation should be executed such as the
  level of detail in the output messages and the number of threads to
  use.</p>
  <p>The <monospace>bc_dir/</monospace> subdirectory contains
  information about the boundary conditions. Its configuration file
  specifies the type and value of each boundary condition. This
  subdirectory also contains files describing boundary condition data if
  a boundary condition value is to be loaded from file instead of given
  in closed form.</p>
  <p>The <monospace>ic_dir</monospace> subdirectory holds information
  about the initial conditions. Its configuration file specifies the
  value of the initial condition for each model variable. Like
  <monospace>bc_dir/</monospace>, <monospace>ic_dir/</monospace> may
  contain additional files from which the initial condition data is
  loaded during the simulation.</p>
  <p>The <monospace>model_dir/</monospace> subdirectory contains
  information about model parameters and model functions. Its
  configuration file specifies the values of any model parameters or
  functions for each model variable and the subdirectory may hold
  additional data files to be loaded during the simulation.</p>
  <p>The <monospace>ref_sol_dir/</monospace> subdirectory contains
  information about the error analysis to be conducted on the final
  simulation result. Its configuration file specifies what error metrics
  should be computed during post-processing. This configuration file
  also contains the reference solutions the results should be compared
  against, either in closed form or as references to other files in the
  subdirectory that are loaded during post-processing.</p>
  <p>The <monospace>output/</monospace> subdirectory contains the saved
  simulation data. It does not need to be created before running the
  simulation, it will be generated automatically if results should be
  saved to file.</p>
</sec>
<sec id="examples-of-usage">
  <title>Examples of Usage</title>
  <p>Several examples of usage of OpenCMP are given by Monte, Elizabeth
  J (<xref alt="2021" rid="ref-Monte2021a" ref-type="bibr">2021</xref>)
  and also available via its
  <ext-link ext-link-type="uri" xlink:href="https://opencmp.io/tutorials/">website</ext-link>.
  Three relevant examples are summarized here: multi-component
  incompressible flow (transient 2D,
  <ext-link ext-link-type="uri" xlink:href="https://opencmp.io/tutorials/tutorial_8.html">Tutorial
  8</ext-link>), using the diffuse interface method to approximate
  complex geometries (steady-state 3D,
  <ext-link ext-link-type="uri" xlink:href="https://opencmp.io/tutorials/tutorial_9.html">Tutorial
  9</ext-link>), and incompressible flow around an immersed cylinder
  (steady-state 3D,
  <ext-link ext-link-type="uri" xlink:href="https://opencmp.io/tutorials/tutorial_10.html">Tutorial
  10</ext-link>).</p>
  <p><ext-link ext-link-type="uri" xlink:href="https://opencmp.io/tutorials/tutorial_8.html">Tutorial
  8</ext-link> demonstrates the usage of OpenCMP to solve a multiphysics
  problem, two-dimensional transient multi-component incompressible flow
  around a set of immersed circular objects within a rectangular
  channel, shown below.</p>
  <p>The mixture is composed of two components (A, B) where A undergoes
  an irreversible reaction A → B. A parabolic inlet flow of pure A is
  imposed, such that the mixture undergoes convection, reaction, and
  molecular diffusion throughout the channel. Sample simulation results
  of the steady-state are shown resulting from a cosine ramp of the
  inlet velocity an initial condition with no flow and pure A.</p>
  <graphic mimetype="image" mime-subtype="png" xlink:href="media/images/tutorial_8_results_3s_combined.png" />
  <p><ext-link ext-link-type="uri" xlink:href="https://opencmp.io/tutorials/tutorial_9.html">Tutorial
  9</ext-link> demonstrates how to use the diffuse interface method to
  approximate complex geometries with nonconformal structured
  quadrilateral/hexahedral meshes, versus the use of a traditional
  unstructured mesh which conforms to the complex geometry boundary. The
  sample problem is based on a simulation of heat transfer within an LED
  heat sink
  (<xref alt="Monte et al., 2021" rid="ref-Monte2021" ref-type="bibr">Monte
  et al., 2021</xref>), with a geometry shown below.</p>
  <p>The base of the heat sink is exposed to a spatially varying heat
  flux profile, corresponding to heat generated by an LED assembly, with
  convective heat transfer conditions assumed on the exterior fins. A
  script is provided for ease of post-processing visualization, showing
  the diffuse-interface boundaries (comparable to the geometry above)
  and steady-state temperature profile.</p>
  <graphic mimetype="image" mime-subtype="png" xlink:href="media/images/tutorial_9_combined.png" />
  <p><ext-link ext-link-type="uri" xlink:href="https://opencmp.io/tutorials/tutorial_10.html">Tutorial
  10</ext-link> demonstrate using OpenCMP to perform a standard
  benchmark for 3D flow around an immersed cylinder
  (<xref alt="Bayraktar et al., 2012" rid="ref-Bayraktar2012" ref-type="bibr">Bayraktar
  et al., 2012</xref>) under laminar flow conditions. Both continuous
  and discontinuous Galerkin finite element solver configurations are
  provided, defaulting to the continuous Galerkin variation due to
  reduced memory constraints. The geometry involves an immersed cylinder
  in square channel with parabolic inlet velocity resulting in Re=20.
  This example also uses the built-in error analysis functionality of
  OpenCMP to automatically compute the force vector on the immersed
  cylinder through integration of the surface traction over its
  boundary. This facilitates the calculation of the resulting drag and
  lift forces on the immersed cylinder.</p>
  <p>Visualizations of the three-dimensional steady-state velocity field
  are shown below and include side and top view cross-sections with line
  integral convolution rendering of the velocity field. Additionally,
  velocity streamlines are shown with a background cross-section
  indicating pressure along the channel.</p>
  <graphic mimetype="image" mime-subtype="png" xlink:href="media/images/tutorial_10_combined.png" />
  <p>Several additional examples of usage of OpenCMP in tutorial form
  are available via the
  <ext-link ext-link-type="uri" xlink:href="https://opencmp.io/tutorials/">website</ext-link>.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The authors would like to thank Prof. Sander Rhebergen for useful
  discussions regarding the discontinuous Galerkin method and
  Prof. Joachim Schöberl for useful discussions regarding IMEX time
  integration, preconditioning, and usage of the NGSolve finite element
  library. This research was supported by the Natural Sciences and
  Engineering Research Council (NSERC) of Canada and Compute Canada.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-SU2">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Economon</surname><given-names>Thomas D.</given-names></name>
        <name><surname>Palacios</surname><given-names>Francisco</given-names></name>
        <name><surname>Copeland</surname><given-names>Sean R.</given-names></name>
        <name><surname>Lukaczyk</surname><given-names>Trent W.</given-names></name>
        <name><surname>Alonso</surname><given-names>Juan J.</given-names></name>
      </person-group>
      <article-title>SU2: An open-source suite for multiphysics simulation and design</article-title>
      <source>AIAA Journal</source>
      <year iso-8601-date="2016">2016</year>
      <volume>54</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.2514/1.J053813</pub-id>
      <fpage>828</fpage>
      <lpage>846</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Bayraktar2012">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bayraktar</surname><given-names>Evren</given-names></name>
        <name><surname>Mierka</surname><given-names>Otto</given-names></name>
        <name><surname>Turek</surname><given-names>Stefan</given-names></name>
      </person-group>
      <article-title>Benchmark computations of 3D laminar flow around a cylinder with CFX, OpenFOAM and FeatFlow</article-title>
      <source>International Journal of Computational Science and Engineering</source>
      <publisher-name>Inderscience Publishers Ltd</publisher-name>
      <year iso-8601-date="2012">2012</year>
      <volume>7</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1504/ijcse.2012.048245</pub-id>
      <fpage>253</fpage>
      <lpage>266</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Nguyen2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Nguyen</surname><given-names>Lam H.</given-names></name>
        <name><surname>Stoter</surname><given-names>Stein K. F.</given-names></name>
        <name><surname>Ruess</surname><given-names>Martin</given-names></name>
        <name><surname>Sanchez Uribe</surname><given-names>Manuel A.</given-names></name>
        <name><surname>Schillinger</surname><given-names>Dominik</given-names></name>
      </person-group>
      <article-title>The diffuse Nitsche method: Dirichlet constraints on phase-field boundaries</article-title>
      <source>Int. J. Numer. Methods Eng.</source>
      <year iso-8601-date="2018">2018</year>
      <volume>113</volume>
      <issue>4</issue>
      <pub-id pub-id-type="doi">10.1002/nme.5628</pub-id>
      <fpage>601</fpage>
      <lpage>633</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Ferziger2002">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Ferziger</surname><given-names>J. H.</given-names></name>
        <name><surname>Perić</surname><given-names>M.</given-names></name>
      </person-group>
      <source>Computational methods for fluid dynamics</source>
      <publisher-name>Springer-Verlag</publisher-name>
      <year iso-8601-date="2002">2002</year>
      <edition>3rd</edition>
      <isbn>3-540-42074-6</isbn>
    </element-citation>
  </ref>
  <ref id="ref-ngsolve">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Schöberl</surname><given-names>J.</given-names></name>
      </person-group>
      <article-title>Netgen/NGSolve</article-title>
      <publisher-name>Online</publisher-name>
      <date-in-citation content-type="access-date"><year iso-8601-date="2022-04-21">2022</year><month>04</month><day>21</day></date-in-citation>
      <uri>https://ngsolve.org/</uri>
    </element-citation>
  </ref>
  <ref id="ref-Geuzaine2009">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Geuzaine</surname><given-names>C.</given-names></name>
        <name><surname>Remacle</surname><given-names>J.-F.</given-names></name>
      </person-group>
      <article-title>Gmsh: A three-dimensional finite element mesh generator with built-in pre- and post-processing facilities</article-title>
      <source>International Journal for Numerical Methods in Engineering</source>
      <year iso-8601-date="2009">2009</year>
      <volume>79</volume>
      <issue>11</issue>
      <pub-id pub-id-type="doi">10.1002/nme.2579</pub-id>
      <fpage>1309</fpage>
      <lpage>1331</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Ahrens2005">
    <element-citation publication-type="report">
      <person-group person-group-type="author">
        <name><surname>Ahrens</surname><given-names>J.</given-names></name>
        <name><surname>Geveci</surname><given-names>B.</given-names></name>
        <name><surname>Law</surname><given-names>C.</given-names></name>
      </person-group>
      <article-title>ParaView: An end-user tool for large data visualization</article-title>
      <publisher-name>Los Alamos National Laboratory</publisher-name>
      <publisher-loc>Los Alamos, NM, USA</publisher-loc>
      <year iso-8601-date="2005">2005</year>
      <pub-id pub-id-type="doi">10.1016/b978-012387582-2/50038-1</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Cockburn2000">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Cockburn</surname><given-names>B.</given-names></name>
        <name><surname>Karniadakis</surname><given-names>G. E.</given-names></name>
        <name><surname>Shu</surname><given-names>C.-W.</given-names></name>
      </person-group>
      <article-title>Discontinuous Galerkin methods: Theory, computation and applications</article-title>
      <publisher-name>Springer-Verlag</publisher-name>
      <year iso-8601-date="2000">2000</year>
      <edition>1st</edition>
      <isbn>3-540-66787-3</isbn>
      <fpage>3</fpage>
      <lpage>50</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Monte2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Monte</surname><given-names>Elizabeth J</given-names></name>
        <name><surname>Lowman</surname><given-names>James</given-names></name>
        <name><surname>Abukhdeir</surname><given-names>Nasser Mohieddin</given-names></name>
      </person-group>
      <article-title>A diffuse interface method for simulation-based screening of heat transfer processes with complex geometries</article-title>
      <source>The Canadian Journal of Chemical Engineering</source>
      <publisher-name>Wiley Online Library</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <pub-id pub-id-type="doi">10.1002/cjce.24320</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Monte2021a">
    <element-citation publication-type="thesis">
      <person-group person-group-type="author">
        <string-name>Monte, Elizabeth J</string-name>
      </person-group>
      <article-title>OpenCMP: An open-source computational multiphysics package</article-title>
      <publisher-name>UWSpace</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <uri>http://hdl.handle.net/10012/17239</uri>
    </element-citation>
  </ref>
  <ref id="ref-Mittal2005">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Mittal</surname><given-names>R.</given-names></name>
        <name><surname>Iaccarino</surname><given-names>G.</given-names></name>
      </person-group>
      <article-title>Immersed boundary methods</article-title>
      <source>Annual Review of Fluid Mechanics</source>
      <year iso-8601-date="2005">2005</year>
      <volume>37</volume>
      <pub-id pub-id-type="doi">10.1146/annurev.fluid.37.061903.175743</pub-id>
      <fpage>239</fpage>
      <lpage>261</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Alnaes2015">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Alnaes</surname><given-names>M.</given-names></name>
        <name><surname>Blechta</surname><given-names>J.</given-names></name>
        <name><surname>Hake</surname><given-names>J.</given-names></name>
        <name><surname>Johansson</surname><given-names>A.</given-names></name>
        <name><surname>Kehlet</surname><given-names>B.</given-names></name>
        <name><surname>Logg</surname><given-names>A.</given-names></name>
        <name><surname>Richardson</surname><given-names>C.</given-names></name>
        <name><surname>Ring</surname><given-names>J.</given-names></name>
        <name><surname>Rognes</surname><given-names>M. E.</given-names></name>
        <name><surname>Wells</surname><given-names>G. N.</given-names></name>
      </person-group>
      <article-title>The FEniCS Project Version 1.5</article-title>
      <source>Archive of Numerical Software</source>
      <year iso-8601-date="2015">2015</year>
      <volume>3</volume>
      <pub-id pub-id-type="doi">10.11588/ans.2015.100.20553</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Permann2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Permann</surname><given-names>C. J.</given-names></name>
        <name><surname>Gaston</surname><given-names>D. R.</given-names></name>
        <name><surname>Andrš</surname><given-names>D.</given-names></name>
        <name><surname>Carlsen</surname><given-names>R. W.</given-names></name>
        <name><surname>Kong</surname><given-names>F.</given-names></name>
        <name><surname>Lindsay</surname><given-names>A. D.</given-names></name>
        <name><surname>Miller</surname><given-names>J. M.</given-names></name>
        <name><surname>Peterson</surname><given-names>J. W.</given-names></name>
        <name><surname>Slaughter</surname><given-names>A. E.</given-names></name>
        <name><surname>Stogner</surname><given-names>R. H.</given-names></name>
        <name><surname>Martineau</surname><given-names>R. C.</given-names></name>
      </person-group>
      <article-title>MOOSE: Enabling massively parallel multiphysics simulation</article-title>
      <source>SoftwareX</source>
      <year iso-8601-date="2020">2020</year>
      <volume>11</volume>
      <pub-id pub-id-type="doi">10.1016/j.softx.2020.100430</pub-id>
      <fpage>100430</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-mpi">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <string-name>Message Passing Interface Forum</string-name>
      </person-group>
      <source>MPI: A message-passing interface standard version 3.1</source>
      <publisher-name>High-Performance Computing Center</publisher-name>
      <publisher-loc>University of Stuttgart, Stuttgart, Germany</publisher-loc>
      <year iso-8601-date="2015">2015</year>
    </element-citation>
  </ref>
  <ref id="ref-Cockburn2003">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Cockburn</surname><given-names>B.</given-names></name>
        <name><surname>Kanschat</surname><given-names>G.</given-names></name>
        <name><surname>Schötzau</surname><given-names>D.</given-names></name>
      </person-group>
      <article-title>The local discontinuous Galerkin method for the Oseen equations</article-title>
      <source>Mathematics of Computation</source>
      <year iso-8601-date="2003-05">2003</year><month>05</month>
      <volume>73</volume>
      <issue>246</issue>
      <pub-id pub-id-type="doi">10.1090/s0025-5718-03-01552-7</pub-id>
      <fpage>569</fpage>
      <lpage>593</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Ascher1995">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ascher</surname><given-names>U. M.</given-names></name>
        <name><surname>Ruuth</surname><given-names>S. J.</given-names></name>
        <name><surname>Wetton</surname><given-names>B. T. R.</given-names></name>
      </person-group>
      <article-title>Implicit-explicit methods for time-dependent partial differential equations</article-title>
      <source>SIAM Journal on Numerical Analysis</source>
      <year iso-8601-date="1995-06">1995</year><month>06</month>
      <volume>32</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1137/0732037</pub-id>
      <fpage>797</fpage>
      <lpage>823</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Yu2015">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Yu</surname><given-names>W.</given-names></name>
        <name><surname>Zhang</surname><given-names>K.</given-names></name>
        <name><surname>Li</surname><given-names>X.</given-names></name>
      </person-group>
      <article-title>Recent algorithms on automatic hexahedral mesh generation</article-title>
      <source>The 10th international conference on computer science &amp; education</source>
      <publisher-loc>Fitzwilliam College, Cambridge University, UK</publisher-loc>
      <year iso-8601-date="2015-07">2015</year><month>07</month>
      <pub-id pub-id-type="doi">10.1109/iccse.2015.7250335</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-comsol">
    <element-citation>
      <article-title>COMSOL Multiphysics®</article-title>
      <publisher-name>COMSOL AB; Online</publisher-name>
      <publisher-loc>Stockholm, Sweden</publisher-loc>
      <date-in-citation content-type="access-date"><year iso-8601-date="2022-04-21">2022</year><month>04</month><day>21</day></date-in-citation>
      <uri>https://www.comsol.com/</uri>
    </element-citation>
  </ref>
  <ref id="ref-fluent">
    <element-citation>
      <article-title>Ansys® Fluent</article-title>
      <publisher-name>ANSYS Inc. Online</publisher-name>
      <date-in-citation content-type="access-date"><year iso-8601-date="2022-04-21">2022</year><month>04</month><day>21</day></date-in-citation>
      <uri>https://www.ansys.com/products/fluids/ansys-fluent</uri>
    </element-citation>
  </ref>
  <ref id="ref-OpenFOAM">
    <element-citation>
      <article-title>OpenFOAM v9 user guide</article-title>
      <publisher-name>OpenFOAM Foundation; Online</publisher-name>
      <date-in-citation content-type="access-date"><year iso-8601-date="2022-04-21">2022</year><month>04</month><day>21</day></date-in-citation>
      <uri>https://cfd.direct/openfoam/user-guide</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
