<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">8057</article-id>
<article-id pub-id-type="doi">10.21105/joss.08057</article-id>
<title-group>
<article-title>HeXtractor: Extracting Heterogeneous Graphs from
Structured and Textual Data for Graph Neural Networks</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-5938-7260</contrib-id>
<name>
<surname>Wójcik</surname>
<given-names>Filip</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Malczewski</surname>
<given-names>Marcin</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Wroclaw University of Economics and Business, Wrocław,
Poland</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Diveapps, Wrocław, Poland</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2025-06-18">
<day>18</day>
<month>6</month>
<year>2025</year>
</pub-date>
<volume>10</volume>
<issue>110</issue>
<fpage>8057</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>graph neural networks</kwd>
<kwd>heterogeneous graphs</kwd>
<kwd>tabular data</kwd>
<kwd>knowledge graphs</kwd>
<kwd>data extraction</kwd>
<kwd>PyTorch Geometric</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>HeXtractor is an open-source Python library designed to transform
  both structured tabular data and unstructured textual content into
  heterogeneous graph representations suitable for Graph Neural Networks
  (GNNs). Fully compatible with the PyTorch Geometric (PyG) framework
  (<xref alt="Fey &amp; Lenssen, 2019" rid="ref-Fey_Fast_Graph_Representation_2019" ref-type="bibr">Fey
  &amp; Lenssen, 2019</xref>), HeXtractor offers a streamlined,
  high-level interface for defining entities (nodes), relationships
  (edges), and associated metadata across diverse data modalities.</p>
  <p>Graph Neural Networks have gained significant traction due to the
  rise of the Message Passing Neural Network (MPNN) paradigm
  (<xref alt="Gilmer et al., 2017" rid="ref-gilmer2017neural" ref-type="bibr">Gilmer
  et al., 2017</xref>). Within this context, heterogeneous graphs, which
  accommodate multiple node and edge types, have emerged as powerful
  tools in fields such as recommendation systems, fraud detection, and
  knowledge representation
  (<xref alt="Shi, 2022" rid="ref-Shi2022" ref-type="bibr">Shi,
  2022</xref>;
  <xref alt="Yang et al., 2020" rid="ref-Yang2020" ref-type="bibr">Yang
  et al., 2020</xref>). Modern architectures—including Heterogeneous
  Graph Transformers
  (<xref alt="Hu et al., 2020" rid="ref-Hu2020" ref-type="bibr">Hu et
  al., 2020</xref>) and Heterogeneous Graph Attention Networks
  (<xref alt="X. Wang et al., 2019" rid="ref-Wang2019" ref-type="bibr">X.
  Wang et al., 2019</xref>)—are specifically optimized to exploit the
  semantic richness of these graph structures.</p>
  <p>One prominent application of heterogeneous graphs lies in knowledge
  graph construction, which models intricate real-world relationships.
  These structures have found use across various industries, including
  employment matching
  (<xref alt="Chen et al., 2018" rid="ref-chen2018linkedin" ref-type="bibr">Chen
  et al., 2018</xref>;
  <xref alt="Noy et al., 2019" rid="ref-noy2019industry" ref-type="bibr">Noy
  et al., 2019</xref>) and credit risk evaluation
  (<xref alt="Mitra et al., 2024" rid="ref-mitra2024knowledge" ref-type="bibr">Mitra
  et al., 2024</xref>).</p>
  <p>Despite their versatility, constructing heterogeneous graphs is
  often time-consuming and error-prone. HeXtractor addresses this
  challenge by providing a standardized, automated framework to convert
  structured and unstructured data into formats compatible with GNNs,
  with optional support for large language models (LLMs) to extract
  graph structures from text.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>A heterogeneous graph can be formally represented as a tuple
  <inline-formula><alternatives>
  <tex-math><![CDATA[G = (V, E)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>,
  where <inline-formula><alternatives>
  <tex-math><![CDATA[V]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>V</mml:mi></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[E]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>E</mml:mi></mml:math></alternatives></inline-formula>
  denote sets of nodes and edges, respectively. Each node
  <inline-formula><alternatives>
  <tex-math><![CDATA[v \in V]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  and edge <inline-formula><alternatives>
  <tex-math><![CDATA[e \in E]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>e</mml:mi><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  is associated with a type mapping: <inline-formula><alternatives>
  <tex-math><![CDATA[\phi(v): V \rightarrow A]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mi>V</mml:mi><mml:mo>→</mml:mo><mml:mi>A</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[\Phi(e): E \rightarrow R]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>Φ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mi>E</mml:mi><mml:mo>→</mml:mo><mml:mi>R</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>,
  where <inline-formula><alternatives>
  <tex-math><![CDATA[A]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>A</mml:mi></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[R]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>R</mml:mi></mml:math></alternatives></inline-formula>
  are sets of node and edge types
  (<xref alt="Shi, 2022" rid="ref-Shi2022" ref-type="bibr">Shi,
  2022</xref>). These structures enable modeling of both structural and
  semantic diversity inherent in complex datasets.</p>
  <p>Although libraries such as PyG
  (<xref alt="Fey &amp; Lenssen, 2019" rid="ref-Fey_Fast_Graph_Representation_2019" ref-type="bibr">Fey
  &amp; Lenssen, 2019</xref>) and DGL
  (<xref alt="M. Wang et al., 2019" rid="ref-wang2019dgl" ref-type="bibr">M.
  Wang et al., 2019</xref>) offer powerful learning tools for
  heterogeneous graphs, they lack comprehensive support for the graph
  construction process—especially when dealing with diverse,
  multi-source datasets. As a result, researchers often resort to custom
  scripts, introducing inconsistencies and reducing reproducibility.</p>
  <p>HeXtractor fills this gap by offering:</p>
  <list list-type="bullet">
    <list-item>
      <p>A declarative interface for defining node and edge schemas;</p>
    </list-item>
    <list-item>
      <p>LLM integration for extracting graph structures from natural
      language via LangChain-compatible
      <monospace>GraphDocument</monospace> objects;</p>
    </list-item>
    <list-item>
      <p>Schema validation and consistency checking;</p>
    </list-item>
    <list-item>
      <p>Interactive graph visualization;</p>
    </list-item>
    <list-item>
      <p>Seamless export to PyG’s <monospace>HeteroData</monospace>
      format.</p>
    </list-item>
  </list>
  <p>Originally developed as part of the HexGIN project
  (<xref alt="Wójcik, 2024" rid="ref-Wojcik2024" ref-type="bibr">Wójcik,
  2024</xref>), which focused on financial transaction analysis,
  HeXtractor has since evolved into a domain-agnostic framework for
  heterogeneous graph extraction.</p>
</sec>
<sec id="features-and-usage">
  <title>Features and Usage</title>
  <p>HeXtractor supports the construction of heterogeneous graphs from
  both structured tabular datasets and unstructured textual sources. It
  includes built-in visualization capabilities (via PyVis) and is fully
  interoperable with the PyTorch Geometric framework.</p>
  <sec id="structured-data-extraction">
    <title>Structured Data Extraction</title>
    <p>HeXtractor supports both single-table and multi-table data
    processing. In a single-table mode, each row encodes relationships
    among entities defined by columns. Users define:</p>
    <list list-type="order">
      <list-item>
        <p>Node types and their attributes;</p>
      </list-item>
      <list-item>
        <p>Edge definitions among these entities.</p>
      </list-item>
    </list>
    <p>This results in a PyG-compatible
    <monospace>HeteroData</monospace> object, ready for downstream
    analysis.</p>
    <table-wrap>
      <table>
        <colgroup>
          <col width="13%" />
          <col width="17%" />
          <col width="19%" />
          <col width="14%" />
          <col width="21%" />
          <col width="16%" />
        </colgroup>
        <thead>
          <tr>
            <th>Company ID</th>
            <th>No. employees</th>
            <th>Company revenue</th>
            <th>Employee ID</th>
            <th>Employee position</th>
            <th>Employee Age</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>1</td>
            <td>100</td>
            <td>1000</td>
            <td>0</td>
            <td>0</td>
            <td>25</td>
          </tr>
          <tr>
            <td>1</td>
            <td>100</td>
            <td>1000</td>
            <td>1</td>
            <td>1</td>
            <td>35</td>
          </tr>
          <tr>
            <td>…</td>
            <td>…</td>
            <td>…</td>
            <td>…</td>
            <td>…</td>
            <td>…</td>
          </tr>
          <tr>
            <td>2</td>
            <td>5000</td>
            <td>100000</td>
            <td>6</td>
            <td>4</td>
            <td>31</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <p>Given the exemplary table above, HeXtractor outputs the following
    heterogeneous graph:</p>
    <code language="python">HeteroData(
  company={ x=[3, 2] },
  employee={ x=[7, 2], y=[7] },
  tag={ x=[5] },
  (company, has, employee)={ edge_index=[2, 6] },
  (company, has, tag)={ edge_index=[2, 7] }
)</code>
    <p>Graph visualization is interactive, with support for customized
    labels and color schemes to enhance interpretability.</p>
    <fig>
      <caption><p>Graph extracted from structured data.
      <styled-content id="figU003Asingle_tab_company"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="company_diagram.png" />
    </fig>
    <p>In <bold>multi-table mode</bold>, users define
    <monospace>GraphSpecs</monospace> to merge entity and relationship
    tables into a unified graph. This approach is well suited for
    complex data structures with multiple interconnected entities.</p>
    <p>For instance, if the dataset from previous table is split into
    separate <monospace>company</monospace>,
    <monospace>employee</monospace>, and <monospace>tags</monospace>
    tables, along with join tables for relationships (as shown in Figure
    <xref alt="[fig:er_diagram]" rid="figU003Aer_diagram">[fig:er_diagram]</xref>),
    HeXtractor will construct an equivalent
    <monospace>HeteroData</monospace> object—regardless of the original
    data layout.</p>
    <fig>
      <caption><p>Entity relationship diagram.
      <styled-content id="figU003Aer_diagram"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="er_diagram.png" />
    </fig>
  </sec>
  <sec id="text-based-graph-extraction">
    <title>Text-Based Graph Extraction</title>
    <p>HeXtractor also enables semantic graph construction from natural
    language, using LLMs via <bold>LangChain</bold>. The process
    involves:</p>
    <list list-type="order">
      <list-item>
        <p>Feeding input text to an LLM;</p>
      </list-item>
      <list-item>
        <p>Receiving a <monospace>GraphDocument</monospace> containing
        nodes and relationships;</p>
      </list-item>
      <list-item>
        <p>Converting it into a <monospace>HeteroData</monospace>
        object.</p>
      </list-item>
    </list>
    <p>For example, the input:</p>
    <disp-quote>
      <p>Marcin Malczewski and Filip Wójcik are data scientists
      who developed HeXtractor. It helps in extraction of heterogeneous
      knowledge graphs from various data sources.</p>
    </disp-quote>
    <p>is transformed into the following
    <monospace>HeteroData</monospace> object:</p>
    <code language="python">HeteroData(
  Person={ x=[2, 1] },
  Library={ x=[1, 1] },
  Graph={ x=[1, 1] },
  (Library, Extracts, Graph)={ edge_index=[2, 1] },
  (Person, Developed, Library)={ edge_index=[2, 2] }
)</code>
    <p>Next, it can be visualized as in Figure
    <xref alt="[fig:llm_diagram]" rid="figU003Allm_diagram">[fig:llm_diagram]</xref>.</p>
    <fig>
      <caption><p>Graph extracted from text.
      <styled-content id="figU003Allm_diagram"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="llm_diagram.png" />
    </fig>
    <p>This feature can be especially useful for automated document
    analysis and knowledge graph generation.</p>
  </sec>
</sec>
<sec id="example-use-cases">
  <title>Example Use Cases</title>
  <p>HeXtractor is designed to be domain-agnostic and scalable,
  accommodating datasets of varying size and complexity. Its
  capabilities are broadly applicable across numerous research and
  industrial contexts, including:</p>
  <list list-type="bullet">
    <list-item>
      <p>Banking and fraud detection
      (<xref alt="Johannessen &amp; Jullum, 2023" rid="ref-Johannessen2023" ref-type="bibr">Johannessen
      &amp; Jullum, 2023</xref>;
      <xref alt="Wójcik, 2024" rid="ref-Wojcik2024" ref-type="bibr">Wójcik,
      2024</xref>)
      </p>
    </list-item>
    <list-item>
      <p>Recommendation systems
      (<xref alt="Deng, 2022" rid="ref-Deng2022" ref-type="bibr">Deng,
      2022</xref>;
      <xref alt="Wu et al., 2022" rid="ref-Wu2022" ref-type="bibr">Wu et
      al., 2022</xref>)
      </p>
    </list-item>
    <list-item>
      <p>Biomedical knowledge graphs
      (<xref alt="Jumper et al., 2021" rid="ref-Jumper2021" ref-type="bibr">Jumper
      et al., 2021</xref>;
      <xref alt="MacLean, 2021" rid="ref-maclean2021knowledge" ref-type="bibr">MacLean,
      2021</xref>)</p>
    </list-item>
  </list>
  <p>In these contexts, HeXtractor facilitates the integration of
  structured and unstructured data into coherent, semantically enriched
  graph representations. Without such tooling, this process would
  typically require extensive manual engineering and be prone to
  inconsistencies.</p>
</sec>
<sec id="documentation">
  <title>Documentation</title>
  <p>Comprehensive documentation, including usage examples and full API
  reference, is available at:
  <ext-link ext-link-type="uri" xlink:href="https://hextractor.readthedocs.io/en/latest/">the
  official website</ext-link>.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This project did not receive any direct financial support.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-Shi2022">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Shi</surname><given-names>Chuan</given-names></name>
      </person-group>
      <article-title>Heterogeneous graph neural networks</article-title>
      <source>Graph neural networks: Foundations, frontiers, and applications</source>
      <person-group person-group-type="editor">
        <name><surname>Wu</surname><given-names>Lingfei</given-names></name>
        <name><surname>Cui</surname><given-names>Peng</given-names></name>
        <name><surname>Pei</surname><given-names>Jian</given-names></name>
        <name><surname>Zhao</surname><given-names>Liang</given-names></name>
      </person-group>
      <publisher-name>Springer Nature</publisher-name>
      <year iso-8601-date="2022-01">2022</year><month>01</month>
      <isbn>9789811660542</isbn>
      <pub-id pub-id-type="doi">10.1007/978-981-16-6054-2_16</pub-id>
      <fpage>351</fpage>
      <lpage>369</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Hu2020">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Hu</surname><given-names>Ziniu</given-names></name>
        <name><surname>Dong</surname><given-names>Yuxiao</given-names></name>
        <name><surname>Wang</surname><given-names>Kuansan</given-names></name>
        <name><surname>Sun</surname><given-names>Yizhou</given-names></name>
      </person-group>
      <article-title>Heterogeneous graph transformer</article-title>
      <source>Proceedings of the web conference 2020</source>
      <year iso-8601-date="2020">2020</year>
      <pub-id pub-id-type="doi">10.1145/3366423.3380027</pub-id>
      <fpage>2704</fpage>
      <lpage>2710</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Yang2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Yang</surname><given-names>Carl</given-names></name>
        <name><surname>Xiao</surname><given-names>Yuxin</given-names></name>
        <name><surname>Zhang</surname><given-names>Yu</given-names></name>
        <name><surname>Sun</surname><given-names>Yizhou</given-names></name>
        <name><surname>Han</surname><given-names>Jiawei</given-names></name>
      </person-group>
      <article-title>Heterogeneous network representation learning: A unified framework with survey and benchmark</article-title>
      <source>IEEE Transactions on Knowledge and Data Engineering</source>
      <publisher-name>IEEE Computer Society</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <volume>34</volume>
      <pub-id pub-id-type="doi">10.1109/TKDE.2020.3045924</pub-id>
      <fpage>4854</fpage>
      <lpage>4873</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Wang2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wang</surname><given-names>Xiao</given-names></name>
        <name><surname>Ji</surname><given-names>Houye</given-names></name>
        <name><surname>Cui</surname><given-names>Peng</given-names></name>
        <name><surname>Yu</surname><given-names>P.</given-names></name>
        <name><surname>Shi</surname><given-names>Chuan</given-names></name>
        <name><surname>Wang</surname><given-names>Bai</given-names></name>
        <name><surname>Ye</surname><given-names>Yanfang</given-names></name>
      </person-group>
      <article-title>Heterogeneous graph attention network</article-title>
      <source>The World Wide Web Conference</source>
      <publisher-name>Association for Computing Machinery, Inc</publisher-name>
      <year iso-8601-date="2019-05">2019</year><month>05</month>
      <isbn>9781450366748</isbn>
      <pub-id pub-id-type="doi">10.1145/3308558.3313562</pub-id>
      <fpage>2022</fpage>
      <lpage>2032</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Wojcik2024">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wójcik</surname><given-names>Filip</given-names></name>
      </person-group>
      <article-title>An analysis of novel money laundering data using heterogeneous graph isomorphism networks. FinCEN files case study</article-title>
      <source>Econometrics. Ekonometria. Advances in Applied Data Analytics</source>
      <year iso-8601-date="2024">2024</year>
      <volume>28</volume>
      <pub-id pub-id-type="doi">10.15611/eada.2024.2.03</pub-id>
      <fpage>32</fpage>
      <lpage>49</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Fey_Fast_Graph_Representation_2019">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Fey</surname><given-names>Matthias</given-names></name>
        <name><surname>Lenssen</surname><given-names>Jan Eric</given-names></name>
      </person-group>
      <article-title>Fast Graph Representation Learning with PyTorch Geometric</article-title>
      <year iso-8601-date="2019-05">2019</year><month>05</month>
      <uri>https://github.com/pyg-team/pytorch_geometric</uri>
      <pub-id pub-id-type="doi">10.48550/arXiv.1903.02428</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-gilmer2017neural">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Gilmer</surname><given-names>Justin</given-names></name>
        <name><surname>Schoenholz</surname><given-names>Samuel S</given-names></name>
        <name><surname>Riley</surname><given-names>Patrick F</given-names></name>
        <name><surname>Vinyals</surname><given-names>Oriol</given-names></name>
        <name><surname>Dahl</surname><given-names>George E</given-names></name>
      </person-group>
      <article-title>Neural message passing for quantum chemistry</article-title>
      <source>International conference on machine learning</source>
      <publisher-name>PMLR</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <pub-id pub-id-type="doi">10.48550/arXiv.1704.01212</pub-id>
      <fpage>1263</fpage>
      <lpage>1272</lpage>
    </element-citation>
  </ref>
  <ref id="ref-wang2019dgl">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wang</surname><given-names>Minjie</given-names></name>
        <name><surname>Zheng</surname><given-names>Da</given-names></name>
        <name><surname>Ye</surname><given-names>Zihao</given-names></name>
        <name><surname>Gan</surname><given-names>Quan</given-names></name>
        <name><surname>Li</surname><given-names>Mufei</given-names></name>
        <name><surname>Song</surname><given-names>Xiang</given-names></name>
        <name><surname>Zhou</surname><given-names>Jinjing</given-names></name>
        <name><surname>Ma</surname><given-names>Chao</given-names></name>
        <name><surname>Yu</surname><given-names>Lingfan</given-names></name>
        <name><surname>Gai</surname><given-names>Yu</given-names></name>
        <name><surname>Xiao</surname><given-names>Tianjun</given-names></name>
        <name><surname>He</surname><given-names>Tong</given-names></name>
        <name><surname>Karypis</surname><given-names>George</given-names></name>
        <name><surname>Li</surname><given-names>Jinyang</given-names></name>
        <name><surname>Zhang</surname><given-names>Zheng</given-names></name>
      </person-group>
      <article-title>Deep graph library: A graph-centric, highly-performant package for graph neural networks</article-title>
      <source>arXiv preprint arXiv:1909.01315</source>
      <year iso-8601-date="2019">2019</year>
      <pub-id pub-id-type="doi">10.48550/arXiv.1909.01315</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-noy2019industry">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Noy</surname><given-names>Natasha</given-names></name>
        <name><surname>Gao</surname><given-names>Yuqing</given-names></name>
        <name><surname>Jain</surname><given-names>Anshu</given-names></name>
        <name><surname>Narayanan</surname><given-names>Anant</given-names></name>
        <name><surname>Patterson</surname><given-names>Alan</given-names></name>
        <name><surname>Taylor</surname><given-names>Jamie</given-names></name>
      </person-group>
      <article-title>Industry-scale knowledge graphs: Lessons and challenges: Five diverse technology companies show how it’s done</article-title>
      <source>Queue</source>
      <publisher-name>ACM New York, NY, USA</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <volume>17</volume>
      <issue>2</issue>
      <pub-id pub-id-type="doi">10.1145/3329781.3332266</pub-id>
      <fpage>48</fpage>
      <lpage>75</lpage>
    </element-citation>
  </ref>
  <ref id="ref-chen2018linkedin">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Chen</surname><given-names>Xi</given-names></name>
        <name><surname>Liu</surname><given-names>Yiqun</given-names></name>
        <name><surname>Zhang</surname><given-names>Liang</given-names></name>
        <name><surname>Kenthapadi</surname><given-names>Krishnaram</given-names></name>
      </person-group>
      <article-title>How LinkedIn economic graph bonds information and product: Applications in LinkedIn salary</article-title>
      <source>Proceedings of the 24th ACM SIGKDD international conference on knowledge discovery &amp; data mining</source>
      <year iso-8601-date="2018">2018</year>
      <pub-id pub-id-type="doi">10.1145/3219819.3219921</pub-id>
      <fpage>120</fpage>
      <lpage>129</lpage>
    </element-citation>
  </ref>
  <ref id="ref-mitra2024knowledge">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Mitra</surname><given-names>Rony</given-names></name>
        <name><surname>Dongre</surname><given-names>Ayush</given-names></name>
        <name><surname>Dangare</surname><given-names>Piyush</given-names></name>
        <name><surname>Goswami</surname><given-names>Adrijit</given-names></name>
        <name><surname>Tiwari</surname><given-names>Manoj Kumar</given-names></name>
      </person-group>
      <article-title>Knowledge graph driven credit risk assessment for micro, small and medium-sized enterprises</article-title>
      <source>International Journal of Production Research</source>
      <publisher-name>Taylor &amp; Francis</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <volume>62</volume>
      <issue>12</issue>
      <pub-id pub-id-type="doi">10.1080/00207543.2023.2257807</pub-id>
      <fpage>4273</fpage>
      <lpage>4289</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Deng2022">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Deng</surname><given-names>Yue</given-names></name>
      </person-group>
      <article-title>Recommender systems based on graph embedding techniques: A review</article-title>
      <source>IEEE Access</source>
      <year iso-8601-date="2022">2022</year>
      <volume>10</volume>
      <pub-id pub-id-type="doi">10.1109/ACCESS.2022.3174197</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Wu2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wu</surname><given-names>Shiwen</given-names></name>
        <name><surname>Sun</surname><given-names>Fei</given-names></name>
        <name><surname>Zhang</surname><given-names>Wentao</given-names></name>
        <name><surname>Xie</surname><given-names>Xu</given-names></name>
        <name><surname>Cui</surname><given-names>Bin</given-names></name>
      </person-group>
      <article-title>Graph neural networks in recommender systems: A survey</article-title>
      <source>ACM Computing Surveys</source>
      <year iso-8601-date="2022">2022</year>
      <volume>55</volume>
      <pub-id pub-id-type="doi">10.1145/3535101</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Jumper2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Jumper</surname><given-names>John</given-names></name>
        <name><surname>Evans</surname><given-names>Richard</given-names></name>
        <name><surname>Pritzel</surname><given-names>Alexander</given-names></name>
        <name><surname>Green</surname><given-names>Tim</given-names></name>
        <name><surname>Figurnov</surname><given-names>Michael</given-names></name>
        <name><surname>Ronneberger</surname><given-names>Olaf</given-names></name>
        <name><surname>Tunyasuvunakool</surname><given-names>Kathryn</given-names></name>
        <name><surname>Bates</surname><given-names>Russ</given-names></name>
        <name><surname>Žídek</surname><given-names>Augustin</given-names></name>
        <name><surname>Potapenko</surname><given-names>Anna</given-names></name>
        <name><surname>Bridgland</surname><given-names>Alex</given-names></name>
        <name><surname>Meyer</surname><given-names>Clemens</given-names></name>
        <name><surname>Kohl</surname><given-names>Simon A. A.</given-names></name>
        <name><surname>Ballard</surname><given-names>Andrew J.</given-names></name>
        <name><surname>Cowie</surname><given-names>Andrew</given-names></name>
        <name><surname>Romera-Paredes</surname><given-names>Bernardino</given-names></name>
        <name><surname>Nikolov</surname><given-names>Stanislav</given-names></name>
        <name><surname>Jain</surname><given-names>Rishub</given-names></name>
        <name><surname>Adler</surname><given-names>Jonas</given-names></name>
        <name><surname>Back</surname><given-names>Trevor</given-names></name>
        <name><surname>Petersen</surname><given-names>Stig</given-names></name>
        <name><surname>Reiman</surname><given-names>David</given-names></name>
        <name><surname>Clancy</surname><given-names>Ellen</given-names></name>
        <name><surname>Zielinski</surname><given-names>Michal</given-names></name>
        <name><surname>Steinegger</surname><given-names>Martin</given-names></name>
        <name><surname>Pacholska</surname><given-names>Michalina</given-names></name>
        <name><surname>Berghammer</surname><given-names>Tamas</given-names></name>
        <name><surname>Bodenstein</surname><given-names>Sebastian</given-names></name>
        <name><surname>Silver</surname><given-names>David</given-names></name>
        <name><surname>Vinyals</surname><given-names>Oriol</given-names></name>
        <name><surname>Senior</surname><given-names>Andrew W.</given-names></name>
        <name><surname>Kavukcuoglu</surname><given-names>Koray</given-names></name>
        <name><surname>Kohli</surname><given-names>Pushmeet</given-names></name>
        <name><surname>Hassabis</surname><given-names>Demis</given-names></name>
      </person-group>
      <article-title>Highly accurate protein structure prediction with AlphaFold</article-title>
      <source>Nature</source>
      <year iso-8601-date="2021">2021</year>
      <volume>596</volume>
      <pub-id pub-id-type="doi">10.1038/s41586-021-03819-2</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-maclean2021knowledge">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>MacLean</surname><given-names>Finlay</given-names></name>
      </person-group>
      <article-title>Knowledge graphs and their applications in drug discovery</article-title>
      <source>Expert opinion on drug discovery</source>
      <publisher-name>Taylor &amp; Francis</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <volume>16</volume>
      <issue>9</issue>
      <pub-id pub-id-type="doi">10.1080/17460441.2021.1910673</pub-id>
      <fpage>1057</fpage>
      <lpage>1069</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Johannessen2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Johannessen</surname><given-names>Fredrik</given-names></name>
        <name><surname>Jullum</surname><given-names>Martin</given-names></name>
      </person-group>
      <article-title>Finding money launderers using heterogeneous graph neural networks</article-title>
      <source>arXiv: 2307.13499</source>
      <year iso-8601-date="2023">2023</year>
      <pub-id pub-id-type="doi">10.48550/arXiv.2307.13499</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
