<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">3735</article-id>
<article-id pub-id-type="doi">10.21105/joss.03735</article-id>
<title-group>
<article-title>diman: A Clojure Package for Dimensional
Analysis</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-1607-0164</contrib-id>
<name>
<surname>Sharma</surname>
<given-names>Lungsi</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Ronin Institute</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2021-07-30">
<day>30</day>
<month>7</month>
<year>2021</year>
</pub-date>
<volume>7</volume>
<issue>69</issue>
<fpage>3735</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Clojure</kwd>
<kwd>neuroscience</kwd>
<kwd>modeling</kwd>
<kwd>simulation</kwd>
<kwd>quantitative analysis</kwd>
<kwd>scientific computing</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><monospace>diman</monospace> (<bold>dim</bold>ensional
  <bold>an</bold>alysis) is a Clojure based scientific software package
  with the ability to: create dimensional formulas, create dimensional
  equations, check dimensional homogeneity (consistency), and derive
  dimensionless products.</p>
  <p><monospace>diman</monospace> provides functions for each step of
  the analytic process for checking dimensional homogeneity or deriving
  dimensionless products; the repetitive operations (computational) are
  hidden. Users can write compound functions that perform a desired
  process. Thus, not only is the computational labor saved, but also
  introspection of the analysis is possible; the analyst is able to go
  through the steps of dimensional analysis.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Explaining the mechanism of a phenomenon is often the goal of
  experiments. As most mechanistic description is expressible in terms
  of some measurable quantity, its value is a function of other
  measurable quantities; the function represents the relationship among
  the quantities, which provides a mechanistic explanation. For example,
  <inline-formula><alternatives>
  <tex-math><![CDATA[F = ma = m \frac{dv}{dt}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>F</mml:mi><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:mfrac><mml:mrow><mml:mi>d</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>d</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:math></alternatives></inline-formula>
  where the measurable value of force <inline-formula><alternatives>
  <tex-math><![CDATA[F]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>F</mml:mi></mml:math></alternatives></inline-formula>
  is a function of the measurable quantities: mass,
  <inline-formula><alternatives>
  <tex-math><![CDATA[m]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>m</mml:mi></mml:math></alternatives></inline-formula>;
  velocity, <inline-formula><alternatives>
  <tex-math><![CDATA[v]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>v</mml:mi></mml:math></alternatives></inline-formula>;
  and time, <inline-formula><alternatives>
  <tex-math><![CDATA[t]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>t</mml:mi></mml:math></alternatives></inline-formula>.</p>
  <p>Some or all the independent variables of the parent (first or
  original) functions have dimensions. Since most of the functions are
  unknown, and hence conceptual, the researcher deals with many
  candidates for independent variable, whose considerations are based on
  experimental results. Although the mathematical expression of the
  function is unknown, knowledge of the relationship among the
  measurable quantities is profitable not only in putting together the
  series of experimental results to explain the mechanism, but also
  testing the hypothesis presented by the function.</p>
  <p>If possible, it is beneficial to use the transformed parent
  function, where all the independent variables are dimensionless.
  Dimensionless products are magnitudes that contains information on the
  dimensional quantities that it is a product of. Therefore, not only
  are points in a graph of dimensionless products experimentally
  determinable, but also are more informative than dimensional graphs.
  Reducing the number of independent variables to a smaller collection
  of dimensionless products can assist in understanding the mechanism of
  the phenomenon
  (<xref alt="Langhaar, 1951" rid="ref-LanghaarU003A1951" ref-type="bibr">Langhaar,
  1951</xref>;
  <xref alt="Sharma, 2021" rid="ref-SharmaU003A2021" ref-type="bibr">Sharma,
  2021</xref>).</p>
  <p>Numerous software packages have been developed to deal with
  dimensions in some shape or form
  (<xref alt="Preussner, 2018" rid="ref-PreussnerU003A2018" ref-type="bibr">Preussner,
  2018</xref>;
  <xref alt="Sharma, 2021" rid="ref-SharmaU003A2021" ref-type="bibr">Sharma,
  2021</xref>). Most incorporate the ability to tag quantities with
  units, however, few are capable of doing consistency checks and fewer
  still deal with dimensionless products let alone, deriving
  dimensionless products.</p>
  <p>Frink and F sharp are two active languages that incorporate units
  of measurement. Frink is a calculating tool and programming language
  designed to make physical calculations as it tracks units of measure
  throughout calculations
  (<xref alt="Eliasen, 2004" rid="ref-EliasenU003A2004" ref-type="bibr">Eliasen,
  2004</xref>). F# is a general purpose language which allows annotating
  floating point and integer values with statically-typed unit metadata.
  F#’s units of measure is based on a prototype Meta Language (ML) like
  language that has dimensional type; the language supports type
  polymorphism as well as dimension polymorphism
  (<xref alt="Kennedy, 1996" rid="ref-KennedyU003A1996" ref-type="bibr">Kennedy,
  1996</xref>).</p>
  <p>In F# the notion of dimension is based on ideas from type theory;
  therefore, dimensions satisfy algebraic properties of Abelian groups
  (commutative groups). The concepts of dimensional type and dimensional
  invariance can be mathematically extended to apply Buckingham’s
  Theorem (also called Pi theorem)
  (<xref alt="Kennedy, 1996" rid="ref-KennedyU003A1996" ref-type="bibr">Kennedy,
  1996</xref>)—this theorem is the basis for deriving the set of
  dimensionless products
  (<xref alt="Ngwua, 2020" rid="ref-NgwuaU003A2020" ref-type="bibr">Ngwua,
  2020</xref>).</p>
  <p><monospace>diman</monospace> is designed with an emphasis on
  <bold>analysis</bold>; the application of the algebraic theory of
  dimensionally homogeneous functions
  (<xref alt="Langhaar, 1951" rid="ref-LanghaarU003A1951" ref-type="bibr">Langhaar,
  1951</xref>). Unlike F#’s units of measure which performs dimensional
  checks during calculations, checks for dimensional homogeneity in
  diman is manual. Also, the possibility of applying Buckingham’s
  theorem in F# is done by mathematical abstraction
  (<xref alt="Kennedy, 2010" rid="ref-KennedyU003A2010" ref-type="bibr">Kennedy,
  2010</xref>) while diman provides functions to derive the complete set
  of dimensionless products of a given equation. Therefore, diman is
  easily put into practice for providing complete information of
  experimental results of physical systems in a compact form and also
  transform hypothetical function that describes the physical system
  (<xref alt="Sharma, 2021" rid="ref-SharmaU003A2021" ref-type="bibr">Sharma,
  2021</xref>).</p>
</sec>
<sec id="design-and-implementation">
  <title>Design and implementation</title>
  <p>Based on the International System of Units,
  <monospace>diman</monospace> uses the seven base (or elementary)
  dimensions: [M], [L], [T], [A], [K], [mol] and [cd] for the
  quantities: mass, length, time, electric current, thermodynamic
  temperature, amount of substance and luminous intensity respectively
  (<xref alt="BIPM, 2020" rid="ref-BIPMU003A2020" ref-type="bibr">BIPM,
  2020</xref>). They are defined in
  <monospace>base_dimensions</monospace>. Furthermore, some well-known
  dimensions derived from the <monospace>base_dimensions</monospace> are
  defined in <monospace>standard_formula</monospace>; a dimensional
  formula for respective quantity is its dimension.</p>
  <sec id="consistency-checking">
    <title>Consistency checking</title>
    <p>This is done by the predicate <monospace>consistent?</monospace>.
    There are some preliminary steps before invoking the predicate.
    Consider the given function <inline-formula><alternatives>
    <tex-math><![CDATA[E = \frac{1}{2}mv^2]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>E</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mi>m</mml:mi><mml:msup><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>.</p>
    <p>We define the variables</p>
    <preformat>=&gt; (def variables [{:symbol &quot;E&quot;, :quantity &quot;energy&quot;}
                   {:symbol &quot;m&quot;, :quantity &quot;mass&quot;}
                   {:symbol &quot;v&quot;, :quantity &quot;velocity&quot;}])</preformat>
    <p>then the equation</p>
    <preformat>=&gt; (def equation {:lhs &quot;E^(1)&quot;, :rhs &quot;0.5*m^(1)*v^(2)&quot;})</preformat>
    <p>Finally, the predicate <monospace>consistent?</monospace> is used
    to check if the equation is dimensionally homogenous.</p>
    <preformat>=&gt; (consistent? variables equation)
true</preformat>
  </sec>
  <sec id="derivation-of-set-of-dimensionless-products">
    <title>Derivation of set of dimensionless products</title>
    <p>Imagine that the study of a system results in a hypothesis such
    that some measurable dimensionless product is a homogeneous function
    <inline-formula><alternatives>
    <tex-math><![CDATA[f]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>f</mml:mi></mml:math></alternatives></inline-formula>
    of the independent variables <inline-formula><alternatives>
    <tex-math><![CDATA[P]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>P</mml:mi></mml:math></alternatives></inline-formula>,
    <inline-formula><alternatives>
    <tex-math><![CDATA[Q]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>Q</mml:mi></mml:math></alternatives></inline-formula>,
    <inline-formula><alternatives>
    <tex-math><![CDATA[R]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>R</mml:mi></mml:math></alternatives></inline-formula>,
    <inline-formula><alternatives>
    <tex-math><![CDATA[S]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>S</mml:mi></mml:math></alternatives></inline-formula>,
    <inline-formula><alternatives>
    <tex-math><![CDATA[T]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>T</mml:mi></mml:math></alternatives></inline-formula>,
    <inline-formula><alternatives>
    <tex-math><![CDATA[U]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>U</mml:mi></mml:math></alternatives></inline-formula>
    and <inline-formula><alternatives>
    <tex-math><![CDATA[V]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>V</mml:mi></mml:math></alternatives></inline-formula>.
    Also, assume that the independent variables have dimensions such
    that</p>
    <preformat>=&gt; (def dimensional_formulae_of_all_independent_variables
        [{:quantity &quot;term-p&quot;, :dimension &quot;[M^(2)*L^(1)]&quot;}
         {:quantity &quot;term-q&quot;, :dimension &quot;[M^(-1)*T^(1)]&quot;}
         {:quantity &quot;term-r&quot;, :dimension &quot;[M^(3)*L^(-1)]&quot;}
         {:quantity &quot;term-s&quot;, :dimension &quot;[T^(3)]&quot;}
         {:quantity &quot;term-t&quot;, :dimension &quot;[L^(2)*T^(1)]&quot;}
         {:quantity &quot;term-u&quot;, :dimension &quot;[M^(-2)*L^(1)*T^(-1)]&quot;}
         {:quantity &quot;term-v&quot;, :dimension &quot;[M^(1)*L^(2)*T^(2)]&quot;}]) </preformat>
    <p>Supposing the independent variables of the parent function
    <inline-formula><alternatives>
    <tex-math><![CDATA[f]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>f</mml:mi></mml:math></alternatives></inline-formula>
    are not already defined in <monospace>standard_formula</monospace>,
    inject the dimensions of the independent variables into the
    <monospace>standard_formula</monospace> for the present
    read–eval–print loop session by</p>
    <preformat>=&gt; (update-sformula dimensional_formulae_of_all_independent_variables)</preformat>
    <p>Thus, <monospace>diman</monospace> now contains dimensions of the
    independent variables of <inline-formula><alternatives>
    <tex-math><![CDATA[f]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>f</mml:mi></mml:math></alternatives></inline-formula>.
    Hence, the independent variables can be defined as</p>
    <preformat>=&gt; (def independent_variables
        [{:symbol &quot;P&quot;, :quantity &quot;term-p&quot;}
         {:symbol &quot;Q&quot;, :quantity &quot;term-q&quot;}
         {:symbol &quot;R&quot;, :quantity &quot;term-r&quot;}
         {:symbol &quot;S&quot;, :quantity &quot;term-s&quot;}
         {:symbol &quot;T&quot;, :quantity &quot;term-t&quot;}
         {:symbol &quot;U&quot;, :quantity &quot;term-u&quot;}
         {:symbol &quot;V&quot;, :quantity &quot;term-v&quot;}]) </preformat>
    <p>The theory of dimensionless products
    (<xref alt="Ngwua, 2020" rid="ref-NgwuaU003A2020" ref-type="bibr">Ngwua,
    2020</xref>) tells us that the derivation of dimensionless products
    can be broken down into four steps: generate the dimensional matrix,
    solve the homogeneous equation, determine the solution matrix and
    get the set of dimensionless products. Compounding the first three
    steps into one code block we get,</p>
    <preformat>=&gt; (def solution_matrix
        (get-solution-matrix
            (solve (get-augmented-matrix
                        (generate-dimmat independent_variables)))))</preformat>
    <p>This is the solution matrix for a complete set of dimensionless
    products.</p>
    <preformat>=&gt; (view-matrix solution_matrix)
[1 0 0 0 -11N 5N 8N]
[0 1 0 0 9N -4N -7N]
[0 0 1 0 -9N 5N 7N]
[0 0 0 1 15N -6N -12N]
Size -&gt; 4 x 7</preformat>
    <p>The set of dimensionless products can be obtained from the
    solution matrix by using the function
    <monospace>get-dimensionless-products</monospace>. Thus</p>
    <preformat>=&gt; (println (get-dimensionless-products solution_matrix independent_variables))
  [{:symbol &quot;pi0&quot;, :expression &quot;P^(1)*T^(-11)*U^(5)*V^(8)&quot;}
  {:symbol &quot;pi1&quot;, :expression &quot;Q^(1)*T^(9)*U^(-4)*V^(-7)&quot;}
  {:symbol &quot;pi2&quot;, :expression &quot;R^(1)*T^(-9)*U^(5)*V^(7)&quot;}
  {:symbol &quot;pi3&quot;, :expression &quot;S^(1)*T^(15)*U^(-6)*V^(-12)&quot;}]</preformat>
    <p>or <disp-formula><alternatives>
    <tex-math><![CDATA[
    \pi_0 = PT^{-11}U^5V^8, \quad \pi_1 = QT^9U^{-4}V^{-7}, \quad \pi_2 = RT^{-9}U^5V^7, \quad \pi_3 = ST^{15}U^{-6}V^{-12}
    ]]></tex-math>
    <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>π</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:msup><mml:mi>T</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>11</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mi>U</mml:mi><mml:mn>5</mml:mn></mml:msup><mml:msup><mml:mi>V</mml:mi><mml:mn>8</mml:mn></mml:msup><mml:mo>,</mml:mo><mml:mspace width="1.0em"></mml:mspace><mml:msub><mml:mi>π</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mi>Q</mml:mi><mml:msup><mml:mi>T</mml:mi><mml:mn>9</mml:mn></mml:msup><mml:msup><mml:mi>U</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mi>V</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mspace width="1.0em"></mml:mspace><mml:msub><mml:mi>π</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mi>R</mml:mi><mml:msup><mml:mi>T</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>9</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mi>U</mml:mi><mml:mn>5</mml:mn></mml:msup><mml:msup><mml:mi>V</mml:mi><mml:mn>7</mml:mn></mml:msup><mml:mo>,</mml:mo><mml:mspace width="1.0em"></mml:mspace><mml:msub><mml:mi>π</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mi>S</mml:mi><mml:msup><mml:mi>T</mml:mi><mml:mn>15</mml:mn></mml:msup><mml:msup><mml:mi>U</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mi>V</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>12</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></alternatives></disp-formula>
    Therefore, function <inline-formula><alternatives>
    <tex-math><![CDATA[f]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>f</mml:mi></mml:math></alternatives></inline-formula>
    is transformed into some function <inline-formula><alternatives>
    <tex-math><![CDATA[f_1]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>f</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
    whose independent variables are the dimensionless products;
    <inline-formula><alternatives>
    <tex-math><![CDATA[\pi_0]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>π</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:math></alternatives></inline-formula>,
    <inline-formula><alternatives>
    <tex-math><![CDATA[\pi_1]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>π</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></alternatives></inline-formula>,
    <inline-formula><alternatives>
    <tex-math><![CDATA[\pi_2]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>π</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula>,
    and <inline-formula><alternatives>
    <tex-math><![CDATA[\pi_3]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>π</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:math></alternatives></inline-formula>—<inline-formula><alternatives>
    <tex-math><![CDATA[\pi]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>π</mml:mi></mml:math></alternatives></inline-formula>
    is the conventional notation for any dimensionless product. Thus,
    the number of variables is reduced from 7 to 4.</p>
  </sec>
</sec>
<sec id="conclusion">
  <title>Conclusion</title>
  <p><monospace>diman</monospace> is a Clojure library with no other
  dependencies. It has its own linear algebra submodule which provides
  all the necessary operations. Internally, the numerical data type is
  Clojure’s <italic>ratio</italic>; a ratio between integers rather than
  floats
  (<xref alt="Hickey, 2021" rid="ref-ClojureU003A2020" ref-type="bibr">Hickey,
  2021</xref>). This avoids truncation and rounding errors. Since
  dimensional analysis does not often involve very large matrices, the
  hit on computational performance due to using the
  <italic>ratio</italic> number type is practically insignificant.
  <monospace>diman</monospace> supplies all the necessary functions for
  dimensional homogeneity operations and the derivation of dimensionless
  products; thus making the analysis steps transparent.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The project received no funding.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-LanghaarU003A1951">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Langhaar</surname><given-names>Henry L.</given-names></name>
      </person-group>
      <source>Dimensional Analysis and Theory of Models</source>
      <publisher-name>John Wiley &amp; Sons, Inc.</publisher-name>
      <publisher-loc>New York, NY, USA</publisher-loc>
      <year iso-8601-date="1951">1951</year>
    </element-citation>
  </ref>
  <ref id="ref-PreussnerU003A2018">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Preussner</surname><given-names>Gerke Max</given-names></name>
      </person-group>
      <article-title>Dimensional Analysis in Programming Languages</article-title>
      <source>Personal Homepage</source>
      <year iso-8601-date="2018-05">2018</year><month>05</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2021-06-20">2021</year><month>06</month><day>20</day></date-in-citation>
      <uri>https://gmpreussner.com/research/dimensional-analysis-in-programming-languages</uri>
    </element-citation>
  </ref>
  <ref id="ref-SharmaU003A2021">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Sharma</surname><given-names>B. Lungsi</given-names></name>
      </person-group>
      <article-title>Dimensional analysis: A potential use of dimensionless products in biology/neuroscience</article-title>
      <publisher-name>Institut des Neurosciences Paris-Saclay (NeuroPSI), Département de Neurosciences Intégratives et Computationnelles (ICN), CNRS</publisher-name>
      <year iso-8601-date="2021-07-26">2021</year><month>07</month><day>26</day>
      <uri>https://lungsi-slides.github.io/dataclub/icn/2021July26/index.html</uri>
    </element-citation>
  </ref>
  <ref id="ref-BIPMU003A2020">
    <element-citation publication-type="webpage">
      <person-group person-group-type="author">
        <name><surname>BIPM</surname></name>
      </person-group>
      <article-title>Base unit definitions</article-title>
      <publisher-name>Bureau International des Poids et Mesures</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <uri>https://www.bipm.org/en/measurement-units/base-units.html</uri>
    </element-citation>
  </ref>
  <ref id="ref-NgwuaU003A2020">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Ngwua</surname><given-names>Lungsi</given-names></name>
      </person-group>
      <article-title>Theory of Dimensionless Products</article-title>
      <source>Neuralgraphs</source>
      <year iso-8601-date="2020-07-25">2020</year><month>07</month><day>25</day>
      <uri>https://www.neuralgraphs.com/lectures/diman/lectp1.html</uri>
    </element-citation>
  </ref>
  <ref id="ref-ClojureU003A2020">
    <element-citation publication-type="webpage">
      <person-group person-group-type="author">
        <name><surname>Hickey</surname><given-names>Rich</given-names></name>
      </person-group>
      <article-title>Clojure - Data Structures</article-title>
      <publisher-name>Clojure</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <uri>https://clojure.org/reference/data_structures</uri>
    </element-citation>
  </ref>
  <ref id="ref-KennedyU003A1996">
    <element-citation publication-type="report">
      <person-group person-group-type="author">
        <name><surname>Kennedy</surname><given-names>Andrew John</given-names></name>
      </person-group>
      <article-title>Programming languages and dimensions</article-title>
      <publisher-name>University of Cambridge</publisher-name>
      <publisher-loc>15 JJ Thomson Avenue, Cambridge CB3 0FD, United Kingdom</publisher-loc>
      <year iso-8601-date="1996-04">1996</year><month>04</month>
      <uri>https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-391.pdf</uri>
    </element-citation>
  </ref>
  <ref id="ref-KennedyU003A2010">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Kennedy</surname><given-names>Andrew John</given-names></name>
      </person-group>
      <article-title>Types for Units-of-Measure: Theory and Practice</article-title>
      <source>Central European Functional Programming School: Third Summer School, CEFP 2009, Budapest, Hungary, May 21-23, 2009 and Komárno, Slovakia, May 25-30, 2009, Revised Selected Lectures</source>
      <person-group person-group-type="editor">
        <name><surname>Horváth</surname><given-names>Zoltán</given-names></name>
        <name><surname>Plasmeijer</surname><given-names>Rinus</given-names></name>
        <name><surname>Zsók</surname><given-names>Viktória</given-names></name>
      </person-group>
      <publisher-name>Springer Berlin Heidelberg</publisher-name>
      <publisher-loc>Berlin, Heidelberg</publisher-loc>
      <year iso-8601-date="2010">2010</year>
      <isbn>978-3-642-17685-2</isbn>
      <uri>https://doi.org/10.1007/978-3-642-17685-2_8</uri>
      <pub-id pub-id-type="doi">10.1007/978-3-642-17685-2_8</pub-id>
      <fpage>268</fpage>
      <lpage>305</lpage>
    </element-citation>
  </ref>
  <ref id="ref-EliasenU003A2004">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Eliasen</surname><given-names>Alan</given-names></name>
      </person-group>
      <article-title>Frink - A Language for Understanding the Physical World</article-title>
      <publisher-name>Lightweight Languages 4 (LL4) conference at MIT in December 2004</publisher-name>
      <year iso-8601-date="2004">2004</year>
      <uri>https://frinklang.org/LL4.html</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
