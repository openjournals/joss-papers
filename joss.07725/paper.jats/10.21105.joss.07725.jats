<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">7725</article-id>
<article-id pub-id-type="doi">10.21105/joss.07725</article-id>
<title-group>
<article-title>Potnia: A Python library for the conversion of
transliterated ancient texts to Unicode</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" equal-contrib="yes" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-5212-1427</contrib-id>
<name>
<surname>Tour</surname>
<given-names>Emily</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0001-2059-1683</contrib-id>
<name>
<surname>Shrestha</surname>
<given-names>Kabir Manandhar</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-1274-6750</contrib-id>
<name>
<surname>Turnbull</surname>
<given-names>Robert</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>University of Melbourne, Australia</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Melbourne Data Analytics Platform, University of Melbourne,
Australia</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-09-23">
<day>23</day>
<month>9</month>
<year>2024</year>
</pub-date>
<volume>10</volume>
<issue>108</issue>
<fpage>7725</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>Unicode</kwd>
<kwd>ancient texts</kwd>
<kwd>ancient scripts</kwd>
<kwd>ancient languages</kwd>
<kwd>transliteration</kwd>
<kwd>machine learning</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Potnia is an open-source Python library designed to convert
  Romanized transliterations of ancient texts into their respective
  Unicode representations. Significant progress has been made in the
  digitization of ancient language corpora. However, many of these
  datasets are solely presented in transliterated form, even though the
  necessary Unicode blocks exist to render them using their native
  script. This restriction to using transliterated datasets for certain
  ancient scripts has the potential to limit the precision of linguistic
  analysis via machine learning.</p>
  <p>Potnia bridges this gap by providing a flexible framework for
  converting transliterations into Unicode. By enabling tokenization and
  processing in the original script, Potnia can optimize tasks such as
  textual restoration and machine learning-based analysis. The library
  currently supports:</p>
  <list list-type="bullet">
    <list-item>
      <p>Linear A</p>
    </list-item>
    <list-item>
      <p>Linear B</p>
    </list-item>
    <list-item>
      <p>Hittite cuneiform</p>
    </list-item>
    <list-item>
      <p>Arabic</p>
    </list-item>
  </list>
  <p>While Linear B has the most comprehensive test cases and is the
  most robust, the tool can also be used effectively for the other
  scripts. The architectural flexibility of Potnia makes it easy to
  accommodate additional scripts, offering significant value to both
  computational linguistics and digital humanities by enabling
  researchers to work with ancient texts in their native scripts.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>While machine learning has increasingly been applied to the study
  of ancient texts
  (<xref alt="Sommerschield et al., 2023" rid="ref-sommerschieldMachineLearningAncient2023" ref-type="bibr">Sommerschield
  et al., 2023</xref>), much of this progress has involved working with
  transliterated texts, rather than native script formats
  (<xref alt="Fetaya et al., 2020" rid="ref-fetayaRestorationFragmentaryBabylonian2020" ref-type="bibr">Fetaya
  et al., 2020</xref>;
  <xref alt="Luo et al., 2019" rid="ref-luoNeuralDeciphermentMinimumcost2019" ref-type="bibr">Luo
  et al., 2019</xref>;
  <xref alt="Papavassileiou et al., 2023" rid="ref-papavassileiouGenerativeModelMycenaean2023" ref-type="bibr">Papavassileiou
  et al., 2023</xref>;
  <xref alt="Perono Cacciafoco &amp; Loh, 2021" rid="ref-peronocacciafocoNewApproachDecipherment2021" ref-type="bibr">Perono
  Cacciafoco &amp; Loh, 2021</xref>). Although Unicode standards exist
  for many ancient scripts, transliterated texts remain prevalent due to
  historical digitization practices.</p>
  <p>Transliteration is the process of converting text from its original
  script into a different script, using systematic processes. It allows
  those who can understand the secondary script to comprehend the
  orthography and the approximate pronunciation of the original text.
  Prior to the gradual introduction of relevant Unicode blocks since the
  1990s
  (<xref alt="Hossain, 2024" rid="ref-Hossain2024" ref-type="bibr">Hossain,
  2024</xref>), it was also usually necessary for representing non-Latin
  scripts on Western computational systems, which were largely confined
  to letters of the Latin alphabet and a small number of special
  characters.</p>
  <p>Transliteration has an important place in aiding new learners of an
  ancient script to understand the pronunciation and orthography of the
  underlying language it represents (particularly for non-alphabetic
  scripts, where beginners need to grasp a vast repertoire of unfamiliar
  signs). However, it is well recognized that this process can only
  provide an approximate, and often unsatisfactory or disputed,
  representation of the original text
  (<xref alt="Martinet, 1953" rid="ref-martinetProjectTransliterationClassical1953" ref-type="bibr">Martinet,
  1953</xref>;
  <xref alt="Odisho, 1992" rid="ref-odishoTransliteratingEnglishArabic1992" ref-type="bibr">Odisho,
  1992</xref>;
  <xref alt="Weinberg, 1974" rid="ref-weinbergTransliterationDocumentation1974" ref-type="bibr">Weinberg,
  1974</xref>). In particular, a lack of standardized approaches to
  transliteration can introduce considerable ambiguity and noise into
  the dataset in a variety of ways, including:</p>
  <list list-type="bullet">
    <list-item>
      <p>the use of various notation systems, with different
      transliterations representing the exact same sign in distinct ways
      (e.g. where
      <inline-graphic mimetype="image" mime-subtype="png" xlink:href="Csign_me3_large.png">
        <alt-text>Cuneiform sign ‘mè’</alt-text>
      </inline-graphic> in Akkadian cuneiform can be represented as
      either ‘mè’ or ‘me<sub>3</sub>’);</p>
    </list-item>
    <list-item>
      <p>changing opinions on particular sign values over time,
      introducing possible differences between older and newer
      transliterations
      (e.g. <inline-graphic mimetype="image" mime-subtype="png" xlink:href="LBsign_qa_large2.png">
        <alt-text>Linear B sign ‘qa’</alt-text>
      </inline-graphic> in the Linear B script changing from the
      previously suggested value of ‘pa<sub>2</sub>’ to
      ‘qa’)(<xref alt="Chadwick, 1973, pp. 389, 391" rid="ref-chadwickDocumentsMycenaeanGreek1973" ref-type="bibr">Chadwick,
      1973, pp. 389, 391</xref>);</p>
    </list-item>
    <list-item>
      <p>and the way in which transliteration obscures polyvalency in
      scripts, where a single sign can represent multiple different
      values
      (e.g. <inline-graphic mimetype="image" mime-subtype="png" xlink:href="Csign_har_large.png">
        <alt-text>Cuneiform sign ‘ḫar’</alt-text>
      </inline-graphic> in Hittite cuneiform can represent three
      different syllables, transliterated as ‘ḫar’, ‘ḫur’ and ‘mur’, as
      well as acting as a logogram for three different words, ‘ring’,
      ‘thick’ and ‘lung’).</p>
    </list-item>
  </list>
  <p>For language modelling tasks, we therefore suggest that
  representations of texts in their native form are preferable to
  achieve the most accurate results. A number of digitized corpora for
  well-resourced and widely studied ancient languages are now available
  in Unicode representations of their native script, including a corpus
  of ancient Greek
  (<xref alt="Cerrato et al., 2021" rid="ref-canonicalgreek" ref-type="bibr">Cerrato
  et al., 2021</xref>), classical Hebrew
  (<xref alt="Sefaria, 2024" rid="ref-sefaria_project" ref-type="bibr">Sefaria,
  2024</xref>), Syriac
  (<xref alt="Walters, 2020" rid="ref-digital_syriac" ref-type="bibr">Walters,
  2020</xref>) and Arabic
  (<xref alt="Nigst et al., 2023" rid="ref-openiti" ref-type="bibr">Nigst
  et al., 2023</xref>). However, many other online text corpora remain
  restricted to Romanized translisterations (despite the availability of
  relevant Unicode standards), presumably due to considerations around
  ease, system limitations and accessibility, e.g. Linear B
  (<xref alt="Aurora, 2015" rid="ref-auroraDAMOSDatabaseMycenaean2015" ref-type="bibr">Aurora,
  2015</xref>), Ugaritic
  (<xref alt="Prosser &amp; Pardee, 2019" rid="ref-prosser2019ras" ref-type="bibr">Prosser
  &amp; Pardee, 2019</xref>) and Sumero-Akkadian cuneiform
  (<xref alt="CDLI contributors, 2024" rid="ref-cdli2024" ref-type="bibr">CDLI
  contributors, 2024</xref>). For this latter group of scripts, current
  tools capable of converting transliterated ancient texts to the
  corresponding Unicode appear limited to a handful of individual
  scripts, such as the various implementations of ‘Cuneify’
  (<xref alt="Tinney, 2019" rid="ref-tinney2019cuneify" ref-type="bibr">Tinney,
  2019</xref>) that handle Sumero-Akkadian cuneiform, the PHP script
  ‘UnicodeConverter’, for Egyptian hieroglyphs
  (<xref alt="Ilin-Tomich, 2019" rid="ref-ilintomich2021unicodeconverter" ref-type="bibr">Ilin-Tomich,
  2019</xref>), or ‘Anatolian Hieroglyphics (Luwian) generation’ tool
  for Luwian hieroglyphs
  (<xref alt="Senior, 2023" rid="ref-senior2023anatoliangenerator" ref-type="bibr">Senior,
  2023</xref>), the latter only available to use through a basic online
  graphical user interface. While the PyArabic package
  (<xref alt="Zerrouki, 2023" rid="ref-Zerrouki2023" ref-type="bibr">Zerrouki,
  2023</xref>) is able to convert Arabic text to and from the popular
  Timothy Buckwalter transliteration system, Potnia provides a
  complementary functionality for the DIN 31635 transliteration system
  (<xref alt="Deutsches Institut für Normung, 2011" rid="ref-DIN31635" ref-type="bibr">Deutsches
  Institut für Normung, 2011</xref>) which is widely used in academic
  literature.</p>
  <p>In addition, such transliterations of ancient texts are often
  heavily annotated, with special characters used to denote a range of
  features including uncertain readings, missing or damaged elements,
  erasures, non-textual marks, and annotations by modern transliterators
  pertaining to structural or physical elements of the document. If not
  removed or handled appropriately, these have the potential to
  introduce further noise into language models.</p>
  <p>These are the primary gaps we have aimed to address through the
  development of Potnia. The library’s focus on ancient scripts and its
  extensible architecture make it a valuable asset for researchers
  working with digitized ancient corpora. It is also equipped to provide
  specific handling of these elements, with tailored tokenization and
  regularization rules pertaining to both script-specific and
  corpus-specific conventions. Potnia therefore enables a key
  pre-processing step in the language modelling pipeline, with the
  resulting Unicode outputs of ancient texts enabling more accurate and
  nuanced computational analysis of these texts in downstream modelling
  tasks.</p>
</sec>
<sec id="implementation">
  <title>Implementation</title>
  <p>Potnia is implemented in Python with an extensible architecture
  centered around the <monospace>Script</monospace> class, which
  converts transliterated texts into Unicode representations. It is
  designed to handle the complexities of ancient scripts through a
  flexible and customizable framework.</p>
  <sec id="key-features">
    <title>Key Features</title>
    <list list-type="order">
      <list-item>
        <p><bold>YAML-Based Mapping and Rule Specification:</bold> Each
        script in Potnia (e.g. Linear A, Linear B, Arabic, Hittite
        cuneiform) is configured via a single YAML file that contains
        syllabograms, logograms, and rules for transliteration and
        regularization. This unified structure simplifies updates,
        scales easily for new scripts, and eliminates the need for
        hardcoded source files
        (fig. <xref alt="[fig:mappings]" rid="figU003Amappings">[fig:mappings]</xref>).</p>
      </list-item>
    </list>
    <fig>
      <caption><p>Example of YAML mapping
      specification.<styled-content id="figU003Amappings"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="mappings.png" />
    </fig>
    <list list-type="order">
      <list-item>
        <label>2.</label>
        <p><bold>Tokenization:</bold> The
        <monospace>tokenize_transliteration</monospace> method applies
        complex symbol replacements and regular expressions to
        transliterated text based on the rules specified in the YAML
        file. This tokenization process ensures that the text is split
        accurately into its meaningful components, handling special
        symbols and spacing using placeholders, and preparing the text
        for Unicode conversion.</p>
      </list-item>
      <list-item>
        <label>3.</label>
        <p><bold>Transliteration to Unicode:</bold> Potnia uses the
        <monospace>__call__</monospace> method to convert the
        transliterated text to its Unicode representation
        (fig. <xref alt="[fig:potnia-example]" rid="figU003Apotnia-example">[fig:potnia-example]</xref>).</p>
      </list-item>
    </list>
    <fig>
      <caption><p>Example of using
      Potnia.<styled-content id="figU003Apotnia-example"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="potnia-example.png" />
    </fig>
    <list list-type="order">
      <list-item>
        <label>4.</label>
        <p><bold>Regularization of Text:</bold> The regularize method
        applies a series of regular expression rules to clean and
        normalize the Unicode output. It removes unnecessary tags,
        ignores patterns specified in the YAML file (e.g. annotations or
        uncertain characters), and ensures that only the essential
        characters are retained. This step ensures the output is refined
        and ready for downstream tasks.</p>
      </list-item>
      <list-item>
        <label>5.</label>
        <p><bold>Comprehensive Testing:</bold> Pytest fixtures allow us
        to define test cases as lines in YAML files which allowed us to
        consisely add over 360 test examples, covering a broad range of
        edge cases. The code coverage of the tests is 100%.</p>
      </list-item>
      <list-item>
        <label>6.</label>
        <p><bold>Versatile Interface Options</bold> Users can interact
        with Potnia as a Python library, or through the command line
        interface (CLI), or through the graphical user interface (GUI)
        (fig. <xref alt="[fig:potnia-gui]" rid="figU003Apotnia-gui">[fig:potnia-gui]</xref>)</p>
      </list-item>
    </list>
    <fig>
      <caption><p>Example of using the Potnia
      GUI.<styled-content id="figU003Apotnia-gui"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="potnia-gui.png" />
    </fig>
  </sec>
</sec>
<sec id="research-application">
  <title>Research Application</title>
  <p>Potnia’s design and functionality address the following challenges
  in the analysis of ancient texts:</p>
  <list list-type="order">
    <list-item>
      <p><bold>Extensibility:</bold> Potnia is designed to be highly
      extensible, allowing researchers to integrate new scripts by
      defining script-specific rules for tokenization and conversion.
      This flexibility makes the library suitable for a wide range of
      ancient scripts that are not yet represented in Unicode, providing
      a valuable tool for researchers across various fields of ancient
      studies.</p>
    </list-item>
    <list-item>
      <p><bold>Integration with Research Workflows:</bold> Researchers
      can easily incorporate Potnia into their existing workflows. For
      example, in a typical research scenario, Potnia could be used to
      preprocess a corpus of Linear B texts before feeding them into a
      machine learning model for further analysis.</p>
    </list-item>
  </list>
  <p>As part of a broader initiative to develop language models for
  ancient language research, Potnia serves as a foundational component
  by converting Romanized transliterations of Linear B texts into
  Unicode datasets for computational analysis. These datasets enable the
  development of language-specific models supporting tasks such as text
  generation, restoration and vector embedding analysis. The library’s
  modular design facilitates its application to additional ancient
  scripts, contributing to broader research initiatives in computational
  philology.</p>
</sec>
<sec id="availability">
  <title>Availability</title>
  <p>Potnia is open-source software released under the Apache 2.0
  license. It is available through PyPI
  <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/potnia/">https://pypi.org/project/potnia/</ext-link>
  and GitHub
  <ext-link ext-link-type="uri" xlink:href="https://github.com/AncientNLP/potnia">https://github.com/AncientNLP/potnia</ext-link>.
  We welcome contributions from the community and adhere to the
  Contributor Covenant Code of Conduct. Documentation is available at
  <ext-link ext-link-type="uri" xlink:href="https://ancientnlp.github.io/potnia/">https://ancientnlp.github.io/potnia/</ext-link>.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We acknowledge support from Wytamma Wirth, Brent Davis, Kim Doyle,
  Man-Hua (Kate) Chu, Anhui (Ellie) Situ, Ekaterina Vylomova, Chris
  Guest and Stavroula (Stephie) Nikoloudis. This research was supported
  by The University of Melbourne’s Research Computing Services. Robert
  Turnbull completed part of this work through the BICROSS project,
  which has received funding from the European Research Council (ERC)
  under the European Union’s Horizon Europe research and innovation
  programme (grant agreement no. 101043730 – BICROSS –
  ERC-2021-COG).</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-sommerschieldMachineLearningAncient2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Sommerschield</surname><given-names>Thea</given-names></name>
        <name><surname>Assael</surname><given-names>Yannis</given-names></name>
        <name><surname>Pavlopoulos</surname><given-names>John</given-names></name>
        <name><surname>Stefanak</surname><given-names>Vanessa</given-names></name>
        <name><surname>Senior</surname><given-names>Andrew</given-names></name>
        <name><surname>Dyer</surname><given-names>Chris</given-names></name>
        <name><surname>Bodel</surname><given-names>John</given-names></name>
        <name><surname>Prag</surname><given-names>Jonathan</given-names></name>
        <name><surname>Androutsopoulos</surname><given-names>Ion</given-names></name>
        <name><surname>Freitas</surname><given-names>Nando De</given-names></name>
      </person-group>
      <article-title>Machine learning for ancient languages: A survey.</article-title>
      <source>Computational Linguistics</source>
      <year iso-8601-date="2023">2023</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-10-14">2023</year><month>10</month><day>14</day></date-in-citation>
      <volume>49</volume>
      <issue>3</issue>
      <issn>0891-2017</issn>
      <uri>https://direct.mit.edu/coli/article/doi/10.1162/coli_a_00481/116160/Machine-Learning-for-Ancient-Languages-A-Survey</uri>
      <pub-id pub-id-type="doi">10.1162/coli_a_00481</pub-id>
      <fpage>1</fpage>
      <lpage>45</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Hossain2024">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hossain</surname><given-names>Anushah</given-names></name>
      </person-group>
      <article-title>Text Standards for the “Rest of World”: The Making of the Unicode Standard and the OpenType Format</article-title>
      <source>IEEE Annals of the History of Computing</source>
      <year iso-8601-date="2024">2024</year>
      <volume>46</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1109/MAHC.2024.3351948</pub-id>
      <fpage>20</fpage>
      <lpage>33</lpage>
    </element-citation>
  </ref>
  <ref id="ref-digital_syriac">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Walters</surname><given-names>James E.</given-names></name>
      </person-group>
      <article-title>The Digital Syriac Corpus: A Digital Repository for Syriac Texts</article-title>
      <source>Zeitschrift für Antikes Christentum / Journal of Ancient Christianity</source>
      <year iso-8601-date="2020">2020</year>
      <volume>24</volume>
      <issue>1</issue>
      <uri>https://doi.org/10.1515/zac-2020-0018</uri>
      <pub-id pub-id-type="doi">10.1515/zac-2020-0018</pub-id>
      <fpage>109</fpage>
      <lpage>122</lpage>
    </element-citation>
  </ref>
  <ref id="ref-openiti">
    <element-citation publication-type="dataset">
      <person-group person-group-type="author">
        <name><surname>Nigst</surname><given-names>Lorenz</given-names></name>
        <name><surname>Romanov</surname><given-names>Maxim</given-names></name>
        <name><surname>Savant</surname><given-names>Sarah Bowen</given-names></name>
        <name><surname>Seydi</surname><given-names>Masoumeh</given-names></name>
        <name><surname>Verkinderen</surname><given-names>Peter</given-names></name>
      </person-group>
      <article-title>OpenITI: a Machine-Readable Corpus of Islamicate Texts</article-title>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2023-10">2023</year><month>10</month>
      <uri>https://doi.org/10.5281/zenodo.10021513</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.10021513</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-sefaria_project">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>Sefaria</string-name>
      </person-group>
      <article-title>Sefaria: A living library of jewish texts online</article-title>
      <publisher-name>https://www.sefaria.org</publisher-name>
      <year iso-8601-date="2024">2024</year>
    </element-citation>
  </ref>
  <ref id="ref-canonicalgreek">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Cerrato</surname><given-names>Lisa</given-names></name>
        <name><surname>Almas</surname><given-names>Bridget</given-names></name>
        <name><surname>TDBuck</surname></name>
        <name><surname>ahanhardt</surname></name>
        <name><surname>srdee</surname></name>
        <name><surname>Babeu</surname><given-names>Alison</given-names></name>
        <name><surname>Clérice</surname><given-names>Thibault</given-names></name>
        <name><surname>Fleischman</surname><given-names>Scott</given-names></name>
        <name><surname>gregorycrane</surname></name>
        <name><surname>Munson</surname><given-names>Matthew</given-names></name>
        <name><surname>Berra</surname><given-names>Aurélien</given-names></name>
        <name><surname>Mittmann</surname><given-names>Adiel</given-names></name>
        <name><surname>Palladino</surname><given-names>Chiara</given-names></name>
        <name><surname>KATEBHN</surname></name>
        <name><surname>Sowell</surname><given-names>Eric</given-names></name>
        <name><surname>Kalvesmaki</surname><given-names>Joel</given-names></name>
        <name><surname>Scott</surname><given-names>Stephen</given-names></name>
        <name><surname>Hellingman</surname><given-names>Jeroen</given-names></name>
        <name><surname>Andrei</surname></name>
        <name><surname>Drymon</surname><given-names>Chris</given-names></name>
      </person-group>
      <article-title>Canonical greek literature</article-title>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2021-07">2021</year><month>07</month>
      <uri>https://doi.org/10.5281/zenodo.5090923</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.5090923</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-luoNeuralDeciphermentMinimumcost2019">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Luo</surname><given-names>Jiaming</given-names></name>
        <name><surname>Cao</surname><given-names>Yuan</given-names></name>
        <name><surname>Barzilay</surname><given-names>Regina</given-names></name>
      </person-group>
      <article-title>Neural decipherment via minimum-cost flow: From Ugaritic to Linear B</article-title>
      <source>Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics</source>
      <publisher-name>Association for Computational Linguistics</publisher-name>
      <publisher-loc>Florence, Italy</publisher-loc>
      <year iso-8601-date="2019">2019</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-10-26">2023</year><month>10</month><day>26</day></date-in-citation>
      <uri>https://aclanthology.org/P19-1303</uri>
      <pub-id pub-id-type="doi">10.18653/v1/P19-1303</pub-id>
      <fpage>3146</fpage>
      <lpage>3155</lpage>
    </element-citation>
  </ref>
  <ref id="ref-papavassileiouGenerativeModelMycenaean2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Papavassileiou</surname><given-names>Katerina</given-names></name>
        <name><surname>Kosmopoulos</surname><given-names>Dimitrios I.</given-names></name>
        <name><surname>Owens</surname><given-names>Gareth</given-names></name>
      </person-group>
      <article-title>A generative model for the Mycenaean Linear B script and its application in infilling text from ancient tablets</article-title>
      <source>Journal on Computing and Cultural Heritage</source>
      <year iso-8601-date="2023">2023</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-10-14">2023</year><month>10</month><day>14</day></date-in-citation>
      <volume>16</volume>
      <issue>3</issue>
      <issn>1556-4673</issn>
      <uri>https://dl.acm.org/doi/10.1145/3593431</uri>
      <pub-id pub-id-type="doi">10.1145/3593431</pub-id>
      <fpage>1</fpage>
      <lpage>25</lpage>
    </element-citation>
  </ref>
  <ref id="ref-fetayaRestorationFragmentaryBabylonian2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Fetaya</surname><given-names>Ethan</given-names></name>
        <name><surname>Lifshitz</surname><given-names>Yonatan</given-names></name>
        <name><surname>Aaron</surname><given-names>Elad</given-names></name>
        <name><surname>Gordin</surname><given-names>Shai</given-names></name>
      </person-group>
      <article-title>Restoration of fragmentary Babylonian texts using recurrent neural networks</article-title>
      <source>Proceedings of the National Academy of Sciences</source>
      <year iso-8601-date="2020-09">2020</year><month>09</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-10-14">2023</year><month>10</month><day>14</day></date-in-citation>
      <volume>117</volume>
      <issue>37</issue>
      <issn>0027-8424</issn>
      <uri>https://pnas.org/doi/full/10.1073/pnas.2003794117</uri>
      <pub-id pub-id-type="doi">10.1073/pnas.2003794117</pub-id>
      <fpage>22743</fpage>
      <lpage>22751</lpage>
    </element-citation>
  </ref>
  <ref id="ref-peronocacciafocoNewApproachDecipherment2021">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Perono Cacciafoco</surname><given-names>Francesco</given-names></name>
        <name><surname>Loh</surname><given-names>Colin Jia Sheng</given-names></name>
      </person-group>
      <article-title>A New Approach to the Decipherment of Linear A, Stage 2 - Cryptanalysis and Language Deciphering: A &quot;Brute Force Attack&quot; on an Undeciphered Writing System</article-title>
      <source>Grapholinguistics in the 21st Century 2020. Proceedings</source>
      <publisher-name>Fluxus Editions</publisher-name>
      <publisher-loc>Brest</publisher-loc>
      <year iso-8601-date="2021">2021</year>
      <pub-id pub-id-type="doi">10.36824/2020-graf-cacc</pub-id>
      <fpage>927</fpage>
      <lpage>943</lpage>
    </element-citation>
  </ref>
  <ref id="ref-auroraDAMOSDatabaseMycenaean2015">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Aurora</surname><given-names>Federico</given-names></name>
      </person-group>
      <article-title>DĀMOS (Database of Mycenaean at Oslo). Annotating a fragmentarily attested language</article-title>
      <source>Procedia - Social and Behavioral Sciences</source>
      <year iso-8601-date="2015-07">2015</year><month>07</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2024-08-25">2024</year><month>08</month><day>25</day></date-in-citation>
      <volume>198</volume>
      <uri>https://linkinghub.elsevier.com/retrieve/pii/S187704281504416X</uri>
      <pub-id pub-id-type="doi">10.1016/j.sbspro.2015.07.415</pub-id>
      <fpage>21</fpage>
      <lpage>31</lpage>
    </element-citation>
  </ref>
  <ref id="ref-weinbergTransliterationDocumentation1974">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Weinberg</surname><given-names>Bella</given-names></name>
      </person-group>
      <article-title>Transliteration in documentation</article-title>
      <source>Journal of Documentation</source>
      <year iso-8601-date="1974">1974</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2024-09-23">2024</year><month>09</month><day>23</day></date-in-citation>
      <volume>30</volume>
      <issue>1</issue>
      <issn>0022-0418</issn>
      <uri>https://doi.org/10.1108/eb026567</uri>
      <pub-id pub-id-type="doi">10.1108/eb026567</pub-id>
      <fpage>18</fpage>
      <lpage>31</lpage>
    </element-citation>
  </ref>
  <ref id="ref-odishoTransliteratingEnglishArabic1992">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Odisho</surname><given-names>Edward Y.</given-names></name>
      </person-group>
      <article-title>Transliterating English in Arabic</article-title>
      <source>Zeitschrift für Arabische Linguistik</source>
      <year iso-8601-date="1992">1992</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2024-09-23">2024</year><month>09</month><day>23</day></date-in-citation>
      <issue>24</issue>
      <uri>http://www.jstor.org/stable/43525603</uri>
      <fpage>21</fpage>
      <lpage>34</lpage>
    </element-citation>
  </ref>
  <ref id="ref-martinetProjectTransliterationClassical1953">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Martinet</surname><given-names>André</given-names></name>
      </person-group>
      <article-title>A Project of Transliteration of Classical Greek</article-title>
      <source>WORD</source>
      <year iso-8601-date="1953">1953</year>
      <date-in-citation content-type="access-date"><year iso-8601-date="2024-09-23">2024</year><month>09</month><day>23</day></date-in-citation>
      <volume>9</volume>
      <issue>2</issue>
      <issn>0043-7956</issn>
      <uri>http://www.tandfonline.com/doi/full/10.1080/00437956.1953.11659466</uri>
      <pub-id pub-id-type="doi">10.1080/00437956.1953.11659466</pub-id>
      <fpage>152</fpage>
      <lpage>161</lpage>
    </element-citation>
  </ref>
  <ref id="ref-chadwickDocumentsMycenaeanGreek1973">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Chadwick</surname><given-names>J.</given-names></name>
      </person-group>
      <source>Documents in Mycenaean Greek</source>
      <publisher-name>Cambridge University Press</publisher-name>
      <publisher-loc>Cambridge</publisher-loc>
      <year iso-8601-date="1973">1973</year>
      <edition>2</edition>
    </element-citation>
  </ref>
  <ref id="ref-tinney2019cuneify">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Tinney</surname><given-names>Steve</given-names></name>
      </person-group>
      <article-title>Cuneify</article-title>
      <publisher-name>Oracc: The Open Richly Annotated Cuneiform Corpus</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <uri>http://oracc.museum.upenn.edu/doc/tools/cuneify/</uri>
    </element-citation>
  </ref>
  <ref id="ref-ilintomich2021unicodeconverter">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Ilin-Tomich</surname><given-names>Alexander</given-names></name>
      </person-group>
      <article-title>UnicodeConverter</article-title>
      <publisher-name>https://github.com/ailintom/UnicodeConverter/</publisher-name>
      <year iso-8601-date="2019">2019</year>
    </element-citation>
  </ref>
  <ref id="ref-senior2023anatoliangenerator">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Senior</surname><given-names>Andrew</given-names></name>
      </person-group>
      <article-title>Anatolian hieroglyphics (luwian) generation</article-title>
      <publisher-name>https://andrewsenior.com/luwian/</publisher-name>
      <year iso-8601-date="2023">2023</year>
    </element-citation>
  </ref>
  <ref id="ref-prosser2019ras">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Prosser</surname><given-names>Miller C.</given-names></name>
        <name><surname>Pardee</surname><given-names>Dennis G.</given-names></name>
      </person-group>
      <article-title>The Ras Shamra Tablet Inventory</article-title>
      <publisher-name>https://onlinepublications.uchicago.edu/RSTI/</publisher-name>
      <year iso-8601-date="2019">2019</year>
    </element-citation>
  </ref>
  <ref id="ref-cdli2024">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>CDLI contributors</string-name>
      </person-group>
      <article-title>Cuneiform Digital Library Initiative</article-title>
      <publisher-name>https://cdli.mpiwg-berlin.mpg.de/</publisher-name>
      <year iso-8601-date="2024">2024</year>
    </element-citation>
  </ref>
  <ref id="ref-Zerrouki2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Zerrouki</surname><given-names>Taha</given-names></name>
      </person-group>
      <article-title>PyArabic: A Python package for Arabic text</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <volume>8</volume>
      <issue>84</issue>
      <uri>https://doi.org/10.21105/joss.04886</uri>
      <pub-id pub-id-type="doi">10.21105/joss.04886</pub-id>
      <fpage>4886</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-DIN31635">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>Deutsches Institut für Normung</string-name>
      </person-group>
      <article-title>DIN 31635: Transliteration of the Arabic alphabet</article-title>
      <publisher-name>Standard published by Deutsches Institut für Normung</publisher-name>
      <publisher-loc>Berlin</publisher-loc>
      <year iso-8601-date="2011">2011</year>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
