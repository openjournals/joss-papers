<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">7668</article-id>
<article-id pub-id-type="doi">10.21105/joss.07668</article-id>
<title-group>
<article-title>Mesa 3: Agent-based modeling with Python in
2025</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0002-0805-3425</contrib-id>
<name>
<surname>ter Hoeven</surname>
<given-names>Ewout</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-9447-2954</contrib-id>
<name>
<surname>Kwakkel</surname>
<given-names>Jan</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-9242-8500</contrib-id>
<name>
<surname>Hess</surname>
<given-names>Vincent</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-1576-0283</contrib-id>
<name>
<surname>Pike</surname>
<given-names>Thomas</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-9879-2138</contrib-id>
<name>
<surname>Wang</surname>
<given-names>Boyu</given-names>
</name>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0002-6902-111X</contrib-id>
<name>
<surname>rht</surname>
<given-names></given-names>
</name>
<xref ref-type="aff" rid="aff-5"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-8300-7384</contrib-id>
<name>
<surname>Kazil</surname>
<given-names>Jackie</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Delft University of Technology (Faculty of Technology,
Policy and Management), the Netherlands</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Independent Researcher, Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>George Mason University (Department of Computational Social
Science), United States</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>University at Buffalo (Department of Geography), United
States</institution>
</institution-wrap>
</aff>
<aff id="aff-5">
<institution-wrap>
<institution>Independent Researcher</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2025-01-01">
<day>1</day>
<month>1</month>
<year>2025</year>
</pub-date>
<volume>10</volume>
<issue>107</issue>
<fpage>7668</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
<license>
<license-p>Apache-2.0</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>agent-based modeling</kwd>
<kwd>simulation</kwd>
<kwd>complex systems</kwd>
<kwd>social science</kwd>
<kwd>complexity science</kwd>
<kwd>modeling</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Mesa is an open-source Python framework for agent-based modeling
  (ABM) that enables researchers to create, analyze, and visualize
  agent-based simulations. Mesa provides a comprehensive set of tools
  and abstractions for modeling complex systems, with capabilities
  spanning from basic agent management to sophisticated representation
  of spaces where agents interact. First released in 2014 and published
  in Masad et al.
  (<xref alt="2015" rid="ref-masad2015" ref-type="bibr">2015</xref>)
  (with updates published in Kazil et al.
  (<xref alt="2020" rid="ref-kazil2020" ref-type="bibr">2020</xref>)),
  this paper highlights advancements and presents Mesa in its current
  version (3.1.5) as of 2025.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Agent-based models (ABMs) are composed of autonomous, heterogeneous
  agents interacting locally with other agents. These interactions give
  rise to emergent phenomena. The aggregate dynamics of a system under
  study emerge from these local interactions
  (<xref alt="Joshua M. Epstein, 1999" rid="ref-epstein1999" ref-type="bibr">Joshua
  M. Epstein, 1999</xref>;
  <xref alt="Joshua M. Epstein &amp; Axtell, 1996" rid="ref-epstein_axtell_1996" ref-type="bibr">Joshua
  M. Epstein &amp; Axtell, 1996</xref>). This type of modeling quickly
  grew more sophisticated, requiring frameworks to execute them. This
  led to the establishment of
  <ext-link ext-link-type="uri" xlink:href="https://ccl.northwestern.edu/netlogo/">NetLogo</ext-link>
  in 1999 and
  <ext-link ext-link-type="uri" xlink:href="https://cs.gmu.edu/~eclab/projects/mason/">MASON</ext-link>
  in 2003.</p>
  <p>NetLogo is the most widely adopted tool and the first to make ABMs
  accessible, but it only allows for small models. MASON is Java-based,
  allowing for advancements in scalability and speed above NetLogo, but
  MASON is difficult for non-programmers. Both of these tools did not
  serve models over HTTP, which allows for hosting models on the web,
  nor did they take advantage of the rich scientific Python ecosystem.
  In response to these needs, Mesa was created with the goal of
  accessibility – targeting both beginner and advanced programmers. The
  major release of Mesa 3 provides advanced usability and stabilized
  functionality. These features include enhanced management of agents,
  data collection advancements, an improved visualization framework, and
  making it easier for researchers to create and analyze complex
  simulations.</p>
</sec>
<sec id="applications">
  <title>Applications</title>
  <p>Since its creation in 2014, Mesa has been applied to modeling a
  wide range of phenomena from economics and sociology to ecology and
  epidemiology and has been cited in more than 500 papers and 800
  authors. Mesa has been applied across diverse domains, including:</p>
  <list list-type="bullet">
    <list-item>
      <p>Infrastructure resilience and post-disaster recovery planning
      (<xref alt="Sun &amp; Zhang, 2020" rid="ref-sun2020post" ref-type="bibr">Sun
      &amp; Zhang, 2020</xref>)</p>
    </list-item>
    <list-item>
      <p>Market modeling, including renewable energy auctions and
      consumer behavior
      (<xref alt="Anatolitis &amp; Welisch, 2017" rid="ref-anatolitis2017putting" ref-type="bibr">Anatolitis
      &amp; Welisch, 2017</xref>)</p>
    </list-item>
    <list-item>
      <p>Transportation optimization, such as combined truck-drone
      delivery routing
      (<xref alt="Leon-Blanco et al., 2022" rid="ref-leon2022multi" ref-type="bibr">Leon-Blanco
      et al., 2022</xref>)</p>
    </list-item>
    <list-item>
      <p>Recommender systems analysis examining consumer-business value
      tradeoffs over time
      (<xref alt="Ghanem et al., 2022" rid="ref-ghanem2022balancing" ref-type="bibr">Ghanem
      et al., 2022</xref>)</p>
    </list-item>
    <list-item>
      <p>Climate adaptation modeling examining household-level
      behavioral responses to environmental shocks
      (<xref alt="Taberna et al., 2023" rid="ref-taberna2023uncertainty" ref-type="bibr">Taberna
      et al., 2023</xref>)</p>
    </list-item>
    <list-item>
      <p>SEIR modeling of Sars-CoV-2 (Covid-19)
      (<xref alt="Pham et al., 2021" rid="ref-pham2021interventions" ref-type="bibr">Pham
      et al., 2021</xref>)</p>
    </list-item>
    <list-item>
      <p>Management of edge computing resources
      (<xref alt="Souza et al., 2023" rid="ref-souza2023edgesimpy" ref-type="bibr">Souza
      et al., 2023</xref>)</p>
    </list-item>
  </list>
  <p>These applications showcase Mesa’s versatility in modeling complex
  systems with autonomous interacting agents, whether representing
  individual consumers, infrastructure components, buildings, or
  vehicles.</p>
  <p>The framework is particularly suited for:</p>
  <list list-type="bullet">
    <list-item>
      <p>Models with heterogeneous agent populations</p>
    </list-item>
    <list-item>
      <p>Systems requiring sophisticated spatial interactions</p>
    </list-item>
    <list-item>
      <p>Interactive exploration of parameter spaces</p>
    </list-item>
    <list-item>
      <p>Teaching and learning agent-based modeling</p>
    </list-item>
  </list>
</sec>
<sec id="core-capabilities">
  <title>Core capabilities</title>
  <p>Mesa is a Python-based framework for ABM that provides a
  comprehensive set of tools for creating, running, and analyzing ABMs.
  Mesa integrates with the wider scientific Python ecosystem with
  libraries such as
  <ext-link ext-link-type="uri" xlink:href="https://numpy.org/">NumPy</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://pandas.pydata.org/">pandas</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://matplotlib.org/">Matplotlib</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://networkx.org/">NetworkX</ext-link>,
  and more. The backend of the framework is written in Python, while the
  front-end end uses a Python implementation of React. The modular
  architecture is comprised of three main components:</p>
  <list list-type="order">
    <list-item>
      <p>Core ABM components (<italic>i.e.,</italic> agents, spaces,
      agent activation, control over random numbers) to build models</p>
    </list-item>
    <list-item>
      <p>Data collection and support for model experimentation</p>
    </list-item>
    <list-item>
      <p>Visualization systems</p>
    </list-item>
  </list>
  <p>This decoupled design allows selective use of components while
  enabling extension and customization.</p>
  <p>Mesa follows a two-track development model where new features are
  first released as experimental before being stabilized. Experimental
  features are clearly marked as such and may have their APIs change
  between releases. They are graduated to stable status once their APIs
  and implementations are proven through community testing and feedback.
  Stable features follow semantic versioning.</p>
  <sec id="core-abm-components">
    <title>Core ABM components</title>
    <sec id="model">
      <title>Model</title>
      <p>The central class in Mesa is the Model. To build a model, the
      user instantiates a model object, creates a space within it, and
      populates the space with agent instances. Since ABMs are typically
      stochastic simulations, Mesa includes a random number generator
      and, for reproducibility purposes, allows the user to pass a
      seed.</p>
      <code language="python">class SimpleModel(mesa.Model):
    def __init__(self, n_agents=10, seed=42):
        super().__init__(seed=seed)  # Initialize Mesa model with random seed

        SimpleAgent.create_agents(self, n_agents, energy=100)

    def step(self):
        self.agents.shuffle_do(&quot;step&quot;)  # Activate all agents in random order</code>
    </sec>
    <sec id="agents">
      <title>Agents</title>
      <p>Central to ABMs are the autonomous heterogeneous agents. Mesa
      provides a variety of base agent classes which the user can
      subclass. In its most basic implementation, an agent subclass
      specifies the <monospace>__init__</monospace> and
      <monospace>step</monospace> method. Any subclass of the basic mesa
      agent subclass registers itself with the specified model instance,
      and via <monospace>agent.remove</monospace> it will remove itself
      from the model. It is strongly encouraged to rely on
      <monospace>remove</monospace>, and even extend it if needed to
      ensure agents are fully removed from the simulation. Sometimes an
      agent subclass is referred to as a “type” of agent.</p>
      <code language="python">class SimpleAgent(mesa.Agent):
    def __init__(self, model, energy):
        super().__init__(model)  # Initialize Mesa agent
        self.energy = energy

    def step(self):
        self.energy -= 1
        if self.energy &lt;= 0:
            self.remove()</code>
    </sec>
    <sec id="agent-management">
      <title>Agent management</title>
      <p>One significant advancement of Mesa 3 is expanded functionality
      around agent management. The new
      <ext-link ext-link-type="uri" xlink:href="https://mesa.readthedocs.io/latest/apis/agent.html#mesa.agent.AgentSet"><monospace>AgentSet</monospace></ext-link>
      class provides methods that allow users to filter, group, and
      analyze agents, making it easier to express complex model
      logic.</p>
      <p>When agents are created, they automatically register with the
      model via <monospace>model.register_agent(self)</monospace>. This
      registration automatically adds the agent to an
      <monospace>AgentSet</monospace> that’s accessible through the
      model’s <monospace>agents</monospace> property. Additional
      <monospace>AgentSet</monospace> instances for each agent type are
      maintained and available through
      <monospace>model.agents_by_type</monospace>. These collections are
      automatically updated when agents are added or removed from the
      model.</p>
      <code language="python">    # Select wealthy agents and calculate average wealth
    wealthy = model.agents.select(lambda a: a.wealth &gt; 1000)
    avg_wealth = wealthy.agg(&quot;wealth&quot;, func=np.mean)

    # Group agents by type and apply behaviors
    grouped = model.agents.groupby(&quot;species&quot;)
    for species, agents in grouped:
        agents.shuffle_do(&quot;reproduce&quot;)</code>
    </sec>
    <sec id="spaces">
      <title>Spaces</title>
      <p>Mesa 3 provides both discrete (cell-based) and continuous space
      implementations. In discrete spaces, an agent occupies a cell.
      Mesa implements discrete spaces using a doubly-linked structure
      where each cell maintains connections to its neighbors. The
      framework includes several discrete space variants with a
      consistent API:</p>
      <list list-type="bullet">
        <list-item>
          <p>Grid-based: <monospace>OrthogonalMooreGrid</monospace>,
          <monospace>OrthogonalVonNeumanGrid</monospace>, and
          <monospace>HexGrid</monospace></p>
        </list-item>
        <list-item>
          <p>Network-based: <monospace>Network</monospace> for
          graph-based topologies</p>
        </list-item>
        <list-item>
          <p>Voronoi-based: <monospace>VoronoiMesh</monospace> for
          irregular tessellations (where space is divided into cells
          based on proximity to seed points)</p>
        </list-item>
      </list>
      <p>Example grid creation:</p>
      <code language="python">    grid = OrthogonalVonNeumannGrid((width, height), torus=False, random=model.random)</code>
      <p>In Mesa 3, specialized agent classes for spatial interactions
      in discrete spaces were added:</p>
      <list list-type="bullet">
        <list-item>
          <p><monospace>FixedAgent</monospace>: Is assigned to a cell,
          can access this cell, but cannot move to another cell.</p>
        </list-item>
        <list-item>
          <p><monospace>CellAgent</monospace>: Can move between
          cells</p>
        </list-item>
        <list-item>
          <p><monospace>Grid2DMovingAgent</monospace>: Extends
          <monospace>CellAgent</monospace> with directional movement
          methods</p>
        </list-item>
      </list>
      <p>All discrete spaces support PropertyLayers - efficient
      numpy-based arrays for storing cell-level properties. This newly
      added feature allows for agents to interact with spatial
      properties of the cell more easily:</p>
      <code language="python">    grid.create_property_layer(&quot;elevation&quot;, default_value=10)
    high_ground = grid.elevation.select_cells(lambda x: x &gt; 50)</code>
      <p>For models where agents need to move continuously through space
      rather than between discrete locations,
      <monospace>ContinuousSpace</monospace> allows agents to occupy any
      coordinate within defined boundaries:</p>
      <code language="python">    space = ContinuousSpace(x_max, y_max, torus=True)
    space.move_agent(agent, (new_x, new_y))</code>
    </sec>
    <sec id="time-advancement">
      <title>Time advancement</title>
      <p>Mesa supports two primary approaches to advancing time in
      simulations: incremental-time progression (tick-based) and
      next-event time progression</p>
      <p>Typically, ABMs represent time in discrete steps (often called
      “ticks”). For each tick, the model’s step method is called, and
      agents are activated to take their designated actions. The most
      frequently implemented approach is shown below, which runs a model
      for 100 ticks:</p>
      <code language="python">    model = Model(seed=42)

    for _ in range(100):
        model.step()</code>
      <p>Before Mesa 3, all agents were activated within the step method
      of the model using predefined schedulers. However, the newly added
      <monospace>AgentSet</monospace> class provides a more flexible way
      to activate agents. These changes include the removal of the
      Scheduler API and its previously available fixed patterns.</p>
      <code language="python">    model.agents.do(&quot;step&quot;)  # Sequential activation

    model.agents.shuffle_do(&quot;step&quot;)  # Random activation

    # Multi-stage activation:
    for stage in [&quot;move&quot;, &quot;eat&quot;, &quot;reproduce&quot;]:
        model.agents.do(stage)

    # Activation by agent subclass:
    for klass in model.agent_types:
        model.agents_by_type[klass].do(&quot;step&quot;)</code>
      <p>Mesa also includes experimental support for next-event time
      progression through the
      <monospace>DiscreteEventSimulator</monospace>. This experimental
      feature allows scheduling events at arbitrary timestamps rather
      than fixed ticks, enabling both pure discrete event-based models
      and hybrid approaches. The latter hybrid approach combines
      traditional ABM time steps with the flexibility and potential
      performance benefits of event scheduling. While currently
      experimental, this capability is being actively developed and
      tested:</p>
      <code language="python">    # Pure event-based scheduling (experimental)
    simulator = DiscreteEventSimulator()
    model = Model(seed=42, simulator=simulator)
    simulator.schedule_event_relative(some_function, 3.1415)

    # Hybrid incremental time and next-event time progression (experimental)
    model = Model(seed=42, simulator=ABMSimulator())
    model.simulator.schedule_event_next_tick(some_function)</code>
    </sec>
  </sec>
  <sec id="visualization">
    <title>Visualization</title>
    <p>Mesa’s visualization module,
    <ext-link ext-link-type="uri" xlink:href="https://mesa.readthedocs.io/latest/tutorials/visualization_tutorial.html">SolaraViz</ext-link>,
    allows for interactive browser-based model exploration. Advancements
    with Mesa 3 update the visualization from harder-to-maintain custom
    code to
    <ext-link ext-link-type="uri" xlink:href="https://solara.dev/">Solara</ext-link>,
    a standardized library. Usage of the visualization module can be
    seen below:</p>
    <code language="python">    visualization = SolaraViz(
        model=model,
        components=[
            make_space_component(wolf_sheep_portrayal),          # Grid visualization
            make_plot_component([&quot;Wolves&quot;, &quot;Sheep&quot;, &quot;Grass&quot;]),   # Population plot
            lambda m: f&quot;Step {m.steps}: {len(m.agents)} agents&quot;  # Text display
        ],
        model_params=model_params
    )</code>
    <fig>
      <caption><p>A screenshot of the WolfSheep Model in
      Mesa</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="../docs/images/wolf_sheep.png" />
    </fig>
    <p>Key features include:</p>
    <list list-type="bullet">
      <list-item>
        <p>Interactive model controls</p>
      </list-item>
      <list-item>
        <p>Real-time data visualization</p>
      </list-item>
      <list-item>
        <p>Customizable agent and space portrayal</p>
      </list-item>
      <list-item>
        <p>Support for multiple visualization types, including grids,
        networks, and charts</p>
      </list-item>
    </list>
  </sec>
  <sec id="experimentation-and-analysis">
    <title>Experimentation and analysis</title>
    <sec id="data-collection">
      <title>Data collection</title>
      <p>Mesa’s DataCollector enables systematic data gathering during
      simulations:</p>
      <code language="python">    collector = DataCollector(
        model_reporters={&quot;population&quot;: lambda m: len(m.agents)},
        agent_reporters={&quot;wealth&quot;: &quot;wealth&quot;},
        agenttype_reporters={
            Predator: {&quot;kills&quot;: &quot;kills_count&quot;},
            Prey: {&quot;distance_fled&quot;: &quot;flight_distance&quot;}
        }
    )</code>
      <p>The collected data integrates seamlessly with pandas for
      analysis:</p>
      <code language="python">    model_data = collector.get_model_vars_dataframe()
    agent_data = collector.get_agent_vars_dataframe()</code>
    </sec>
    <sec id="parameter-sweeps">
      <title>Parameter sweeps</title>
      <p>Mesa supports systematic parameter exploration:</p>
      <code language="python">    parameters = {
        &quot;num_agents&quot;: range(10, 100, 10),
        &quot;growth_rate&quot;: [0.1, 0.2, 0.3]
    }
    results = mesa.batch_run(MyModel, parameters, iterations=5, max_steps=10)</code>
    </sec>
  </sec>
</sec>
<sec id="community-and-ecosystem">
  <title>Community and ecosystem</title>
  <p>Mesa has grown into a complete ecosystem with
  <ext-link ext-link-type="uri" xlink:href="https://mesa.readthedocs.io/latest/mesa_extension.html">extensions</ext-link>
  including:</p>
  <list list-type="bullet">
    <list-item>
      <p><ext-link ext-link-type="uri" xlink:href="https://github.com/projectmesa/mesa-geo">Mesa-Geo</ext-link>
      for geospatial modeling
      (<xref alt="Wang et al., 2022" rid="ref-wang2022mesa" ref-type="bibr">Wang
      et al., 2022</xref>)</p>
    </list-item>
    <list-item>
      <p><ext-link ext-link-type="uri" xlink:href="https://github.com/projectmesa/mesa-frames">Mesa-Frames</ext-link>
      for high-performance simulations</p>
    </list-item>
    <list-item>
      <p>A rich collection of community-contributed extensions,
      <ext-link ext-link-type="uri" xlink:href="https://github.com/projectmesa/mesa-examples">example
      models</ext-link>, and tutorials</p>
    </list-item>
  </list>
</sec>
<sec id="conclusions">
  <title>Conclusions</title>
  <p>Mesa 3 introduces significant advancements to the Python ABM
  framework, enhancing the core toolkit with greater control,
  interactivity, and speed for researchers. These notable improvements,
  paired with its foundational integration with the scientific Python
  ecosystem, modular architecture, and active community, make it an
  indispensable tool for researchers across disciplines working in
  Python who want to create and analyze agent-based models.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The advancements leading to Mesa 3 were developed by seven
  maintainers (the authors) and an active community with over 140
  <ext-link ext-link-type="uri" xlink:href="https://github.com/projectmesa/mesa/graphs/contributors">contributors</ext-link>.
  We would especially like to thank
  <ext-link ext-link-type="uri" xlink:href="https://github.com/dmasad">David
  Masad</ext-link> for his foundational work on Mesa.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-epstein_axtell_1996">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Epstein</surname><given-names>Joshua M.</given-names></name>
        <name><surname>Axtell</surname><given-names>Robert</given-names></name>
      </person-group>
      <source>Growing artificial societies: Social science from the bottom up</source>
      <publisher-name>Brookings Institution Press; MIT Press</publisher-name>
      <publisher-loc>Washington, DC,; Cambridge, MA</publisher-loc>
      <year iso-8601-date="1996">1996</year>
      <isbn>9780262550253</isbn>
    </element-citation>
  </ref>
  <ref id="ref-epstein1999">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Epstein</surname><given-names>Joshua M</given-names></name>
      </person-group>
      <article-title>Agent-based computational models and generative social science</article-title>
      <source>Complexity</source>
      <publisher-name>Wiley Online Library</publisher-name>
      <year iso-8601-date="1999">1999</year>
      <volume>4</volume>
      <issue>5</issue>
      <fpage>41</fpage>
      <lpage>60</lpage>
    </element-citation>
  </ref>
  <ref id="ref-masad2015">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Masad</surname><given-names>David</given-names></name>
        <name><surname>Kazil</surname><given-names>Jacqueline L</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Mesa: An agent-based modeling framework.</article-title>
      <source>SciPy</source>
      <publisher-name>Citeseer</publisher-name>
      <year iso-8601-date="2015">2015</year>
      <pub-id pub-id-type="doi">10.25080/Majora-7b98e3ed-009</pub-id>
      <fpage>51</fpage>
      <lpage>58</lpage>
    </element-citation>
  </ref>
  <ref id="ref-kazil2020">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Kazil</surname><given-names>Jackie</given-names></name>
        <name><surname>Masad</surname><given-names>David</given-names></name>
        <name><surname>Crooks</surname><given-names>Andrew</given-names></name>
      </person-group>
      <article-title>Utilizing python for agent-based modeling: The mesa framework</article-title>
      <source>Social, cultural, and behavioral modeling: 13th international conference, SBP-BRiMS 2020</source>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <pub-id pub-id-type="doi">10.1007/978-3-030-61255-9_30</pub-id>
      <fpage>308</fpage>
      <lpage>317</lpage>
    </element-citation>
  </ref>
  <ref id="ref-wang2022mesa">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Wang</surname><given-names>Boyu</given-names></name>
        <name><surname>Hess</surname><given-names>Vincent</given-names></name>
        <name><surname>Crooks</surname><given-names>Andrew</given-names></name>
      </person-group>
      <article-title>Mesa-geo: A GIS extension for the mesa agent-based modeling framework in python</article-title>
      <source>Proceedings of the 5th ACM SIGSPATIAL international workshop on GeoSpatial simulation</source>
      <year iso-8601-date="2022">2022</year>
      <pub-id pub-id-type="doi">10.1145/3557989.3566157</pub-id>
      <fpage>1</fpage>
      <lpage>10</lpage>
    </element-citation>
  </ref>
  <ref id="ref-sun2020post">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Sun</surname><given-names>Jingran</given-names></name>
        <name><surname>Zhang</surname><given-names>Zhanmin</given-names></name>
      </person-group>
      <article-title>A post-disaster resource allocation framework for improving resilience of interdependent infrastructure networks</article-title>
      <source>Transportation Research Part D: Transport and Environment</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <volume>85</volume>
      <pub-id pub-id-type="doi">10.1016/j.trd.2020.102455</pub-id>
      <fpage>102455</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-anatolitis2017putting">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Anatolitis</surname><given-names>Vasilios</given-names></name>
        <name><surname>Welisch</surname><given-names>Marijke</given-names></name>
      </person-group>
      <article-title>Putting renewable energy auctions into action–an agent-based model of onshore wind power auctions in germany</article-title>
      <source>Energy Policy</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <volume>110</volume>
      <pub-id pub-id-type="doi">10.1016/j.enpol.2017.08.024</pub-id>
      <fpage>394</fpage>
      <lpage>402</lpage>
    </element-citation>
  </ref>
  <ref id="ref-pham2021interventions">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Pham</surname><given-names>Thi Mui</given-names></name>
        <name><surname>Tahir</surname><given-names>Hannan</given-names></name>
        <name><surname>Wijgert</surname><given-names>Janneke H. H. M. van de</given-names></name>
        <name><surname>Van der Roest</surname><given-names>Bastiaan R.</given-names></name>
        <name><surname>Ellerbroek</surname><given-names>Pauline</given-names></name>
        <name><surname>Bonten</surname><given-names>Marc J. M.</given-names></name>
        <name><surname>Bootsma</surname><given-names>Martin C. J.</given-names></name>
        <name><surname>Kretzschmar</surname><given-names>Mirjam E.</given-names></name>
      </person-group>
      <article-title>Interventions to control nosocomial transmission of SARS-CoV-2: A modelling study</article-title>
      <source>BMC Medicine</source>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2021-08">2021</year><month>08</month>
      <volume>19</volume>
      <pub-id pub-id-type="doi">10.1186/s12916-021-02060-y</pub-id>
      <fpage>211</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-leon2022multi">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Leon-Blanco</surname><given-names>Jose Miguel</given-names></name>
        <name><surname>Gonzalez-R</surname><given-names>Pedro L</given-names></name>
        <name><surname>Andrade-Pineda</surname><given-names>Jose L</given-names></name>
        <name><surname>Canca</surname><given-names>David</given-names></name>
        <name><surname>Calle</surname><given-names>Marcos</given-names></name>
      </person-group>
      <article-title>A multi-agent approach to the truck multi-drone routing problem</article-title>
      <source>Expert Systems with Applications</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <volume>195</volume>
      <pub-id pub-id-type="doi">10.1016/j.eswa.2022.116604</pub-id>
      <fpage>116604</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-taberna2023uncertainty">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Taberna</surname><given-names>Alessandro</given-names></name>
        <name><surname>Filatova</surname><given-names>Tatiana</given-names></name>
        <name><surname>Hadjimichael</surname><given-names>Antonia</given-names></name>
        <name><surname>Noll</surname><given-names>Brayton</given-names></name>
      </person-group>
      <article-title>Uncertainty in boundedly rational household adaptation to environmental shocks</article-title>
      <source>Proceedings of the National Academy of Sciences</source>
      <publisher-name>National Acad Sciences</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <volume>120</volume>
      <issue>44</issue>
      <pub-id pub-id-type="doi">10.1073/pnas.2215675120</pub-id>
      <fpage>e2215675120</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-ghanem2022balancing">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ghanem</surname><given-names>Nada</given-names></name>
        <name><surname>Leitner</surname><given-names>Stephan</given-names></name>
        <name><surname>Jannach</surname><given-names>Dietmar</given-names></name>
      </person-group>
      <article-title>Balancing consumer and business value of recommender systems: A simulation-based analysis</article-title>
      <source>Electronic Commerce Research and Applications</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <volume>55</volume>
      <pub-id pub-id-type="doi">10.1016/j.elerap.2022.101195</pub-id>
      <fpage>101195</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-souza2023edgesimpy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Souza</surname><given-names>Paulo S.</given-names></name>
        <name><surname>Ferreto</surname><given-names>Tiago</given-names></name>
        <name><surname>Calheiros</surname><given-names>Rodrigo N.</given-names></name>
      </person-group>
      <article-title>EdgeSimPy: Python-based modeling and simulation of edge computing resource management policies</article-title>
      <source>Future Generation Computer Systems</source>
      <year iso-8601-date="2023">2023</year>
      <volume>148</volume>
      <pub-id pub-id-type="doi">10.1016/j.future.2023.06.013</pub-id>
      <fpage>446</fpage>
      <lpage>459</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
