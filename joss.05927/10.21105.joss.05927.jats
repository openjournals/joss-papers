<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">5927</article-id>
<article-id pub-id-type="doi">10.21105/joss.05927</article-id>
<title-group>
<article-title>Automatic Computation for Robot Design (ACRoD): A Python
package for numerical calculation of Jacobian of a robot at a given
configuration around a specified end-effector point</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" equal-contrib="yes" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-9855-9368</contrib-id>
<name>
<surname>Jacob</surname>
<given-names>Akkarapakam Suneesh</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-3816-2438</contrib-id>
<name>
<surname>Datta</surname>
<given-names>Rituparna</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Indian Institute of Technology Kanpur, Kanpur,
India.</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Capgemini Technological Services India Limited, Bengaluru,
India.</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-04-07">
<day>7</day>
<month>4</month>
<year>2023</year>
</pub-date>
<volume>9</volume>
<issue>95</issue>
<fpage>5927</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>Robotics</kwd>
<kwd>Jacobian</kwd>
<kwd>Kinematics</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The Jacobian of a robot refers to the matrix that linearly maps the
  velocity components of the end-effector and the velocities at the
  actuated joints. The Jacobian is extensively used in dimensional
  synthesis for Jacobian-based optimal performances of robotic
  manipulators, in which the optimal dimensional parameters of robots
  are computed. Determination of accurate mobility
  (<xref alt="Yang et al., 2008" rid="ref-YANG20081175" ref-type="bibr">Yang
  et al., 2008</xref>) of planar and spatial mechanisms can also be
  performed by using Jacobian in cases where Chebychev–Grübler–Kutzbach
  criterion cannot accurately determine the mobility
  (<xref alt="Gogu, 2005" rid="ref-GOGU2005427" ref-type="bibr">Gogu,
  2005</xref>). As a result, Jacobian is a significant part for both
  kinematic analysis, dimensional synthesis and mobility determination
  of a mechanism. Hence, the formulation of Jacobian has its key
  importance in the literature and in the application of performance
  optimisation along with mobility computation. Formulation of Jacobian
  for serial manipulators can be computed easily, however, it is
  increasingly complicated to formulate Jacobian for parallel
  manipulators due to the existence of passive joint velocities and the
  nature in which these are related to active joint velocities. Several
  studies
  (<xref alt="Altuzarra et al., 2006" rid="ref-ALTUZARRA20061407" ref-type="bibr">Altuzarra
  et al., 2006</xref>;
  <xref alt="Dutre et al., 1997" rid="ref-606737" ref-type="bibr">Dutre
  et al., 1997</xref>;
  <xref alt="D. Kim et al., 2000" rid="ref-846382" ref-type="bibr">D.
  Kim et al., 2000</xref>;
  <xref alt="S.-G. Kim &amp; Ryu, 2003" rid="ref-1220722" ref-type="bibr">S.-G.
  Kim &amp; Ryu, 2003</xref>) exist for formulation of parallel
  manipulators but all these studies are dependent on human inspection
  at some level. Several open source software packages are also
  available for Jacobian formulation
  (<xref alt="Baumgärtner &amp; Miller, 2022" rid="ref-Baumgärtner2022" ref-type="bibr">Baumgärtner
  &amp; Miller, 2022</xref>;
  <xref alt="Lee et al., 2018" rid="ref-Lee2018" ref-type="bibr">Lee et
  al., 2018</xref>;
  <xref alt="Nadeau, 2019" rid="ref-nadeau2019pybotics" ref-type="bibr">Nadeau,
  2019</xref>;
  <xref alt="Owan et al., 2018" rid="ref-Owan2018" ref-type="bibr">Owan
  et al., 2018</xref>), but either their application is limited to
  serial manipulators, they require human intervention, or they are part
  of computationally expensive simulations. For example, TriP
  (<xref alt="Baumgärtner &amp; Miller, 2022" rid="ref-Baumgärtner2022" ref-type="bibr">Baumgärtner
  &amp; Miller, 2022</xref>) does facilitate Jacobian computation with
  closed-loop chains in the manipulator structure, however, as obvious
  from the tripedal robot example in the documentary, human inspection
  is apparently required to appropriately join the legs of the robot. To
  alleviate the drawback of the requirement of human inspection, the
  present research aims to formulate Jacobian that is required for
  dimensional synthesis for optimal performance around a single point
  that can be used for any non-redundant manipulator without any
  dependency on human inspection. Jacob and Dasgupta
  (<xref alt="Jacob &amp; Dasgupta, 2022" rid="ref-synthesis" ref-type="bibr">Jacob
  &amp; Dasgupta, 2022</xref>) used a systematic method as a tool to
  formulate Jacobian matrices for several manipulators in bulk for
  performance optimisation around a given task point. However, several
  steps in that algorithm are not totally computerised but rather
  human-intervention-dependent. Moreover, it can be applicable only with
  four types of joints. The current paper extends their method to
  present a fully computerisable Jacobian formulation algorithm that is
  applicable for general non-redundant planar and spatial manipulators
  of any topological structure of seven types of joints, namely
  revolute, prismatic, cylindrical, spherical, universal, helical and
  plane joints. Based on this extended method, the Python package
  <monospace>Automatic Computation for Robot Design (ACRoD)</monospace>
  is developed by the authors. <monospace>ACRoD</monospace> provides a
  Python-based package for generating functions required to compute the
  Jacobian at a given configuration for a given end-effector point,
  merely from the simple topological information of the robot in a fully
  automated manner. This can be directly used in optimisation process to
  derive optimal dimensions of the robot for optimal performance around
  a given end-effector point, thereby avoiding many tedious steps in
  manual formulation, especially when a comparison study is performed on
  multiple manipulators in bulk
  (<xref alt="Jacob &amp; Dasgupta, 2022" rid="ref-synthesis" ref-type="bibr">Jacob
  &amp; Dasgupta, 2022</xref>). <monospace>ACRoD</monospace> uses NumPy
  (<xref alt="Harris et al., 2020" rid="ref-numpy" ref-type="bibr">Harris
  et al., 2020</xref>) and SymPy
  (<xref alt="Meurer et al., 2017" rid="ref-sympy" ref-type="bibr">Meurer
  et al., 2017</xref>) packages to generate the functions for Jacobian,
  which can be directly used in optimisation process to find the optimal
  dimensional parameters of the robot.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>For a manipulator of a given topology, designing the dimensions
  based on optimising Jacobian-based performance parameters (such as
  manipulability index and condition number
  (<xref alt="Patel &amp; Sobh, 2015" rid="ref-patel2015manipulator" ref-type="bibr">Patel
  &amp; Sobh, 2015</xref>)) around a given end-effector point would
  require only the topological information for the formulation of
  Jacobian, as every other step can be automated. Formulation of
  Jacobian for parallel manipulators and serial-parallel hybrid
  manipulators are non-trivial, although all the steps of Jacobian
  formulation even in those cases would have to stem from the mere
  information of topology of the robot. ACRoD automates the non-trivial
  formulation of Jacobian systematically. It uses a matrix-based
  representation of the topology of the robotic manipulator (referred to
  here as the robot-topology matrix, of which more information is
  provided
  <ext-link ext-link-type="uri" xlink:href="https://github.com/suneeshjacob/ACRoD/blob/main/misc/Robot_Topology_Matrix.md">here</ext-link>)
  which is a modified version of the graph adjacency matrix
  representation
  (<xref alt="Jacob et al., 2022" rid="ref-enumeration" ref-type="bibr">Jacob
  et al., 2022</xref>) of robotic manipulators. This Jacobian
  formulation can be used to generate numerical Jacobian matrices with a
  few random configurations, from which the singular values can be
  calculated which can confirm the Degree of Freedom (DoF). In other
  words, the DoF of a given robot topology for a given base link and a
  given end-effector link can be verified by using this Jacobian
  function even in cases where Chebychev–Grübler–Kutzbach criterion
  fails to verify. This can be useful in mechanism synthesis to
  accurately verify the mobility of a given manipulator directly from
  its robot-topology matrix by using the method shown in Yang et al.’s
  paper
  (<xref alt="Yang et al., 2008" rid="ref-YANG20081175" ref-type="bibr">Yang
  et al., 2008</xref>). Even though the repository does not include
  scripts for computing optimisation or performance metrics for
  dimensional synthesis or for computing the validity of DOF, it does
  include scripts for computation of Jacobian which is an essential part
  for these analyses.</p>
  <sec id="method">
    <title>Method</title>
    <p>The topology of a valid robot (with a single base-link and a
    single end-effector link and without non-contributing chains) is to
    be specified using robot-topology matrix in NumPy matrix format. The
    Jacobian class object takes this robot-topology matrix as input
    argument and generates functions that are required to compute
    Jacobian. As byproducts, the Jacobian function generation produces
    the symbolic matrices, the set of independent paths, etc., the sets
    of active joint velocities and passive joint velocities, etc., which
    can be accessed from the attributes of the Jacobian class object.
    More technical details on formulation of Jacobian (along with
    appropriate algorithms) can be found
    <ext-link ext-link-type="uri" xlink:href="https://github.com/suneeshjacob/ACRoD/blob/main/misc/Mathematics%20behind%20Jacobian%20formulation.md">here</ext-link>,
    and the notations and the nomenclature are explained
    <ext-link ext-link-type="uri" xlink:href="https://github.com/suneeshjacob/ACRoD/blob/main/misc/Notation_and_Nomenclature.md">here</ext-link>
    in detail. The robot-topology matrix representation is explained
    <ext-link ext-link-type="uri" xlink:href="https://github.com/suneeshjacob/ACRoD/blob/main/misc/Robot_Topology_Matrix.md">here</ext-link>
    in detail. Jacobian formulation for three robot examples, namely the
    <ext-link ext-link-type="uri" xlink:href="https://github.com/suneeshjacob/ACRoD/blob/main/examples/Jacobian/maths/3R_serial_robot.md">3R
    planar serial robot</ext-link>,
    <ext-link ext-link-type="uri" xlink:href="https://github.com/suneeshjacob/ACRoD/blob/main/examples/Jacobian/maths/4R4P_parallel_robot.md">a
    4R-4P planar serial-parallel hybrid robot</ext-link> and
    <ext-link ext-link-type="uri" xlink:href="https://github.com/suneeshjacob/ACRoD/blob/main/examples/Jacobian/maths/RSSR-SSR_serial-parallel_hybrid_robot.md">an
    RSSR-SSR spatial parallel robot</ext-link>, are explained in detail
    in the corresponding hyperlinks.</p>
  </sec>
  <sec id="comparison-with-other-jacobian-computation-software-packages">
    <title>Comparison with other Jacobian-computation software
    packages</title>
    <p>TriP
    (<xref alt="Baumgärtner &amp; Miller, 2022" rid="ref-Baumgärtner2022" ref-type="bibr">Baumgärtner
    &amp; Miller, 2022</xref>) is a software that is developed to
    address kinematics of hybrid linkages. However, it is evident from
    the tripedal example that human inspection is required to develop
    the model for each leg of tripedal robot. DART
    (<xref alt="Lee et al., 2018" rid="ref-Lee2018" ref-type="bibr">Lee
    et al., 2018</xref>) uses biped robot (which can be seen as
    involving a closed-loop mechanism) in the examples, however it is
    imported from .sktl file rather than modelling a customised
    closed-loop robot from scratch. Even though C++ based software
    packages such as DART
    (<xref alt="Lee et al., 2018" rid="ref-Lee2018" ref-type="bibr">Lee
    et al., 2018</xref>), CoreRobotics
    (<xref alt="Owan et al., 2018" rid="ref-Owan2018" ref-type="bibr">Owan
    et al., 2018</xref>) and pinocchio
    (<xref alt="Carpentier et al., 2019" rid="ref-carpentierU003Ahal-01866228" ref-type="bibr">Carpentier
    et al., 2019</xref>) may facilitate closed-loop linkages, apparently
    no documentation is provided for modelling closed-loop linkages.
    Furthermore, all these software (TriP, DART, CoreRobotics,
    pinocchio) apparently require human intervention to build a robot of
    a given topology. Even though some of them support importing models
    from URDF files, URDF has the limitation of “inability to model
    parallel linkages and closed-chain systems”
    (<xref alt="Tola &amp; Corke, 2023" rid="ref-10260660" ref-type="bibr">Tola
    &amp; Corke, 2023</xref>), and furthermore preparing a URDF file (or
    similar file) of a robot from its mere topological information also
    requires human intervention. Pybotics provides automatic modelling
    of robot from the mere information of DH parameters, however it is
    apparently limited to serial manipulators. ACRoD addresses this
    issue of human intervention by automatically generating functions
    required to compute Jacobian for a given end-effector point. A
    comparison of ACRoD with other software packages is shown in the
    table below.</p>
    <table-wrap>
      <table>
        <colgroup>
          <col width="10%" />
          <col width="8%" />
          <col width="11%" />
          <col width="22%" />
          <col width="49%" />
        </colgroup>
        <thead>
          <tr>
            <th>Software</th>
            <th align="center">Base Language</th>
            <th align="center">Closed-loop Linkages</th>
            <th>Automation Level From Mere Topology</th>
            <th>Primary focus</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>TriP (2022)</td>
            <td align="center">Python</td>
            <td align="center">yes</td>
            <td>H*</td>
            <td>Kinematics of Hybrid Linkages</td>
          </tr>
          <tr>
            <td>Pybotics (2019)</td>
            <td align="center">Python</td>
            <td align="center">no</td>
            <td>A</td>
            <td>Kinematics, Dynamics, Trajectory Generations and
            Calibration of Serial Robots</td>
          </tr>
          <tr>
            <td>DART (2018)</td>
            <td align="center">C++</td>
            <td align="center">X</td>
            <td>H*</td>
            <td>Kinematic and Dynamic Applications of Robotics</td>
          </tr>
          <tr>
            <td>CoreRobotics (2018)</td>
            <td align="center">C++</td>
            <td align="center">X</td>
            <td>H</td>
            <td>Computational Algorithms for Real Time Robot
            Control</td>
          </tr>
          <tr>
            <td>pinocchio (2019)</td>
            <td align="center">C++</td>
            <td align="center">X</td>
            <td>H*</td>
            <td>Analytical Derivatives for Kinematics and Dynamics,
            Features for Control, Planning and Simulation</td>
          </tr>
          <tr>
            <td>ACRoD (2023)</td>
            <td align="center">Python</td>
            <td align="center">yes</td>
            <td>yes</td>
            <td>Dimensional Synthesis</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <list list-type="bullet">
      <list-item>
        <p>X = possible but neither documentation is provided nor an
        example is provided.</p>
      </list-item>
      <list-item>
        <p>* = Accepts importing models from URDF files, etc.</p>
      </list-item>
      <list-item>
        <p>H = Human intervention required to build the robot.</p>
      </list-item>
      <list-item>
        <p>A = Automatically buildable from its DH parameters.</p>
      </list-item>
    </list>
  </sec>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This paper is an extended version of the Jacobian formulation
  presented in previous work
  (<xref alt="Jacob &amp; Dasgupta, 2022" rid="ref-synthesis" ref-type="bibr">Jacob
  &amp; Dasgupta, 2022</xref>) co-authored by Dr. Bhaskar Dasgupta, whom
  the authors would like to acknowledge for whatever credits applicable.
  However, the authors would like to clarify that the technical
  extension of theory and the whole software are developed solely by the
  authors of the current paper.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-846382">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Kim</surname><given-names>D.</given-names></name>
        <name><surname>Chung</surname><given-names>W.</given-names></name>
        <name><surname>Youm</surname><given-names>Y.</given-names></name>
      </person-group>
      <article-title>Analytic jacobian of in-parallel manipulators</article-title>
      <source>Proceedings 2000 ICRA. Millennium conference. IEEE international conference on robotics and automation. Symposia proceedings (cat. no.00CH37065)</source>
      <year iso-8601-date="2000">2000</year>
      <volume>3</volume>
      <issn>1050-4729</issn>
      <pub-id pub-id-type="doi">10.1109/robot.2000.846382</pub-id>
      <fpage>2376</fpage>
      <lpage>2381 vol.3</lpage>
    </element-citation>
  </ref>
  <ref id="ref-patel2015manipulator">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Patel</surname><given-names>Sarosh</given-names></name>
        <name><surname>Sobh</surname><given-names>Tarek</given-names></name>
      </person-group>
      <article-title>Manipulator performance measures-a comprehensive literature survey</article-title>
      <source>Journal of Intelligent &amp; Robotic Systems</source>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2015">2015</year>
      <volume>77</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1007/s10846-014-0024-y</pub-id>
      <fpage>547</fpage>
      <lpage>570</lpage>
    </element-citation>
  </ref>
  <ref id="ref-enumeration">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Jacob</surname><given-names>Akkarapakam Suneesh</given-names></name>
        <name><surname>Dasgupta</surname><given-names>Bhaskar</given-names></name>
        <name><surname>Datta</surname><given-names>Rituparna</given-names></name>
      </person-group>
      <article-title>Enumeration of spatial manipulators by using the concept of adjacency matrix</article-title>
      <publisher-name>arXiv</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <pub-id pub-id-type="doi">10.48550/arXiv.2210.03327</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-synthesis">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Jacob</surname><given-names>Akkarapakam Suneesh</given-names></name>
        <name><surname>Dasgupta</surname><given-names>Bhaskar</given-names></name>
      </person-group>
      <article-title>Dimensional synthesis of spatial manipulators for velocity and force transmission for operation around a specified task point</article-title>
      <year iso-8601-date="2022">2022</year>
      <pub-id pub-id-type="doi">10.48550/arXiv.2210.04446</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-1220722">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kim</surname><given-names>Sung-Gaun</given-names></name>
        <name><surname>Ryu</surname><given-names>J.</given-names></name>
      </person-group>
      <article-title>New dimensionally homogeneous jacobian matrix formulation by three end-effector points for optimal design of parallel manipulators</article-title>
      <source>IEEE Transactions on Robotics and Automation</source>
      <year iso-8601-date="2003">2003</year>
      <volume>19</volume>
      <issue>4</issue>
      <pub-id pub-id-type="doi">10.1109/tra.2003.814496</pub-id>
      <fpage>731</fpage>
      <lpage>736</lpage>
    </element-citation>
  </ref>
  <ref id="ref-ALTUZARRA20061407">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Altuzarra</surname><given-names>O.</given-names></name>
        <name><surname>Salgado</surname><given-names>O.</given-names></name>
        <name><surname>Petuya</surname><given-names>V.</given-names></name>
        <name><surname>Hernández</surname><given-names>A.</given-names></name>
      </person-group>
      <article-title>Point-based jacobian formulation for computational kinematics of manipulators</article-title>
      <source>Mechanism and Machine Theory</source>
      <year iso-8601-date="2006">2006</year>
      <volume>41</volume>
      <issue>12</issue>
      <issn>0094-114X</issn>
      <pub-id pub-id-type="doi">10.1016/j.mechmachtheory.2006.01.011</pub-id>
      <fpage>1407</fpage>
      <lpage>1423</lpage>
    </element-citation>
  </ref>
  <ref id="ref-606737">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Dutre</surname><given-names>S.</given-names></name>
        <name><surname>Bruyninckx</surname><given-names>H.</given-names></name>
        <name><surname>De Schutter</surname><given-names>J.</given-names></name>
      </person-group>
      <article-title>The analytical jacobian and its derivative for a parallel manipulator</article-title>
      <source>Proceedings of international conference on robotics and automation</source>
      <year iso-8601-date="1997">1997</year>
      <volume>4</volume>
      <pub-id pub-id-type="doi">10.1109/robot.1997.606737</pub-id>
      <fpage>2961</fpage>
      <lpage>2966 vol.4</lpage>
    </element-citation>
  </ref>
  <ref id="ref-GOGU2005427">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Gogu</surname><given-names>Grigore</given-names></name>
      </person-group>
      <article-title>Chebychev–Grübler–Kutzbach’s criterion for mobility calculation of multi-loop mechanisms revisited via theory of linear transformations</article-title>
      <source>European Journal of Mechanics - A/Solids</source>
      <year iso-8601-date="2005">2005</year>
      <volume>24</volume>
      <issue>3</issue>
      <issn>0997-7538</issn>
      <pub-id pub-id-type="doi">10.1016/j.euromechsol.2004.12.003</pub-id>
      <fpage>427</fpage>
      <lpage>441</lpage>
    </element-citation>
  </ref>
  <ref id="ref-YANG20081175">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Yang</surname><given-names>Dong-Chao</given-names></name>
        <name><surname>Xiong</surname><given-names>Jing</given-names></name>
        <name><surname>Yang</surname><given-names>Xiang-Dong</given-names></name>
      </person-group>
      <article-title>A simple method to calculate mobility with jacobian</article-title>
      <source>Mechanism and Machine Theory</source>
      <year iso-8601-date="2008">2008</year>
      <volume>43</volume>
      <issue>9</issue>
      <issn>0094-114X</issn>
      <pub-id pub-id-type="doi">10.1016/j.mechmachtheory.2007.08.001</pub-id>
      <fpage>1175</fpage>
      <lpage>1185</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Baumgärtner2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Baumgärtner</surname><given-names>Jan</given-names></name>
        <name><surname>Miller</surname><given-names>Torben</given-names></name>
      </person-group>
      <article-title>TriP: A python package for the kinematic modeling of serial-parallel hybrid robots</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <volume>7</volume>
      <issue>71</issue>
      <uri>https://doi.org/10.21105/joss.03967</uri>
      <pub-id pub-id-type="doi">10.21105/joss.03967</pub-id>
      <fpage>3967</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-nadeau2019pybotics">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Nadeau</surname><given-names>Nicholas</given-names></name>
      </person-group>
      <article-title>Pybotics: Python toolbox for robotics</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2019-09">2019</year><month>09</month>
      <volume>4</volume>
      <issue>41</issue>
      <uri>https://doi.org/10.21105/joss.01738</uri>
      <pub-id pub-id-type="doi">10.21105/joss.01738</pub-id>
      <fpage>1738</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Owan2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Owan</surname><given-names>Parker</given-names></name>
        <name><surname>Devine</surname><given-names>Cameron</given-names></name>
        <name><surname>Piaskowy</surname><given-names>W. Tony</given-names></name>
      </person-group>
      <article-title>CoreRobotics: An object-oriented c++ library with cross-language wrappers for cross-platform robot control</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2018">2018</year>
      <volume>3</volume>
      <issue>22</issue>
      <uri>https://doi.org/10.21105/joss.00489</uri>
      <pub-id pub-id-type="doi">10.21105/joss.00489</pub-id>
      <fpage>489</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Lee2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lee</surname><given-names>Jeongseok</given-names></name>
        <name><surname>Grey</surname><given-names>Michael X.</given-names></name>
        <name><surname>Ha</surname><given-names>Sehoon</given-names></name>
        <name><surname>Kunz</surname><given-names>Tobias</given-names></name>
        <name><surname>Jain</surname><given-names>Sumit</given-names></name>
        <name><surname>Ye</surname><given-names>Yuting</given-names></name>
        <name><surname>Srinivasa</surname><given-names>Siddhartha S.</given-names></name>
        <name><surname>Stilman</surname><given-names>Mike</given-names></name>
        <name><surname>Liu</surname><given-names>C. Karen</given-names></name>
      </person-group>
      <article-title>DART: Dynamic animation and robotics toolkit</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2018">2018</year>
      <volume>3</volume>
      <issue>22</issue>
      <uri>https://doi.org/10.21105/joss.00500</uri>
      <pub-id pub-id-type="doi">10.21105/joss.00500</pub-id>
      <fpage>500</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-numpy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>Walt</surname><given-names>Stéfan J. van der</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Wieser</surname><given-names>Eric</given-names></name>
        <name><surname>Taylor</surname><given-names>Julian</given-names></name>
        <name><surname>Berg</surname><given-names>Sebastian</given-names></name>
        <name><surname>Smith</surname><given-names>Nathaniel J.</given-names></name>
        <name><surname>Kern</surname><given-names>Robert</given-names></name>
        <name><surname>Picus</surname><given-names>Matti</given-names></name>
        <name><surname>Hoyer</surname><given-names>Stephan</given-names></name>
        <name><surname>Kerkwijk</surname><given-names>Marten H. van</given-names></name>
        <name><surname>Brett</surname><given-names>Matthew</given-names></name>
        <name><surname>Haldane</surname><given-names>Allan</given-names></name>
        <name><surname>Río</surname><given-names>Jaime Fernández del</given-names></name>
        <name><surname>Wiebe</surname><given-names>Mark</given-names></name>
        <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
        <name><surname>Gérard-Marchant</surname><given-names>Pierre</given-names></name>
        <name><surname>Sheppard</surname><given-names>Kevin</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
        <name><surname>Abbasi</surname><given-names>Hameer</given-names></name>
        <name><surname>Gohlke</surname><given-names>Christoph</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
      </person-group>
      <article-title>Array programming with NumPy</article-title>
      <source>Nature</source>
      <publisher-name>Springer Science; Business Media LLC</publisher-name>
      <year iso-8601-date="2020-09">2020</year><month>09</month>
      <volume>585</volume>
      <issue>7825</issue>
      <uri>https://doi.org/10.1038/s41586-020-2649-2</uri>
      <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
      <fpage>357</fpage>
      <lpage>362</lpage>
    </element-citation>
  </ref>
  <ref id="ref-sympy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Meurer</surname><given-names>Aaron</given-names></name>
        <name><surname>Smith</surname><given-names>Christopher P.</given-names></name>
        <name><surname>Paprocki</surname><given-names>Mateusz</given-names></name>
        <name><surname>Čertík</surname><given-names>Ondřej</given-names></name>
        <name><surname>Kirpichev</surname><given-names>Sergey B.</given-names></name>
        <name><surname>Rocklin</surname><given-names>Matthew</given-names></name>
        <name><surname>Kumar</surname><given-names>AMiT</given-names></name>
        <name><surname>Ivanov</surname><given-names>Sergiu</given-names></name>
        <name><surname>Moore</surname><given-names>Jason K.</given-names></name>
        <name><surname>Singh</surname><given-names>Sartaj</given-names></name>
        <name><surname>Rathnayake</surname><given-names>Thilina</given-names></name>
        <name><surname>Vig</surname><given-names>Sean</given-names></name>
        <name><surname>Granger</surname><given-names>Brian E.</given-names></name>
        <name><surname>Muller</surname><given-names>Richard P.</given-names></name>
        <name><surname>Bonazzi</surname><given-names>Francesco</given-names></name>
        <name><surname>Gupta</surname><given-names>Harsh</given-names></name>
        <name><surname>Vats</surname><given-names>Shivam</given-names></name>
        <name><surname>Johansson</surname><given-names>Fredrik</given-names></name>
        <name><surname>Pedregosa</surname><given-names>Fabian</given-names></name>
        <name><surname>Curry</surname><given-names>Matthew J.</given-names></name>
        <name><surname>Terrel</surname><given-names>Andy R.</given-names></name>
        <name><surname>Roučka</surname><given-names>Štěpán</given-names></name>
        <name><surname>Saboo</surname><given-names>Ashutosh</given-names></name>
        <name><surname>Fernando</surname><given-names>Isuru</given-names></name>
        <name><surname>Kulal</surname><given-names>Sumith</given-names></name>
        <name><surname>Cimrman</surname><given-names>Robert</given-names></name>
        <name><surname>Scopatz</surname><given-names>Anthony</given-names></name>
      </person-group>
      <article-title>SymPy: Symbolic computing in python</article-title>
      <source>PeerJ Computer Science</source>
      <year iso-8601-date="2017-01">2017</year><month>01</month>
      <volume>3</volume>
      <issn>2376-5992</issn>
      <uri>https://doi.org/10.7717/peerj-cs.103</uri>
      <pub-id pub-id-type="doi">10.7717/peerj-cs.103</pub-id>
      <fpage>e103</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-carpentierU003Ahal-01866228">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Carpentier</surname><given-names>Justin</given-names></name>
        <name><surname>Saurel</surname><given-names>Guilhem</given-names></name>
        <name><surname>Buondonno</surname><given-names>Gabriele</given-names></name>
        <name><surname>Mirabel</surname><given-names>Joseph</given-names></name>
        <name><surname>Lamiraux</surname><given-names>Florent</given-names></name>
        <name><surname>Stasse</surname><given-names>Olivier</given-names></name>
        <name><surname>Mansard</surname><given-names>Nicolas</given-names></name>
      </person-group>
      <article-title>The pinocchio c++ library : A fast and flexible implementation of rigid body dynamics algorithms and their analytical derivatives</article-title>
      <source>2019 IEEE/SICE international symposium on system integration (SII)</source>
      <year iso-8601-date="2019">2019</year>
      <volume></volume>
      <pub-id pub-id-type="doi">10.1109/SII.2019.8700380</pub-id>
      <fpage>614</fpage>
      <lpage>619</lpage>
    </element-citation>
  </ref>
  <ref id="ref-10260660">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Tola</surname><given-names>Daniella</given-names></name>
        <name><surname>Corke</surname><given-names>Peter</given-names></name>
      </person-group>
      <article-title>Understanding URDF: A survey based on user experience</article-title>
      <source>2023 IEEE 19th international conference on automation science and engineering (CASE)</source>
      <year iso-8601-date="2023">2023</year>
      <volume></volume>
      <pub-id pub-id-type="doi">10.1109/CASE56687.2023.10260660</pub-id>
      <fpage>1</fpage>
      <lpage>7</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
