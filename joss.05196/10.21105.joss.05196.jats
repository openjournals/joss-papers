<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">5196</article-id>
<article-id pub-id-type="doi">10.21105/joss.05196</article-id>
<title-group>
<article-title>SCALib: A Side-Channel Analysis Library</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" equal-contrib="yes" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-5426-9345</contrib-id>
<name>
<surname>Cassiers</surname>
<given-names>GaÃ«tan</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-7595-718X</contrib-id>
<name>
<surname>Bronchain</surname>
<given-names>Olivier</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>UCLouvain, Belgium</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>TU Graz, Austria</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-05-30">
<day>30</day>
<month>5</month>
<year>2023</year>
</pub-date>
<volume>8</volume>
<issue>86</issue>
<fpage>5196</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Side-channel evaluation</kwd>
<kwd>Security</kwd>
<kwd>Python</kwd>
<kwd>Rust</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Side-channel attacks exploit unintended leakage from an electronic
  device in order to retrieve secret data. In particular, attacks
  exploiting physical side-channels such as power consumption or
  electromagnetic radiations to recover cryptographic keys are an
  important threat to embedded devices. Countermeasures against these
  attacks have been extensively researched for more than two decades and
  are often deployed in security-critical devices.</p>
  <p>A side-channel attack is made of three steps. First, the leakage is
  measured. Then, a statistical processing is applied to this leakage in
  order to infer the internal behavior of the device (typically, an
  intermediate state of the cryptographic algorithm). Finally, the
  cryptographic key is recovered from the known behavior
  (<xref alt="Standaert et al., 2009" rid="ref-DBLPU003AconfU002FeurocryptU002FStandaertMY09" ref-type="bibr">Standaert
  et al., 2009</xref>).</p>
  <p>For the statistical processing, we distinguish between two classes
  of attacks, based on the use of a profiling dataset. Such a dataset
  consists of leakage measurements on a device running the cryptographic
  algorithm with the known key. Profiled attacks use this data to fit a
  statistical model (or train a machine-learning model) of the device,
  while non-profiled attacks have to rely on <italic>a priori</italic>
  models and are therefore less powerful
  (<xref alt="Chari et al., 2002" rid="ref-DBLPU003AconfU002FchesU002FChariRR02" ref-type="bibr">Chari
  et al., 2002</xref>).</p>
  <p>There are two main approaches for evaluating the security of
  devices against side-channel attacks. First, attack-based evaluations
  try to attack the device and report their success or failure. In case
  of success, the main figure of merit is the number of traces (i.e.,
  number of executions of a cryptographic algorithm for which the
  leakage is measured). Second, detection-based evaluations try to
  detect the presence of key-dependent leakage and sometimes quantify
  it. These two types of methods can be complementary in the evaluation
  of a device.</p>
  <p>Side-channel evaluations are used in various research contexts,
  such as analyzing the effectiveness of a newly proposed countermeasure
  or analyzing a widely deployed device. In
  <monospace>SCALib</monospace>, we implement algorithms for commonly
  used metrics and methods in side-channel security evaluations,
  attack-based and evaluation-based. We focus on the requirements of
  evaluations and do not implement complete attacks when they are not
  needed to evaluate the security of a device.</p>
  <p><monospace>SCALib</monospace> is distributed as a Python package
  and uses 16-bit integer NumPy
  (<xref alt="Harris et al., 2020" rid="ref-numpy" ref-type="bibr">Harris
  et al., 2020</xref>) arrays for leakage traces. For the sake of
  efficiency, most algorithms are implemented in Rust, allowing fine
  control of the memory accesses and enabling efficient
  parallelization.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Many of the algorithms used in side-channel security evaluations
  are well-known statistical techniques. For instance, the widely used
  TVLA methodology is based on the Welch t-test for the difference of
  means
  (<xref alt="Schneider &amp; Moradi, 2015" rid="ref-DBLPU003AconfU002FchesU002FSchneiderM15" ref-type="bibr">Schneider
  &amp; Moradi, 2015</xref>). Also, when modeling the leakage,
  techniques such as Linear Discriminant Analysis (LDA)
  (<xref alt="Standaert &amp; Archambeau, 2008" rid="ref-DBLPU003AconfU002FchesU002FStandaertA08" ref-type="bibr">Standaert
  &amp; Archambeau, 2008</xref>) can be used. While implementations of
  these algorithms are fairly easy to find, our use-case has a few
  particularities that motivate dedicated implementations. For example,
  the number of traces used in an evaluation can be very large,
  amounting to terabytes of data, hence incremental single-pass
  algorithms (that avoid the need to store and/or load multiple times
  the dataset) are highly desirable. Moreover, while the leakage samples
  are acquired at a fairly low-resolution (8-bit to 16-bit integers),
  detection of very small effect sizes is needed, as they can
  potentially be exploited to mount an attack. Besides this requirement,
  leakage traces contain many points (typically thousands), and many
  metrics have to be computed for each of these points, providing
  parallelization opportunities. As a result of these characteristics,
  dedicated implementations can achieve much better accuracy and
  performance than generic or naive (e.g., pure NumPy) ones.</p>
  <p>On the other hand, security-specific algorithms are also used, such
  as key rank estimation (which allows us to know the computational cost
  of the last part of a side-channel attack without actually running it)
  (<xref alt="Poussier et al., 2016" rid="ref-DBLPU003AconfU002FchesU002FPoussierSG16" ref-type="bibr">Poussier
  et al., 2016</xref>).</p>
  <p>While multiple open-source side-channel attack and evaluation
  libraries exist, most of them offer a very limited feature set and are
  unmaintained. The most comprehensive libraries are
  <monospace>lascar</monospace>
  (<xref alt="Charles Guillemet &amp; Servant, 2023" rid="ref-lascar" ref-type="bibr">Charles
  Guillemet &amp; Servant, 2023</xref>) and
  <monospace>SCAred</monospace>
  (<xref alt="Guillaume Bethouart, 2023" rid="ref-scared" ref-type="bibr">Guillaume
  Bethouart, 2023</xref>), which offer implementations of some
  evaluation metrics and non-profiled attacks.</p>
  <p><monospace>SCALib</monospace> complements and improves over these
  libraries by providing better implementations for the computation of
  two common evaluation metrics, by providing algorithms for profiled
  side-channel attacks and including a key rank enumeration algorithm as
  a final evaluation step. More precisely, for leakage metrics, we
  implement the Welch t-test and the computation of the signal-to-noise
  ratio, and our implementations are significantly faster than the ones
  of <monospace>lascar</monospace> and <monospace>SCAred</monospace>
  (<xref alt="Cassiers, 2023" rid="ref-scabench" ref-type="bibr">Cassiers,
  2023</xref>). Moreover, our t-test implementation includes so-called
  higher-order and multivariate evaluations
  (<xref alt="Schneider &amp; Moradi, 2015" rid="ref-DBLPU003AconfU002FchesU002FSchneiderM15" ref-type="bibr">Schneider
  &amp; Moradi, 2015</xref>). Regarding profiled attacks,
  <monospace>SCALib</monospace> includes an implementation of LDA with a
  dimensionality reduction step (this provides a regularization and
  improves classification performance)
  (<xref alt="Standaert &amp; Archambeau, 2008" rid="ref-DBLPU003AconfU002FchesU002FStandaertA08" ref-type="bibr">Standaert
  &amp; Archambeau, 2008</xref>). We also implement the soft analytical
  side-channel attack (SASCA), which is a variant of the belief
  propagation algorithm
  (<xref alt="Veyrat-Charvillon et al., n.d." rid="ref-DBLPU003AconfU002FasiacryptU002FVeyrat-CharvillonGS14" ref-type="bibr">Veyrat-Charvillon
  et al., n.d.</xref>). Finally, our key-rank estimation implementation
  relies on an efficient histogram-based algorithm
  (<xref alt="Poussier et al., 2016" rid="ref-DBLPU003AconfU002FchesU002FPoussierSG16" ref-type="bibr">Poussier
  et al., 2016</xref>).</p>
  <p><monospace>SCALib</monospace> has been used in many recent papers
  as a tool to validate new protected designs
  (<xref alt="Nagpal et al., 2022" rid="ref-DBLPU003AjournalsU002FtchesU002FNagpalGPM22" ref-type="bibr">Nagpal
  et al., 2022</xref>), to publish new attacks on public implementations
  (<xref alt="Bronchain et al., 2021" rid="ref-DBLPU003AjournalsU002FiacrU002FBronchainCS21" ref-type="bibr">Bronchain
  et al., 2021</xref>), and also as a basis to develop new attack and
  evaluation methodologies
  (<xref alt="Bronchain &amp; Standaert, 2021" rid="ref-DBLPU003AjournalsU002FtchesU002FBronchainS21" ref-type="bibr">Bronchain
  &amp; Standaert, 2021</xref>).</p>
</sec>
<sec id="acknowledgments">
  <title>Acknowledgments</title>
  <p>This work has been funded in part by SGS, by the Belgian Fund for
  Scientific Research (F.R.S.-FNRS) through the Equipment Project
  SCALAB, by the European Union (EU) and the Walloon Region through the
  FEDER project USERMedia (convention number 501907-379156) and by the
  European Union (EU) through the ERC project 724725 (acronym
  SWORD).</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-DBLPU003AjournalsU002FiacrU002FBronchainCS21">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bronchain</surname><given-names>Olivier</given-names></name>
        <name><surname>Cassiers</surname><given-names>GaÃ«tan</given-names></name>
        <name><surname>Standaert</surname><given-names>FranÃ§ois-Xavier</given-names></name>
      </person-group>
      <article-title>Give me 5 minutes: Attacking ASCAD with a single side-channel trace</article-title>
      <source>IACR Cryptol. ePrint Arch.</source>
      <year iso-8601-date="2021">2021</year>
      <fpage>817</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AjournalsU002FtchesU002FNagpalGPM22">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Nagpal</surname><given-names>Rishub</given-names></name>
        <name><surname>Gigerl</surname><given-names>Barbara</given-names></name>
        <name><surname>Primas</surname><given-names>Robert</given-names></name>
        <name><surname>Mangard</surname><given-names>Stefan</given-names></name>
      </person-group>
      <article-title>Riding the waves towards generic single-cycle masking in hardware</article-title>
      <source>IACR Trans. Cryptogr. Hardw. Embed. Syst.</source>
      <year iso-8601-date="2022">2022</year>
      <volume>2022</volume>
      <issue>4</issue>
      <uri>https://doi.org/10.46586/tches.v2022.i4.693-717</uri>
      <pub-id pub-id-type="doi">10.46586/tches.v2022.i4.693-717</pub-id>
      <fpage>693</fpage>
      <lpage>717</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AjournalsU002FtchesU002FBronchainS21">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bronchain</surname><given-names>Olivier</given-names></name>
        <name><surname>Standaert</surname><given-names>FranÃ§ois-Xavier</given-names></name>
      </person-group>
      <article-title>Breaking masked implementations with many shares on 32-bit software platforms or when the security order does not matter</article-title>
      <source>IACR Trans. Cryptogr. Hardw. Embed. Syst.</source>
      <year iso-8601-date="2021">2021</year>
      <volume>2021</volume>
      <issue>3</issue>
      <uri>https://doi.org/10.46586/tches.v2021.i3.202-234</uri>
      <pub-id pub-id-type="doi">10.46586/tches.v2021.i3.202-234</pub-id>
      <fpage>202</fpage>
      <lpage>234</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AconfU002FasiacryptU002FVeyrat-CharvillonGS14">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Veyrat-Charvillon</surname><given-names>Nicolas</given-names></name>
        <name><surname>GÃ©rard</surname><given-names>BenoÄ±Ìt</given-names></name>
        <name><surname>Standaert</surname><given-names>FranÃ§ois-Xavier</given-names></name>
      </person-group>
      <article-title>Soft analytical side-channel attacks</article-title>
      <source>Advances in Cryptology - Proceedings of 20th International Conference on the Theory and Application of Cryptology and Information Security (ASIACRYPT 2014), part i</source>
      <person-group person-group-type="editor">
        <name><surname>Sarkar</surname><given-names>Palash</given-names></name>
        <name><surname>Iwata</surname><given-names>Tetsu</given-names></name>
      </person-group>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AconfU002FchesU002FStandaertA08">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Standaert</surname><given-names>FranÃ§ois-Xavier</given-names></name>
        <name><surname>Archambeau</surname><given-names>CÃ©dric</given-names></name>
      </person-group>
      <article-title>Using subspace-based template attacks to compare and combine power and electromagnetic information leakages</article-title>
      <source>Proceedings of 10th International Workshop on Cryptographic Hardware and Embedded Systems (CHES 2008)</source>
      <person-group person-group-type="editor">
        <name><surname>Oswald</surname><given-names>Elisabeth</given-names></name>
        <name><surname>Rohatgi</surname><given-names>Pankaj</given-names></name>
      </person-group>
      <publisher-name>Springer</publisher-name>
      <publisher-loc>Washington, D.C., USA</publisher-loc>
      <year iso-8601-date="2008-08">2008</year><month>08</month>
      <volume>5154</volume>
      <uri>https://doi.org/10.1007/978-3-540-85053-3_26</uri>
      <pub-id pub-id-type="doi">10.1007/978-3-540-85053-3_26</pub-id>
      <fpage>411</fpage>
      <lpage>425</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AconfU002FchesU002FSchneiderM15">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Schneider</surname><given-names>Tobias</given-names></name>
        <name><surname>Moradi</surname><given-names>Amir</given-names></name>
      </person-group>
      <article-title>Leakage assessment methodology - A clear roadmap for side-channel evaluations</article-title>
      <source>Proceedings of 17th International Workshop on Cryptographic Hardware and Embedded Systems (CHES 2015)</source>
      <person-group person-group-type="editor">
        <name><surname>GÃ¼neysu</surname><given-names>Tim</given-names></name>
        <name><surname>Handschuh</surname><given-names>Helena</given-names></name>
      </person-group>
      <publisher-name>Springer</publisher-name>
      <publisher-loc>Saint-Malo, France</publisher-loc>
      <year iso-8601-date="2015-09">2015</year><month>09</month>
      <volume>9293</volume>
      <uri>https://doi.org/10.1007/978-3-662-48324-4_25</uri>
      <pub-id pub-id-type="doi">10.1007/978-3-662-48324-4_25</pub-id>
      <fpage>495</fpage>
      <lpage>513</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AconfU002FchesU002FPoussierSG16">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Poussier</surname><given-names>Romain</given-names></name>
        <name><surname>Standaert</surname><given-names>FranÃ§ois-Xavier</given-names></name>
        <name><surname>Grosso</surname><given-names>Vincent</given-names></name>
      </person-group>
      <article-title>Simple key enumeration (and rank estimation) using histograms: An integrated approach</article-title>
      <source>Proceedings of 18th International Conference on Cryptographic Hardware and Embedded Systems - (CHES 2016)</source>
      <person-group person-group-type="editor">
        <name><surname>Gierlichs</surname><given-names>Benedikt</given-names></name>
        <name><surname>Poschmann</surname><given-names>Axel Y.</given-names></name>
      </person-group>
      <publisher-name>Springer</publisher-name>
      <publisher-loc>Santa Barbara, CA, USA</publisher-loc>
      <year iso-8601-date="2016-08">2016</year><month>08</month>
      <volume>9813</volume>
      <uri>https://doi.org/10.1007/978-3-662-53140-2_4</uri>
      <pub-id pub-id-type="doi">10.1007/978-3-662-53140-2_4</pub-id>
      <fpage>61</fpage>
      <lpage>81</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AconfU002FchesU002FChariRR02">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Chari</surname><given-names>Suresh</given-names></name>
        <name><surname>Rao</surname><given-names>Josyula R.</given-names></name>
        <name><surname>Rohatgi</surname><given-names>Pankaj</given-names></name>
      </person-group>
      <article-title>Template attacks</article-title>
      <source>4th International Workshop on Cryptographic Hardware and Embedded Systems (CHES 2002), Revised Papers</source>
      <person-group person-group-type="editor">
        <name><surname>Jr.</surname><given-names>Burton S. Kaliski</given-names></name>
        <name><surname>Kaya KoÃ§</surname></name>
        <name><surname>Paar</surname><given-names>Christof</given-names></name>
      </person-group>
      <publisher-name>Springer</publisher-name>
      <publisher-loc>Redwood Shores, CA, USA</publisher-loc>
      <year iso-8601-date="2002-08">2002</year><month>08</month>
      <volume>2523</volume>
      <uri>https://doi.org/10.1007/3-540-36400-5_3</uri>
      <pub-id pub-id-type="doi">10.1007/3-540-36400-5_3</pub-id>
      <fpage>13</fpage>
      <lpage>28</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DBLPU003AconfU002FeurocryptU002FStandaertMY09">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Standaert</surname><given-names>FranÃ§ois-Xavier</given-names></name>
        <name><surname>Malkin</surname><given-names>Tal</given-names></name>
        <name><surname>Yung</surname><given-names>Moti</given-names></name>
      </person-group>
      <article-title>A unified framework for the analysis of side-channel key recovery attacks</article-title>
      <source>Advances in Cryptology - Proceedings of 28th Annual International Conference on the Theory and Applications of Cryptographic Techniques (EUROCRYPT 200:9)</source>
      <person-group person-group-type="editor">
        <name><surname>Joux</surname><given-names>Antoine</given-names></name>
      </person-group>
      <publisher-name>Springer</publisher-name>
      <publisher-loc>Cologne, Germany</publisher-loc>
      <year iso-8601-date="2009-04">2009</year><month>04</month>
      <volume>5479</volume>
      <uri>https://doi.org/10.1007/978-3-642-01001-9_26</uri>
      <pub-id pub-id-type="doi">10.1007/978-3-642-01001-9_26</pub-id>
      <fpage>443</fpage>
      <lpage>461</lpage>
    </element-citation>
  </ref>
  <ref id="ref-lascar">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Charles Guillemet</surname><given-names>Manuel San Pedro</given-names></name>
        <name><surname>Servant</surname><given-names>Victor</given-names></name>
      </person-group>
      <article-title>LASCAR: Ledgerâs advanced side channel analysis repository</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/Ledger-Donjon/lascar</uri>
    </element-citation>
  </ref>
  <ref id="ref-scared">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Guillaume Bethouart</surname><given-names>Roman Mkrtchian</given-names><suffix>RÃ©mi Huguet</suffix></name>
      </person-group>
      <article-title>SCAred</article-title>
      <source>GitLab repository</source>
      <publisher-name>GitLab</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://gitlab.com/eshard/scared</uri>
    </element-citation>
  </ref>
  <ref id="ref-numpy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>Walt</surname><given-names>StÃ©fan J. van der</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Wieser</surname><given-names>Eric</given-names></name>
        <name><surname>Taylor</surname><given-names>Julian</given-names></name>
        <name><surname>Berg</surname><given-names>Sebastian</given-names></name>
        <name><surname>Smith</surname><given-names>Nathaniel J.</given-names></name>
        <name><surname>Kern</surname><given-names>Robert</given-names></name>
        <name><surname>Picus</surname><given-names>Matti</given-names></name>
        <name><surname>Hoyer</surname><given-names>Stephan</given-names></name>
        <name><surname>Kerkwijk</surname><given-names>Marten H. van</given-names></name>
        <name><surname>Brett</surname><given-names>Matthew</given-names></name>
        <name><surname>Haldane</surname><given-names>Allan</given-names></name>
        <name><surname>RÃ­o</surname><given-names>Jaime FernÃ¡ndez del</given-names></name>
        <name><surname>Wiebe</surname><given-names>Mark</given-names></name>
        <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
        <name><surname>GÃ©rard-Marchant</surname><given-names>Pierre</given-names></name>
        <name><surname>Sheppard</surname><given-names>Kevin</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
        <name><surname>Abbasi</surname><given-names>Hameer</given-names></name>
        <name><surname>Gohlke</surname><given-names>Christoph</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
      </person-group>
      <article-title>Array programming with NumPy</article-title>
      <source>Nature</source>
      <publisher-name>Springer Science; Business Media LLC</publisher-name>
      <year iso-8601-date="2020-09">2020</year><month>09</month>
      <volume>585</volume>
      <issue>7825</issue>
      <uri>https://doi.org/10.1038/s41586-020-2649-2</uri>
      <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
      <fpage>357</fpage>
      <lpage>362</lpage>
    </element-citation>
  </ref>
  <ref id="ref-scabench">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Cassiers</surname><given-names>GaÃ«tan</given-names></name>
      </person-group>
      <article-title>SCABench: A benchmark suite for side-channel analysis libraries</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/cassiersg/SCABench</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
