<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">3849</article-id>
<article-id pub-id-type="doi">10.21105/joss.03849</article-id>
<title-group>
<article-title>gym-saturation: an OpenAI Gym environment for saturation
provers</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-1291-9896</contrib-id>
<name>
<surname>Shminke</surname>
<given-names>Boris</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Laboratoire J.A. Dieudonné, CNRS and Université Côte
d’Azur, France</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2021-10-01">
<day>1</day>
<month>10</month>
<year>2021</year>
</pub-date>
<volume>7</volume>
<issue>71</issue>
<fpage>3849</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>OpenAI Gym</kwd>
<kwd>automated theorem prover</kwd>
<kwd>saturation prover</kwd>
<kwd>reinforcement learning</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<p><monospace>gym-saturation</monospace> is an OpenAI Gym
(<xref alt="Brockman et al., 2016" rid="ref-DBLPU003AjournalsU002FcorrU002FBrockmanCPSSTZ16" ref-type="bibr">Brockman
et al., 2016</xref>) environment for reinforcement learning (RL) agents
capable of proving theorems. Currently, only theorems written in a
formal language of the Thousands of Problems for Theorem Provers (TPTP)
library
(<xref alt="Sutcliffe, 2017" rid="ref-Sut17" ref-type="bibr">Sutcliffe,
2017</xref>) in clausal normal form (CNF) are supported.
<monospace>gym-saturation</monospace> implements the ‘given clause’
algorithm (similar to the one used in Vampire
(<xref alt="Kovács &amp; Voronkov, 2013" rid="ref-DBLPU003AconfU002FcavU002FKovacsV13" ref-type="bibr">Kovács
&amp; Voronkov, 2013</xref>) and E Prover
(<xref alt="Schulz et al., 2019" rid="ref-DBLPU003AconfU002FcadeU002F0001CV19" ref-type="bibr">Schulz
et al., 2019</xref>)). Being written in Python,
<monospace>gym-saturation</monospace> was inspired by PyRes
(<xref alt="Schulz &amp; Pease, 2020" rid="ref-DBLPU003AconfU002FcadeU002F0001P20" ref-type="bibr">Schulz
&amp; Pease, 2020</xref>). In contrast to the monolithic architecture of
a typical Automated Theorem Prover (ATP),
<monospace>gym-saturation</monospace> gives different agents
opportunities to select clauses themselves and train from their
experience. Combined with a particular agent,
<monospace>gym-saturation</monospace> can work as an ATP. Even with a
non trained agent based on heuristics,
<monospace>gym-saturation</monospace> can find refutations for 688 (of
8257) CNF problems from TPTP v7.5.0.</p>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Current applications of RL to saturation-based ATPs like Enigma
  (<xref alt="Jakubuv et al., 2020" rid="ref-DBLPU003AconfU002FcadeU002FJakubuvCOP0U20" ref-type="bibr">Jakubuv
  et al., 2020</xref>) or Deepire
  (<xref alt="Suda, 2021" rid="ref-DBLPU003AconfU002FcadeU002F000121a" ref-type="bibr">Suda,
  2021</xref>) are similar in that the environment and the agent are not
  separate pieces of software but parts of larger systems that are hard
  to disentangle. The same is true for non saturation-based RL-friendly
  provers too (e.g. lazyCoP, Rawson &amp; Reger
  (<xref alt="2021" rid="ref-DBLPU003AconfU002FtableauxU002FRawsonR21" ref-type="bibr">2021</xref>)).
  This monolithic approach hinders free experimentation with novel
  machine learning (ML) models and RL algorithms and creates unnecessary
  complications for ML and RL experts willing to contribute to the
  field. In contrast, for interactive theorem provers, projects like
  HOList
  (<xref alt="Bansal, Loos, Rabe, Szegedy, &amp; Wilcox, 2019" rid="ref-DBLPU003AconfU002FicmlU002FBansalLRSW19" ref-type="bibr">Bansal,
  Loos, Rabe, Szegedy, &amp; Wilcox, 2019</xref>) or GamePad
  (<xref alt="Huang et al., 2019" rid="ref-DBLPU003AconfU002FiclrU002FHuangDSS19" ref-type="bibr">Huang
  et al., 2019</xref>) separate the concepts of environment and agent.
  Such modular architecture may lead to the development of easily
  comparable agents based on diverse approaches (see, e.g. Paliwal et
  al.
  (<xref alt="2020" rid="ref-DBLPU003AconfU002FaaaiU002FPaliwalLRBS20" ref-type="bibr">2020</xref>)
  or Bansal, Loos, Rabe, &amp; Szegedy
  (<xref alt="2019" rid="ref-DBLPU003AjournalsU002FcorrU002Fabs-1905-10501" ref-type="bibr">2019</xref>)).
  <monospace>gym-saturation</monospace> is an attempt to implement a
  modular environment-agent architecture of an RL-based ATP. In
  addition, some RL empowered saturation ATPs are not accompanied with
  their source code
  (<xref alt="Abdelaziz et al., 2022" rid="ref-9669114" ref-type="bibr">Abdelaziz
  et al., 2022</xref>), while <monospace>gym-saturation</monospace> is
  open-source software.</p>
</sec>
<sec id="usage-example">
  <title>Usage example</title>
  <p>Suppose we want to prove an extremely simple theorem with a very
  basic agent. We can do that in the following way:</p>
  <code language="python"># first we create and reset a OpenAI Gym environment
from importlib.resources import files
import gym

env = gym.make(
    &quot;gym_saturation:saturation-v0&quot;,
    # we will try to find a proof shorter than 10 steps
    step_limit=10,
    # for a classical syllogism about Socrates
    problem_list=[
        files(&quot;gym_saturation&quot;).joinpath(
            &quot;resources/TPTP-mock/Problems/TST/TST003-1.p&quot;
        )
    ],
)
env.reset()
# we can render the environment (that will become the beginning of the proof)
print(&quot;starting hypotheses:&quot;)
print(env.render(&quot;human&quot;))
# our 'age' agent will always select clauses for inference
# in the order they appeared in current proof attempt
action = 0
done = False
while not done:
    observation, reward, done, info = env.step(action)
    action += 1
# SaturationEnv has an additional method
# for extracting only clauses which became parts of the proof
# (some steps were unnecessary to find the proof)
print(&quot;refutation proof:&quot;)
print(env.tstp_proof)
print(f&quot;number of attempted steps: {action}&quot;)</code>
  <p>The output of this script includes a refutation proof found:</p>
  <preformat>starting hypotheses:
cnf(p_imp_q, hypothesis, ~man(X0) | mortal(X0)).
cnf(p, hypothesis, man(socrates)).
cnf(q, hypothesis, ~mortal(socrates)).
refutation proof:
cnf(_0, hypothesis, mortal(socrates), inference(resolution, [], [p_imp_q, p])).
cnf(_2, hypothesis, $false, inference(resolution, [], [q, _0])).
number of attempted steps: 6</preformat>
</sec>
<sec id="architecture">
  <title>Architecture</title>
  <p><monospace>gym-saturation</monospace> includes several
  sub-packages:</p>
  <list list-type="bullet">
    <list-item>
      <p>parsing (happens during <monospace>env.reset()</monospace> in
      example code snippet)</p>
    </list-item>
    <list-item>
      <p>logic operations (happen during
      <monospace>env.step(action)</monospace> in the example)</p>
    </list-item>
    <list-item>
      <p>AI Gym environment implementation</p>
    </list-item>
    <list-item>
      <p>agent testing (a bit more elaborated version of the
      <monospace>while</monospace> loop from the examle)</p>
    </list-item>
  </list>
  <p><monospace>gym-saturation</monospace> relies on a deduction system
  of four rules which is known to be refutationally complete
  (<xref alt="Brand, 1975" rid="ref-doiU003A10.1137U002F0204036" ref-type="bibr">Brand,
  1975</xref>):</p>
  <p> </p>
  <p>where <inline-formula><alternatives>
  <tex-math><![CDATA[C,C_1,C_2]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>
  are clauses, <inline-formula><alternatives>
  <tex-math><![CDATA[A_1,A_2]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>
  are atomic formulae, <inline-formula><alternatives>
  <tex-math><![CDATA[L]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>L</mml:mi></mml:math></alternatives></inline-formula>
  is a literal, <inline-formula><alternatives>
  <tex-math><![CDATA[r,s,t]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  are terms, and <inline-formula><alternatives>
  <tex-math><![CDATA[\sigma]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>σ</mml:mi></mml:math></alternatives></inline-formula>
  is a substitution (most general unifier).
  <inline-formula><alternatives>
  <tex-math><![CDATA[L\left[t\right]]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">[</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="true" form="postfix">]</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  is a result of substituting the term <inline-formula><alternatives>
  <tex-math><![CDATA[t]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>t</mml:mi></mml:math></alternatives></inline-formula>
  in <inline-formula><alternatives>
  <tex-math><![CDATA[L\left[r\right]]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">[</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="true" form="postfix">]</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  for the term <inline-formula><alternatives>
  <tex-math><![CDATA[r]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>r</mml:mi></mml:math></alternatives></inline-formula>
  at only one chosen position.</p>
  <p>For parsing, we use the LARK parser
  (<xref alt="Shinan, 2021" rid="ref-LARK" ref-type="bibr">Shinan,
  2021</xref>). We represent the clauses as Python classes forming
  tree-like structures. <monospace>gym-saturation</monospace> also
  includes a JSON serializer/deserializer for those trees. For example,
  a TPTP clause</p>
  <preformat>cnf(a2,hypothesis,
    ( ~ q(a) | f(X) = X )).</preformat>
  <p>becomes</p>
  <code language="python">Clause(
    literals=[
        Literal(
            negated=True,
            atom=Predicate(
                name=&quot;q&quot;, arguments=[Function(name=&quot;a&quot;, arguments=[])]
            ),
        ),
        Literal(
            negated=False,
            atom=Predicate(
                name=&quot;=&quot;,
                arguments=[
                    Function(name=&quot;f&quot;, arguments=[Variable(name=&quot;X&quot;)]),
                    Variable(name=&quot;X&quot;),
                ],
            ),
        ),
    ],
    label=&quot;a2&quot;,
)</code>
  <p>This grammar serves as the glue for
  <monospace>gym-saturation</monospace> sub-packages, which are, in
  principle, independent of each other. After switching to another
  parser or another deduction system, the agent testing script won’t
  break, and RL developers won’t need to modify their agents for
  compatibility (for them, the environment will have the same standard
  OpenAI Gym API).</p>
  <fig>
    <caption><p>A diagram showing interactions between four main
    subpackages of <monospace>gym-saturation</monospace>: 1) parsing; 2)
    logic operations (including the given clause algorithm); 3) OpenAI
    Gym Env implementation; 4) the agent testing
    script.<styled-content id="figU003Aarchitecture"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/architecture.png" xlink:title="" />
  </fig>
  <p>Agent testing is a simple episode pipeline (see
  <xref alt="Figure 1" rid="figU003Aarchitecture">Figure 1</xref>). It
  is supposed to be run in parallel (e.g. using GNU Parallel, Tange
  (<xref alt="2021" rid="ref-tange_2021_5233953" ref-type="bibr">2021</xref>))
  for a testing subset of problems. See the following table for the
  testing results of two popular heuristic-based agents on TPTP v7.5.0
  (trained RL agents should strive to be more successful than those
  primitive baselines):</p>
  <table-wrap>
    <table>
      <thead>
        <tr>
          <th></th>
          <th><bold>size agent</bold></th>
          <th><bold>age agent</bold></th>
          <th><bold>size&amp;age agent</bold></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><bold>proof found</bold></td>
          <td>509</td>
          <td>206</td>
          <td>688</td>
        </tr>
        <tr>
          <td><bold>step limit</bold></td>
          <td>1385</td>
          <td>35</td>
          <td>223</td>
        </tr>
        <tr>
          <td><bold>out of memory</bold></td>
          <td>148</td>
          <td>149</td>
          <td>148</td>
        </tr>
        <tr>
          <td><bold>5 min time out</bold></td>
          <td>6215</td>
          <td>7867</td>
          <td>7198</td>
        </tr>
        <tr>
          <td><bold>total</bold></td>
          <td>8257</td>
          <td>8257</td>
          <td>8257</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <p><monospace>size agent</monospace> is an agent which always selects
  the shortest clause.</p>
  <p><monospace>age agent</monospace> is an agent which always selects
  the clause which arrived first to the set of unprocessed clauses (‘the
  oldest one’).</p>
  <p><monospace>size&amp;age agent</monospace> is an agent which selects
  the shortest clause five times in a row and then one time — the oldest
  one.</p>
  <p>‘Step limit’ means an agent didn’t find proof after 1000 steps (the
  longest proof found consists of 287 steps). This can work as a ‘soft
  timeout’.</p>
</sec>
<sec id="mentions">
  <title>Mentions</title>
  <p>At the moment of writing this paper,
  <monospace>gym-saturation</monospace> was used by its author during
  their PhD studies for creating experimental RL-based ATPs.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This work has been supported by the French government, through the
  3IA Côte d’Azur Investments in the Future project managed by the
  National Research Agency (ANR) with the reference number
  ANR-19-P3IA-0002. This work was performed using HPC resources from
  GENCI-IDRIS (Grant 2021-AD011013125).</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-DBLPU003AconfU002FcadeU002F0001P20">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Schulz</surname><given-names>Stephan</given-names></name>
          <name><surname>Pease</surname><given-names>Adam</given-names></name>
        </person-group>
        <article-title>Teaching automated theorem proving by example: PyRes 1.2 - (system description)</article-title>
        <source>Automated reasoning - 10th international joint conference, IJCAR 2020, paris, france, july 1-4, 2020, proceedings, part II</source>
        <person-group person-group-type="editor">
          <name><surname>Peltier</surname><given-names>Nicolas</given-names></name>
          <name><surname>Sofronie-Stokkermans</surname><given-names>Viorica</given-names></name>
        </person-group>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <volume>12167</volume>
        <uri>https://doi.org/10.1007/978-3-030-51054-1\_9</uri>
        <pub-id pub-id-type="doi">10.1007/978-3-030-51054-1\_9</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-DBLPU003AjournalsU002FcorrU002FBrockmanCPSSTZ16">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Brockman</surname><given-names>Greg</given-names></name>
          <name><surname>Cheung</surname><given-names>Vicki</given-names></name>
          <name><surname>Pettersson</surname><given-names>Ludwig</given-names></name>
          <name><surname>Schneider</surname><given-names>Jonas</given-names></name>
          <name><surname>Schulman</surname><given-names>John</given-names></name>
          <name><surname>Tang</surname><given-names>Jie</given-names></name>
          <name><surname>Zaremba</surname><given-names>Wojciech</given-names></name>
        </person-group>
        <article-title>OpenAI gym</article-title>
        <source>CoRR</source>
        <year iso-8601-date="2016">2016</year>
        <volume>abs/1606.01540</volume>
        <uri>http://arxiv.org/abs/1606.01540</uri>
      </element-citation>
    </ref>
    <ref id="ref-Sut17">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Sutcliffe</surname><given-names>G.</given-names></name>
        </person-group>
        <article-title>The TPTP Problem Library and Associated Infrastructure. From CNF to TH0, TPTP v6.4.0</article-title>
        <source>Journal of Automated Reasoning</source>
        <year iso-8601-date="2017">2017</year>
        <volume>59</volume>
        <issue>4</issue>
      </element-citation>
    </ref>
    <ref id="ref-DBLPU003AconfU002FcadeU002F0001CV19">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Schulz</surname><given-names>Stephan</given-names></name>
          <name><surname>Cruanes</surname><given-names>Simon</given-names></name>
          <name><surname>Vukmirovic</surname><given-names>Petar</given-names></name>
        </person-group>
        <article-title>Faster, higher, stronger: E 2.3</article-title>
        <source>Automated deduction - CADE 27 - 27th international conference on automated deduction, natal, brazil, august 27-30, 2019, proceedings</source>
        <person-group person-group-type="editor">
          <name><surname>Fontaine</surname><given-names>Pascal</given-names></name>
        </person-group>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="2019">2019</year>
        <volume>11716</volume>
        <uri>https://doi.org/10.1007/978-3-030-29436-6\_29</uri>
        <pub-id pub-id-type="doi">10.1007/978-3-030-29436-6\_29</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-DBLPU003AconfU002FcavU002FKovacsV13">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Kovács</surname><given-names>Laura</given-names></name>
          <name><surname>Voronkov</surname><given-names>Andrei</given-names></name>
        </person-group>
        <article-title>First-order theorem proving and vampire</article-title>
        <source>Computer aided verification - 25th international conference, CAV 2013, saint petersburg, russia, july 13-19, 2013. proceedings</source>
        <person-group person-group-type="editor">
          <name><surname>Sharygina</surname><given-names>Natasha</given-names></name>
          <name><surname>Veith</surname><given-names>Helmut</given-names></name>
        </person-group>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="2013">2013</year>
        <volume>8044</volume>
        <uri>https://doi.org/10.1007/978-3-642-39799-8\_1</uri>
        <pub-id pub-id-type="doi">10.1007/978-3-642-39799-8\_1</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-DBLPU003AconfU002FcadeU002F000121a">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Suda</surname><given-names>Martin</given-names></name>
        </person-group>
        <article-title>Improving ENIGMA-style clause selection while learning from history</article-title>
        <source>Automated deduction - CADE 28 - 28th international conference on automated deduction, virtual event, july 12-15, 2021, proceedings</source>
        <person-group person-group-type="editor">
          <name><surname>Platzer</surname><given-names>André</given-names></name>
          <name><surname>Sutcliffe</surname><given-names>Geoff</given-names></name>
        </person-group>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="2021">2021</year>
        <volume>12699</volume>
        <uri>https://doi.org/10.1007/978-3-030-79876-5\_31</uri>
        <pub-id pub-id-type="doi">10.1007/978-3-030-79876-5\_31</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-DBLPU003AconfU002FcadeU002FJakubuvCOP0U20">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Jakubuv</surname><given-names>Jan</given-names></name>
          <name><surname>Chvalovský</surname><given-names>Karel</given-names></name>
          <name><surname>Olsák</surname><given-names>Miroslav</given-names></name>
          <name><surname>Piotrowski</surname><given-names>Bartosz</given-names></name>
          <name><surname>Suda</surname><given-names>Martin</given-names></name>
          <name><surname>Urban</surname><given-names>Josef</given-names></name>
        </person-group>
        <article-title>ENIGMA anonymous: Symbol-independent inference guiding machine (system description)</article-title>
        <source>Automated reasoning - 10th international joint conference, IJCAR 2020, paris, france, july 1-4, 2020, proceedings, part II</source>
        <person-group person-group-type="editor">
          <name><surname>Peltier</surname><given-names>Nicolas</given-names></name>
          <name><surname>Sofronie-Stokkermans</surname><given-names>Viorica</given-names></name>
        </person-group>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <volume>12167</volume>
        <uri>https://doi.org/10.1007/978-3-030-51054-1\_29</uri>
        <pub-id pub-id-type="doi">10.1007/978-3-030-51054-1\_29</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-DBLPU003AconfU002FtableauxU002FRawsonR21">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Rawson</surname><given-names>Michael</given-names></name>
          <name><surname>Reger</surname><given-names>Giles</given-names></name>
        </person-group>
        <article-title>lazyCoP: Lazy paramodulation meets neurally guided search</article-title>
        <source>Automated reasoning with analytic tableaux and related methods - 30th international conference, TABLEAUX 2021, birmingham, UK, september 6-9, 2021, proceedings</source>
        <person-group person-group-type="editor">
          <name><surname>Das</surname><given-names>Anupam</given-names></name>
          <name><surname>Negri</surname><given-names>Sara</given-names></name>
        </person-group>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="2021">2021</year>
        <volume>12842</volume>
        <uri>https://doi.org/10.1007/978-3-030-86059-2\_11</uri>
        <pub-id pub-id-type="doi">10.1007/978-3-030-86059-2\_11</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-9669114">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Abdelaziz</surname><given-names>Ibrahim</given-names></name>
          <name><surname>Crouse</surname><given-names>Maxwell</given-names></name>
          <name><surname>Makni</surname><given-names>Bassem</given-names></name>
          <name><surname>Austel</surname><given-names>Vernon</given-names></name>
          <name><surname>Cornelio</surname><given-names>Cristina</given-names></name>
          <name><surname>Ikbal</surname><given-names>Shajith</given-names></name>
          <name><surname>Kapanipathi</surname><given-names>Pavan</given-names></name>
          <name><surname>Makondo</surname><given-names>Ndivhuwo</given-names></name>
          <name><surname>Srinivas</surname><given-names>Kavitha</given-names></name>
          <name><surname>Witbrock</surname><given-names>Michael</given-names></name>
          <name><surname>Fokoue</surname><given-names>Achille</given-names></name>
        </person-group>
        <article-title>Learning to guide a saturation-based theorem prover</article-title>
        <source>IEEE Transactions on Pattern Analysis and Machine Intelligence</source>
        <year iso-8601-date="2022">2022</year>
        <volume></volume>
        <issue></issue>
        <pub-id pub-id-type="doi">10.1109/TPAMI.2022.3140382</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-DBLPU003AconfU002FicmlU002FBansalLRSW19">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Bansal</surname><given-names>Kshitij</given-names></name>
          <name><surname>Loos</surname><given-names>Sarah M.</given-names></name>
          <name><surname>Rabe</surname><given-names>Markus N.</given-names></name>
          <name><surname>Szegedy</surname><given-names>Christian</given-names></name>
          <name><surname>Wilcox</surname><given-names>Stewart</given-names></name>
        </person-group>
        <article-title>HOList: An environment for machine learning of higher order logic theorem proving</article-title>
        <source>Proceedings of the 36th international conference on machine learning, ICML 2019, 9-15 june 2019, long beach, california, USA</source>
        <person-group person-group-type="editor">
          <name><surname>Chaudhuri</surname><given-names>Kamalika</given-names></name>
          <name><surname>Salakhutdinov</surname><given-names>Ruslan</given-names></name>
        </person-group>
        <publisher-name>PMLR</publisher-name>
        <year iso-8601-date="2019">2019</year>
        <volume>97</volume>
        <uri>http://proceedings.mlr.press/v97/bansal19a.html</uri>
      </element-citation>
    </ref>
    <ref id="ref-tange_2021_5233953">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Tange</surname><given-names>Ole</given-names></name>
        </person-group>
        <source>GNU parallel 20210822 (’kabul’)</source>
        <publisher-name>Zenodo</publisher-name>
        <year iso-8601-date="2021-08">2021</year><month>08</month>
        <uri>https://doi.org/10.5281/zenodo.5233953</uri>
        <pub-id pub-id-type="doi">10.5281/zenodo.5233953</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-doiU003A10.1137U002F0204036">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Brand</surname><given-names>D.</given-names></name>
        </person-group>
        <article-title>Proving theorems with the modification method</article-title>
        <source>SIAM Journal on Computing</source>
        <year iso-8601-date="1975">1975</year>
        <volume>4</volume>
        <issue>4</issue>
        <uri>https://doi.org/10.1137/0204036</uri>
        <pub-id pub-id-type="doi">10.1137/0204036</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-LARK">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Shinan</surname><given-names>Erez</given-names></name>
        </person-group>
        <article-title>Lark-parser</article-title>
        <year iso-8601-date="2021-08-30">2021</year><month>08</month><day>30</day>
        <uri>https://pypi.org/project/lark-parser/</uri>
      </element-citation>
    </ref>
    <ref id="ref-DBLPU003AconfU002FaaaiU002FPaliwalLRBS20">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Paliwal</surname><given-names>Aditya</given-names></name>
          <name><surname>Loos</surname><given-names>Sarah M.</given-names></name>
          <name><surname>Rabe</surname><given-names>Markus N.</given-names></name>
          <name><surname>Bansal</surname><given-names>Kshitij</given-names></name>
          <name><surname>Szegedy</surname><given-names>Christian</given-names></name>
        </person-group>
        <article-title>Graph representations for higher-order logic and theorem proving</article-title>
        <source>The thirty-fourth AAAI conference on artificial intelligence, AAAI 2020, the thirty-second innovative applications of artificial intelligence conference, IAAI 2020, the tenth AAAI symposium on educational advances in artificial intelligence, EAAI 2020, new york, NY, USA, february 7-12, 2020</source>
        <publisher-name>AAAI Press</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://aaai.org/ojs/index.php/AAAI/article/view/5689</uri>
      </element-citation>
    </ref>
    <ref id="ref-DBLPU003AjournalsU002FcorrU002Fabs-1905-10501">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Bansal</surname><given-names>Kshitij</given-names></name>
          <name><surname>Loos</surname><given-names>Sarah M.</given-names></name>
          <name><surname>Rabe</surname><given-names>Markus N.</given-names></name>
          <name><surname>Szegedy</surname><given-names>Christian</given-names></name>
        </person-group>
        <article-title>Learning to reason in large theories without imitation</article-title>
        <source>CoRR</source>
        <year iso-8601-date="2019">2019</year>
        <volume>abs/1905.10501</volume>
        <uri>http://arxiv.org/abs/1905.10501</uri>
      </element-citation>
    </ref>
    <ref id="ref-DBLPU003AconfU002FiclrU002FHuangDSS19">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Huang</surname><given-names>Daniel</given-names></name>
          <name><surname>Dhariwal</surname><given-names>Prafulla</given-names></name>
          <name><surname>Song</surname><given-names>Dawn</given-names></name>
          <name><surname>Sutskever</surname><given-names>Ilya</given-names></name>
        </person-group>
        <article-title>GamePad: A learning environment for theorem proving</article-title>
        <source>7th international conference on learning representations, ICLR 2019, new orleans, LA, USA, may 6-9, 2019</source>
        <publisher-name>OpenReview.net</publisher-name>
        <year iso-8601-date="2019">2019</year>
        <uri>https://openreview.net/forum?id=r1xwKoR9Y7</uri>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
