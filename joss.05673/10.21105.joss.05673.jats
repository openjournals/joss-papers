<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">5673</article-id>
<article-id pub-id-type="doi">10.21105/joss.05673</article-id>
<title-group>
<article-title>PurpleCaffeine: tracking of quantum programs and
experiments</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-6809-8943</contrib-id>
<name>
<surname>Sitdikov</surname>
<given-names>Iskandar</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-8619-8190</contrib-id>
<name>
<surname>Rollin</surname>
<given-names>Michaël</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0005-5517-5363</contrib-id>
<name>
<surname>Kuriyodath</surname>
<given-names>Ansah Mohammad</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-0354-5092</contrib-id>
<name>
<surname>Hérnandez</surname>
<given-names>Luis Eduardo Martínez</given-names>
</name>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>IBM Quantum, T.J. Watson Research Center, Yorktown Heights,
NY 10598, USA</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Shape-IT, France</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Sardar Vallabhbhai National Institute of Technology, Surat,
India</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>Netcracker, Mexico</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-05-18">
<day>18</day>
<month>5</month>
<year>2023</year>
</pub-date>
<volume>8</volume>
<issue>90</issue>
<fpage>5673</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>quantum computing</kwd>
<kwd>qiskit</kwd>
<kwd>Python</kwd>
<kwd>experiment tracking</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>PurpleCaffeine aims to provide researchers in the field of quantum
  computing with a user-friendly and efficient solution for tracking
  their experimental data. With the rapid advancement of quantum
  computing research, the need for accessible and organized data
  management tools has become increasingly important. By offering a
  simple interface, PurpleCaffeine allows researchers to easily record
  and organize quantum experimental data, ensuring its accessibility and
  facilitating future analysis.</p>
  <p>Researchers can use PurpleCaffeine to capture and store crucial
  information related to their quantum experiments. The user-friendly
  interface simplifies the process of inputting and organizing data,
  including experimental parameters, measurement results, quantum
  circuits, OpenQASM
  (<xref alt="Cross et al., 2017" rid="ref-openqasm" ref-type="bibr">Cross
  et al., 2017</xref>) files, devices information and other relevant
  metadata. The emphasis on simplicity reduces the learning curve and
  frees researchers from complex data management tasks, enabling them to
  focus on their core work.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Researchers in the field of quantum computing rely predominantly on
  notebook services, such as Jupyter
  (<xref alt="Kluyver et al., 2016" rid="ref-jupyter" ref-type="bibr">Kluyver
  et al., 2016</xref>), to work within an interactive coding
  environment. While this approach offers numerous benefits, including
  code experimentation and real-time analysis, it presents a significant
  challenge when it comes to tracking experimental data. One of the main
  drawbacks is the constant overwriting of data, making it exceedingly
  difficult to trace the specific parameters, circuits, and other
  details used in previous iterations.</p>
  <p>As quantum computing research progresses it becomes increasingly
  important to have a reliable and efficient system for managing
  experimental data. A comprehensive solution is needed to address the
  shortcomings of interactive workflows, ensuring that researchers can
  easily record and access vital information related to their
  experiments. By overcoming the limitations of current approaches, this
  solution empowers researchers to track their data effectively and gain
  valuable insights from previous iterations, leading to more accurate
  analyses, reproducible research, and accelerated progress in the
  field.</p>
</sec>
<sec id="architecture">
  <title>Architecture</title>
  <p>The proposed software package uses a variation of the client-server
  architecture, consisting of a client-side component and multiple
  storage options for storing experimental data
  <xref alt="[fig:architecture]" rid="figU003Aarchitecture">[fig:architecture]</xref>.</p>
  <fig>
    <caption><p>Architecture.<styled-content id="figU003Aarchitecture"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/images/architecture.png" />
  </fig>
  <p>The client component is a Python library specifically designed for
  tracking experimental data in quantum computing research, covering
  essential Qiskit
  (<xref alt="Qiskit contributors, 2023" rid="ref-Qiskit" ref-type="bibr">Qiskit
  contributors, 2023</xref>) objects including QuantumCircuit, Operators
  and Backends.</p>
  <p>To cater to diverse needs, the package provides three flavors of
  storage options for storing experimental data:</p>
  <list list-type="order">
    <list-item>
      <p>Local Storage: The local storage allows researchers to store
      their experimental data locally on their machines. This option
      offers convenience and data privacy, as researchers have direct
      control over their data storage. It is an excellent choice for
      individual researchers or small-scale projects where data sharing
      and collaboration are not a primary concern.</p>
    </list-item>
    <list-item>
      <p>API Storage: The API storage is a RESTful API service that
      functions as a multi-tenant storage solution. Researchers can
      utilize this storage to store their experimental data in a
      centralized and scalable manner. It is particularly beneficial for
      collaborative research projects or environments where data sharing
      and team collaboration are essential.</p>
    </list-item>
    <list-item>
      <p>S3 Storage: The S3 storage provides the option to store
      experimental data in S3 buckets, which are highly scalable and
      reliable storage containers. Researchers can leverage the power
      and versatility of S3 to securely store and access their
      experimental data. This option is ideal for projects that require
      large-scale data storage and long-term data retention.</p>
    </list-item>
  </list>
</sec>
<sec id="functionality">
  <title>Functionality</title>
  <p>The functionality of the software package revolves around the
  Python client, which serves as the primary interface for interacting
  with the software. Through the client, researchers can access and
  utilize three key abstractions that cover the entire experimentation
  tracking workflow:</p>
  <list list-type="order">
    <list-item>
      <p>Trial: The Trial class is a fundamental abstraction provided by
      the software. Researchers use this class to define and specify the
      experimental metadata they want to gather and track. It acts as a
      blueprint for capturing information such as experimental
      parameters, circuit configurations, measurement results, and any
      other relevant data points.</p>
    </list-item>
    <list-item>
      <p>Storage: The Storage abstraction is responsible for the storage
      functionality of the software. It provides a unified interface to
      store and retrieve experimental data. The software offers three
      different flavors of storage options, as previously discussed:
      local storage, API storage, and S3 storage.</p>
    </list-item>
    <list-item>
      <p>Widget: The Widget
      <xref alt="[fig:widget]" rid="figU003Awidget">[fig:widget]</xref>
      is a visualization tool that enhances the user experience by
      acting as a user interface for searching, viewing, and analyzing
      previous trials. This widget is specifically designed to integrate
      with Jupyter notebooks, providing a convenient and interactive
      environment for researchers.</p>
    </list-item>
  </list>
  <fig>
    <caption><p>Widget.<styled-content id="figU003Awidget"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/images/widget_updated.png" />
  </fig>
  <sec id="serialization">
    <title>Serialization</title>
    <p><monospace>Trial</monospace>s are serialized using Python’s
    <monospace>json</monospace> module. We’ve implemented custom
    <monospace>json.JSONEncoder</monospace> and
    <monospace>json.JSONDecoder</monospace> to handle quantum computing
    objects like <monospace>QuantumCircuit</monospace>,
    <monospace>Backend</monospace>, <monospace>Operator</monospace>,
    etc.</p>
    <p>Encoders and decoders are using <monospace>pickle</monospace>
    module to serialize some classes (<monospace>Backend</monospace>).
    The pickle module is not secure. Only unpickle data you trust. It is
    possible to construct malicious pickle data which will execute
    arbitrary code during unpickling. Never unpickle data that could
    have come from an untrusted source, or that could have been tampered
    with.</p>
  </sec>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We would like to express our sincere gratitude to the Qiskit
  Advocates Mentorship Program (QAMP)
  (<xref alt="“Qiskit Advocate Mentorship Program,” 2023" rid="ref-qamp" ref-type="bibr">“Qiskit
  Advocate Mentorship Program,” 2023</xref>) that played a role in
  bringing together the talented team behind the development of this
  software package. The mentorship program provided a valuable platform
  for fostering collaboration, learning, and professional growth.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-Qiskit">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>Qiskit contributors</string-name>
      </person-group>
      <article-title>Qiskit: An open-source framework for quantum computing</article-title>
      <year iso-8601-date="2023">2023</year>
      <pub-id pub-id-type="doi">10.5281/zenodo.2573505</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-qamp">
    <element-citation>
      <article-title>Qiskit advocate mentorship program</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/qiskit-advocate/qamp-spring-23</uri>
    </element-citation>
  </ref>
  <ref id="ref-openqasm">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Cross</surname><given-names>Andrew W.</given-names></name>
        <name><surname>Bishop</surname><given-names>Lev S.</given-names></name>
        <name><surname>Smolin</surname><given-names>John A.</given-names></name>
        <name><surname>Gambetta</surname><given-names>Jay M.</given-names></name>
      </person-group>
      <article-title>Open quantum assembly language</article-title>
      <year iso-8601-date="2017">2017</year>
      <uri>https://arxiv.org/abs/1707.03429</uri>
    </element-citation>
  </ref>
  <ref id="ref-jupyter">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Kluyver</surname><given-names>Thomas</given-names></name>
        <name><surname>Ragan-Kelley</surname><given-names>Benjamin</given-names></name>
        <name><surname>Pérez</surname><given-names>Fernando</given-names></name>
        <name><surname>Granger</surname><given-names>Brian</given-names></name>
        <name><surname>Bussonnier</surname><given-names>Matthias</given-names></name>
        <name><surname>Frederic</surname><given-names>Jonathan</given-names></name>
        <name><surname>Kelley</surname><given-names>Kyle</given-names></name>
        <name><surname>Hamrick</surname><given-names>Jessica</given-names></name>
        <name><surname>Grout</surname><given-names>Jason</given-names></name>
        <name><surname>Corlay</surname><given-names>Sylvain</given-names></name>
        <name><surname>Ivanov</surname><given-names>Paul</given-names></name>
        <name><surname>Avila</surname><given-names>Damián</given-names></name>
        <name><surname>Abdalla</surname><given-names>Safia</given-names></name>
        <name><surname>Willing</surname><given-names>Carol</given-names></name>
      </person-group>
      <article-title>Jupyter notebooks – a publishing format for reproducible computational workflows</article-title>
      <person-group person-group-type="editor">
        <name><surname>Loizides</surname><given-names>F.</given-names></name>
        <name><surname>Schmidt</surname><given-names>B.</given-names></name>
      </person-group>
      <publisher-name>IOS Press</publisher-name>
      <year iso-8601-date="2016">2016</year>
      <fpage>87 </fpage>
      <lpage> 90</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
