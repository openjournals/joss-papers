<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6096</article-id>
<article-id pub-id-type="doi">10.21105/joss.06096</article-id>
<title-group>
<article-title>A Python module to combine <inline-formula><alternatives>
<tex-math><![CDATA[p]]></tex-math>
<mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> values
arising from discrete tests.</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-5472-7067</contrib-id>
<name>
<surname>Ansmann</surname>
<given-names>Gerrit</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Institute for Biological Physics, University of Cologne,
Germany</institution>
</institution-wrap>
</aff>
</contrib-group>
<volume>9</volume>
<issue>94</issue>
<fpage>6096</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>statistics</kwd>
<kwd>hypothesis tests</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Most popular hypothesis tests are designed for datasets with a
  simple structure. For example, in a simple medical trial, this
  structure would be a treatment and a control group, and a test would
  answer whether some health score exhibits a significant difference
  between their members. However, many datasets are naturally segmented
  or benefit from being analysed in segments. Continuing our example, if
  we know a priori that females score higher than males on average,
  analysing each sex separately should allow us to see more clearly
  whether the treatment is effective. To draw an overall conclusion in
  such a case, we need to combine the <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> values
  for each sub-dataset.</p>
  <p>Starting with Fisher’s method, several ways have been proposed to
  combine <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> values
  (<xref alt="Heard &amp; Rubin-Delanchy, 2018" rid="ref-Heard2018" ref-type="bibr">Heard
  &amp; Rubin-Delanchy, 2018</xref>). Their usual implementations assume
  <italic>continuous tests,</italic> i.e., tests whose
  <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> values
  under the null hypothesis follow the uniform distribution on the unit
  interval. However, rank tests and many others are <italic>discrete
  tests,</italic> i.e., they can only yield
  <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> values
  from a finite selection (for a given sample size). Assuming continuous
  tests when combining <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> values
  from discrete tests can lead to considerably misleading outcomes
  (<xref alt="Kincaid, 1962" rid="ref-Kincaid1962" ref-type="bibr">Kincaid,
  1962</xref>;
  <xref alt="Mielke et al., 2004" rid="ref-Mielke2004" ref-type="bibr">Mielke
  et al., 2004</xref>), in particular when the sub-datasets are
  small.</p>
  <p>We here present the Python module
  <monospace>combine_pvalues_discrete</monospace>, which provides a
  toolbox for combining <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> values
  from discrete tests. Results from individual tests are stored with the
  respective null distribution of <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> values
  and the combined <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> value
  is accurately estimated using a Monte Carlo simulation based on these
  null distributions.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Combining <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> values
  is a standard problem in statistical data analysis. Before the advent
  of modern computing, many methods have been devoted to analytically
  solving this problem for continuous tests
  (<xref alt="Heard &amp; Rubin-Delanchy, 2018" rid="ref-Heard2018" ref-type="bibr">Heard
  &amp; Rubin-Delanchy, 2018</xref>), and implementations of these
  simple methods are a staple of many statistical software suits
  (<xref alt="Cinar &amp; Viechtbauer, 2022" rid="ref-Cinar2022" ref-type="bibr">Cinar
  &amp; Viechtbauer, 2022</xref>;
  <xref alt="Dewey, n.d." rid="ref-MetaP" ref-type="bibr">Dewey,
  n.d.</xref>;
  <xref alt="SciPy’s ‘Combine_pvalues‘, n.d." rid="ref-SciPy" ref-type="bibr"><italic>SciPy’s
  ‘Combine_pvalues‘</italic>, n.d.</xref>;
  <xref alt="Yarkoni et al., 2022" rid="ref-PyMare" ref-type="bibr">Yarkoni
  et al., 2022</xref>). However, applying these implementations to
  discrete tests can result in considerable errors
  (<xref alt="Kincaid, 1962" rid="ref-Kincaid1962" ref-type="bibr">Kincaid,
  1962</xref>;
  <xref alt="Mielke et al., 2004" rid="ref-Mielke2004" ref-type="bibr">Mielke
  et al., 2004</xref>). Discrete tests particularly include all rank
  tests, which are an appropriate choice in many applications as they do
  not make any assumptions of normality or similar. There appears to be
  little awareness of this problem, and we are not aware of a software
  solution addressing it.</p>
  <p>Thanks to modern computing, we can solve this problem using simple
  Monte Carlo simulations: For each test, we sample one
  <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> value
  from each of the respective discrete null distributions, apply the
  combining statistics to these, and repeat this until we obtain a good
  estimate of the null distribution of the combining statistics.
  Finally, we compare the combining statistics of the actual data to
  estimate the combined <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> value.
  The presented module <monospace>combine_pvalues_discrete</monospace>
  implements this approach in a fast, thorough, and tested manner: It
  takes care of pitfalls such as correctly handling complements,
  sidedness, and <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> values
  from a Monte Carlo estimate of the null
  distribution (<xref alt="Phipson &amp; Smyth, 2010" rid="ref-Phipson2010" ref-type="bibr">Phipson
  &amp; Smyth, 2010</xref>). Also, it handles tedious and error-prone
  tasks such as determining the null distribution
  <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> values
  for a given test and sample size. By storing and sampling the null
  distribution of <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> values
  for each sub-dataset, our approach is considerably faster than using a
  Monte Carlo null model for the entire dataset by combining samples
  from Monte Carlo null models of the sub-datasets.</p>
  <p>Note that this module de-emphasises some typical applications of
  combining <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> values
  in which we expect known discrete null distributions of
  <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> values
  to rarely occur. For example, when performing a meta analysis of
  existing studies, the null distributions of
  <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula> values
  are usually either continuous, close to it, or unknown. However, as a
  side product, our module contains weighted versions of popular
  combining methods that may be of interest to researchers combining
  continuous tests.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>I am grateful to I. Wielert for constructive comments on earlier
  versions of this manuscript and the documentation.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-Kincaid1962">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kincaid</surname><given-names>W. M.</given-names></name>
      </person-group>
      <article-title>The combination of tests based on discrete distributions</article-title>
      <source>Journal of the American Statistical Association</source>
      <year iso-8601-date="1962">1962</year>
      <volume>57</volume>
      <issue>297</issue>
      <pub-id pub-id-type="doi">10.1080/01621459.1962.10482147</pub-id>
      <fpage>10</fpage>
      <lpage>19</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Heard2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Heard</surname><given-names>N A</given-names></name>
        <name><surname>Rubin-Delanchy</surname><given-names>P</given-names></name>
      </person-group>
      <article-title>Choosing between methods of combining p-values</article-title>
      <source>Biometrika</source>
      <year iso-8601-date="2018">2018</year>
      <volume>105</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1093/biomet/asx076</pub-id>
      <fpage>239</fpage>
      <lpage>246</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Cinar2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Cinar</surname><given-names>O.</given-names></name>
        <name><surname>Viechtbauer</surname><given-names>W.</given-names></name>
      </person-group>
      <article-title>The ‘poolr‘ package for combining independent and dependent p values</article-title>
      <source>Journal of Statistical Software</source>
      <year iso-8601-date="2022">2022</year>
      <volume>101</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.18637/jss.v101.i01</pub-id>
      <fpage>1</fpage>
      <lpage>42</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Mielke2004">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Mielke</surname><given-names>Paul W.</given-names></name>
        <name><surname>Johnston</surname><given-names>Janis E.</given-names></name>
        <name><surname>Berry</surname><given-names>Kenneth J.</given-names></name>
      </person-group>
      <article-title>Combining probability values from independent permutation tests: A discrete analog of Fisher’s classical method</article-title>
      <source>Psychological Reports</source>
      <year iso-8601-date="2004">2004</year>
      <volume>95</volume>
      <issue>2</issue>
      <pub-id pub-id-type="doi">10.2466/pr0.95.2.449-458</pub-id>
      <fpage>449</fpage>
      <lpage>458</lpage>
    </element-citation>
  </ref>
  <ref id="ref-SciPy">
    <element-citation>
      <article-title>SciPy’s ‘combine_pvalues‘</article-title>
      <uri>https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.combine_pvalues.html</uri>
    </element-citation>
  </ref>
  <ref id="ref-Phipson2010">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Phipson</surname><given-names>Belinda</given-names></name>
        <name><surname>Smyth</surname><given-names>Gordon K</given-names></name>
      </person-group>
      <article-title>Permutation p-values should never be zero: Calculating exact p-values when permutations are randomly drawn</article-title>
      <source>Statistical Applications in Genetics and Molecular Biology</source>
      <year iso-8601-date="2010">2010</year>
      <volume>9</volume>
      <issue>1</issue>
      <uri>https://doi.org/10.2202/1544-6115.1585</uri>
      <pub-id pub-id-type="doi">10.2202/1544-6115.1585</pub-id>
      <fpage>39</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-PyMare">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Yarkoni</surname><given-names>Tal</given-names></name>
        <name><surname>Salo</surname><given-names>Taylor</given-names></name>
        <name><surname>Peraza</surname><given-names>Julio A.</given-names></name>
        <name><surname>Nichols</surname><given-names>Thomas E.</given-names></name>
      </person-group>
      <article-title>PyMARE: Python meta-analysis &amp; regression engine</article-title>
      <year iso-8601-date="2022">2022</year>
      <uri>https://pymare.readthedocs.io</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.4266738</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-MetaP">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Dewey</surname><given-names>Michael</given-names></name>
      </person-group>
      <article-title>metap: Meta-analysis of significance values</article-title>
      <uri>https://cran.r-project.org/package=metap</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
