<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">7026</article-id>
<article-id pub-id-type="doi">10.21105/joss.07026</article-id>
<title-group>
<article-title>BlueCelluLab: Biologically Detailed Neural Network
Experimentation API</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Tuncel</surname>
<given-names>Anıl</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Geit</surname>
<given-names>Werner Van</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Gevaert</surname>
<given-names>Mike</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Torben-Nielsen</surname>
<given-names>Benjamin</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Mandge</surname>
<given-names>Darshan</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Kılıç</surname>
<given-names>İlkan</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Jaquier</surname>
<given-names>Aurélien</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Muller</surname>
<given-names>Eilif</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-5"/>
<xref ref-type="aff" rid="aff-6"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Kanari</surname>
<given-names>Lida</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Markram</surname>
<given-names>Henry</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Blue Brain Project, École Polytechnique Fédérale de
Lausanne (EPFL), Campus Biotech, 1202 Geneva, Switzerland</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Laboratory of Neural Microcircuitry (LNMC), Brain Mind
Institute, School of Life Sciences, École Polytechnique Fédérale de
Lausanne (EPFL), 1015 Lausanne, Switzerland</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Present address -&gt; Foundation for Research on
Information Technologies in Society (IT’IS), Zurich 8004,
Switzerland</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>Present address -&gt; Roche Information Solutions, F.
Hoffmann-La Roche AG, Basel, Switzerland</institution>
</institution-wrap>
</aff>
<aff id="aff-5">
<institution-wrap>
<institution>Present address -&gt; Université de Montréal, CHU
Ste-Justine Research Center (Architectures of Biological Learning Lab),
Montréal, Canada</institution>
</institution-wrap>
</aff>
<aff id="aff-6">
<institution-wrap>
<institution>Present address -&gt; Mila Quebec AI Institute, Montréal,
Canada</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-04-24">
<day>24</day>
<month>4</month>
<year>2024</year>
</pub-date>
<volume>9</volume>
<issue>100</issue>
<fpage>7026</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>neuroscience</kwd>
<kwd>neural network</kwd>
<kwd>simulation</kwd>
<kwd>computational neuroscience</kwd>
<kwd>SONATA</kwd>
<kwd>NEURON</kwd>
<kwd>Blue Brain Project</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The NEURON simulator, established in 1984 and continuously
  developed since, stands as the preeminent tool for neuron simulation
  within computational neuroscience. Its widespread adoption and
  compatibility with computational clusters and supercomputers
  underscore its pivotal role in large-scale neuronal research. However,
  its integration with the Python programming language has introduced
  complexities, particularly concerning memory management and object
  lifecycle. To conceal these challenges from the user and seamlessly
  interface with community standards for neural network representation
  data formats such as SONATA, we introduce BlueCelluLab. The high-level
  Python API simplifies the execution of neural simulations, ranging
  from single neurons to intricate networks, by managing complexities
  related to memory management and object lifecycle, thus providing a
  streamlined experience for users. Today, BlueCelluLab is powering
  various Python packages, command line interfaces, web applications,
  and data analysis workflows.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>The NEURON simulator has been a cornerstone in computational
  neuroscience for decades and is now the most frequently used neuron
  simulator in the field
  (<xref alt="Tikidji-Hamburyan et al., 2017" rid="ref-Tikidji2017" ref-type="bibr">Tikidji-Hamburyan
  et al., 2017</xref>). The NEURON simulator is renowned for its high
  efficiency in running large-scale simulations and maintains strong
  compatibility with computational clusters and modern supercomputer
  architectures, making it well-suited for utilisation across parallel
  computing environments
  (<xref alt="Awile et al., 2022" rid="ref-Awile2022" ref-type="bibr">Awile
  et al., 2022</xref>;
  <xref alt="Kumbhar et al., 2019" rid="ref-Kumbhar2019" ref-type="bibr">Kumbhar
  et al., 2019</xref>).</p>
  <p>Initially, the NEURON simulator was programmed using the hoc
  (higher order calculator) interpreted programming language
  (<xref alt="Kernighan &amp; Pike, 1984" rid="ref-kernighan1984unix" ref-type="bibr">Kernighan
  &amp; Pike, 1984</xref>). Years later, a Python interface was
  developed to facilitate communication with the NEURON simulator,
  making it accessible to Python users
  (<xref alt="Hines et al., 2009" rid="ref-Hines2009" ref-type="bibr">Hines
  et al., 2009</xref>). The NEURON package, though resembling a typical
  Python package and importable like many others, exhibits significant
  operational differences. One major difference is that the scope and
  lifetime of NEURON objects do not align with those of typical Python
  objects. If not properly managed, these discrepancies can lead to
  memory safety vulnerabilities that compromise system security, consume
  excessive resources, and potentially corrupt scientific results. This
  places an undue burden on scientists to manage technical details
  beyond their experimental focus.</p>
  <p>Moreover there is a need for an interface that can load and
  simulate neural networks from the SONATA data format
  (<xref alt="Dai et al., 2020" rid="ref-Dai2020" ref-type="bibr">Dai et
  al., 2020</xref>) jointly developed by the Allen Institute and the
  Blue Brain Project. BlueCelluLab’s API supports loading and simulating
  SONATA networks with the NEURON simulator, offering a highly
  configurable environment. Users can load the entire network or
  selectively load subsets tailored to specific scientific inquiries.
  For example, if a study focuses on the behavior of a particular
  neuronal electrical type, users can select and simulate only those
  specific neurons from the SONATA network.</p>
  <p>BlueCelluLab complements the Blue Brain Project’s large-scale
  simulator neurodamus
  (<xref alt="Pereira et al., 2024" rid="ref-fernando_pereira_2024_10809263" ref-type="bibr">Pereira
  et al., 2024</xref>), which runs NEURON simulations in parallel using
  MPI. This integration allows for efficient replay simulations in
  BlueCelluLab, where researchers can adjust neuron properties and rerun
  parts of simulations generated by neurodamus. This method saves
  resources and enables the observation of how changes in a neuron or
  group of neurons influence their behavior within the entire
  network.</p>
</sec>
<sec id="system-overview">
  <title>System Overview</title>
  <fig>
    <caption><p>Architecture of BlueCelluLab</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="bluecellulab-system-overview.png" />
  </fig>
  <p>The system overview, as illustrated in Figure 1, shows that
  BlueCelluLab is built on top of the NEURON Python package, providing a
  high-level API tailored for the common use cases of single neuron or
  neural network simulations. The figure depicts the key components and
  interactions within BlueCelluLab, highlighting the modular design that
  facilitates integration and extension.</p>
  <p>BlueCelluLab employs an IsolatedProcess mechanism to run
  simulations in separate processes when required. For example, prior to
  simulating neurons, users may need to conduct preliminary simulations
  to calculate specific properties of the neurons that will be utilised
  during the main simulation.</p>
  <p>The network representation in BlueCelluLab is not confined to the
  SONATA format. With the use of dependency inversion principle
  (<xref alt="Martin, 2003" rid="ref-martin2003agile" ref-type="bibr">Martin,
  2003</xref>), any network format that implements the CircuitAccess
  interface is seamlessly supported without requiring any integration
  effort at the API level. Currently, there are two distinct
  implementations available: one for SONATA and another for an internal
  format used by the Blue Brain Project.</p>
  <p>External systems, such as other Python packages, web backends,
  CLIs, or software workflows, interact with the high-level API without
  needing to know its detailed implementation, thus embodying the
  principle of information hiding
  (<xref alt="Parnas, 1972" rid="ref-parnas1972criteria" ref-type="bibr">Parnas,
  1972</xref>).</p>
  <p>BlueCelluLab covers common error scenarios to prevent crashes and
  improve user experience, enhancing system robustness significantly.
  Additionally, it is designed to fail gracefully in cases of misusage,
  further safeguarding against disruptions and maintaining a smooth
  operational flow.</p>
  <p>The code snippet below demonstrates the initialisation and
  execution of a neural simulation using BlueCelluLab.</p>
  <code language="python">from bluecellulab.cell import create_ball_stick
from bluecellulab import Simulation

cell = create_ball_stick()
sim = Simulation()
sim.add_cell(cell)
stimulus = cell.add_step(start_time=5.0, stop_time=20.0, level=0.5)

sim.run(25)
time, voltage = cell.get_time(), cell.get_soma_voltage()</code>
  <p>A neuron model is created using the create_ball_stick function,
  representing a basic type of neuron model. A simulation environment is
  initialised with Simulation(), and the created cell is added to this
  environment using sim.add_cell(cell). Next, a stimulus is attached to
  the neuron, activating it between 5.0 ms and 20.0 ms with a
  stimulation level of 0.5 nA (nanoamperes). The simulation is run for a
  total of 25 ms. Finally, time and soma voltage data are retrieved for
  further analysis and visualisation.</p>
  <p>BlueCelluLab interfaces with various type systems, including those
  from Python, NEURON, network data formats, and dependencies such as
  numeric computing or data frame packages. To ensure type safety, it
  employs PEP-484 type annotations
  (<xref alt="Van Rossum et al., 2014" rid="ref-van2014pep" ref-type="bibr">Van
  Rossum et al., 2014</xref>) and a static type checker
  (<xref alt="Lehtosalo et al., 2017" rid="ref-lehtosalo2017mypy" ref-type="bibr">Lehtosalo
  et al., 2017</xref>) for early error detection during static analysis.
  For dynamic input lacking type information at static time,
  BlueCelluLab uses the Pydantic Data Validation package
  (<xref alt="Colvin et al., 2024" rid="ref-pydantic_v2.6.4" ref-type="bibr">Colvin
  et al., 2024</xref>) to identify errors at runtime, thereby enhancing
  system robustness.</p>
  <fig>
    <caption><p>Applications</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="use-case-plot.png" />
  </fig>
  <p>Figure 2: Illustrative examples of applications using bluecellulab:
  (A) Voltage recordings from the soma and various apical dendrite
  sections of a simulated pyramidal neuron, showcasing distinct
  potential changes across different cellular regions. (B) A graphical
  representation of a neuronal network, where edge colours indicate
  connection strengths and node types correspond to different neural
  subnetworks, such as the hippocampus and thalamus. (C) Responses of a
  neuron to different step current injection. The left figure displays
  the injected current and the right figure demonstrate variations in
  voltage behavior and spiking frequency relative to the amplitude of
  the applied currents that are expressed as percentages of rheobase
  current of the simulated neuron.</p>
  <p>We believe that while BlueCelluLab is focused on computational
  neuroscience, the ideas that shaped its design decisions will also
  prove beneficial in research software across various multidisciplinary
  fields.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This study was supported by funding to the Blue Brain Project, a
  research center of the École polytechnique fédérale de Lausanne
  (EPFL), from the Swiss government’s ETH Board of the Swiss Federal
  Institutes of Technology.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-Hines2009">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hines</surname><given-names>Michael L.</given-names></name>
        <name><surname>Davison</surname><given-names>Andrew P.</given-names></name>
        <name><surname>Muller</surname><given-names>Eilif</given-names></name>
      </person-group>
      <article-title>NEURON and python</article-title>
      <source>Frontiers in Neuroinformatics</source>
      <publisher-name>Frontiers Media S.A.</publisher-name>
      <year iso-8601-date="2009-01">2009</year><month>01</month>
      <volume>3</volume>
      <pub-id pub-id-type="doi">10.3389/neuro.11.001.2009</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Tikidji2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Tikidji-Hamburyan</surname><given-names>Ruben A.</given-names></name>
        <name><surname>Narayana</surname><given-names>Vikram</given-names></name>
        <name><surname>Bozkus</surname><given-names>Zeki</given-names></name>
        <name><surname>El-Ghazawi</surname><given-names>Tarek A.</given-names></name>
      </person-group>
      <article-title>Software for brain network simulations: A comparative study</article-title>
      <source>Frontiers in Neuroinformatics</source>
      <publisher-name>Frontiers Media S.A.</publisher-name>
      <year iso-8601-date="2017-07">2017</year><month>07</month>
      <volume>11</volume>
      <pub-id pub-id-type="doi">10.3389/fninf.2017.00046</pub-id>
      <pub-id pub-id-type="pmid">28775687</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Kumbhar2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kumbhar</surname><given-names>Pramod</given-names></name>
        <name><surname>Hines</surname><given-names>Michael</given-names></name>
        <name><surname>Fouriaux</surname><given-names>Jeremy</given-names></name>
        <name><surname>Ovcharenko</surname><given-names>Aleksandr</given-names></name>
        <name><surname>King</surname><given-names>James</given-names></name>
        <name><surname>Delalondre</surname><given-names>Fabien</given-names></name>
        <name><surname>Schürmann</surname><given-names>Felix</given-names></name>
      </person-group>
      <article-title>CoreNEURON : An optimized compute engine for the NEURON simulator</article-title>
      <source>Frontiers in Neuroinformatics</source>
      <publisher-name>Frontiers Media S.A.</publisher-name>
      <year iso-8601-date="2019-09">2019</year><month>09</month>
      <volume>13</volume>
      <pub-id pub-id-type="doi">10.3389/fninf.2019.00063</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Awile2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Awile</surname><given-names>Omar</given-names></name>
        <name><surname>Kumbhar</surname><given-names>Pramod</given-names></name>
        <name><surname>Cornu</surname><given-names>Nicolas</given-names></name>
        <name><surname>Dura-Bernal</surname><given-names>Salvador</given-names></name>
        <name><surname>King</surname><given-names>James Gonzalo</given-names></name>
        <name><surname>Lupton</surname><given-names>Olli</given-names></name>
        <name><surname>Magkanaris</surname><given-names>Ioannis</given-names></name>
        <name><surname>McDougal</surname><given-names>Robert A.</given-names></name>
        <name><surname>Newton</surname><given-names>Adam J. H.</given-names></name>
        <name><surname>Pereira</surname><given-names>Fernando</given-names></name>
        <name><surname>Săvulescu</surname><given-names>Alexandru</given-names></name>
        <name><surname>Carnevale</surname><given-names>Nicholas T.</given-names></name>
        <name><surname>Lytton</surname><given-names>William W.</given-names></name>
        <name><surname>Hines</surname><given-names>Michael L.</given-names></name>
        <name><surname>Schürmann</surname><given-names>Felix</given-names></name>
      </person-group>
      <article-title>Modernizing the NEURON simulator for sustainability, portability, and performance</article-title>
      <source>Frontiers in Neuroinformatics</source>
      <publisher-name>Frontiers Media S.A.</publisher-name>
      <year iso-8601-date="2022-06">2022</year><month>06</month>
      <volume>16</volume>
      <pub-id pub-id-type="doi">10.3389/fninf.2022.884046</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-kernighan1984unix">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Kernighan</surname><given-names>Brian W</given-names></name>
        <name><surname>Pike</surname><given-names>Rob</given-names></name>
      </person-group>
      <source>The UNIX programming environment</source>
      <publisher-name>Prentice-Hall Englewood Cliffs, NJ</publisher-name>
      <year iso-8601-date="1984">1984</year>
      <volume>270</volume>
      <pub-id pub-id-type="doi">10.1002/spe.4380090102</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Dai2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Dai</surname><given-names>Kael</given-names></name>
        <name><surname>Hernando</surname><given-names>Juan</given-names></name>
        <name><surname>Billeh</surname><given-names>Yazan N.</given-names></name>
        <name><surname>Gratiy</surname><given-names>Sergey L.</given-names></name>
        <name><surname>Planas</surname><given-names>Judit</given-names></name>
        <name><surname>Davison</surname><given-names>Andrew P.</given-names></name>
        <name><surname>Dura-Bernal</surname><given-names>Salvador</given-names></name>
        <name><surname>Gleeson</surname><given-names>Padraig</given-names></name>
        <name><surname>Devresse</surname><given-names>Adrien</given-names></name>
        <name><surname>Dichter</surname><given-names>Benjamin K.</given-names></name>
        <name><surname>Gevaert</surname><given-names>Michael</given-names></name>
        <name><surname>King</surname><given-names>James G.</given-names></name>
        <name><surname>Geit</surname><given-names>Werner A. H. van</given-names></name>
        <name><surname>Povolotsky</surname><given-names>Arseny V.</given-names></name>
        <name><surname>Muller</surname><given-names>Eilif</given-names></name>
        <name><surname>Courcol</surname><given-names>Jean Denis</given-names></name>
        <name><surname>Arkhipov</surname><given-names>Anton</given-names></name>
      </person-group>
      <article-title>The SONATA data format for efficient description of large-scale network models</article-title>
      <source>PLoS Computational Biology</source>
      <publisher-name>Public Library of Science</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <volume>16</volume>
      <pub-id pub-id-type="doi">10.1371/journal.pcbi.1007696</pub-id>
      <pub-id pub-id-type="pmid">32092054</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-martin2003agile">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Martin</surname><given-names>Robert Cecil</given-names></name>
      </person-group>
      <source>Agile software development: Principles, patterns, and practices</source>
      <publisher-name>Prentice Hall PTR</publisher-name>
      <year iso-8601-date="2003">2003</year>
      <pub-id pub-id-type="doi">10.1002/pfi.21408</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-parnas1972criteria">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Parnas</surname><given-names>David Lorge</given-names></name>
      </person-group>
      <article-title>On the criteria to be used in decomposing systems into modules</article-title>
      <source>Communications of the ACM</source>
      <publisher-name>ACm New York, NY, USA</publisher-name>
      <year iso-8601-date="1972">1972</year>
      <volume>15</volume>
      <issue>12</issue>
      <pub-id pub-id-type="doi">10.1007/978-3-642-59412-0_26</pub-id>
      <fpage>1053</fpage>
      <lpage>1058</lpage>
    </element-citation>
  </ref>
  <ref id="ref-van2014pep">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Van Rossum</surname><given-names>Guido</given-names></name>
        <name><surname>Lehtosalo</surname><given-names>Jukka</given-names></name>
        <name><surname>Langa</surname><given-names>Lukasz</given-names></name>
      </person-group>
      <article-title>Pep 484–type hints</article-title>
      <source>Index of Python Enhancement Proposals</source>
      <year iso-8601-date="2014">2014</year>
    </element-citation>
  </ref>
  <ref id="ref-lehtosalo2017mypy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lehtosalo</surname><given-names>Jukka</given-names></name>
        <name><surname>Rossum</surname><given-names>G v</given-names></name>
        <name><surname>Levkivskyi</surname><given-names>Ivan</given-names></name>
        <name><surname>Sullivan</surname><given-names>Michael J</given-names></name>
        <name><surname>Fisher</surname><given-names>David</given-names></name>
        <name><surname>Price</surname><given-names>Greg</given-names></name>
        <name><surname>Lee</surname><given-names>Michael</given-names></name>
        <name><surname>Seyfer</surname><given-names>N</given-names></name>
        <name><surname>Barton</surname><given-names>R</given-names></name>
        <name><surname>Ilinskiy</surname><given-names>S</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Mypy-optional static typing for python</article-title>
      <source>URL: https://mypy-lang.org</source>
      <year iso-8601-date="2017">2017</year>
    </element-citation>
  </ref>
  <ref id="ref-pydantic_v2.6.4">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Colvin</surname><given-names>Samuel</given-names></name>
        <name><surname>Jolibois</surname><given-names>Eric</given-names></name>
        <name><surname>Ramezani</surname><given-names>Hasan</given-names></name>
        <name><surname>Badaracco</surname><given-names>Adrian Garcia</given-names></name>
        <name><surname>Dorsey</surname><given-names>Terrence</given-names></name>
        <name><surname>Montague</surname><given-names>David</given-names></name>
        <name><surname>Matveenko</surname><given-names>Serge</given-names></name>
        <name><surname>Trylesinski</surname><given-names>Marcelo</given-names></name>
        <name><surname>Runkle</surname><given-names>Sydney</given-names></name>
        <name><surname>Hewitt</surname><given-names>David</given-names></name>
        <name><surname>Hall</surname><given-names>Alex</given-names></name>
      </person-group>
      <article-title>Pydantic</article-title>
      <year iso-8601-date="2024-03-12">2024</year><month>03</month><day>12</day>
      <uri>https://docs.pydantic.dev/latest/</uri>
    </element-citation>
  </ref>
  <ref id="ref-fernando_pereira_2024_10809263">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Pereira</surname><given-names>Fernando</given-names></name>
        <name><surname>Ji</surname><given-names>Weina</given-names></name>
        <name><surname>Magkanaris</surname><given-names>Ioannis</given-names></name>
        <name><surname>Alonso</surname><given-names>Jorge Blanco</given-names></name>
        <name><surname>Kumbhar</surname><given-names>Pramod</given-names></name>
        <name><surname>Săvulescu</surname><given-names>Alexandru</given-names></name>
        <name><surname>Heeren</surname><given-names>Erik</given-names></name>
        <name><surname>Sergio</surname></name>
        <name><surname>Bellotta</surname><given-names>Antonio</given-names></name>
        <name><surname>delalondre</surname></name>
        <name><surname>Wolf</surname><given-names>Matthias</given-names></name>
        <name><surname>Geit</surname><given-names>Werner Van</given-names></name>
        <name><surname>Lupton</surname><given-names>Olli</given-names></name>
        <name><surname>Grosheintz</surname><given-names>Luc</given-names></name>
        <name><surname>Temerev</surname><given-names>Alexander</given-names></name>
        <name><surname>Cornu</surname><given-names>Nicolas</given-names></name>
        <name><surname>Awile</surname><given-names>Omar</given-names></name>
        <name><surname>fschuerm</surname></name>
        <name><surname>JCGoran</surname></name>
        <name><surname>FOURIAUX</surname><given-names>Jeremy</given-names></name>
        <name><surname>Adev</surname></name>
        <name><surname>haleepfl</surname></name>
        <name><surname>bdelmarm</surname></name>
        <name><surname>markovg</surname></name>
        <name><surname>MikeG</surname></name>
        <name><surname>anilbey</surname></name>
        <name><surname>bbp-hpcteam</surname></name>
      </person-group>
      <article-title>BlueBrain/neurodamus: 3.1.0</article-title>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2024-03">2024</year><month>03</month>
      <uri>https://doi.org/10.5281/zenodo.10809263</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.10809263</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
