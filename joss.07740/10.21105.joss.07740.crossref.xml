<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/5.3.1"
           xmlns:ai="http://www.crossref.org/AccessIndicators.xsd"
           xmlns:rel="http://www.crossref.org/relations.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           version="5.3.1"
           xsi:schemaLocation="http://www.crossref.org/schema/5.3.1 http://www.crossref.org/schemas/crossref5.3.1.xsd">
  <head>
    <doi_batch_id>20250513025632-c3ff6a6b30d2898d8dcb30f06851ff473bec1fb1</doi_batch_id>
    <timestamp>20250513025632</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>https://joss.theoj.org</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>05</month>
          <year>2025</year>
        </publication_date>
        <journal_volume>
          <volume>10</volume>
        </journal_volume>
        <issue>109</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>gpu-ISTL - Extending OPM Flow with GPU Linear Solvers</title>
        </titles>
        <contributors>
          <person_name sequence="first" contributor_role="author">
            <given_name>Kjetil Olsen</given_name>
            <surname>Lye</surname>
            <affiliations>
              <institution><institution_name>Mathematics and Cybernetics, SINTEF Digital, Oslo, Norway</institution_name></institution>
            </affiliations>
            <ORCID>https://orcid.org/0000-0001-6914-1010</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Tobias Meyer</given_name>
            <surname>Andersen</surname>
            <affiliations>
              <institution><institution_name>Mathematics and Cybernetics, SINTEF Digital, Oslo, Norway</institution_name></institution>
            </affiliations>
            <ORCID>https://orcid.org/0009-0000-8913-3034</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Atgeirr Flø</given_name>
            <surname>Rasmussen</surname>
            <affiliations>
              <institution><institution_name>Mathematics and Cybernetics, SINTEF Digital, Oslo, Norway</institution_name></institution>
            </affiliations>
            <ORCID>https://orcid.org/0000-0002-7932-3835</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Jakob</given_name>
            <surname>Torben</surname>
            <affiliations>
              <institution><institution_name>Mathematics and Cybernetics, SINTEF Digital, Oslo, Norway</institution_name></institution>
            </affiliations>
            <ORCID>https://orcid.org/0009-0002-9036-3739</ORCID>
          </person_name>
        </contributors>
        <publication_date>
          <month>05</month>
          <day>13</day>
          <year>2025</year>
        </publication_date>
        <pages>
          <first_page>7740</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.07740</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">10.5281/zenodo.15259505</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/7740</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.07740</doi>
          <resource>https://joss.theoj.org/papers/10.21105/joss.07740</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://joss.theoj.org/papers/10.21105/joss.07740.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="ViennaCL">
            <article_title>ViennaCL—linear algebra library for multi- and many-core architectures</article_title>
            <author>Rupp</author>
            <journal_title>SIAM Journal on Scientific Computing</journal_title>
            <issue>5</issue>
            <volume>38</volume>
            <doi>10.1137/15M1026419</doi>
            <cYear>2016</cYear>
            <unstructured_citation>Rupp, K., Tillet, P., Rudolf, F., Weinbub, J., Morhammer, A., Grasser, T., Jüngel, A., &amp; Selberherr, S. (2016). ViennaCL—linear algebra library for multi- and many-core architectures. SIAM Journal on Scientific Computing, 38(5), S412–S439. https://doi.org/10.1137/15M1026419</unstructured_citation>
          </citation>
          <citation key="mills2021">
            <article_title>Toward performance-portable PETSc for GPU-based exascale systems</article_title>
            <author>Mills</author>
            <journal_title>Parallel Computing</journal_title>
            <volume>108</volume>
            <doi>10.1016/j.parco.2021.102831</doi>
            <issn>0167-8191</issn>
            <cYear>2021</cYear>
            <unstructured_citation>Mills, R. T., Adams, M. F., Balay, S., Brown, J., &amp; Dener, A. (2021). Toward performance-portable PETSc for GPU-based exascale systems. Parallel Computing, 108, 102831. https://doi.org/10.1016/j.parco.2021.102831</unstructured_citation>
          </citation>
          <citation key="OPMFLOW">
            <article_title>The Open Porous Media Flow reservoir simulator</article_title>
            <author>Rasmussen</author>
            <journal_title>Computers &amp; Mathematics with Applications</journal_title>
            <volume>81</volume>
            <doi>10.1016/j.camwa.2020.05.014</doi>
            <issn>0898-1221</issn>
            <cYear>2021</cYear>
            <unstructured_citation>Rasmussen, A. F., Sandve, T. H., Bao, K., Lauser, A., Hove, J., Skaflestad, B., Klöfkorn, R., Blatt, M., Rustad, A. B., Sævareid, O., Lie, K.-A., &amp; Thune, A. (2021). The Open Porous Media Flow reservoir simulator. Computers &amp; Mathematics with Applications, 81, 159–185. https://doi.org/10.1016/j.camwa.2020.05.014</unstructured_citation>
          </citation>
          <citation key="BASTIAN202175">
            <article_title>The Dune framework: Basic concepts and recent developments</article_title>
            <author>Bastian</author>
            <journal_title>Computers &amp; Mathematics with Applications</journal_title>
            <volume>81</volume>
            <doi>10.1016/j.camwa.2020.06.007</doi>
            <issn>0898-1221</issn>
            <cYear>2021</cYear>
            <unstructured_citation>Bastian, P., Blatt, M., Dedner, A., Dreier, N.-A., Engwer, C., Fritze, R., Gräser, C., Grüninger, C., Kempf, D., Klöfkorn, R., Ohlberger, M., &amp; Sander, O. (2021). The Dune framework: Basic concepts and recent developments. Computers &amp; Mathematics with Applications, 81, 75–112. https://doi.org/10.1016/j.camwa.2020.06.007</unstructured_citation>
          </citation>
          <citation key="computer_arch_hennessy_patterson">
            <article_title>Computer architecture, sixth edition: A quantitative approach</article_title>
            <author>Hennessy</author>
            <isbn>0128119055</isbn>
            <cYear>2017</cYear>
            <unstructured_citation>Hennessy, J. L., &amp; Patterson, D. A. (2017). Computer architecture, sixth edition: A quantitative approach (6th ed., pp. 5–6). Morgan Kaufmann Publishers Inc. ISBN: 0128119055</unstructured_citation>
          </citation>
          <citation key="pyopmspe11">
            <article_title>pyopmspe11: A Python framework using OPM Flow for the SPE11 benchmark project</article_title>
            <author>Landa-Marbán</author>
            <journal_title>Journal of Open Source Software</journal_title>
            <doi>10.21105/joss.07357</doi>
            <cYear>2025</cYear>
            <unstructured_citation>Landa-Marbán, D., &amp; Sandve, T. H. (2025). pyopmspe11: A Python framework using OPM Flow for the SPE11 benchmark project. Journal of Open Source Software. https://doi.org/10.21105/joss.07357</unstructured_citation>
          </citation>
          <citation key="Nordbotten2024">
            <article_title>The 11th society of petroleum engineers comparative solution project: Problem definition</article_title>
            <author>Nordbotten</author>
            <journal_title>SPE Journal</journal_title>
            <issue>05</issue>
            <volume>29</volume>
            <doi>10.2118/218015-pa</doi>
            <issn>1930-0220</issn>
            <cYear>2024</cYear>
            <unstructured_citation>Nordbotten, J. M., Ferno, M. A., Flemisch, B., Kovscek, A. R., &amp; Lie, K.-A. (2024). The 11th society of petroleum engineers comparative solution project: Problem definition. SPE Journal, 29(05), 2507–2524. https://doi.org/10.2118/218015-pa</unstructured_citation>
          </citation>
          <citation key="dune-istl">
            <article_title>The iterative solver template library</article_title>
            <author>Blatt</author>
            <journal_title>Applied parallel computing – state of the art in scientific computing</journal_title>
            <doi>10.1007/978-3-540-75755-9_82</doi>
            <cYear>2007</cYear>
            <unstructured_citation>Blatt, M., &amp; Bastian, P. (2007). The iterative solver template library. In B. Kagström, E. Elmroth, J. Dongarra, &amp; J. Wasniewski (Eds.), Applied parallel computing – state of the art in scientific computing (pp. 666–675). Springer. https://doi.org/10.1007/978-3-540-75755-9_82</unstructured_citation>
          </citation>
          <citation key="cuda">
            <article_title>CUDA, release: 12.2.r12.2</article_title>
            <author>NVIDIA</author>
            <cYear>2023</cYear>
            <unstructured_citation>NVIDIA, Vingelmann, P., &amp; Fitzek, F. H. P. (2023). CUDA, release: 12.2.r12.2. https://developer.nvidia.com/cuda-toolkit</unstructured_citation>
          </citation>
          <citation key="hipify">
            <article_title>Hipify-perl</article_title>
            <author>Advanced Micro Devices, Inc.</author>
            <cYear>2024</cYear>
            <unstructured_citation>Advanced Micro Devices, Inc. (2024). Hipify-perl. https://rocmdocs.amd.com/projects/HIPIFY/en/latest/hipify-perl.html#hipify-perl</unstructured_citation>
          </citation>
          <citation key="HIP">
            <article_title>Heterogeneous-computing interface for portability</article_title>
            <author>Advanced Micro Devices, Inc.</author>
            <cYear>2024</cYear>
            <unstructured_citation>Advanced Micro Devices, Inc. (2024). Heterogeneous-computing interface for portability. https://rocm.docs.amd.com/projects/HIP/en/latest/</unstructured_citation>
          </citation>
          <citation key="armadillo">
            <article_title>Practical sparse matrices in c++ with hybrid storage and template-based expression optimisation</article_title>
            <author>Sanderson</author>
            <journal_title>Mathematical and Computational Applications</journal_title>
            <issue>3</issue>
            <volume>24</volume>
            <doi>10.3390/mca24030070</doi>
            <issn>2297-8747</issn>
            <cYear>2019</cYear>
            <unstructured_citation>Sanderson, C., &amp; Curtin, R. (2019). Practical sparse matrices in c++ with hybrid storage and template-based expression optimisation. Mathematical and Computational Applications, 24(3), 70. https://doi.org/10.3390/mca24030070</unstructured_citation>
          </citation>
          <citation key="curtin_bandicoot_2023">
            <article_title>Bandicoot: C++ Library for GPU Linear Algebra and Scientific Computing</article_title>
            <author>Curtin</author>
            <journal_title>arXiv:2308.03120v1</journal_title>
            <cYear>2023</cYear>
            <unstructured_citation>Curtin, R. R., Edel, M., &amp; Sanderson, C. (2023). Bandicoot: C++ Library for GPU Linear Algebra and Scientific Computing. arXiv:2308.03120v1. http://arxiv.org/abs/2308.03120v1</unstructured_citation>
          </citation>
          <citation key="andersen_ilu_dilu_rsc">
            <volume_title>A comparison of DILU and ILU(0) as GPU-accelerated preconditioners</volume_title>
            <author>Andersen</author>
            <volume>25RSC</volume>
            <doi>10.2118/223873-MS</doi>
            <cYear>2025</cYear>
            <unstructured_citation>Andersen, T. M., Torben, J., Lye, K. O., Rasmussen, A. F., &amp; Lie, K. A. (2025). A comparison of DILU and ILU(0) as GPU-accelerated preconditioners (Vol. 25RSC, p. D021S009R004). https://doi.org/10.2118/223873-MS</unstructured_citation>
          </citation>
          <citation key="spe11c_dataset">
            <article_title>Gpu-ISTL - extending OPM flow with GPU linear solvers</article_title>
            <author>Lye</author>
            <doi>10.5281/zenodo.15259506</doi>
            <cYear>2025</cYear>
            <unstructured_citation>Lye, K. O., Andersen, T. M., Torben, J., &amp; Rasmussen, A. (2025). Gpu-ISTL - extending OPM flow with GPU linear solvers (Version 2024.10). Zenodo. https://doi.org/10.5281/zenodo.15259506</unstructured_citation>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
