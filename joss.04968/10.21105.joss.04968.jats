<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">4968</article-id>
<article-id pub-id-type="doi">10.21105/joss.04968</article-id>
<title-group>
<article-title>New developments in PySDM and PySDM-examples v2:
collisional breakup, immersion freezing, dry aerosol initialization, and
adaptive time-stepping</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-5310-4554</contrib-id>
<name>
<surname>de Jong</surname>
<given-names>Emily K.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-1708-0997</contrib-id>
<name>
<surname>Singer</surname>
<given-names>Clare E.</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-6329-7775</contrib-id>
<name>
<surname>Azimi</surname>
<given-names>Sajjad</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-0265-6428</contrib-id>
<name>
<surname>Bartman</surname>
<given-names>Piotr</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-2272-8548</contrib-id>
<name>
<surname>Bulenok</surname>
<given-names>Oleksii</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-3137-1288</contrib-id>
<name>
<surname>Derlatka</surname>
<given-names>Kacper</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Dula</surname>
<given-names>Isabella</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-3194-6440</contrib-id>
<name>
<surname>Jaruga</surname>
<given-names>Anna</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-8677-3562</contrib-id>
<name>
<surname>Mackay</surname>
<given-names>J. Ben</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-2317-3310</contrib-id>
<name>
<surname>Ward</surname>
<given-names>Ryan X.</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-2361-0082</contrib-id>
<name>
<surname>Arabas</surname>
<given-names>Sylwester</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
<xref ref-type="aff" rid="aff-5"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Mechanical and Civil Engineering, California
Institute of Technology, Pasadena, CA, United States of
America</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Department of Environmental Science and Engineering,
California Institute of Technology, Pasadena, CA, United States of
America</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Faculty of Mathematics and Computer Science, Jagiellonian
University, Kraków, Poland</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>Scripps Institution of Oceanography, San Diego, CA, United
States of America</institution>
</institution-wrap>
</aff>
<aff id="aff-5">
<institution-wrap>
<institution>Department of Atmospheric Sciences, University of Illinois
at Urbana-Champaign, Urbana, IL, United States of America</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2022-05-18">
<day>18</day>
<month>5</month>
<year>2022</year>
</pub-date>
<volume>8</volume>
<issue>84</issue>
<fpage>4968</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>physics-simulation</kwd>
<kwd>monte-carlo-simulation</kwd>
<kwd>atmospheric-modeling</kwd>
<kwd>particle-system</kwd>
<kwd>atmospheric-physics</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><monospace>PySDM</monospace> and the accompanying
  <monospace>PySDM-examples</monospace> packages are open-source
  modeling tools for computational studies of atmospheric clouds,
  aerosols, and precipitation. The project hinges on the particle-based
  microphysics modeling approach and Pythonic code design. The eponymous
  <monospace>SDM</monospace> refers to the Super Droplet Method – a
  Monte-Carlo algorithm introduced in Shima et al.
  (<xref alt="2009" rid="ref-Shima_et_al_2009" ref-type="bibr">2009</xref>)
  to represent the coagulation of particles in modeling frameworks such
  as Large-Eddy Simulations (LES) of atmospheric flows. Recent efforts
  have culminated in the “v2” release line, which includes
  representation of a variety of new processes for both liquid and
  ice-phase particles, performance enhancements such as adaptive
  time-stepping, as well as a broadened suite of examples which
  demonstrate, test, and motivate the use of the SDM for cloud modeling
  research.</p>
</sec>
<sec id="background-and-statement-of-need">
  <title>Background and Statement of Need</title>
  <p>The key motivation behind development of
  <monospace>PySDM</monospace> has been to offer the community an
  approachable, readily reusable software for users and developers who
  wish to contribute to the scientific progress of particle-based
  methods for simulating atmospheric clouds. To this end, we strive to
  maintain modularity of the <monospace>PySDM</monospace> building
  blocks, separation of functionality and examples, and extensive unit
  test coverage in the project. A user of the package can select
  top-level options such as the simulation environment, particle
  processes, and output attributes without a detailed grasp of the CPU
  and GPU backend code.</p>
  <p><monospace>PySDM</monospace> “v1” featured representation of the
  following processes: condensational growth/evaporation, collisional
  growth, aqueous sulfur chemistry, and coupling of particle transport
  and vapor/heat budget with grid-discretized fluid flow. This paper
  outlines subsequent developments in the “v2” releases of
  <monospace>PySDM</monospace> including representation of three new
  processes (collisional breakup, immersion freezing, and
  surface-partitioning of organic aerosol components), initialization
  framework for aerosol size and composition, enhanced support for
  adaptive time-stepping, and additional illustrative examples.</p>
  <p>In the companion <monospace>PySDM-examples</monospace> package, we
  continue to expand and maintain a set of examples demonstrating
  project features through automated reproduction of results from
  literature. The examples package serves multiple roles in the project.
  First, it guides users and developers through the package features.
  Second, <monospace>PySDM-examples</monospace> has been used as
  educational material, offering interactive Jupyter notebooks suitable
  for hands-on demonstrations of basic cloud-physics simulations. Third,
  inclusion of simulation scripts/notebooks pertaining to new research
  papers can streamline assessment of the results by reviewers. Running
  simulations described in a paper can be done independently on a
  cloud-computing platform such as Google Colab or mybinder.org.
  Finally, we require new examples introduced into
  <monospace>PySDM-examples</monospace> to be accompanied by a set of
  “smoke tests” in <monospace>PySDM</monospace>, which assert results
  against reference data to ensure that published results remain
  reproducible with future developments of
  <monospace>PySDM</monospace>.</p>
</sec>
<sec id="summary-of-new-features-and-examples-in-v2">
  <title>Summary of new features and examples in v2</title>
  <p>For an example of running basic zero-dimensional simulations with
  <monospace>PySDM</monospace>, we refer to the project
  <monospace>README.md</monospace> file and Bartman, Bulenok, et al.
  (<xref alt="2022" rid="ref-Bartman_et_al_2022_JOSS" ref-type="bibr">2022</xref>).
  The key building blocks of the <monospace>PySDM</monospace> API and
  class hierarchy are: “attributes”, “backends”, “dynamics”,
  “environments”, “products” and physics “formulae”. The following code
  snippets demonstrate new elements of <monospace>PySDM</monospace> API,
  which can be added or substituted into the “v1” API description to run
  simulations using the new features. Execution of code snippets from
  both the present “v2” and the previous “v1” papers is included in the
  <monospace>PySDM</monospace> continuous integration workflow.</p>
  <sec id="collisional-breakup">
    <title>Collisional Breakup</title>
    <p>The collisional breakup process represents the splitting of two
    colliding superdroplets into multiple fragments. It can be specified
    as an individual <monospace>Breakup</monospace> “dynamic” or used
    within a unified <monospace>Collision</monospace> “dynamic”, in
    which the probability of breakup versus coalescence is sampled. The
    additional <monospace>PySDM</monospace> components used in the
    example below can be imported via:</p>
    <code language="python">from PySDM.dynamics.collisions import Collision
from PySDM.dynamics.collisions.collision_kernels import Golovin
from PySDM.dynamics.collisions.coalescence_efficiencies import ConstEc
from PySDM.dynamics.collisions.breakup_efficiencies import ConstEb
from PySDM.dynamics.collisions.breakup_fragmentations import ExponFrag</code>
    <p>The rate of superdroplet collisions are specified by a collision
    kernel, and the breakup process requires three additional
    specifications: <monospace>coalescence_efficiencies</monospace>
    (probability of coalescence occurring),
    <monospace>breakup_efficiencies</monospace> (probability of breakup
    occurring if not coalescence), and
    <monospace>breakup_fragmentations</monospace> (the number of
    fragments formed in the case of a breakup event).</p>
    <code language="python">from PySDM import Builder
from PySDM.backends import CPU
from PySDM.environments import Box
from PySDM.physics import si
from PySDM.formulae import Formulae

formulae = Formulae(fragmentation_function=&quot;ExponFrag&quot;)
builder = Builder(backend=CPU(formulae), n_sd=100)
builder.set_environment(Box(dv=1 * si.m**3, dt=1 * si.s))
frag_scale = formulae.trivia.volume(radius=100 * si.micrometres)
builder.add_dynamic(Collision(
  collision_kernel=Golovin(b=1.5e3 / si.s),
  coalescence_efficiency=ConstEc(Ec=0.9),
  breakup_efficiency=ConstEb(Eb=1.0),
  fragmentation_function=ExponFrag(scale=frag_scale),
  adaptive=True,
))</code>
    <p>In <monospace>PySDM-examples</monospace>, we introduced a set of
    notebooks reproducing figures from two publications. In Bieli et al.
    (<xref alt="2022" rid="ref-Bieli_et_al_2022" ref-type="bibr">2022</xref>),
    <monospace>PySDM</monospace> results from collisional coalescence
    and breakup were used as a calibration tool for learning
    microphysical rate parameters. In Jong et al.
    (<xref alt="in review" rid="ref-DeJong_et_al_2022" ref-type="bibr">in
    review</xref>), the physics of and algorithm for superdroplet
    breakup are described, and the impact of breakup on cloud properties
    is demonstrated with box and single-column simulations (the latter
    based on Shipway &amp; Hill
    (<xref alt="2012" rid="ref-Shipway_and_Hill_2012" ref-type="bibr">2012</xref>)).</p>
  </sec>
  <sec id="immersion-freezing">
    <title>Immersion Freezing</title>
    <p>This release of <monospace>PySDM</monospace> introduces
    representation of immersion freezing, i.e. liquid-solid phase change
    contingent on the presence of insoluble ice nuclei immersed in
    supercooled water droplets. There are two alternative models
    implemented: the singular approach presented in Shima et al.
    (<xref alt="2020" rid="ref-Shima_et_al_2020" ref-type="bibr">2020</xref>),
    and the time-dependent approach of Alpert &amp; Knopf
    (<xref alt="2016" rid="ref-Alpert_and_Knopf_2016" ref-type="bibr">2016</xref>).
    For the time-dependent model, the water Activity Based Immersion
    Freezing Model (ABIFM) of Knopf &amp; Alpert
    (<xref alt="2013" rid="ref-Knopf_and_Alpert_2013" ref-type="bibr">2013</xref>)
    is used. The <monospace>Freezing</monospace> “dynamic” is introduced
    by specifying whether a singular model is used, and additional
    particle attributes (either freezing temperature or immersed surface
    area) must be initialized accordingly.</p>
    <code language="python">from PySDM.dynamics import Freezing
builder.add_dynamic(Freezing(singular=False))</code>
    <p>For validation of the the newly introduced immersion freezing
    models, a set of notebooks reproducing box-model simulations from
    Alpert &amp; Knopf
    (<xref alt="2016" rid="ref-Alpert_and_Knopf_2016" ref-type="bibr">2016</xref>)
    was introduced to the <monospace>PySDM-examples</monospace> package.
    A comparison of the time-dependent and singular models using a
    two-dimensional kinematic prescribed-flow framework was the focus of
    Arabas et al.
    (<xref alt="2023" rid="ref-Arabas_et_al_2022" ref-type="bibr">2023</xref>).</p>
  </sec>
  <sec id="initialization-of-multi-component-internally-or-externally-mixed-aerosol">
    <title>Initialization of multi-component internally or externally
    mixed aerosol</title>
    <p>The new aerosol initialization framework introduced in
    <monospace>PySDM</monospace> “v2” allows flexible specification of
    multi-modal, multi-component aerosol. The
    <monospace>DryAerosolMixture</monospace> class takes a tuple of
    compounds and dictionaries specifying their molar masses, densities,
    solubilities, and ionic dissociation numbers. The user specifies the
    aerosol <monospace>modes</monospace> which are comprised of a
    <monospace>kappa</monospace> hygroscopicity value, calculated from
    the molecular components and their associated
    <monospace>mass_fractions</monospace>, and a dry aerosol size
    <monospace>spectrum</monospace>. For example, a single-mode aerosol
    class (<monospace>SimpleAerosol</monospace>) can be defined as
    follows.</p>
    <code language="python">from PySDM.initialisation import spectra
from PySDM.initialisation.aerosol_composition import DryAerosolMixture
class SimpleAerosol(DryAerosolMixture):
    def __init__(self):
        super().__init__(
            compounds=(&quot;(NH4)2SO4&quot;, &quot;NaCl&quot;),
            molar_masses={&quot;(NH4)2SO4&quot;: 132.14 * si.g / si.mole,
              &quot;NaCl&quot;: 58.44 * si.g / si.mole},
            densities={&quot;(NH4)2SO4&quot;: 1.77 * si.g / si.cm**3,
              &quot;NaCl&quot;: 2.16 * si.g / si.cm**3},
            is_soluble={&quot;(NH4)2SO4&quot;: True, &quot;NaCl&quot;: True},
            ionic_dissociation_phi={&quot;(NH4)2SO4&quot;: 3, &quot;NaCl&quot;: 2},
        )
        self.modes = ({
            &quot;kappa&quot;: self.kappa(
              mass_fractions={&quot;(NH4)2SO4&quot;: 0.7, &quot;NaCl&quot;: 0.3}),
            &quot;spectrum&quot;: spectra.Lognormal(
                norm_factor=100 / si.cm**3,
                m_mode=50 * si.nm, s_geom=2
            ),
        },)</code>
    <p>An aerosol object (instance of
    <monospace>DryAerosolMixture</monospace> subclass) is used during
    initialization to calculate the total number of superdroplets given
    a prescribed number per mode, sample the size spectrum from the
    aerosol <monospace>spectrum</monospace> property, and initialize the
    <monospace>kappa times dry volume</monospace> attribute using the
    hygroscopicity property <monospace>kappa</monospace>. The choice of
    <monospace>kappa times dry volume</monospace> as an extensive
    attribute ensures that, upon coalescence, the hygroscopicity of a
    resultant super-particle is the volume-weighted average of the
    hygroscopicity of the coalescing super-particles. The new aerosol
    initialization framework is used in several examples in
    <monospace>PySDM-examples</monospace> including a new example that
    reproduces results from Abdul-Razzak &amp; Ghan
    (<xref alt="2000" rid="ref-Abdul_Razzak_and_Ghan_2000" ref-type="bibr">2000</xref>),
    comparing <monospace>PySDM</monospace> simulations against data
    retrieved from the publication as shown in
    <xref alt="[fig:ARG]" rid="figU003AARG">[fig:ARG]</xref>).</p>
    <fig id="figU003AARG">
      <caption><p>Activated aerosol fraction in Mode 1 as a function of
      aerosol number concentration in Mode 2, reproducing results from
      Abdul-Razzak &amp; Ghan
      (<xref alt="2000" rid="ref-Abdul_Razzak_and_Ghan_2000" ref-type="bibr">2000</xref>).
      The figure shows the results from <monospace>PySDM</monospace> in
      color with two definitions of activated fraction based on the
      critical supersaturation threshold (Scrit) or the critical volume
      threshold (Vcrit). For comparison, we include the parameterization
      developed in Abdul-Razzak &amp; Ghan
      (<xref alt="2000" rid="ref-Abdul_Razzak_and_Ghan_2000" ref-type="bibr">2000</xref>)
      as formulated in their paper (solid line) and as implemented in a
      new Julia model (<monospace>CloudMicrophysics.jl</monospace>,
      dashed line), as well as the results from simulations reported in
      Abdul-Razzak &amp; Ghan
      (<xref alt="2000" rid="ref-Abdul_Razzak_and_Ghan_2000" ref-type="bibr">2000</xref>)
      (black dots).</p></caption>
      <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/joss-ARG-fig_1.pdf" />
    </fig>
  </sec>
  <sec id="surface-partitioning-of-organics-to-modify-surface-tension-of-droplets">
    <title>Surface-partitioning of organics to modify surface tension of
    droplets</title>
    <p><monospace>PySDM</monospace> “v2” includes a new example
    demonstrating the available models for droplet surface tension. The
    four surface tension options included in
    <monospace>PySDM</monospace>, which define the droplet surface
    tension as a function of dry aerosol composition and wet radius,
    are: <monospace>'Constant'</monospace>,
    <monospace>'CompressedFilmOvadnevaite'</monospace> (Ovadnevaite et
    al.
    (<xref alt="2017" rid="ref-Ovadnevaite_et_al_2017" ref-type="bibr">2017</xref>)),
    <monospace>'CompressedFilmRuehl'</monospace> (Ruehl et al.
    (<xref alt="2016" rid="ref-Ruehl_et_al_2016" ref-type="bibr">2016</xref>)),
    and <monospace>'SzyszkowskiLangmuir'</monospace> following the
    Szyszkowski-Langmuir equation. Parameters for the three
    surface-partitioning models must be specified as shown below. A full
    comparison of the four surface tension models can be found in the
    <monospace>Singer_Ward</monospace> example.</p>
    <code language="python">from PySDM import Formulae
f = Formulae(
    surface_tension='CompressedFilmOvadnevaite',
    constants={
        'sgm_org': 35 * si.mN / si.m,
        'delta_min': 1.75 * si.nm
    }
)</code>
  </sec>
  <sec id="adaptive-time-stepping">
    <title>Adaptive time-stepping</title>
    <p>In <monospace>PySDM</monospace> “v2”, the
    <monospace>Condensation</monospace>,
    <monospace>Collision</monospace>, and
    <monospace>Displacement</monospace> “dynamics” all support adaptive
    time-stepping logic, which involves sub-stepping within the
    user-specified time step used for coupling with the “environment”.
    Adaptivity is enabled by default and can be disabled by passing
    <monospace>False</monospace> as the value of optional
    <monospace>adaptive</monospace> keyword to the given dynamic. This
    adaptive time-stepping applies separately in each grid box of a
    multidimensional environment, and includes a load-balancing logic as
    described in Bartman &amp; Arabas
    (<xref alt="2023" rid="ref-Bartman_et_al_2023" ref-type="bibr">2023</xref>).
    In the case of collisions, the time-step adaptivity is aimed at
    eliminating errors associated with multiple coalescence events
    within a timestep. In the case of condensation, the time-step
    adaptivity is aimed at reducing computational load by coupling the
    time-step length choice with ambient supersaturation leading to
    using longer time-steps in cloud-free regions and shorter time-steps
    in regions where droplet [de]activation or rain evaporation occurs.
    In the case of displacement, the time-step adaptivity is aimed at
    obeying a given tolerance in integration of the super-particle
    trajectories, and the error measure is constructed by comparing
    implicit- and explicit-Euler solutions.</p>
  </sec>
</sec>
<sec id="relevant-recent-open-source-developments">
  <title>Relevant recent open-source developments</title>
  <p><monospace>PySDM</monospace> supports a
  <monospace>PyMPDATA</monospace>-based
  (<xref alt="Bartman, Banaśkiewicz, et al., 2022" rid="ref-Bartman_et_al_2022_MP" ref-type="bibr">Bartman,
  Banaśkiewicz, et al., 2022</xref>) reimplementation of the 1D
  kinematically-driven test framework in a recently-published
  intercomparison of microphysics methods
  (<xref alt="Hill et al., 2023" rid="ref-Hill_et_al_2023" ref-type="bibr">Hill
  et al., 2023</xref>). The authors are unaware of recent SDM algorithm
  implementations in open-source packages beyond those mentioned in
  (<xref alt="Bartman, Bulenok, et al., 2022" rid="ref-Bartman_et_al_2022_JOSS" ref-type="bibr">Bartman,
  Bulenok, et al., 2022</xref>) and the related list of links in the
  <monospace>PySDM</monospace> README file. Furthermore, none of these
  implementations include superdroplet-count-conserving collisional
  breakup, organic surface partitioning or adaptive time-stepping for
  coagulation. The aerosol initialization method described in
  <monospace>PySDM</monospace> v2 is similar to that of
  <monospace>pyrcel</monospace>
  (<xref alt="Rothenberg &amp; Wang, 2017" rid="ref-Rothenberg_and_Wang_2017" ref-type="bibr">Rothenberg
  &amp; Wang, 2017</xref>). Leveraging the availability of
  <monospace>PyPartMC</monospace> - a new Python interface to the
  <monospace>PartMC</monospace> particle-resolved Monte-Carlo aerosol
  simulation code
  (<xref alt="D’Aquino et al., 2023" rid="ref-PyPartMC_AMS2023" ref-type="bibr">D’Aquino
  et al., 2023</xref>), <monospace>PySDM</monospace> test suite has been
  extended with automated checks against
  <monospace>PartMC</monospace>.</p>
</sec>
<sec id="author-contributions">
  <title>Author contributions</title>
  <p>EdJ led the formulation and implementation of the collisional
  breakup scheme with contributions from JBM. CES added the aerosol
  initialization framework. CES contributed the new surface tension
  models and relevant examples, in consultation with RXW. SAz
  contributed to extensions and enhancement of the one-dimensional
  kinematic framework environment. PB led the formulation and worked
  with SAr on implementation of the adaptive time-stepping schemes. KD
  contributed to setting up continuous integration workflows for the GPU
  backend. OB implemented breakup handling within the GPU backend and
  contributed code refactors and new tests for both CPU and GPU
  backends. ID, CES, and AJ contributed to the aerosol activation
  examples. The immersion freezing representation code was developed by
  SAr. Maintenance of the project have been carried out by SAr, CES, and
  EdJ.</p>
</sec>
<sec id="acknowledgments">
  <title>Acknowledgments</title>
  <p>We thank Shin-ichiro Shima (University of Hyogo, Japan) for his
  continuous help and support in implementing SDM. Part of the outlined
  developments was supported by the generosity of Eric and Wendy Schmidt
  (by recommendation of Schmidt Futures). Development of ice-phase
  microphysics representation has been supported through grant no.
  DE-SC0021034 by the Atmospheric System Research Program and
  Atmospheric Radiation Measurement Program sponsored by the U.S.
  Department of Energy (DOE). EdJ’s contributions were made possible by
  support from the Department of Energy Computational Sciences Graduate
  Research Fellowship. SAr, OB and KD acknowledge support from the
  Polish National Science Centre (grant no. 2020/39/D/ST10/01220).</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-Shima_et_al_2009">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Shima</surname><given-names>S.</given-names></name>
        <name><surname>Kusano</surname><given-names>K.</given-names></name>
        <name><surname>Kawano</surname><given-names>A.</given-names></name>
        <name><surname>Sugiyama</surname><given-names>T.</given-names></name>
        <name><surname>Kawahara</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>The super‐droplet method for the numerical simulation of clouds and precipitation: A particle‐based and probabilistic microphysics model coupled with a non‐hydrostatic model</article-title>
      <source>Q. J. Royal Meteorol. Soc.</source>
      <year iso-8601-date="2009">2009</year>
      <pub-id pub-id-type="doi">10.1002/qj.441</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Rothenberg_and_Wang_2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Rothenberg</surname><given-names>D.</given-names></name>
        <name><surname>Wang</surname><given-names>C.</given-names></name>
      </person-group>
      <article-title>An aerosol activation metamodel of v1.2.0 of the pyrcel cloud parcel model: Development and offline assessment for use in an aerosol–climate model</article-title>
      <source>Geosci. Model. Dev.</source>
      <year iso-8601-date="2017">2017</year>
      <pub-id pub-id-type="doi">10.5194/gmd-10-1817-2017</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Shipway_and_Hill_2012">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Shipway</surname><given-names>B. J.</given-names></name>
        <name><surname>Hill</surname><given-names>A. A.</given-names></name>
      </person-group>
      <article-title>Diagnosis of systematic differences between multiple parametrizations of warm rain microphysics using a kinematic framework</article-title>
      <source>Q. J. Royal Meteorol. Soc.</source>
      <year iso-8601-date="2012">2012</year>
      <pub-id pub-id-type="doi">10.1002/qj.1913</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Bartman_et_al_2022_MP">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Bartman</surname><given-names>P.</given-names></name>
        <name><surname>Banaśkiewicz</surname><given-names>J.</given-names></name>
        <name><surname>Drenda</surname><given-names>S.</given-names></name>
        <name><surname>Manna</surname><given-names>M.</given-names></name>
        <name><surname>Olesik</surname><given-names>M.</given-names></name>
        <name><surname>Rozwoda</surname><given-names>P.</given-names></name>
        <name><surname>Sadowski</surname><given-names>M.</given-names></name>
        <name><surname>Arabas</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>PyMPDATA v1: Numba-accelerated implementation of MPDATA with examples in Python, Julia and Matlab</article-title>
      <source>J. Open Source Soft.</source>
      <year iso-8601-date="2022">2022</year>
      <pub-id pub-id-type="doi">10.21105/joss.03896</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Bartman_et_al_2022_JOSS">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bartman</surname><given-names>P.</given-names></name>
        <name><surname>Bulenok</surname><given-names>O.</given-names></name>
        <name><surname>Górski</surname><given-names>K.</given-names></name>
        <name><surname>Jaruga</surname><given-names>A.</given-names></name>
        <name><surname>Łazarski</surname><given-names>G.</given-names></name>
        <name><surname>Olesik</surname><given-names>M. A.</given-names></name>
        <name><surname>Piasecki</surname><given-names>B.</given-names></name>
        <name><surname>Singer</surname><given-names>C. E.</given-names></name>
        <name><surname>Talar</surname><given-names>A.</given-names></name>
        <name><surname>Arabas</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>PySDM v1: Particle-based cloud modelling package for warm-rain microphysics and aqueous chemistry</article-title>
      <source>J. Open Source Soft.</source>
      <year iso-8601-date="2022">2022</year>
      <pub-id pub-id-type="doi">10.21105/joss.03219</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Bieli_et_al_2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bieli</surname><given-names>M.</given-names></name>
        <name><surname>Dunbar</surname><given-names>O. R. A.</given-names></name>
        <name><surname>Jong</surname><given-names>E. K. de</given-names></name>
        <name><surname>Jaruga</surname><given-names>A.</given-names></name>
        <name><surname>Schneider</surname><given-names>T.</given-names></name>
        <name><surname>Bischoff</surname><given-names>T.</given-names></name>
      </person-group>
      <article-title>An efficient bayesian approach to learning droplet collision kernels: Proof of concept using &quot;cloudy&quot;, a new n-moment bulk microphysics scheme</article-title>
      <source>J. Adv. Model. Earth Syst.</source>
      <year iso-8601-date="2022">2022</year>
      <pub-id pub-id-type="doi">10.1029/2022MS002994</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Alpert_and_Knopf_2016">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Alpert</surname><given-names>P. A.</given-names></name>
        <name><surname>Knopf</surname><given-names>D. A.</given-names></name>
      </person-group>
      <article-title>Analysis of isothermal and cooling-rate-dependent immersion freezing by a unifying stochastic ice nucleation model</article-title>
      <source>Atmos. Chem. Phys.</source>
      <year iso-8601-date="2016">2016</year>
      <pub-id pub-id-type="doi">10.5194/acp-16-2083-2016</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Shima_et_al_2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Shima</surname><given-names>S.</given-names></name>
        <name><surname>Sato</surname><given-names>Y.</given-names></name>
        <name><surname>Hashimoto</surname><given-names>A.</given-names></name>
        <name><surname>Misumi</surname><given-names>R.</given-names></name>
      </person-group>
      <article-title>Predicting the morphology of ice particles in deep convection using the super-droplet method: Development and evaluation of SCALE-SDM 0.2.5-2.2.0, -2.2.1, and -2.2.2</article-title>
      <source>Geosci. Model Dev.</source>
      <year iso-8601-date="2020">2020</year>
      <pub-id pub-id-type="doi">10.5194/gmd-13-4107-2020</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Abdul_Razzak_and_Ghan_2000">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Abdul-Razzak</surname><given-names>H.</given-names></name>
        <name><surname>Ghan</surname><given-names>S. J.</given-names></name>
      </person-group>
      <article-title>A parameterization of aerosol activation: 2. Multiple aerosol types</article-title>
      <source>J. Geophys. Res.</source>
      <year iso-8601-date="2000">2000</year>
      <pub-id pub-id-type="doi">10.1029/1999JD901161</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-DeJong_et_al_2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Jong</surname><given-names>E. de</given-names></name>
        <name><surname>Mackay</surname><given-names>J. B.</given-names></name>
        <name><surname>Jaruga</surname><given-names>A.</given-names></name>
        <name><surname>Arabas</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>Breakups are complicated: An efficient representation of collisional breakup in the superdroplet method</article-title>
      <source>Geosci. Model Dev.</source>
      <pub-id pub-id-type="doi">10.5194/egusphere-2022-1243</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Ovadnevaite_et_al_2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ovadnevaite</surname><given-names>J.</given-names></name>
        <name><surname>Zuend</surname><given-names>A.</given-names></name>
        <name><surname>Laaksonen</surname><given-names>A.</given-names></name>
        <name><surname>Sanchez</surname><given-names>K. J.</given-names></name>
        <name><surname>Roberts</surname><given-names>G.</given-names></name>
        <name><surname>Ceburnis</surname><given-names>D.</given-names></name>
        <name><surname>Decesari</surname><given-names>S.</given-names></name>
        <name><surname>Rinaldi</surname><given-names>M.</given-names></name>
        <name><surname>Hodas</surname><given-names>N.</given-names></name>
        <name><surname>Facchini</surname><given-names>M. C.</given-names></name>
        <name><surname>Seinfeld</surname><given-names>J. H.</given-names></name>
        <name><surname>O’Dowd</surname><given-names>C.</given-names></name>
      </person-group>
      <article-title>Surface tension prevails over solute effect in organic-influenced cloud droplet activation</article-title>
      <source>Nature</source>
      <year iso-8601-date="2017">2017</year>
      <pub-id pub-id-type="doi">10.1038/nature22806</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Ruehl_et_al_2016">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ruehl</surname><given-names>C. R.</given-names></name>
        <name><surname>Davies</surname><given-names>J. F.</given-names></name>
        <name><surname>Wilson</surname><given-names>K. R.</given-names></name>
      </person-group>
      <article-title>An interfacial mechanism for cloud droplet formation on organic aerosols</article-title>
      <source>Science</source>
      <year iso-8601-date="2016">2016</year>
      <pub-id pub-id-type="doi">10.1126/science.aad4889</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Arabas_et_al_2022">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Arabas</surname><given-names>S.</given-names></name>
        <name><surname>Curtis</surname><given-names>J. H.</given-names></name>
        <name><surname>Silber</surname><given-names>I.</given-names></name>
        <name><surname>Fridlind</surname><given-names>A.</given-names></name>
        <name><surname>Knopf</surname><given-names>D. A.</given-names></name>
        <name><surname>West</surname><given-names>M.</given-names></name>
        <name><surname>Riemer</surname><given-names>N.</given-names></name>
      </person-group>
      <article-title>On probabilistic particle-based modeling of immersion freezing</article-title>
      <source>103rd american meteorological society annual meeting</source>
      <year iso-8601-date="2023">2023</year>
      <uri>https://ams.confex.com/ams/103ANNUAL/meetingapp.cgi/Paper/420160</uri>
    </element-citation>
  </ref>
  <ref id="ref-Bartman_et_al_2023">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Bartman</surname><given-names>P.</given-names></name>
        <name><surname>Arabas</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>Adaptive time-stepping for particle-based cloud microphysics: Super-droplet transport, collisions and condensational growth</article-title>
      <source>103nd american meteorological society annual meeting</source>
      <year iso-8601-date="2023">2023</year>
      <uri>https://ams.confex.com/ams/103ANNUAL/meetingapp.cgi/Paper/419078</uri>
    </element-citation>
  </ref>
  <ref id="ref-PyPartMC_AMS2023">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>D’Aquino</surname><given-names>Z.</given-names></name>
        <name><surname>Arabas</surname><given-names>S.</given-names></name>
        <name><surname>Curtis</surname><given-names>J. H.</given-names></name>
        <name><surname>Vaishnav</surname><given-names>A.</given-names></name>
        <name><surname>Choi</surname><given-names>J.</given-names></name>
        <name><surname>Riemer</surname><given-names>N.</given-names></name>
        <name><surname>West</surname><given-names>M.</given-names></name>
      </person-group>
      <article-title>PyPartMC: A Pythonic interface to a particle-resolved Monte-Carlo aerosol simulation framework</article-title>
      <source>103nd american meteorological society annual meeting</source>
      <year iso-8601-date="2023">2023</year>
      <uri>https://ams.confex.com/ams/103ANNUAL/meetingapp.cgi/Paper/421645</uri>
    </element-citation>
  </ref>
  <ref id="ref-Knopf_and_Alpert_2013">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Knopf</surname><given-names>D. A.</given-names></name>
        <name><surname>Alpert</surname><given-names>P. A.</given-names></name>
      </person-group>
      <article-title>A water activity based model of heterogeneous ice nucleation kinetics for freezing of water and aqueous solution droplets</article-title>
      <source>Faraday Discuss.</source>
      <year iso-8601-date="2013">2013</year>
      <pub-id pub-id-type="doi">10.1039/c3fd00035d</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Hill_et_al_2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hill</surname><given-names>A. A.</given-names></name>
        <name><surname>Lebo</surname><given-names>Z. J.</given-names></name>
        <name><surname>Andrejczuk</surname><given-names>M.</given-names></name>
        <name><surname>Arabas</surname><given-names>S.</given-names></name>
        <name><surname>Dziekan</surname><given-names>P.</given-names></name>
        <name><surname>Field</surname><given-names>P.</given-names></name>
        <name><surname>Gettelman</surname><given-names>A.</given-names></name>
        <name><surname>Hoffmann</surname><given-names>F.</given-names></name>
        <name><surname>Pawlowska</surname><given-names>H.</given-names></name>
        <name><surname>Onishi</surname><given-names>R.</given-names></name>
        <name><surname>Vie</surname><given-names>B.</given-names></name>
      </person-group>
      <article-title>Toward a numerical benchmark for warm rain processes</article-title>
      <source>J. Atmos. Sci</source>
      <year iso-8601-date="2023">2023</year>
      <pub-id pub-id-type="doi">10.1175/JAS-D-21-0275.1</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
