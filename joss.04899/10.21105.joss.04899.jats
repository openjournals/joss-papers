<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">4899</article-id>
<article-id pub-id-type="doi">10.21105/joss.04899</article-id>
<title-group>
<article-title>IGraph/M: graph theory and network analysis for
Mathematica</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">0000-0002-3100-523X</contrib-id>
<name>
<surname>Horvát</surname>
<given-names>Szabolcs</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Podkalicki</surname>
<given-names>Jakub</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-7098-9676</contrib-id>
<name>
<surname>Csárdi</surname>
<given-names>Gábor</given-names>
</name>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-1451-338X</contrib-id>
<name>
<surname>Nepusz</surname>
<given-names>Tamás</given-names>
</name>
<xref ref-type="aff" rid="aff-5"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-3170-3879</contrib-id>
<name>
<surname>Traag</surname>
<given-names>Vincent</given-names>
</name>
<xref ref-type="aff" rid="aff-6"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-7097-8539</contrib-id>
<name>
<surname>Zanini</surname>
<given-names>Fabio</given-names>
</name>
<xref ref-type="aff" rid="aff-7"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Noom</surname>
<given-names>Daniel</given-names>
</name>
<xref ref-type="aff" rid="aff-8"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Max Planck Institute for Cell Biology and Genetics,
Dresden, Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Center for Systems Biology Dresden, Dresden,
Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Independent Developer, Poland</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>RStudio</institution>
</institution-wrap>
</aff>
<aff id="aff-5">
<institution-wrap>
<institution>Independent Developer, Hungary</institution>
</institution-wrap>
</aff>
<aff id="aff-6">
<institution-wrap>
<institution>Centre for Science and Technology Studies, Leiden
University, Leiden, Netherlands</institution>
</institution-wrap>
</aff>
<aff id="aff-7">
<institution-wrap>
<institution>Lowy Cancer Research Centre, University of New South Wales,
Kensington, NSW, Australia</institution>
</institution-wrap>
</aff>
<aff id="aff-8">
<institution-wrap>
<institution>Independent Developer, Netherlands</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2022-08-29">
<day>29</day>
<month>8</month>
<year>2022</year>
</pub-date>
<volume>8</volume>
<issue>81</issue>
<fpage>4899</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Mathematica</kwd>
<kwd>Wolfram Language</kwd>
<kwd>graph theory</kwd>
<kwd>network analysis</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>IGraph/M<xref ref-type="fn" rid="fn1">1</xref> is an efficient
  general purpose graph theory and network analysis package for
  Mathematica
  (<xref alt="Wolfram Research, Inc., 2022" rid="ref-mathematica" ref-type="bibr">Wolfram
  Research, Inc., 2022</xref>). IGraph/M serves as the Wolfram Language
  interfaces to the igraph C library
  (<xref alt="Csárdi et al., 2022" rid="ref-igraph" ref-type="bibr">Csárdi
  et al., 2022</xref>;
  <xref alt="Csárdi &amp; Nepusz, 2006" rid="ref-Csardi2006" ref-type="bibr">Csárdi
  &amp; Nepusz, 2006</xref>), and also provides several unique pieces of
  functionality not yet present in igraph, but made possible by
  combining its capabilities with Mathematica’s. The package is designed
  to support both graph theoretical research as well as the analysis of
  large-scale empirical networks.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Mathematica contains
  <ext-link ext-link-type="uri" xlink:href="https://reference.wolfram.com/language/guide/GraphsAndNetworks.html">extensive
  built-in functionality for working with graphs</ext-link>. IGraph/M
  extends this graph framework with many new functions not otherwise
  available in the Wolfram Language, and also provides alternative and
  more featureful open-source implementations of many of Mathematica’s
  existing built-ins. This makes it possible for Wolfram Language users
  to easily double-check results, just as Python and R users can already
  do thanks to the multiple different graph packages available in those
  languages. This is particularly useful in graph theory where many
  results are just as difficult to verify as to compute.</p>
  <p>The only other independent graph theory package for Mathematica was
  <ext-link ext-link-type="uri" xlink:href="https://reference.wolfram.com/language/Combinatorica/guide/CombinatoricaPackage">Combinatorica</ext-link>
  (<xref alt="Pemmaraju &amp; Skiena, 2003" rid="ref-combinatorica" ref-type="bibr">Pemmaraju
  &amp; Skiena, 2003</xref>), which has been mostly unmaintained since
  the introduction of the <monospace>Graph</monospace> expression type
  with the release of Mathematica 8.0 in 2011. Despite this, not all of
  Combinatorica’s functions have built-in equivalents in Mathematica.
  IGraph/M provides replacements for almost all of these old
  Combinatorica functions while offering much better performance thanks
  to being implemented in a mix of C and C++ instead of the Wolfram
  Language.</p>
</sec>
<sec id="design-goals-and-features">
  <title>Design goals and features</title>
  <p>One of the major appeals of Mathematica is its tightly integrated
  nature: different functionality areas of the system can smoothly and
  seamlessly interoperate with each other. In order to preserve this
  benefit, a major design goal for IGraph/M was to integrate well into
  the rest of the system. This is achieved by working directly with
  Mathematica’s native <monospace>Graph</monospace> data type, which is
  transparently converted to igraph’s internal format as needed. This
  makes IGraph/M different from igraph’s other high-level interfaces:
  igraph’s internal graph data structure is not exposed to users and the
  package does not provide trivial operations which are already present
  in Mathematica, such as adding or removing vertices and edges.
  Instead, priority is given to functionality that delivers a true
  benefit over Mathematica’s own built-ins. While some of IGraph/M’s
  functions may appear to simply duplicate built-in functions, almost
  all of them provide additional features not otherwise available in
  Mathematica. For example, unlike the built-in
  <monospace>BetweenessCentrality[]</monospace> function,
  <monospace>IGBetweenness[]</monospace> supports weighted graphs;
  unlike the built-in <monospace>PageRankCentrality[]</monospace>,
  <monospace>IGPageRank[]</monospace> takes into consideration
  self-loops and parallel edges; in contrast to
  <monospace>IsomorphicGraphQ[]</monospace>,
  <monospace>IGIsomorphicQ[]</monospace> supports non-simple graphs as
  well as vertex and edge colours; etc. In order to make it easy to
  distinguish built-in symbols from those of IGraph/M, all functions in
  this package have names starting with <monospace>IG</monospace>. The
  naming and interface of functions is chosen so as to be familiar both
  to Mathematica users and users of igraph’s Python and R
  interfaces.</p>
  <p>IGraph/M fully leverages the igraph C library’s capabilities to
  integrate into high-level host languages: Almost all computations are
  interruptible in the usual manner. This feature is particularly
  important for a graph theory package that provides multiple algorithms
  with exponential or slower time complexity. Despite being implemented
  in a compiled language, IGraph/M uses Mathematica’s built-in random
  number generator by default. Therefore, all its stochastic algorithms
  respect seeds set with <monospace>SeedRandom[]</monospace> or
  <monospace>BlockRandom[]</monospace> the same way as built-in
  functions would.</p>
  <p>IGraph/M aims to exploit the interactive features of Mathematica
  notebooks to improve user productivity. In this spirit, it includes an
  interactive graph editor, <monospace>IGGraphEditor[]</monospace>, and
  supports dynamically displaying the progress of many functions.</p>
</sec>
<sec id="use-cases-and-unique-features">
  <title>Use cases and unique features</title>
  <p>IGraph/M provides multiple unique features that are not present in
  the core igraph library. Examples include exact graph colouring
  (<xref alt="Van Gelder, 2008" rid="ref-VanGelder2008" ref-type="bibr">Van
  Gelder, 2008</xref>), functions for working with planar graphs and
  combinatorial embeddings, proximity graph functions
  (<xref alt="Kirkpatrick &amp; Radke, 1985" rid="ref-Kirkpatrick1985" ref-type="bibr">Kirkpatrick
  &amp; Radke, 1985</xref>;
  <xref alt="Toussaint, 1980" rid="ref-Toussaint1980" ref-type="bibr">Toussaint,
  1980</xref>) and aids for working with spatial networks, functions for
  performing tests related to the graph automorphism group, and several
  others. Some features, such as
  <monospace>IGRealizeDegreeSequence</monospace>, are based on original
  research of the authors
  (<xref alt="Horvát &amp; Modes, 2021" rid="ref-Horvat2021" ref-type="bibr">Horvát
  &amp; Modes, 2021</xref>). Additionally, there are many convenience
  functions that are helpful when working with Mathematica’s
  <monospace>Graph</monospace>, including a simplified system for
  working with edge and vertex attributes based on the concept of
  mapping functions over attribute values
  (<monospace>IGEdgeMap</monospace>,
  <monospace>IGVertexMap</monospace>).</p>
  <p>The following examples show a few of these features while also
  demonstrating the concise idioms made possible by this package. The
  output is shown in
  <xref alt="Figure 1" rid="figU003Afig1">Figure 1</xref>. Many more
  examples are found
  <ext-link ext-link-type="uri" xlink:href="http://szhorvat.net/mathematica/IGDocumentation/">in
  the package’s documentation</ext-link>.</p>
  <p>Load the package:</p>
  <preformat>In[1]:= &lt;&lt; IGraphM`
Out[1]= IGraph/M 0.6.5 (December 21, 2022)
        Evaluate IGDocumentation[] to get started.</preformat>
  <p>Create a random maze as a random spanning tree of a regular lattice
  confined to a hexagon, and colour it according to betweenness
  centrality:</p>
  <preformat>In[2]:=
g = IGMeshGraph@IGLatticeMesh[&quot;CairoPentagonal&quot;, Polygon@CirclePoints[6, 6]];
t = IGRandomSpanningTree[g,
        VertexCoordinates -&gt; GraphEmbedding[g], GraphStyle -&gt; &quot;ThickEdge&quot;];
IGEdgeMap[ColorData[&quot;Rainbow&quot;], EdgeStyle -&gt; IGEdgeBetweenness /* Rescale, t]</preformat>
  <p>Compute and visualize a minimum vertex and edge colouring of the
  Gabriel graph of a set of spatial points:</p>
  <preformat>In[3]:=
IGGabrielGraph[RandomPoint[Disk[], 30],
    GraphStyle -&gt; &quot;Monochrome&quot;, VertexSize -&gt; 1, EdgeStyle -&gt; Thickness[1/40]
] //
  IGVertexMap[ColorData[106], VertexStyle -&gt; IGMinimumVertexColoring] //
  IGEdgeMap[ColorData[106], EdgeStyle -&gt; IGMinimumEdgeColoring]</preformat>
  <fig>
    <caption><p>Output of the above example code.
    <monospace>Out[2]</monospace> is on the left,
    <monospace>Out[3]</monospace> on the
    right.<styled-content id="figU003Afig1"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/fig1.pdf" xlink:title="" />
  </fig>
</sec>
<sec id="implementation-notes">
  <title>Implementation notes</title>
  <p>IGraph/M is built using LTemplate
  (<xref alt="Horvát, 2018" rid="ref-LTemplate" ref-type="bibr">Horvát,
  2018</xref>), an open-source system that makes it easier to extend
  Mathematica using C++ code. IGraph/M also serves as the primary driver
  of LTemplate development. Planar graph-related functionality is
  implemented using the LEMON graph library
  (<xref alt="Dezső et al., 2011" rid="ref-Dezso2011" ref-type="bibr">Dezső
  et al., 2011</xref>;
  <xref alt="​Egerváry Research Group on Combinatorial Optimization, 2014" rid="ref-lemon" ref-type="bibr">​Egerváry
  Research Group on Combinatorial Optimization, 2014</xref>). Spatial
  graph functions make use of the nanoflann nearest neighbour search
  library
  (<xref alt="Blanco &amp; Rai, 2022" rid="ref-nanoflann" ref-type="bibr">Blanco
  &amp; Rai, 2022</xref>).</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This project has been made possible in part by grant number
  2021-237461 from the Chan Zuckerberg Initiative DAF, an advised fund
  of Silicon Valley Community Foundation. We thank Juho Lauri for
  feedback and ideas, as well as for guidance with the implementation of
  the SAT-based exact graph colouring functionality. Henrik Schumacher
  provided the basis for the implementation of the mesh/graph conversion
  functions and some of the proximity graph functions. Patrick Scheibe
  made available his
  <ext-link ext-link-type="uri" xlink:href="http://wlplugin.halirutan.de/">Wolfram
  Language plugin for IntelliJ IDEA</ext-link>, without which this
  project would have been much more difficult to manage. Sz. H. is
  grateful to Carl Modes for ongoing support and feedback regarding the
  paper, and to the
  <ext-link ext-link-type="uri" xlink:href="https://www.wiko-berlin.de/">Wissenchaftskolleg
  zu Berlin</ext-link> for time to work on spatial networks
  functionality in this package.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-combinatorica">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Pemmaraju</surname><given-names>Sriram</given-names></name>
        <name><surname>Skiena</surname><given-names>Steven</given-names></name>
      </person-group>
      <source>Computational discrete mathematics: Combinatorics and graph theory with Mathematica</source>
      <publisher-name>Cambridge University Press</publisher-name>
      <year iso-8601-date="2003">2003</year>
      <uri>http://www.combinatorica.com</uri>
      <pub-id pub-id-type="doi">10.1017/CBO9781139164849</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-mathematica">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <string-name>Wolfram Research, Inc.</string-name>
      </person-group>
      <source>Mathematica</source>
      <publisher-name>Wolfram Research, Inc.</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <uri>https://www.wolfram.com/mathematica/</uri>
    </element-citation>
  </ref>
  <ref id="ref-Csardi2006">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Csárdi</surname><given-names>Gábor</given-names></name>
        <name><surname>Nepusz</surname><given-names>Tamás</given-names></name>
      </person-group>
      <article-title>The igraph software package for complex network research</article-title>
      <source>InterJournal Complex Systems</source>
      <year iso-8601-date="2006">2006</year>
      <volume>1695</volume>
      <issue>5</issue>
      <uri>http://www.interjournal.org/manuscript_abstract.php?361100992</uri>
      <fpage>1</fpage>
      <lpage>9</lpage>
    </element-citation>
  </ref>
  <ref id="ref-igraph">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Csárdi</surname><given-names>Gábor</given-names></name>
        <name><surname>Nepusz</surname><given-names>Tamás</given-names></name>
        <name><surname>Horvát</surname><given-names>Sz.</given-names></name>
        <name><surname>Traag</surname><given-names>Vincent</given-names></name>
        <name><surname>Zanini</surname><given-names>Fabio</given-names></name>
        <name><surname>Noom</surname><given-names>Daniel</given-names></name>
      </person-group>
      <source>The igraph C library</source>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <uri>https://igraph.org</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.3630268</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-lemon">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>​Egerváry Research Group on Combinatorial Optimization</surname></name>
      </person-group>
      <source>LEMON – library for efficient modeling and optimization in networks</source>
      <year iso-8601-date="2014">2014</year>
      <uri>https://lemon.cs.elte.hu/</uri>
    </element-citation>
  </ref>
  <ref id="ref-Dezso2011">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Dezső</surname><given-names>B.</given-names></name>
        <name><surname>Jüttner</surname><given-names>A.</given-names></name>
        <name><surname>Kovács</surname><given-names>P.</given-names></name>
      </person-group>
      <article-title>LEMON – an open source C++ graph template library</article-title>
      <source>Electron. Notes Theor. Comput. Sci.</source>
      <year iso-8601-date="2011">2011</year>
      <volume>264</volume>
      <pub-id pub-id-type="doi">10.1016/j.entcs.2011.06.003</pub-id>
      <fpage>23</fpage>
      <lpage>45</lpage>
    </element-citation>
  </ref>
  <ref id="ref-nanoflann">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Blanco</surname><given-names>Jose Luis</given-names></name>
        <name><surname>Rai</surname><given-names>Pranjal Kumar</given-names></name>
      </person-group>
      <source>Nanoflann: A C++ header-only fork of FLANN, a library for nearest neighbor (NN) with KD-trees</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <uri>https://github.com/jlblancoc/nanoflann</uri>
    </element-citation>
  </ref>
  <ref id="ref-LTemplate">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Horvát</surname><given-names>Sz.</given-names></name>
      </person-group>
      <source>LTemplate</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2018">2018</year>
      <uri>https://github.com/szhorvat/LTemplate/</uri>
    </element-citation>
  </ref>
  <ref id="ref-Horvat2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Horvát</surname><given-names>Sz.</given-names></name>
        <name><surname>Modes</surname><given-names>Carl D.</given-names></name>
      </person-group>
      <article-title>Connectedness matters: Construction and exact random sampling of connected networks</article-title>
      <source>Journal of Physics: Complexity</source>
      <year iso-8601-date="2021">2021</year>
      <volume>2</volume>
      <pub-id pub-id-type="doi">10.1088/2632-072X/abced5</pub-id>
      <fpage>015008</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-VanGelder2008">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Van Gelder</surname><given-names>Allen</given-names></name>
      </person-group>
      <article-title>Another look at graph coloring via propositional satisfiability</article-title>
      <source>Discrete Applied Mathematics</source>
      <year iso-8601-date="2008">2008</year>
      <volume>156</volume>
      <issue>2</issue>
      <pub-id pub-id-type="doi">10.1016/j.dam.2006.07.016</pub-id>
      <fpage>230</fpage>
      <lpage>243</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Toussaint1980">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Toussaint</surname><given-names>Godfried T.</given-names></name>
      </person-group>
      <article-title>The relative neighbourhood graph of a finite planar set</article-title>
      <source>Pattern Recognition</source>
      <year iso-8601-date="1980">1980</year>
      <volume>12</volume>
      <issue>4</issue>
      <pub-id pub-id-type="doi">10.1016/0031-3203(80)90066-7</pub-id>
      <fpage>261</fpage>
      <lpage>268</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Kirkpatrick1985">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kirkpatrick</surname><given-names>David G.</given-names></name>
        <name><surname>Radke</surname><given-names>John D.</given-names></name>
      </person-group>
      <article-title>A framework for computational morphology</article-title>
      <source>Machine Intelligence and Pattern Recognition</source>
      <year iso-8601-date="1985">1985</year>
      <volume>2</volume>
      <issue>C</issue>
      <pub-id pub-id-type="doi">10.1016/B978-0-444-87806-9.50013-X</pub-id>
      <fpage>217</fpage>
      <lpage>248</lpage>
    </element-citation>
  </ref>
</ref-list>
<fn-group>
  <fn id="fn1">
    <label>1</label><p>Available at
    <ext-link ext-link-type="uri" xlink:href="http://szhorvat.net/mathematica/IGraphM">szhorvat.net/mathematica/IGraphM</ext-link>
    and
    <ext-link ext-link-type="uri" xlink:href="https://github.com/szhorvat/IGraphM">github.com/szhorvat/IGraphM</ext-link></p>
  </fn>
</fn-group>
</back>
</article>
