<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">3344</article-id>
<article-id pub-id-type="doi">10.21105/joss.03344</article-id>
<title-group>
<article-title>The Babelizer: language interoperability for model
coupling in the geosciences</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-5864-6459</contrib-id>
<name>
<surname>Hutton</surname>
<given-names>Eric W. H.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-6418-277X</contrib-id>
<name>
<surname>Piper</surname>
<given-names>Mark D.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-0364-5800</contrib-id>
<name>
<surname>Tucker</surname>
<given-names>Gregory E.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Community Surface Dynamics Modeling System, University of
Colorado Boulder</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Cooperative Institute for Research in Environmental
Sciences (CIRES), University of Colorado Boulder</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Department of Geological Sciences, University of Colorado
Boulder</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2020-12-18">
<day>18</day>
<month>12</month>
<year>2020</year>
</pub-date>
<volume>7</volume>
<issue>71</issue>
<fpage>3344</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>C</kwd>
<kwd>C++</kwd>
<kwd>Fortran</kwd>
<kwd>Python</kwd>
<kwd>geosciences</kwd>
<kwd>modeling</kwd>
<kwd>interface</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The <italic>babelizer</italic> is a Python utility that generates
  code to import libraries from other languages into Python. Target
  libraries must expose a Basic Model Interface (BMI)
  (<xref alt="Hutton et al., 2020" rid="ref-huttonU003A2020b" ref-type="bibr">Hutton
  et al., 2020</xref>;
  <xref alt="Peckham et al., 2013" rid="ref-peckhamU003A2013" ref-type="bibr">Peckham
  et al., 2013</xref>) and be written in C, C++, or Fortran, although
  the <italic>babelizer</italic> is extendable, so other languages can
  be added in the future. The <italic>babelizer</italic> provides a
  streamlined mechanism for bringing scientific models into a common
  language where they can communicate with one another as components of
  an integrated model.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>With an integrated multicomponent approach to modeling,
  scientists–not just software developers–connect components to form
  integrated models, where plug-and-play components can easily be added
  or removed
  (<xref alt="Collins et al., 2005" rid="ref-collinsU003A2005" ref-type="bibr">Collins
  et al., 2005</xref>;
  <xref alt="David et al., 2013" rid="ref-davidU003A2013" ref-type="bibr">David
  et al., 2013</xref>;
  <xref alt="Gregersen et al., 2007" rid="ref-gregersenU003A2007" ref-type="bibr">Gregersen
  et al., 2007</xref>;
  <xref alt="Tucker et al., 2022" rid="ref-tuckerU003A2022" ref-type="bibr">Tucker
  et al., 2022</xref>). This is in contrast to older methods, where a
  single modeling group would construct a monolithic model built on the
  tight integration of software written within an isolated framework. A
  single person or group would control model development. Outside
  contributors would go through a gatekeeper to ensure compatibility.
  The software elements that made up the model would be tied to the
  larger model and, generally, not used outside of the framework.</p>
  <p>Component modeling democratizes model building by empowering the
  larger scientific community to develop model components. This allows
  for more innovation and experimentation driven from the bottom up by a
  community. It reduces redundancy–rather than reinventing software,
  scientists can find and use models that suit their needs–and it allows
  scientists to focus on new and unsolved problems.</p>
  <p>There are disadvantages, however. Without a single group to guide
  model development, there is a greater risk that community-developed
  models will become incompatible with one another. With hundreds of
  scientists developing models in isolation, there is a greater
  likelihood models will be written with idiosyncratic designs,
  incompatible grids, incompatible time steps, and in different
  programming languages. The Earth-surface modeling community has
  developed tools to help solve some of these problems. For example, the
  Basic Model Interface standardizes model interactions. The Earth
  System Modeling Framework (ESMF)
  (<xref alt="Collins et al., 2005" rid="ref-collinsU003A2005" ref-type="bibr">Collins
  et al., 2005</xref>) grid mappers are able to map quantities from one
  grid to another. The Python Modeling Toolkit <italic>pymt</italic>
  (<xref alt="Hutton &amp; Piper, 2020" rid="ref-huttonU003A2020a" ref-type="bibr">Hutton
  &amp; Piper, 2020</xref>) performs time interpolation, grid mapping,
  and unit coversion. In this paper, we present a solution to the
  language incompatibility problem.</p>
  <sec id="overcoming-the-language-incompatibility-problem">
    <title>Overcoming the language incompatibility problem</title>
    <p>To get an idea of the range of programming languages used in
    Earth-surface modeling, we can look to the Community Surface
    Dynamics Modeling System (CSDMS) model repository. As of June 2020,
    the repository holds over 370 open source models and tools submitted
    by the community. These contributions span a range of languages,
    with Python, C, and Fortran being the most popular
    (<xref alt="Figure 1" rid="figU003Alanguages">Figure 1</xref>). The
    mix of languages raises an interesting challenge in creating an
    interoperable modeling framework. Our solution is to use a
    hub-and-spoke approach, where Python is the hub language that
    connects to other languages. We chose Python as the hub because of
    its popularity in the scientific community, its extensive collection
    of third-party libraries (including model coupling frameworks such
    as the <italic>pymt</italic>), and its existing ability to
    communicate with other programming languages. We have built the
    <italic>babelizer</italic> to generate the spokes that connect
    Python to other languages.</p>
    <fig>
      <caption><p>The distribution of programming languages used in the
      models in the CSDMS model repository. (Data from
      https://csdms.colorado.edu/wiki/CSDMS_models_by_numbers.)<styled-content id="figU003Alanguages"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/language_fig.png" xlink:title="" />
    </fig>
    <p>Using the CSDMS model repository as a guide, if we build
    translators for the open source languages C, C++, Fortran, and
    Python, we will cover 80 percent of the contributed models. A
    drawback of using Python is that it can be relatively slow compared
    to compiled languages like C and Fortran; however, the models being
    wrapped are compiled and run in their native language, which is
    where the bulk of the computation takes place, with the
    <italic>babelizer</italic> providing only a thin wrapper layer.</p>
    <sec id="the-common-component-architecture">
      <title>The Common Component Architecture</title>
      <p>The <italic>babelizer</italic> is, in part, inspired by the
      work of Epperly et al.
      (<xref alt="2012" rid="ref-epperlyU003A2012" ref-type="bibr">2012</xref>)
      and their development of the Common Component Architecture (CCA)
      tools and, in particular, the multi-language compiler,
      <italic>babel</italic>. <italic>Babel</italic> is not a compiler
      <italic>per se</italic> but, rather, a code generator that
      produces glue code to provide cross-language interoperability. The
      generated code is then passed to a traditional compiler to build
      libraries. Whereas the <italic>babelizer</italic> uses Python as
      the hub language to connects its supported languages,
      <italic>babel</italic> itself acts as the hub, generating spokes
      to each supported language so that languages talk directly to one
      another. That is, <italic>babel</italic> is capable of generating
      bridges from each of its supported languages directly to every
      other supported language. <italic>Babel</italic> also supports
      arbitrary interfaces while the <italic>babelizer</italic> is only
      able to wrap libraries that expose a BMI.</p>
    </sec>
    <sec id="grpc4bmi">
      <title>Grpc4BMI</title>
      <p>Another alternative solution to the language interoperability
      problem is to treat models as web services that expose a BMI;
      e.g., <italic>Grpc4BMI</italic>
      (<xref alt="Hut et al., 2021" rid="ref-hutU003A2021" ref-type="bibr">Hut
      et al., 2021</xref>). In such a framework, models are built on
      separate servers or within their own software container
      (e.g. Docker) and interact with clients through network ports.
      Isolating models within environments eliminates the potential of
      dependency conflicts between models and requires them to only be
      built within one specific environment or operating system.</p>
    </sec>
  </sec>
</sec>
<sec id="design-of-the-babelizer">
  <title>Design of the babelizer</title>
  <p>The <italic>babelizer</italic> is a command-line utility that
  generates the glue code to bring a model exposing a BMI from another
  language into Python. Because the BMI is a well-defined standard, the
  <italic>babelizer</italic> requires only a small amount of metadata to
  generate the glue code. The metadata depends somewhat on the language
  being wrapped, but includes the name of the library providing the BMI,
  the name of an entry point into the library, the language the library
  was written in, and any necessary compiler flags. With this metadata,
  the <italic>babelizer</italic> creates a new <italic>git</italic>
  repository, a Python package containing the Python interface to the
  model, documentation, and sets up continuous integrations and a test
  suite for the model’s BMI. The model can then be imported and run
  through Python.</p>
  <p>The user provides metadata describing their model through a
  <italic>toml</italic>-formatted file (see
  <xref alt="Figure 2" rid="figU003Aconfiguration">Figure 2</xref> for
  an example). The <italic>babelizer</italic> uses the metadata to fill
  a set of <italic>jinja</italic>-formatted template files to construct
  the new repository (or update an existing repository). The entire
  repository is almost completely auto-generated, which means it can
  easily be regenerated. The only files a user need edit are the main
  configuration file, <monospace>babel.toml</monospace>, and any
  optional model data files, which are installed along with the new
  component.</p>
  <p>Data files provided to a babelized component are intended to be
  used either by a user of the new component or by a separate framework
  that imports the component. There is little restriction on the
  contents of the files, but typically they are sample input files that
  a user of the component can use to run the model. Another use-case is
  where the component will be used within a separate modeling framework
  and that framework may require additional metadata. As an example, the
  <italic>pymt</italic> is a modeling framework able to work with
  generic BMI models. In addition to the BMI, the <italic>pymt</italic>
  requires descriptive information about the model (e.g. authors,
  license, references, summary of what it does, etc.) as well as
  <italic>jinja</italic>-formatted sample input files. The
  <italic>pymt</italic> uses the template input files as part of a
  utility for a user to programmatically generate model input files
  without having to know anything about the idiosyncratic details of
  those model input files. Within such a framework, therefore, a user is
  given model components with a standardized way to create input files,
  as well as a common Python interface to run and interact with the
  model.</p>
  <fig>
    <caption><p>The <italic>babelizer</italic> configuration file
    (<monospace>babel.toml</monospace>) for the Precipitation-Runoff
    Modeling System v6 surface water component,
    <italic>PRMSSurface</italic>
    (<xref alt="Piper et al., 2020" rid="ref-piperU003A2020" ref-type="bibr">Piper
    et al., 2020</xref>). Running the <monospace>babelizer</monospace>
    with this file produces most of the repository
    https://github.com/pymt-lab/pymt_prms_surface.
    <styled-content id="figU003Aconfiguration"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="media/babel.toml.md.pdf" xlink:title="" />
  </fig>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This work is supported by the National Science Foundation under
  Grant No. 1831623, <italic>Community Facility Support: The Community
  Surface Dynamics Modeling System (CSDMS)</italic>.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-collinsU003A2005">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Collins</surname><given-names>Nancy</given-names></name>
          <name><surname>Theurich</surname><given-names>Gerhard</given-names></name>
          <name><surname>Deluca</surname><given-names>Cecelia</given-names></name>
          <name><surname>Suarez</surname><given-names>Max</given-names></name>
          <name><surname>Trayanov</surname><given-names>Atanas</given-names></name>
          <name><surname>Balaji</surname><given-names>Venkatramani</given-names></name>
          <name><surname>Li</surname><given-names>Peggy</given-names></name>
          <name><surname>Yang</surname><given-names>Weiyu</given-names></name>
          <name><surname>Hill</surname><given-names>Chris</given-names></name>
          <name><surname>Da Silva</surname><given-names>Arlindo</given-names></name>
        </person-group>
        <article-title>Design and implementation of components in the earth system modeling framework</article-title>
        <source>The International Journal of High Performance Computing Applications</source>
        <publisher-name>Sage Publications Sage CA: Thousand Oaks, CA</publisher-name>
        <year iso-8601-date="2005">2005</year>
        <volume>19</volume>
        <issue>3</issue>
        <uri>https://doi.org/10.1177/1094342005056120</uri>
        <pub-id pub-id-type="doi">10.1177/1094342005056120</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-davidU003A2013">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>David</surname><given-names>O.</given-names></name>
          <name><surname>Ascough</surname><given-names>J. C.</given-names></name>
          <name><surname>Lloyd</surname><given-names>W.</given-names></name>
          <name><surname>Green</surname><given-names>T. R.</given-names></name>
          <name><surname>Rojas</surname><given-names>K. W.</given-names></name>
          <name><surname>Leavesley</surname><given-names>G. H.</given-names></name>
          <name><surname>Ahuja</surname><given-names>L. R.</given-names></name>
        </person-group>
        <article-title>A software engineering perspective on environmental modeling framework design: The object modeling system</article-title>
        <source>Environmental Modelling &amp; Software</source>
        <year iso-8601-date="2013">2013</year>
        <volume>39</volume>
        <uri>https://doi.org/10.1016/j.envsoft.2012.03.006</uri>
        <pub-id pub-id-type="doi">10.1016/j.envsoft.2012.03.006</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-gregersenU003A2007">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Gregersen</surname><given-names>JB</given-names></name>
          <name><surname>Gijsbers</surname><given-names>PJA</given-names></name>
          <name><surname>Westen</surname><given-names>SJP</given-names></name>
        </person-group>
        <article-title>OpenMI: Open modelling interface</article-title>
        <source>Journal of Hydroinformatics</source>
        <year iso-8601-date="2007">2007</year>
        <volume>9</volume>
        <issue>3</issue>
        <uri>https://doi.org/10.2166/hydro.2007.023</uri>
        <pub-id pub-id-type="doi">10.2166/hydro.2007.023</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-huttonU003A2020a">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Hutton</surname><given-names>Eric W. H.</given-names></name>
          <name><surname>Piper</surname><given-names>Mark D.</given-names></name>
        </person-group>
        <source>The python modeling toolkit</source>
        <publisher-name>Zenodo</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://doi.org/10.5281/zenodo.3644240</uri>
        <pub-id pub-id-type="doi">10.5281/zenodo.3644240</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-huttonU003A2020b">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Hutton</surname><given-names>Eric W. H.</given-names></name>
          <name><surname>Piper</surname><given-names>Mark D.</given-names></name>
          <name><surname>Tucker</surname><given-names>Gregory E.</given-names></name>
        </person-group>
        <article-title>The basic model interface 2.0: A standard interface for coupling numerical models in the geosciences</article-title>
        <source>Journal of Open Source Software</source>
        <publisher-name>The Open Journal</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <volume>5</volume>
        <issue>51</issue>
        <uri>https://doi.org/10.21105/joss.02317</uri>
        <pub-id pub-id-type="doi">10.21105/joss.02317</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-peckhamU003A2013">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Peckham</surname><given-names>Scott D</given-names></name>
          <name><surname>Hutton</surname><given-names>Eric WH</given-names></name>
          <name><surname>Norris</surname><given-names>Boyana</given-names></name>
        </person-group>
        <article-title>A component-based approach to integrated modeling in the geosciences: The design of CSDMS</article-title>
        <source>Computers &amp; Geosciences</source>
        <publisher-name>Elsevier</publisher-name>
        <year iso-8601-date="2013">2013</year>
        <volume>53</volume>
        <uri>https://doi.org/10.1016/j.cageo.2012.04.002</uri>
        <pub-id pub-id-type="doi">10.1016/j.cageo.2012.04.002</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-piperU003A2020">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Piper</surname><given-names>Mark</given-names></name>
          <name><surname>McDonald</surname><given-names>Richard</given-names></name>
          <name><surname>Hutton</surname><given-names>Eric</given-names></name>
          <name><surname>Markstrom</surname><given-names>Steven</given-names></name>
          <name><surname>Parker</surname><given-names>Norton</given-names></name>
          <name><surname>Tucker</surname><given-names>Gregory</given-names></name>
        </person-group>
        <article-title>Coupling hydrologic models with data services in an interoperable modeling framework</article-title>
        <source>Earth and Space Science Open Archive ESSOAr</source>
        <publisher-name>American Geophysical Union</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://doi.org/10.1002/essoar.10504855.1</uri>
        <pub-id pub-id-type="doi">10.1002/essoar.10504855.1</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-tuckerU003A2022">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Tucker</surname><given-names>G. E.</given-names></name>
          <name><surname>Hutton</surname><given-names>E. W. H.</given-names></name>
          <name><surname>Piper</surname><given-names>M. D.</given-names></name>
          <name><surname>Campforts</surname><given-names>B.</given-names></name>
          <name><surname>Gan</surname><given-names>T.</given-names></name>
          <name><surname>Barnhart</surname><given-names>K. R.</given-names></name>
          <name><surname>Kettner</surname><given-names>A. J.</given-names></name>
          <name><surname>Overeem</surname><given-names>I.</given-names></name>
          <name><surname>Peckham</surname><given-names>S. D.</given-names></name>
          <name><surname>McCready</surname><given-names>L.</given-names></name>
          <name><surname>Syvitski</surname><given-names>J.</given-names></name>
        </person-group>
        <article-title>CSDMS: A community platform for numerical modeling of earth surface processes</article-title>
        <source>Geoscientific Model Development</source>
        <year iso-8601-date="2022">2022</year>
        <volume>15</volume>
        <issue>4</issue>
        <uri>https://gmd.copernicus.org/articles/15/1413/2022/</uri>
        <pub-id pub-id-type="doi">10.5194/gmd-15-1413-2022</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-epperlyU003A2012">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Epperly</surname><given-names>Thomas GW</given-names></name>
          <name><surname>Kumfert</surname><given-names>Gary</given-names></name>
          <name><surname>Dahlgren</surname><given-names>Tamara</given-names></name>
          <name><surname>Ebner</surname><given-names>Dietmar</given-names></name>
          <name><surname>Leek</surname><given-names>Jim</given-names></name>
          <name><surname>Prantl</surname><given-names>Adrian</given-names></name>
          <name><surname>Kohn</surname><given-names>Scott</given-names></name>
        </person-group>
        <article-title>High-performance language interoperability for scientific computing through babel</article-title>
        <source>The International Journal of High Performance Computing Applications</source>
        <publisher-name>Sage Publications Sage UK: London, England</publisher-name>
        <year iso-8601-date="2012">2012</year>
        <volume>26</volume>
        <issue>3</issue>
        <uri>https://doi.org/10.1177/1094342011414036</uri>
        <pub-id pub-id-type="doi">10.1177/1094342011414036</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-hutU003A2021">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Hut</surname><given-names>Rolf</given-names></name>
          <name><surname>Drost</surname><given-names>Niels</given-names></name>
          <name><surname>Giesen</surname><given-names>Nick van de</given-names></name>
          <name><surname>Werkhoven</surname><given-names>Ben van</given-names></name>
          <name><surname>Abdollahi</surname><given-names>Banafsheh</given-names></name>
          <name><surname>Aerts</surname><given-names>Jerom</given-names></name>
          <name><surname>Albers</surname><given-names>Thomas</given-names></name>
          <name><surname>Alidoost</surname><given-names>Fakhereh</given-names></name>
          <name><surname>Andela</surname><given-names>Bouwe</given-names></name>
          <name><surname>Camphuijsen</surname><given-names>Jaro</given-names></name>
          <name><surname>Dzigan</surname><given-names>Yifat</given-names></name>
          <name><surname>Haren</surname><given-names>Ronald van</given-names></name>
          <name><surname>Hutton</surname><given-names>Eric</given-names></name>
          <name><surname>Kalverla</surname><given-names>Peter</given-names></name>
          <name><surname>Meersbergen</surname><given-names>Maarten van</given-names></name>
          <name><surname>Oord</surname><given-names>Gijs van den</given-names></name>
          <name><surname>Pelupessy</surname><given-names>Inti</given-names></name>
          <name><surname>Smeets</surname><given-names>Stef</given-names></name>
          <name><surname>Verhoeven</surname><given-names>Stefan</given-names></name>
          <name><surname>Vos</surname><given-names>Martine de</given-names></name>
          <name><surname>Weel</surname><given-names>Berend</given-names></name>
        </person-group>
        <article-title>The eWaterCycle platform for open and FAIR hydrological collaboration</article-title>
        <source>Geoscientific Model Development Discussions</source>
        <publisher-name>Copernicus GmbH</publisher-name>
        <year iso-8601-date="2021">2021</year>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
