<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">5174</article-id>
<article-id pub-id-type="doi">10.21105/joss.05174</article-id>
<title-group>
<article-title>PyBullet Industrial: A process-aware robot
simulation</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-7825-3476</contrib-id>
<name>
<surname>Baumgärtner</surname>
<given-names>Jan</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Hansjosten</surname>
<given-names>Malte</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Schönhofen</surname>
<given-names>Dominik</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-0961-7675</contrib-id>
<name>
<surname>Fleischer</surname>
<given-names>Prof. Dr.-Ing. Jürgen</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>wbk Institute of Production Science</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Independent Researcher</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2022-09-22">
<day>22</day>
<month>9</month>
<year>2022</year>
</pub-date>
<volume>8</volume>
<issue>85</issue>
<fpage>5174</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>robotics</kwd>
<kwd>simulation</kwd>
<kwd>milling</kwd>
<kwd>force calculation</kwd>
<kwd>3D printing</kwd>
<kwd>production processes</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The trend towards individualized products and the increasing demand
  for a greater number of variants require a rethinking in the
  production engineering environment. In the context of this
  transformation, we see robots taking on more and more manufacturing
  tasks
  (<xref alt="Mühlbeier et al., 2021" rid="ref-wsk" ref-type="bibr">Mühlbeier
  et al., 2021</xref>). The development of this field is hampered by a
  toolchain gap: While there are a large number of robot simulations and
  process simulations there is not yet a simple simulation environment
  that combines the two and allows the user to investigate the interplay
  of both. Process simulation in this case refers to the simulation of
  manufacturing processes which according to
  (<xref alt="Mourtzis et al., 2014" rid="ref-process_sim" ref-type="bibr">Mourtzis
  et al., 2014</xref>) is defined as the use of one or more physical
  mechanisms to transform the shape and/or form of a workpiece. While
  process simulation is a vast field that studies different levels of
  detail, we focus on the simulation of how the process affects the
  environment and the robot.</p>
  <p>To meet this challenge we developed PyBullet Industrial. This
  Python package extends the open-source multi-body physics package
  PyBullet with manufacturing process models to simulate manufacturing
  applications that add material, remove material or simply move
  material. A sample of concrete manufacturing applications in each
  category can be seen in Figure
  <xref alt="[manu_process]" rid="manu_process">[manu_process]</xref>.</p>
  <p>The package not only simulates the environmental effect of the
  processes but also the forces imparted on the robot. It also allows
  the dynamic switching of processes with the same robot corresponding
  to tool changes during the manufacturing process. The package also
  contains utility functions such as path builder classes which are
  based on G-code (also called RS274) interpolation schemes
  (<xref alt="Kramer et al., 2000" rid="ref-g-code" ref-type="bibr">Kramer
  et al., 2000</xref>) or a variety of drawing and visualization
  functions. A sample screenshot of a simulation using PyBullet
  Industrial can be seen in Figure
  <xref alt="[pybullet_window]" rid="pybullet_window">[pybullet_window]</xref>.</p>
  <fig>
    <caption><p>Sample view of Pybullet Industrial
    <styled-content id="pybullet_window"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/pybullet_window.PNG" />
  </fig>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>PyBullet Industrial was developed for the interdisciplinary field
  of robot manufacturing. While there are a large number of simulation
  tools for robotics research such as Gazebo
  (<xref alt="Koenig &amp; Howard, n.d." rid="ref-gazebo" ref-type="bibr">Koenig
  &amp; Howard, n.d.</xref>), CoppeliaSim
  (<xref alt="Rohmer et al., 2013" rid="ref-coppeliasim" ref-type="bibr">Rohmer
  et al., 2013</xref>), or webots
  (<xref alt="Michel, 2004" rid="ref-webots" ref-type="bibr">Michel,
  2004</xref>), their capabilities all end at the robot end effector as
  they are unable to simulate manufacturing processes. In the same vein,
  there are several popular FE simulation tools such as Abaqus
  (<xref alt="Smith, 2009" rid="ref-abaqus" ref-type="bibr">Smith,
  2009</xref>) capable of simulating process behavior. These simulations
  end at the tool as they are not meant to simulate the systems that
  move the tool. Since robots are now performing more and more
  manufacturing tasks studying and accounting for the interaction
  between robots and processes becomes ever more important. This
  requires a simulation that can simulate robots and processes.</p>
  <p>PyBullet Industrial closes this gap by taking classical robot
  multibody simulations and extending them using simple process
  simulations which impact the environment. PyBullet Industrial is thus
  the first process-aware robot simulation platform built for research.
  Note that PyBullet Industrial neither aims to develop perfect process
  simulations nor robot simulations, it focuses on the interplay of
  both. Example applications of PyBullet Industrial are:</p>
  <list list-type="bullet">
    <list-item>
      <p>Designing joint controllers that compensate for the large
      process forces during milling.</p>
    </list-item>
    <list-item>
      <p>Designing path planning algorithms for 3D printing that can
      detect if a robot combines with a previously printed object.</p>
    </list-item>
    <list-item>
      <p>Checking the coating of an object in complex scenarios where
      the object is moved by a robot while another one is spraying
      paint.</p>
    </list-item>
  </list>
</sec>
<sec id="overview">
  <title>Overview</title>
  <p>Robot simulations typically start at the base and stop at the end
  effector while process simulations typically start at the process and
  end where the tool is connected to the machine. PyBullet Industrial
  divides functionality similarly by employing a
  <monospace>RobotBase</monospace> class simulating the multibody
  dynamics of a Robot manipulator and an
  <monospace>EndeffectorTool</monospace> class capable of simulating
  processes. A sample simulation view with both objects can be seen in
  Figure
  <xref alt="[PyBullet_industrial_overview]" rid="PyBullet_industrial_overview">[PyBullet_industrial_overview]</xref>.</p>
  <fig>
    <caption><p>Overview over the two main Objects
    <styled-content id="PyBullet_industrial_overview"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/pybullet_industrial_overview.png" />
  </fig>
  <p>These objects can be deployed into a standard PyBullet simulation
  environment and used to build manufacturing scenarios.</p>
  <sec id="robot-objects">
    <title>Robot objects</title>
    <p>The <monospace>RobotBase</monospace> class builds upon PyBullet’s
    URDF (Universal Robot Description Format)
    (<xref alt="Tola &amp; Corke, 2023" rid="ref-urdf" ref-type="bibr">Tola
    &amp; Corke, 2023</xref>) import feature which allows the loading of
    dynamic multibody robot models. The class adds several convenient
    interfaces which allow the setting and measuring of joint and end
    effector states. This latter allows the user to reposition the end
    effector without worrying about the underlying kinematics. The list
    of interfaces includes:</p>
    <list list-type="bullet">
      <list-item>
        <p>A joint state interface that allows the user to set and read
        joint positions, velocities, and torques.</p>
      </list-item>
      <list-item>
        <p>A end effector state interface that allows the user to set
        and read the end effector position, orientation, and velocity.
        The inverse kinematics is in this case calculated using
        PyBullets built-in inverse kinematics solver.</p>
      </list-item>
      <list-item>
        <p>A world state interface that allows the user to set and read
        the world position and orientation of the robot base.</p>
      </list-item>
    </list>
  </sec>
  <sec id="end-effector-tools">
    <title>End effector Tools</title>
    <p>End effector tools are the main novelty of this library and
    implement various process models. An
    <monospace>EndeffectorTool</monospace> object can be coupled with a
    robot attaching it to the flange of the end effector. The tool
    provides a positioning interface that automatically calls the end
    effector interface of a coupled robot making it easy to reposition
    the tool center point in space.</p>
    <p>Note that coupling and decoupling of tools can be done during
    runtime to simulate tool quick changes common in complex
    manufacturing cells. The geometry of a specific tools is defined by
    a URDF file where the last link is the default tool center point
    although this can be changed by the user.</p>
    <p>While the base object implements the main interfaces and
    structure of the class, different process models are implemented as
    children of the <monospace>EndeffectorTool</monospace> object. These
    models can be grouped into three different categories according to
    how they interact with material as seen in Figure
    <xref alt="[manu_process]" rid="manu_process">[manu_process]</xref>.</p>
    <fig>
      <caption><p>Classes of Manufacturing processes that can be
      simulated using this package
      <styled-content id="manu_process"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/manufacturing_processes.png" />
    </fig>
    <p>The adding of material is done using the
    <monospace>Extruder</monospace> class which uses raycasts
    (<xref alt="Roth, 1982" rid="ref-raycast" ref-type="bibr">Roth,
    1982</xref>) to spawn objects either on the surface of another
    object or at the end of the raycast. This is indicated in Figure
    <xref alt="[extruder]" rid="extruder">[extruder]</xref>, which also
    shows the extruder parameters that can be set.</p>
    <fig>
      <caption><p>Extruder parameters visualization
      <styled-content id="extruder"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/extruder.png" />
    </fig>
    <p>These objects are implemented as Materials that can have
    different properties from massless particles sticking to surfaces
    (such as paint) to physical bodies like 3D printing plastic. By
    default, no force is imparted during such processes although custom
    force models can be added by implementing the
    <monospace>calculate_process_force</monospace> function.</p>
    <p>Removing of material is either done using the
    <monospace>MillingTool</monospace> which uses the Kienzle force
    model
    (<xref alt="Kienzle, 1952" rid="ref-kienzle" ref-type="bibr">Kienzle,
    1952</xref>) for planar milling or the
    <monospace>Remover</monospace> which is the twin of the
    <monospace>Extruder</monospace> and can be used to simulate ablative
    processes such as sandblasting or waterjet cutting. The process
    force model for milling can be seen in Figure
    <xref alt="[kienzle_force]" rid="kienzle_force">[kienzle_force]</xref>.
    Here the chip thickness exponent and the material-specific force are
    material-dependent.</p>
    <fig>
      <caption><p>Cutting Force calculation as described by the Kienzle
      Model
      (<xref alt="Kienzle, 1952" rid="ref-kienzle" ref-type="bibr">Kienzle,
      1952</xref>)
      <styled-content id="kienzle_force"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/cutting_force.png" />
    </fig>
    <p>The moving of material is achieved using grippers. PyBullet
    Industrial supports both finger grippers and suction grippers for
    this purpose.</p>
    <p>For camera-based applications, the library also contains a camera
    sensor tool that can be used to simulate process inspection
    tasks.</p>
  </sec>
  <sec id="utility">
    <title>Utility</title>
    <p>To make development easier, the library has several utility
    functions. This includes the <monospace>ToolPath</monospace> class
    which has a custom iterator making it easy for tools and robots to
    follow predetermined paths. These paths can be built using different
    interpolation functions such as linear interpolation, spline
    interpolation, or circular interpolation. Path positions and
    orientations can be visualized using drawing functions. These
    underlying functions can also be used to visualize arbitrary
    coordinate systems or robot link poses.</p>
  </sec>
</sec>
<sec id="example-research-applications">
  <title>Example Research Applications</title>
  <p>Apart from the example applications mentioned in the statement of
  need, the library is also already been used in a number of ongoing
  research projects. These include:</p>
  <list list-type="bullet">
    <list-item>
      <p>A study on VR-based robot programming where a welding task was
      simulated in VR using PyBullet Industrial. The resulting Project
      Demonstrator can be seen at the Hannover Messe 2023.</p>
    </list-item>
    <list-item>
      <p>A project on automated Electromotor disassembly where the
      simulation is used to validate a given disassembly plan including
      for example the milling away of rusted screws.</p>
    </list-item>
  </list>
</sec>
<sec id="conclusion">
  <title>Conclusion</title>
  <p>PyBullet Industrial is a novel simulation platform for robot
  manufacturing research. It allows the simulation of robots and
  processes in a single environment. While the library offers the basic
  functionality to simulate robots and processes, these blocks need to
  be parameterized and combined to create a meaningful simulation.
  Future work will focus on the development of such parameterization and
  combination methods. For deployment on real robots, the library will
  also be extended to directly parse g-code files and convert them into
  tool paths. For direct control, a ROS interface will be added to allow
  the use of ROS controllers.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-gazebo">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Koenig</surname><given-names>Nathan</given-names></name>
        <name><surname>Howard</surname><given-names>Andrew</given-names></name>
      </person-group>
      <article-title>Design and use paradigms for gazebo, an open-source multi-robot simulator</article-title>
      <source>2004 IEEE/RSJ international conference on intelligent robots and systems (IROS)(IEEE cat. No. 04CH37566)</source>
      <publisher-name>IEEE</publisher-name>
      <volume>3</volume>
      <pub-id pub-id-type="doi">10.1109/IROS.2004.1389727</pub-id>
      <fpage>2149</fpage>
      <lpage>2154</lpage>
    </element-citation>
  </ref>
  <ref id="ref-g-code">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Kramer</surname><given-names>Thomas</given-names></name>
        <name><surname>Proctor</surname><given-names>Frederick</given-names></name>
        <name><surname>Messina</surname><given-names>Elena</given-names></name>
      </person-group>
      <article-title>The NIST RS274NGC interpreter - version 3</article-title>
      <publisher-name>NIST Interagency/Internal Report (NISTIR), National Institute of Standards; Technology, Gaithersburg, MD</publisher-name>
      <year iso-8601-date="2000">2000</year>
      <uri>https://tsapps.nist.gov/publication/get_pdf.cfm?pub_id=823374</uri>
    </element-citation>
  </ref>
  <ref id="ref-process_sim">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Mourtzis</surname><given-names>D.</given-names></name>
        <name><surname>Doukas</surname><given-names>M.</given-names></name>
        <name><surname>Bernidaki</surname><given-names>D.</given-names></name>
      </person-group>
      <article-title>Simulation in manufacturing: Review and challenges</article-title>
      <source>Procedia CIRP</source>
      <year iso-8601-date="2014">2014</year>
      <volume>25</volume>
      <issn>2212-8271</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/S2212827114010634</uri>
      <pub-id pub-id-type="doi">10.1016/j.procir.2014.10.032</pub-id>
      <fpage>213</fpage>
      <lpage>229</lpage>
    </element-citation>
  </ref>
  <ref id="ref-urdf">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Tola</surname><given-names>Daniella</given-names></name>
        <name><surname>Corke</surname><given-names>Peter</given-names></name>
      </person-group>
      <article-title>Understanding URDF: A survey based on user experience</article-title>
      <year iso-8601-date="2023-02">2023</year><month>02</month>
      <pub-id pub-id-type="doi">10.48550/arXiv.2302.13442</pub-id>
      <fpage></fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-raycast">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Roth</surname><given-names>Scott D</given-names></name>
      </person-group>
      <article-title>Ray casting for modeling solids</article-title>
      <source>Computer Graphics and Image Processing</source>
      <year iso-8601-date="1982">1982</year>
      <volume>18</volume>
      <issue>2</issue>
      <issn>0146-664X</issn>
      <uri>https://www.sciencedirect.com/science/article/pii/0146664X82901691</uri>
      <pub-id pub-id-type="doi">10.1016/0146-664X(82)90169-1</pub-id>
      <fpage>109</fpage>
      <lpage>144</lpage>
    </element-citation>
  </ref>
  <ref id="ref-wsk">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Mühlbeier</surname><given-names>E.</given-names></name>
        <name><surname>Gönnheimer</surname><given-names>P.</given-names></name>
        <name><surname>Hausmann</surname><given-names>L.</given-names></name>
        <name><surname>Fleischer</surname><given-names>J.</given-names></name>
      </person-group>
      <article-title>Value stream kinematics. Production at the leading edge of technology</article-title>
      <source>WGP 2020. Lecture notes in production engineering</source>
      <year iso-8601-date="2021">2021</year>
      <volume></volume>
      <pub-id pub-id-type="doi">10.1007/978-3-662-62138-7_41</pub-id>
      <fpage>409</fpage>
      <lpage>418</lpage>
    </element-citation>
  </ref>
  <ref id="ref-coppeliasim">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Rohmer</surname><given-names>E.</given-names></name>
        <name><surname>Singh</surname><given-names>S. P. N.</given-names></name>
        <name><surname>Freese</surname><given-names>M.</given-names></name>
      </person-group>
      <article-title>V-REP: A versatile and scalable robot simulation framework</article-title>
      <source>2013 IEEE/RSJ international conference on intelligent robots and systems</source>
      <year iso-8601-date="2013">2013</year>
      <volume></volume>
      <pub-id pub-id-type="doi">10.1109/IROS.2013.6696520</pub-id>
      <fpage>1321</fpage>
      <lpage>1326</lpage>
    </element-citation>
  </ref>
  <ref id="ref-webots">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Michel</surname><given-names>O.</given-names></name>
      </person-group>
      <article-title>Webots: Professional mobile robot simulation</article-title>
      <source>Journal of Advanced Robotics Systems</source>
      <year iso-8601-date="2004">2004</year>
      <volume>1</volume>
      <issue>1</issue>
      <uri>http://www.ars-journal.com/International-Journal-of-
                   Advanced-Robotic-Systems/Volume-1/39-42.pdf</uri>
      <fpage>39</fpage>
      <lpage>42</lpage>
    </element-citation>
  </ref>
  <ref id="ref-kienzle">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kienzle</surname><given-names>O.</given-names></name>
      </person-group>
      <article-title>Die bestimmung von kräften und leistungen an spanenden werkzeugen und werkzeugmaschinen</article-title>
      <source>Zeitschrift des Vereins Deutscher Ingenieure</source>
      <year iso-8601-date="1952">1952</year>
      <volume>94</volume>
      <fpage>299</fpage>
      <lpage>305</lpage>
    </element-citation>
  </ref>
  <ref id="ref-abaqus">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Smith</surname><given-names>Michael</given-names></name>
      </person-group>
      <source>ABAQUS/standard user’s manual, version 6.9</source>
      <publisher-name>Dassault Systèmes Simulia Corp</publisher-name>
      <publisher-loc>United States</publisher-loc>
      <year iso-8601-date="2009">2009</year>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
