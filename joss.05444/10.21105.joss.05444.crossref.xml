<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/5.3.1"
           xmlns:ai="http://www.crossref.org/AccessIndicators.xsd"
           xmlns:rel="http://www.crossref.org/relations.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           version="5.3.1"
           xsi:schemaLocation="http://www.crossref.org/schema/5.3.1 http://www.crossref.org/schemas/crossref5.3.1.xsd">
  <head>
    <doi_batch_id>20230719T182020-d678e8b6e14a7854293749102f340519b662becc</doi_batch_id>
    <timestamp>20230719182020</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>https://joss.theoj.org/</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>07</month>
          <year>2023</year>
        </publication_date>
        <journal_volume>
          <volume>8</volume>
        </journal_volume>
        <issue>87</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>shmem4py: OpenSHMEM for Python</title>
        </titles>
        <contributors>
          <person_name sequence="first" contributor_role="author">
            <given_name>Marcin</given_name>
            <surname>Rogowski</surname>
            <ORCID>https://orcid.org/0000-0002-5662-2082</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Lisandro</given_name>
            <surname>Dalcin</surname>
            <ORCID>https://orcid.org/0000-0001-8086-0155</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Jeff R.</given_name>
            <surname>Hammond</surname>
            <ORCID>https://orcid.org/0000-0003-3181-8190</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>David E.</given_name>
            <surname>Keyes</surname>
            <ORCID>https://orcid.org/0000-0002-4052-7224</ORCID>
          </person_name>
        </contributors>
        <publication_date>
          <month>07</month>
          <day>19</day>
          <year>2023</year>
        </publication_date>
        <pages>
          <first_page>5444</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.05444</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">10.5281/zenodo.8143862</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/5444</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.05444</doi>
          <resource>https://joss.theoj.org/papers/10.21105/joss.05444</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://joss.theoj.org/papers/10.21105/joss.05444.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="introducing-shmem">
            <article_title>Introducing OpenSHMEM: SHMEM for the PGAS
community</article_title>
            <author>Chapman</author>
            <journal_title>Proceedings of the fourth conference on
partitioned global address space programming model</journal_title>
            <doi>10.1145/2020373.2020375</doi>
            <cYear>2010</cYear>
            <unstructured_citation>Chapman, B., Curtis, T., Pophale, S.,
Poole, S., Kuehn, J., Koelbel, C., &amp; Smith, L. (2010). Introducing
OpenSHMEM: SHMEM for the PGAS community. Proceedings of the Fourth
Conference on Partitioned Global Address Space Programming Model, 1–3.
https://doi.org/10.1145/2020373.2020375</unstructured_citation>
          </citation>
          <citation key="dask">
            <article_title>Dask: Parallel computation with blocked
algorithms and task scheduling</article_title>
            <author>Rocklin</author>
            <journal_title>Proceedings of the 14th Python in Science
Conference</journal_title>
            <volume>130</volume>
            <doi>10.25080/Majora-7b98e3ed-013</doi>
            <cYear>2015</cYear>
            <unstructured_citation>Rocklin, M. (2015). Dask: Parallel
computation with blocked algorithms and task scheduling. Proceedings of
the 14th Python in Science Conference, 130, 136.
https://doi.org/10.25080/Majora-7b98e3ed-013</unstructured_citation>
          </citation>
          <citation key="ray">
            <article_title>Ray: A distributed framework for emerging AI
applications</article_title>
            <author>Moritz</author>
            <journal_title>13th USENIX symposium on operating systems
design and implementation (OSDI 18)</journal_title>
            <isbn>978-1-939133-08-3</isbn>
            <cYear>2018</cYear>
            <unstructured_citation>Moritz, P., Nishihara, R., Wang, S.,
Tumanov, A., Liaw, R., Liang, E., Elibol, M., Yang, Z., Paul, W.,
Jordan, M. I., &amp; Stoica, I. (2018). Ray: A distributed framework for
emerging AI applications. 13th USENIX Symposium on Operating Systems
Design and Implementation (OSDI 18), 561–577.
ISBN: 978-1-939133-08-3</unstructured_citation>
          </citation>
          <citation key="mpi4py">
            <article_title>mpi4py: Status update after 12 years of
development</article_title>
            <author>Dalcin</author>
            <journal_title>Computing in Science &amp;
Engineering</journal_title>
            <issue>4</issue>
            <volume>23</volume>
            <doi>10.1109/MCSE.2021.3083216</doi>
            <cYear>2021</cYear>
            <unstructured_citation>Dalcin, L., &amp; Fang, Y.-L. L.
(2021). mpi4py: Status update after 12 years of development. Computing
in Science &amp; Engineering, 23(4), 47–54.
https://doi.org/10.1109/MCSE.2021.3083216</unstructured_citation>
          </citation>
          <citation key="mpi4py.futures">
            <article_title>mpi4py.futures: MPI-based asynchronous task
execution for Python</article_title>
            <author>Rogowski</author>
            <journal_title>IEEE Transactions on Parallel and Distributed
Systems</journal_title>
            <issue>2</issue>
            <volume>34</volume>
            <doi>10.1109/TPDS.2022.3225481</doi>
            <cYear>2023</cYear>
            <unstructured_citation>Rogowski, M., Aseeri, S., Keyes, D.,
&amp; Dalcin, L. (2023). mpi4py.futures: MPI-based asynchronous task
execution for Python. IEEE Transactions on Parallel and Distributed
Systems, 34(2), 611–622.
https://doi.org/10.1109/TPDS.2022.3225481</unstructured_citation>
          </citation>
          <citation key="casper">
            <article_title>Casper: An asynchronous progress model for
MPI RMA on many-core architectures</article_title>
            <author>Si</author>
            <journal_title>2015 IEEE international parallel and
distributed processing symposium</journal_title>
            <doi>10.1109/IPDPS.2015.35</doi>
            <cYear>2015</cYear>
            <unstructured_citation>Si, M., Peña, A. J., Hammond, J.,
Balaji, P., Takagi, M., &amp; Ishikawa, Y. (2015). Casper: An
asynchronous progress model for MPI RMA on many-core architectures. 2015
IEEE International Parallel and Distributed Processing Symposium,
665–676. https://doi.org/10.1109/IPDPS.2015.35</unstructured_citation>
          </citation>
          <citation key="nvshmem-ib">
            <article_title>GPU-centric communication on NVIDIA GPU
clusters with InfiniBand: A case study with OpenSHMEM</article_title>
            <author>Potluri</author>
            <journal_title>2017 IEEE 24th international conference on
high performance computing (HiPC)</journal_title>
            <doi>10.1109/HiPC.2017.00037</doi>
            <cYear>2017</cYear>
            <unstructured_citation>Potluri, S., Goswami, A., Rossetti,
D., Newburn, C. J., Venkata, M. G., &amp; Imam, N. (2017). GPU-centric
communication on NVIDIA GPU clusters with InfiniBand: A case study with
OpenSHMEM. 2017 IEEE 24th International Conference on High Performance
Computing (HiPC), 253–262.
https://doi.org/10.1109/HiPC.2017.00037</unstructured_citation>
          </citation>
          <citation key="nvshmem">
            <article_title>An initial assessment of NVSHMEM for high
performance computing</article_title>
            <author>Hsu</author>
            <journal_title>2020 IEEE international parallel and
distributed processing symposium workshops (IPDPSW)</journal_title>
            <doi>10.1109/IPDPSW50202.2020.00104</doi>
            <cYear>2020</cYear>
            <unstructured_citation>Hsu, C.-H., Imam, N., Langer, A.,
Potluri, S., &amp; Newburn, C. J. (2020). An initial assessment of
NVSHMEM for high performance computing. 2020 IEEE International Parallel
and Distributed Processing Symposium Workshops (IPDPSW), 1–10.
https://doi.org/10.1109/IPDPSW50202.2020.00104</unstructured_citation>
          </citation>
          <citation key="oshmpi">
            <article_title>Implementing OpenSHMEM using MPI-3 one-sided
communication</article_title>
            <author>Hammond</author>
            <journal_title>OpenSHMEM and related technologies.
Experiences, implementations, and tools: First workshop, OpenSHMEM 2014,
annapolis, MD, USA, march 4-6, 2014. Proceedings 1</journal_title>
            <doi>10.1007/978-3-319-05215-1</doi>
            <cYear>2014</cYear>
            <unstructured_citation>Hammond, J. R., Ghosh, S., &amp;
Chapman, B. M. (2014). Implementing OpenSHMEM using MPI-3 one-sided
communication. OpenSHMEM and Related Technologies. Experiences,
Implementations, and Tools: First Workshop, OpenSHMEM 2014, Annapolis,
MD, USA, March 4-6, 2014. Proceedings 1, 44–58.
https://doi.org/10.1007/978-3-319-05215-1</unstructured_citation>
          </citation>
          <citation key="mvapich-openshmem-perf">
            <article_title>A comprehensive performance evaluation of
OpenSHMEM libraries on InfiniBand clusters</article_title>
            <author>Jose</author>
            <journal_title>OpenSHMEM and related technologies.
Experiences, implementations, and tools: First workshop, OpenSHMEM 2014,
annapolis, MD, USA, march 4-6, 2014. Proceedings 1</journal_title>
            <doi>10.1007/978-3-319-05215-1_2</doi>
            <cYear>2014</cYear>
            <unstructured_citation>Jose, J., Zhang, J., Venkatesh, A.,
Potluri, S., &amp; Panda, D. K. (2014). A comprehensive performance
evaluation of OpenSHMEM libraries on InfiniBand clusters. OpenSHMEM and
Related Technologies. Experiences, Implementations, and Tools: First
Workshop, OpenSHMEM 2014, Annapolis, MD, USA, March 4-6, 2014.
Proceedings 1, 14–28.
https://doi.org/10.1007/978-3-319-05215-1_2</unstructured_citation>
          </citation>
          <citation key="cffi">
            <article_title>CFFI: C Foreign Function Interface for
Python</article_title>
            <author>Rigo</author>
            <journal_title>Read the Docs</journal_title>
            <cYear>2022</cYear>
            <unstructured_citation>Rigo, A., &amp; Fijalkowski, M.
(2022). CFFI: C Foreign Function Interface for Python. In Read the Docs.
https://cffi.readthedocs.io/</unstructured_citation>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
