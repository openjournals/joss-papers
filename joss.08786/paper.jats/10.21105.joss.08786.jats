<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">8786</article-id>
<article-id pub-id-type="doi">10.21105/joss.08786</article-id>
<title-group>
<article-title>caskade: building Pythonic scientific
simulators</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-9086-6398</contrib-id>
<name>
<surname>Stone</surname>
<given-names>Connor</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="aff" rid="aff-3"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-8806-7936</contrib-id>
<name>
<surname>Adam</surname>
<given-names>Alexandre</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-0055-1780</contrib-id>
<name>
<surname>Coogan</surname>
<given-names>Adam</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="aff" rid="aff-3"/>
<xref ref-type="aff" rid="aff-a"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-3544-3939</contrib-id>
<name>
<surname>Perreault-Levasseur</surname>
<given-names>Laurence</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="aff" rid="aff-3"/>
<xref ref-type="aff" rid="aff-4"/>
<xref ref-type="aff" rid="aff-5"/>
<xref ref-type="aff" rid="aff-6"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-8669-5733</contrib-id>
<name>
<surname>Hezaveh</surname>
<given-names>Yashar</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="aff" rid="aff-3"/>
<xref ref-type="aff" rid="aff-4"/>
<xref ref-type="aff" rid="aff-5"/>
<xref ref-type="aff" rid="aff-6"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Ciela Institute - Montréal Institute for Astrophysical Data
Analysis and Machine Learning, Montréal, Québec, Canada</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Department of Physics, Université de Montréal, Montréal,
Québec, Canada</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Mila - Québec Artificial Intelligence Institute, Montréal,
Québec, Canada</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>Center for Computational Astrophysics, Flatiron Institute,
162 5th Avenue, 10010, New York, NY, USA</institution>
</institution-wrap>
</aff>
<aff id="aff-5">
<institution-wrap>
<institution>Perimeter Institute for Theoretical Physics, Waterloo,
Canada</institution>
</institution-wrap>
</aff>
<aff id="aff-6">
<institution-wrap>
<institution>Trottier Space Institute, McGill University, Montréal,
Canada</institution>
</institution-wrap>
</aff>
<aff id="aff-a">
<institution-wrap>
<institution>Work done while at UdeM, Ciela, and Mila</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2025-06-02">
<day>2</day>
<month>6</month>
<year>2025</year>
</pub-date>
<volume>10</volume>
<issue>113</issue>
<fpage>8786</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>astronomy</kwd>
<kwd>inference</kwd>
<kwd>simulation</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Scientific simulators and pipelines form the core of many research
  projects. Writing high-quality, modular code allows for efficiently
  scaling a project, but this can be challenging in a research context.
  Research project goals and solutions to those goals are constantly in
  flux, requiring many refactoring rounds to meet these changes. The
  result can be a progressively more unwieldy interconnected code. Here
  we present a system, <monospace>caskade</monospace>, which allows
  users to focus on modular components of a simulator, which are small
  and testable to ensure robustness. With
  <monospace>caskade</monospace>, one can turn these modular components
  into abstracted blocks that connect to form a powerful simulator.
  <monospace>caskade</monospace> manages the flow of parameter values
  through such a simulator.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>Science is an intrinsically iterative process, and so is the
  development of scientific code. Well-written code is flexible and
  scalable while being performant. This is difficult to achieve in a
  scientific context where goals often evolve rapidly, requiring code
  refactoring. A major aspect of this is the parameters of a scientific
  model: the values that will ultimately be sampled and/or optimized to
  represent some data. A value may need to alternately be fixed, then
  allowed to vary (e.g., in Gibbs sampling). Some parameters that were
  initially separate may need to share a value or some functional
  relationship. In the extreme, a whole simulator may become a function
  of a single variable, such as time. Metadata such as the uncertainty
  or valid range of a parameter may need to be stored. One may need to
  represent all parameters as a single 1D vector to interface with
  external tools, such as emcee
  (<xref alt="Foreman-Mackey et al., 2013" rid="ref-emcee" ref-type="bibr">Foreman-Mackey
  et al., 2013</xref>), scipy.optimize
  (<xref alt="Virtanen et al., 2020" rid="ref-scipy" ref-type="bibr">Virtanen
  et al., 2020</xref>), Pyro
  (<xref alt="Bingham et al., 2019" rid="ref-pyro" ref-type="bibr">Bingham
  et al., 2019</xref>), dynesty
  (<xref alt="Speagle, 2020" rid="ref-dynesty" ref-type="bibr">Speagle,
  2020</xref>), or torch.Optim
  (<xref alt="Paszke et al., 2019" rid="ref-pytorch" ref-type="bibr">Paszke
  et al., 2019</xref>). Large projects and correspondingly large teams
  require the ability to break projects into manageable subtasks which
  can later be naturally combined into a complete analysis suite. Most
  importantly, as all of the above needs change, it is critical to
  meaningfully re-use older code without “code debt” or “software
  entropy” growing unsustainably.</p>
</sec>
<sec id="features">
  <title>Features</title>
  <p>The core features of <monospace>caskade</monospace> are the
  <monospace>Module</monospace> base class, <monospace>Param</monospace>
  object, and <monospace>forward</monospace> decorator. To construct a
  <monospace>caskade</monospace> simulator, one subclasses
  <monospace>Module</monospace> then adds some number of
  <monospace>Param</monospace> objects as attributes of the class. Any
  number of class methods may be decorated with
  <monospace>@forward</monospace>, meaning
  <monospace>caskade</monospace> will manage the
  <monospace>Param</monospace> arguments of that function. As modules
  are combined into a larger simulator, <monospace>caskade</monospace>
  builds a directed acyclic graph (DAG) representation. This allows it
  to automatically manage the flow (cascade) of parameters through the
  simulator and encode arbitrary relationships between them. This is
  inspired by the <monospace>PyTorch</monospace> framework
  <monospace>nn.Module</monospace>, which allows for near-effortless
  construction of machine learning models. We generalize the object
  oriented framework to apply to almost any scientific forward model,
  simulator, analysis pipeline, and so on;
  <monospace>caskade</monospace> manages the flow of parameters through
  these models.</p>
  <p>Thus the primary capability of <monospace>caskade</monospace> is
  the management of <monospace>Param</monospace> values as they enter
  <monospace>@forward</monospace> methods of
  <monospace>Modules</monospace>. Any parameter may be transformed
  between “static” and “dynamic”, where static has a fixed value and
  dynamic is provided at call time. Parameters may be synced with
  arbitrary functional relationships between them. New parameters may be
  added dynamically to allow for sophisticated transformations. For
  example, an entire simulator may be turned into a function of time
  without modifying the underlying simulator by adding a time parameter
  and linking appropriately. It is possible to use
  <monospace>caskade</monospace> with <monospace>NumPy</monospace>
  (<xref alt="Harris et al., 2020" rid="ref-numpy" ref-type="bibr">Harris
  et al., 2020</xref>), <monospace>JAX</monospace>
  (<xref alt="Bradbury et al., 2018" rid="ref-jax" ref-type="bibr">Bradbury
  et al., 2018</xref>), or <monospace>PyTorch</monospace>
  (<xref alt="Paszke et al., 2019" rid="ref-pytorch" ref-type="bibr">Paszke
  et al., 2019</xref>) numerical backends.</p>
  <fig>
    <caption><p>Example <monospace>caskade</monospace> DAG
    representation of a gravitational lensing simulator. Ovals represent
    Modules, boxes represent dynamic parameters, shaded boxes represent
    fixed parameters, arrow boxes represent parameters which are
    functionally dependent on another parameter, and thin arrows show
    the direction of the graph flow for parameters passed at the top
    level.<styled-content id="figU003Agraph"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="model_graph.pdf" />
  </fig>
  <p>Our suggested design flow is to build out a functional programming
  base for the package, then use <monospace>Module</monospace>s as
  wrappers for the functional base to design a convenient user
  interface. This design encourages modular development and is
  supportive of users who wish to expand functionality at different
  levels. The <monospace>caustics</monospace> package
  (<xref alt="Stone et al., 2024" rid="ref-Stone2024" ref-type="bibr">Stone
  et al., 2024</xref>) implements this code design to great effect.
  <xref alt="[fig:graph]" rid="figU003Agraph">[fig:graph]</xref> shows
  an example <monospace>caskade</monospace>
  graph<xref ref-type="fn" rid="fn1">1</xref> from
  <monospace>caustics</monospace>. In this graph, the redshift
  parameters (<monospace>z_l</monospace> and <monospace>z_s</monospace>)
  of each lens are linked to ensure consistent evaluation despite the
  functional backed having no explicit enforcement of this. See also
  that all of the lens objects (<monospace>ExternalShear</monospace>,
  <monospace>SIE</monospace>, and <monospace>SinglePlane</monospace>)
  point to a single cosmology <monospace>Module</monospace> and so share
  the same cosmological parameters automatically.</p>
</sec>
<sec id="state-of-the-field">
  <title>State of the Field</title>
  <p>In some ways <monospace>caskade</monospace> is reminiscent of
  <monospace>Hydra</monospace>
  (<xref alt="Yadan, 2019" rid="ref-hydra" ref-type="bibr">Yadan,
  2019</xref>). However, <monospace>caskade</monospace> focuses on
  numerical parameters and scientific inference, while
  <monospace>Hydra</monospace> focuses on configuration management and
  large scale process organization. The two may even be used in tandem.
  Another package, <monospace>tesseract-core</monospace>
  (<xref alt="Häfner &amp; Lavin, 2025" rid="ref-Hafner2025" ref-type="bibr">Häfner
  &amp; Lavin, 2025</xref>), focuses more on containerization and
  distribution of simulations to interface different ecosystems
  (<monospace>PyTorch</monospace> and <monospace>JAX</monospace> as well
  as <monospace>Python</monospace> and <monospace>C++</monospace>) and
  on different compute engines (HPC clusters or in a cloud). The
  <monospace>SimFrame</monospace>
  (<xref alt="Stammler &amp; Birnstiel, 2022" rid="ref-Stammler2022" ref-type="bibr">Stammler
  &amp; Birnstiel, 2022</xref>) package shares
  <monospace>caskade</monospace>’s modular and extensible core design,
  though is focused exclusively on solving differential equations. While
  the <monospace>Ecos</monospace> package
  (<xref alt="Hatledal, 2025" rid="ref-Hatledal2025" ref-type="bibr">Hatledal,
  2025</xref>) encodes the Functional Mockup Interface standard
  (<xref alt="Blochwitz, 2012" rid="ref-Blochwitz2012" ref-type="bibr">Blochwitz,
  2012</xref>), which is also designed for building modular simulators
  though in the more strict FMI standard which requires auxiliary
  <monospace>.xml</monospace> specification files,
  <monospace>caskade</monospace> focuses on lean and active research
  development, which thrives on minimal overhead. Finally,
  <monospace>PathSim</monospace> also shares the
  <monospace>caskade</monospace> modular simulator building framework,
  though it focuses exclusively on time-domain dynamical systems.
  Clearly, many fields of research and development desire such modular
  simulation-building frameworks; <monospace>caskade</monospace>
  fulfills the role very generally, though not so abstractly as to
  require overhead schema or meta-data files.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This research was enabled by a generous donation by Eric and Wendy
  Schmidt with the recommendation of the Schmidt Futures Foundation.
  C.S. acknowledges the support of a NSERC Postdoctoral Fellowship and a
  CITA National Fellowship. This research was enabled in part by support
  provided by Calcul Québec and the Digital Research Alliance of Canada.
  The work of A.A. was partially funded by NSERC CGS D scholarships.
  Y.H. and L.P. acknowledge support from the National Sciences and
  Engineering Council of Canada grants RGPIN-2020-05073 and 05102, the
  Fonds de recherche du Québec grants 2022-NC-301305 and 300397, and the
  Canada Research Chairs Program.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-Stone2024">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Stone</surname><given-names>Connor</given-names></name>
        <name><surname>Adam</surname><given-names>Alexandre</given-names></name>
        <name><surname>Coogan</surname><given-names>Adam</given-names></name>
        <name><surname>Yantovski-Barth</surname><given-names>M. J.</given-names></name>
        <name><surname>Filipp</surname><given-names>Andreas</given-names></name>
        <name><surname>Setiawan</surname><given-names>Landung</given-names></name>
        <name><surname>Core</surname><given-names>Cordero</given-names></name>
        <name><surname>Legin</surname><given-names>Ronan</given-names></name>
        <name><surname>Wilson</surname><given-names>Charles</given-names></name>
        <name><surname>Barco</surname><given-names>Gabriel Missael</given-names></name>
        <name><surname>Hezaveh</surname><given-names>Yashar</given-names></name>
        <name><surname>Perreault-Levasseur</surname><given-names>Laurence</given-names></name>
      </person-group>
      <article-title>Caustics: A Python package for accelerated strong gravitational lensing simulations</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <volume>9</volume>
      <issue>103</issue>
      <uri>https://doi.org/10.21105/joss.07081</uri>
      <pub-id pub-id-type="doi">10.21105/joss.07081</pub-id>
      <fpage>7081</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-dynesty">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Speagle</surname><given-names>Joshua S.</given-names></name>
      </person-group>
      <article-title>DYNESTY: a dynamic nested sampling package for estimating Bayesian posteriors and evidences</article-title>
      <source>Monthly Notices of the Royal Astronomical Society</source>
      <year iso-8601-date="2020-04">2020</year><month>04</month>
      <volume>493</volume>
      <issue>3</issue>
      <uri>https://arxiv.org/abs/1904.02180</uri>
      <pub-id pub-id-type="doi">10.1093/mnras/staa278</pub-id>
      <fpage>3132</fpage>
      <lpage>3158</lpage>
    </element-citation>
  </ref>
  <ref id="ref-pytorch">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Paszke</surname><given-names>Adam</given-names></name>
        <name><surname>Gross</surname><given-names>Sam</given-names></name>
        <name><surname>Massa</surname><given-names>Francisco</given-names></name>
        <name><surname>Lerer</surname><given-names>Adam</given-names></name>
        <name><surname>Bradbury</surname><given-names>James</given-names></name>
        <name><surname>Chanan</surname><given-names>Gregory</given-names></name>
        <name><surname>Killeen</surname><given-names>Trevor</given-names></name>
        <name><surname>Lin</surname><given-names>Zeming</given-names></name>
        <name><surname>Gimelshein</surname><given-names>Natalia</given-names></name>
        <name><surname>Antiga</surname><given-names>Luca</given-names></name>
        <name><surname>Desmaison</surname><given-names>Alban</given-names></name>
        <name><surname>Kopf</surname><given-names>Andreas</given-names></name>
        <name><surname>Yang</surname><given-names>Edward</given-names></name>
        <name><surname>DeVito</surname><given-names>Zachary</given-names></name>
        <name><surname>Raison</surname><given-names>Martin</given-names></name>
        <name><surname>Tejani</surname><given-names>Alykhan</given-names></name>
        <name><surname>Chilamkurthy</surname><given-names>Sasank</given-names></name>
        <name><surname>Steiner</surname><given-names>Benoit</given-names></name>
        <name><surname>Fang</surname><given-names>Lu</given-names></name>
        <name><surname>Bai</surname><given-names>Junjie</given-names></name>
        <name><surname>Chintala</surname><given-names>Soumith</given-names></name>
      </person-group>
      <article-title>PyTorch: An imperative style, high-performance deep learning library</article-title>
      <source>Advances in neural information processing systems 32</source>
      <publisher-name>Curran Associates, Inc.</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <uri>http://papers.neurips.cc/paper/9015-pytorch-an-imperative-style-high-performance-deep-learning-library.pdf</uri>
      <pub-id pub-id-type="doi">10.48550/arXiv.1912.01703</pub-id>
      <fpage>8024</fpage>
      <lpage>8035</lpage>
    </element-citation>
  </ref>
  <ref id="ref-jax">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Bradbury</surname><given-names>James</given-names></name>
        <name><surname>Frostig</surname><given-names>Roy</given-names></name>
        <name><surname>Hawkins</surname><given-names>Peter</given-names></name>
        <name><surname>Johnson</surname><given-names>Matthew James</given-names></name>
        <name><surname>Leery</surname><given-names>Chris</given-names></name>
        <name><surname>Maclaurin</surname><given-names>Dougal</given-names></name>
        <name><surname>Necula</surname><given-names>George</given-names></name>
        <name><surname>Paszke</surname><given-names>Adam</given-names></name>
        <name><surname>VanderPlas</surname><given-names>Jake</given-names></name>
        <name><surname>Wanderman-Milne</surname><given-names>Skye</given-names></name>
        <name><surname>Zhang</surname><given-names>Qiao</given-names></name>
      </person-group>
      <article-title>JAX: Composable transformations of Python+NumPy programs</article-title>
      <year iso-8601-date="2018">2018</year>
      <uri>http://github.com/google/jax</uri>
    </element-citation>
  </ref>
  <ref id="ref-scipy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
        <name><surname>Haberland</surname><given-names>Matt</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Burovski</surname><given-names>Evgeni</given-names></name>
        <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
        <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
        <name><surname>Bright</surname><given-names>Jonathan</given-names></name>
        <name><surname>van der Walt</surname><given-names>Stéfan J.</given-names></name>
        <name><surname>Brett</surname><given-names>Matthew</given-names></name>
        <name><surname>Wilson</surname><given-names>Joshua</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>Mayorov</surname><given-names>Nikolay</given-names></name>
        <name><surname>Nelson</surname><given-names>Andrew R. J.</given-names></name>
        <name><surname>Jones</surname><given-names>Eric</given-names></name>
        <name><surname>Kern</surname><given-names>Robert</given-names></name>
        <name><surname>Larson</surname><given-names>Eric</given-names></name>
        <name><surname>Carey</surname><given-names>C J</given-names></name>
        <name><surname>Polat</surname><given-names>İlhan</given-names></name>
        <name><surname>Feng</surname><given-names>Yu</given-names></name>
        <name><surname>Moore</surname><given-names>Eric W.</given-names></name>
        <name><surname>VanderPlas</surname><given-names>Jake</given-names></name>
        <name><surname>Laxalde</surname><given-names>Denis</given-names></name>
        <name><surname>Perktold</surname><given-names>Josef</given-names></name>
        <name><surname>Cimrman</surname><given-names>Robert</given-names></name>
        <name><surname>Henriksen</surname><given-names>Ian</given-names></name>
        <name><surname>Quintero</surname><given-names>E. A.</given-names></name>
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Archibald</surname><given-names>Anne M.</given-names></name>
        <name><surname>Ribeiro</surname><given-names>Antônio H.</given-names></name>
        <name><surname>Pedregosa</surname><given-names>Fabian</given-names></name>
        <name><surname>van Mulbregt</surname><given-names>Paul</given-names></name>
        <string-name>SciPy 1.0 Contributors</string-name>
      </person-group>
      <article-title>SciPy 1.0: Fundamental algorithms for scientific computing in Python</article-title>
      <source>Nature Methods</source>
      <year iso-8601-date="2020">2020</year>
      <volume>17</volume>
      <pub-id pub-id-type="doi">10.1038/s41592-019-0686-2</pub-id>
      <fpage>261</fpage>
      <lpage>272</lpage>
    </element-citation>
  </ref>
  <ref id="ref-emcee">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Foreman-Mackey</surname><given-names>Daniel</given-names></name>
        <name><surname>Hogg</surname><given-names>David W.</given-names></name>
        <name><surname>Lang</surname><given-names>Dustin</given-names></name>
        <name><surname>Goodman</surname><given-names>Jonathan</given-names></name>
      </person-group>
      <article-title>emcee: The MCMC hammer</article-title>
      <source>Publications of the Astronomical Society of the Pacific</source>
      <year iso-8601-date="2013-03">2013</year><month>03</month>
      <volume>125</volume>
      <issue>925</issue>
      <uri>https://arxiv.org/abs/1202.3665</uri>
      <pub-id pub-id-type="doi">10.1086/670067</pub-id>
      <fpage>306</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-pyro">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bingham</surname><given-names>Eli</given-names></name>
        <name><surname>Chen</surname><given-names>Jonathan P</given-names></name>
        <name><surname>Jankowiak</surname><given-names>Martin</given-names></name>
        <name><surname>Obermeyer</surname><given-names>Fritz</given-names></name>
        <name><surname>Pradhan</surname><given-names>Neeraj</given-names></name>
        <name><surname>Karaletsos</surname><given-names>Theofanis</given-names></name>
        <name><surname>Singh</surname><given-names>Rohit</given-names></name>
        <name><surname>Szerlip</surname><given-names>Paul</given-names></name>
        <name><surname>Horsfall</surname><given-names>Paul</given-names></name>
        <name><surname>Goodman</surname><given-names>Noah D</given-names></name>
      </person-group>
      <article-title>Pyro: Deep universal probabilistic programming</article-title>
      <source>The Journal of Machine Learning Research</source>
      <publisher-name>JMLR. org</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <volume>20</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.48550/arXiv.1810.09538</pub-id>
      <fpage>973</fpage>
      <lpage>978</lpage>
    </element-citation>
  </ref>
  <ref id="ref-numpy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>Walt</surname><given-names>Stéfan J. van der</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Wieser</surname><given-names>Eric</given-names></name>
        <name><surname>Taylor</surname><given-names>Julian</given-names></name>
        <name><surname>Berg</surname><given-names>Sebastian</given-names></name>
        <name><surname>Smith</surname><given-names>Nathaniel J.</given-names></name>
        <name><surname>Kern</surname><given-names>Robert</given-names></name>
        <name><surname>Picus</surname><given-names>Matti</given-names></name>
        <name><surname>Hoyer</surname><given-names>Stephan</given-names></name>
        <name><surname>Kerkwijk</surname><given-names>Marten H. van</given-names></name>
        <name><surname>Brett</surname><given-names>Matthew</given-names></name>
        <name><surname>Haldane</surname><given-names>Allan</given-names></name>
        <name><surname>Río</surname><given-names>Jaime Fernández del</given-names></name>
        <name><surname>Wiebe</surname><given-names>Mark</given-names></name>
        <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
        <name><surname>Gérard-Marchant</surname><given-names>Pierre</given-names></name>
        <name><surname>Sheppard</surname><given-names>Kevin</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
        <name><surname>Abbasi</surname><given-names>Hameer</given-names></name>
        <name><surname>Gohlke</surname><given-names>Christoph</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
      </person-group>
      <article-title>Array programming with NumPy</article-title>
      <source>Nature</source>
      <publisher-name>Springer Science; Business Media LLC</publisher-name>
      <year iso-8601-date="2020-09">2020</year><month>09</month>
      <volume>585</volume>
      <issue>7825</issue>
      <uri>https://doi.org/10.1038/s41586-020-2649-2</uri>
      <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
      <fpage>357</fpage>
      <lpage>362</lpage>
    </element-citation>
  </ref>
  <ref id="ref-graphviz">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ellson</surname><given-names>John</given-names></name>
        <name><surname>Gansner</surname><given-names>Emden R</given-names></name>
        <name><surname>Koutsofios</surname><given-names>Eleftherios</given-names></name>
        <name><surname>North</surname><given-names>Stephen C</given-names></name>
        <name><surname>Woodhull</surname><given-names>Gordon</given-names></name>
      </person-group>
      <article-title>Graphviz and dynagraph—static and dynamic graph drawing tools</article-title>
      <source>Graph drawing software</source>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2004">2004</year>
      <pub-id pub-id-type="doi">10.1007/978-3-642-18638-7_6</pub-id>
      <fpage>127</fpage>
      <lpage>148</lpage>
    </element-citation>
  </ref>
  <ref id="ref-hydra">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Yadan</surname><given-names>Omry</given-names></name>
      </person-group>
      <article-title>Hydra - a framework for elegantly configuring complex applications</article-title>
      <publisher-name>Github</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <uri>https://github.com/facebookresearch/hydra</uri>
    </element-citation>
  </ref>
  <ref id="ref-Hafner2025">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Häfner</surname><given-names>Dion</given-names></name>
        <name><surname>Lavin</surname><given-names>Alexander</given-names></name>
      </person-group>
      <article-title>Tesseract core: Universal, autodiff-native software components for simulation intelligence</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2025">2025</year>
      <volume>10</volume>
      <issue>111</issue>
      <uri>https://doi.org/10.21105/joss.08385</uri>
      <pub-id pub-id-type="doi">10.21105/joss.08385</pub-id>
      <fpage>8385</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Stammler2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Stammler</surname><given-names>Sebastian M.</given-names></name>
        <name><surname>Birnstiel</surname><given-names>Tilman</given-names></name>
      </person-group>
      <article-title>Simframe: A Python framework for scientific simulations</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <volume>7</volume>
      <issue>69</issue>
      <uri>https://doi.org/10.21105/joss.03882</uri>
      <pub-id pub-id-type="doi">10.21105/joss.03882</pub-id>
      <fpage>3882</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Blochwitz2012">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Blochwitz</surname><given-names>Otter</given-names><suffix>T.</suffix></name>
      </person-group>
      <article-title>Functional mockup interface 2.0: The standard for tool independent exchange of simulation models</article-title>
      <publisher-name>9th International Modelica Conference</publisher-name>
      <year iso-8601-date="2012">2012</year>
      <pub-id pub-id-type="doi">10.3384/ecp12076173</pub-id>
      <fpage>173</fpage>
      <lpage>184</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Hatledal2025">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hatledal</surname><given-names>Lars Ivar</given-names></name>
      </person-group>
      <article-title>Ecos: An accessible and intuitive co-simulation framework</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2025">2025</year>
      <volume>10</volume>
      <issue>110</issue>
      <uri>https://doi.org/10.21105/joss.08182</uri>
      <pub-id pub-id-type="doi">10.21105/joss.08182</pub-id>
      <fpage>8182</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
</ref-list>
<fn-group>
  <fn id="fn1">
    <label>1</label><p>visual generated by
    <monospace>graphviz</monospace>
    (<xref alt="Ellson et al., 2004" rid="ref-graphviz" ref-type="bibr">Ellson
    et al., 2004</xref>)</p>
  </fn>
</fn-group>
</back>
</article>
