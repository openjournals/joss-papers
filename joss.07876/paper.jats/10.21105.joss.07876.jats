<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">7876</article-id>
<article-id pub-id-type="doi">10.21105/joss.07876</article-id>
<title-group>
<article-title>ExcelToShiny: An R Package for Automating Shiny Dashboard
Creation from Excel Templates</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-8864-0552</contrib-id>
<name>
<surname>Clements</surname>
<given-names>Lily</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>IDEMS International</institution>
</institution-wrap>
</aff>
</contrib-group>
<volume>10</volume>
<issue>111</issue>
<fpage>7876</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>R</kwd>
<kwd>Shiny</kwd>
<kwd>open-source</kwd>
<kwd>data visualisation</kwd>
<kwd>automation</kwd>
<kwd>Excel</kwd>
<kwd>dashboard</kwd>
<kwd>reproducibility</kwd>
<kwd>transparency</kwd>
<kwd>user interface</kwd>
<kwd>data-driven</kwd>
<kwd>interactive application</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><monospace>ExcelToShiny</monospace> is an open-source,
  user-friendly tool that automates the creation of Shiny dashboards
  from structured Excel templates. Designed to simplify the process of
  building interactive web applications in R,
  <monospace>ExcelToShiny</monospace> allows users to convert Excel
  spreadsheets directly into customisable, fully functional dashboards
  with minimal coding. This solution promotes reproducibility and
  transparency while significantly reducing the technical barrier for
  users seeking data-driven insights through visualisations.</p>
  <p>By automating the traditionally labour-intensive process of
  dashboard generation, <monospace>ExcelToShiny</monospace> ensures that
  even non-technical users can engage with dynamic data visualisations.
  The package plays a role in promoting accessibility and flexibility in
  data presentation, enabling users to focus on decision-making rather
  than complex programming tasks.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>Interactive dashboards provide a dynamic platform to explore and
  communicate research data, making it easier to identify patterns,
  trends, and anomalies. These insights can be acted upon in real-time,
  supporting decision-making for a current ongoing experiment, data
  interpretation, or in subsequent research phases
  (<xref alt="Dutta, 2024" rid="ref-dutta2024business" ref-type="bibr">Dutta,
  2024</xref>). However, constructing these dashboards from scratch in
  Shiny can be complex even for those with experience in coding in R
  (<xref alt="Konrad, 2020" rid="ref-konrad2020shiny" ref-type="bibr">Konrad,
  2020</xref>). For non-technical users, or those unfamiliar with Shiny,
  this challenge often leads to reliance on static reports or external
  proprietary tools like Tableau and Power BI
  (<xref alt="Koldus, 2024" rid="ref-koldus2024dashboards" ref-type="bibr">Koldus,
  2024</xref>). While these tools are user-friendly, they come with
  limitations, such as cost and a lack of reproducibility
  (<xref alt="Microsoft Corporation, 2024" rid="ref-powerbi" ref-type="bibr">Microsoft
  Corporation, 2024</xref>;
  <xref alt="Tableau Software, 2024" rid="ref-tableau" ref-type="bibr">Tableau
  Software, 2024</xref>).</p>
  <p>Researchers can face difficulties in creating reproducible
  workflows for interactive data visualisations, especially when
  technical expertise is a barrier. Static reports limit data
  exploration
  (<xref alt="Koldus, 2024" rid="ref-koldus2024dashboards" ref-type="bibr">Koldus,
  2024</xref>), and proprietary software tools, while convenient, are
  not as easily adaptable or transparent enough for scientific research
  needs
  (<xref alt="Biswas, 2021" rid="ref-biswas2021tableau" ref-type="bibr">Biswas,
  2021</xref>)</p>
  <p><monospace>ExcelToShiny</monospace> addresses these gaps by
  offering an R-based alternative that automates the conversion of Excel
  templates into Shiny dashboards. By reading a user-defined Excel
  structure, <monospace>ExcelToShiny</monospace> dynamically generates
  the corresponding UI and server components for a Shiny application.
  This approach allows users to create dashboards that are reproducible,
  transparent, and easy to share, with the flexibility to modify and
  adapt them as needed within the R ecosystem. Additionally, by lowering
  the technical barrier, <monospace>ExcelToShiny</monospace> allows
  researchers from various fields to engage with large datasets, perform
  real-time analysis, and generate data-driven insights without the need
  for extensive coding.</p>
  <p>By streamlining the creation of Shiny dashboards,
  <monospace>ExcelToShiny</monospace> directly supports research
  activities by making it easier for researchers to interact with data,
  visualise results, and share reproducible analysis in a transparent,
  flexible format.</p>
</sec>
<sec id="state-of-the-field">
  <title>State of the Field</title>
  <p>Several R packages exist for creating Shiny applications, each
  designed for different use cases and levels of technical expertise.
  For instance, <monospace>golem</monospace> promotes modularisation and
  best practices for large-scale applications but requires a deeper
  understanding of Shiny’s architecture. Similarly,
  <monospace>flexdashboard</monospace> enables the creation of
  interactive dashboards with minimal explicit Shiny code, though it
  relies on RMarkdown and R, which can be a barrier for users with
  limited programming experience.</p>
  <p>While these tools are powerful, they introduce complexities that
  may not suit all users. In contrast,
  <monospace>ExcelToShiny</monospace> lowers the entry barrier by
  leveraging structured Excel templates, making it particularly
  well-suited for those who prefer spreadsheet-based interfaces for data
  management and visualisation. By bridging the gap between
  non-technical users and interactive dashboard creation,
  <monospace>ExcelToShiny</monospace> offers a more accessible
  alternative to traditional Shiny development approaches.</p>
</sec>
<sec id="functionality-and-features">
  <title>Functionality and Features</title>
  <p><monospace>ExcelToShiny</monospace> leverages a simple, structured
  Excel format to automatically generate Shiny dashboards, making the
  process highly accessible. The package interprets Excel template
  elements like tabs, graphs, tables, and menus, converting them into
  Shiny UI components and server logic with minimal user input. The
  dashboards can have regular display pages, display pages with tabs, or
  have a page that downloads the data. Furthermore, while much of the
  process is automated, users can further customise their dashboards,
  enabling fine-tuning of both layout and behaviour to meet specific
  requirements without needing to dive into R code.</p>
  <p>Finally, the use of structured templates ensures that dashboards
  can be easily replicated, modified, and audited, enhancing
  transparency in data-driven processes. The package integrates with
  existing R workflows, making it straightforward to incorporate into
  larger projects, combining it with other packages for a comprehensive
  analysis.</p>
</sec>
<sec id="usage">
  <title>Usage</title>
  <p><monospace>ExcelToShiny</monospace> is simple to use, with the
  workflow beginning from an Excel template that defines the dashboard’s
  layout. Users provide the template, and the package generates the
  dashboard based on the structure defined in the Excel file.</p>
  <sec id="example-building-a-basic-dashboard">
    <title>Example: Building a Basic Dashboard</title>
    <p>To create a dashboard from an spreadsheet template, first design
    a file with the necessary structure for the dashboard, including
    tabs, charts, and tables. The next task is to read in the Excel
    Template and your data to display needed for the dashboard. You can
    do data manipulation at this stage to the data, if needed. Finally,
    using the <monospace>build_shiny</monospace> function, the user can
    built their shiny dashboard.</p>
    <preformat>library(ExcelToShiny)

# Load the Excel Template
excel_file &lt;- &quot;path_to_template.xlsx&quot;

# Create the Shiny Dashboard
shiny_app &lt;- build_shiny(title = &quot;Testing App&quot;,
                         data_list = excel_file,
                         data_frame = data_file)</preformat>
    <p>This process generates and launches a Shiny dashboard based on
    the specified spreadsheet template, requiring minimal programming
    expertise.</p>
  </sec>
</sec>
<sec id="future-goals">
  <title>Future Goals</title>
  <p>The ongoing development of <monospace>ExcelToShiny</monospace> aims
  to extend its functionality and usability. Improvements include
  optimisation changes on the R code to improve its efficiency, and
  adding additional features for further flexibility in the Shiny
  Dashboards.</p>
  <p>Hosted on GitHub, <monospace>ExcelToShiny</monospace> encourages
  contributions from the community to ensure the package continues to
  evolve and meet the diverse needs of its users. This community-driven
  development fosters an open-source, collaborative approach to refining
  the tool.</p>
</sec>
<sec id="conclusion">
  <title>Conclusion</title>
  <p><monospace>ExcelToShiny</monospace> lowers the barriers to entry
  for users without extensive programming experience in creating Shiny
  Dashboards. By automating the generation of dashboards from Excel
  templates, it ensures accessibility, reproducibility, and transparency
  in data visualisation. As the package evolves, it aims to serve as a
  tool for researchers, analysts, and decision-makers in a wide range of
  fields, providing an easy-to-use, powerful solution for data
  presentation.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-dutta2024business">
    <element-citation publication-type="webpage">
      <person-group person-group-type="author">
        <name><surname>Dutta</surname><given-names>Soham</given-names></name>
      </person-group>
      <article-title>Business dashboards decoded: Visualizing success in data-driven decision-making</article-title>
      <source>Sprinkle Data Blogs</source>
      <year iso-8601-date="2024">2024</year>
      <uri>https://www.sprinkledata.com/blogs/business-dashboards-decoded-visualizing-success-in-data-driven-decision-making</uri>
    </element-citation>
  </ref>
  <ref id="ref-tableau">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>Tableau Software</string-name>
      </person-group>
      <article-title>Tableau</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://www.tableau.com/</uri>
    </element-citation>
  </ref>
  <ref id="ref-powerbi">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>Microsoft Corporation</string-name>
      </person-group>
      <article-title>Power BI</article-title>
      <publisher-name>https://www.microsoft.com/en-gb/power-platform/products/power-bi/</publisher-name>
      <year iso-8601-date="2024">2024</year>
    </element-citation>
  </ref>
  <ref id="ref-konrad2020shiny">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Konrad</surname><given-names>Markus</given-names></name>
      </person-group>
      <article-title>Developing a complex r shiny app – the good, the bad and the ugly</article-title>
      <publisher-name>https://datascience.blog.wzb.eu/2020/02/27/developing-a-complex-r-shiny-app/</publisher-name>
      <year iso-8601-date="2020">2020</year>
    </element-citation>
  </ref>
  <ref id="ref-koldus2024dashboards">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Koldus</surname><given-names>Miroslav</given-names></name>
      </person-group>
      <article-title>Beyond static reporting: Interactive dashboards</article-title>
      <publisher-name>https://www.gooddata.com/blog/beyond-static-repoting-interactive-dashboards/</publisher-name>
      <year iso-8601-date="2024">2024</year>
    </element-citation>
  </ref>
  <ref id="ref-biswas2021tableau">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Biswas</surname><given-names>Debolina</given-names></name>
      </person-group>
      <article-title>Tableau vs shiny: Which one should you pick for data visualisation</article-title>
      <publisher-name>https://analyticsindiamag.com/ai-origins-evolution/tableau-vs-shiny-which-one-should-you-pick-for-data-visualisation/</publisher-name>
      <year iso-8601-date="2021-10">2021</year><month>10</month>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
