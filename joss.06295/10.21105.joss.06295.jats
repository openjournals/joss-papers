<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6295</article-id>
<article-id pub-id-type="doi">10.21105/joss.06295</article-id>
<title-group>
<article-title>pyEQL: A Python interface for water
chemistry</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-7168-3967</contrib-id>
<name>
<surname>Kingsbury</surname>
<given-names>Ryan</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Civil and Environmental Engineering and the
Andlinger Center for Energy and the Environment, Princeton University,
USA</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-11-05">
<day>5</day>
<month>11</month>
<year>2023</year>
</pub-date>
<volume>9</volume>
<issue>95</issue>
<fpage>6295</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>environmental engineering</kwd>
<kwd>water treatment</kwd>
<kwd>desalination</kwd>
<kwd>geochemistry</kwd>
<kwd>electrolytes</kwd>
<kwd>electrochemistry</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The properties and behavior of aqueous solutions – that is, water
  containing dissolved minerals and other solutes – are vital to
  understanding natural systems and to developing new technologies for
  water purification, wastewater treatment, and sustainable industrial
  processes
  (<xref alt="Stumm &amp; Morgan, 1999" rid="ref-Stumm1993" ref-type="bibr">Stumm
  &amp; Morgan, 1999</xref>). <monospace>pyEQL</monospace> provides
  object representations for aqueous solutions, creating a stable,
  intuitive, and easy to learn interface for calculating properties of
  solutions and dissolved solutes. Its purpose is to save researchers
  time by making a variety of different models accessible through a
  single interface and by aggregating hundreds of properties and model
  parameters into a built-in database.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Accurately predicting the thermodynamic and transport properties of
  complex electrolyte solutions containing many solutes, especially at
  moderate to high salt concentrations commonly encountered in water
  desalination and resource recovery applications, remains a major
  scientific challenge
  (<xref alt="Rowland &amp; May, 2019" rid="ref-rowland_ProgressAqueousSolution_2019" ref-type="bibr">Rowland
  &amp; May, 2019</xref>). This challenge is compounded by the fact that
  the best available models, such as the Pitzer model
  (<xref alt="May et al., 2011" rid="ref-May2011b" ref-type="bibr">May
  et al., 2011</xref>), are difficult to implement on an as-needed basis
  and require looking up many parameters. Researchers and practitioners
  in fields such as water treatment and desalination, electrochemistry,
  or environmental engineering need accurate information about
  electrolyte solutions to perform their work, but are typically not
  specialists in solution chemistry or electrolyte thermodynamics.</p>
  <p>Available software such as <monospace>PHREEQC</monospace>
  (<xref alt="Charlton &amp; Parkhurst, 2011" rid="ref-Charlton2011" ref-type="bibr">Charlton
  &amp; Parkhurst, 2011</xref>),
  <monospace>GeoChemist's Workbench</monospace>
  (<xref alt="Aqueous Solutions, 2023" rid="ref-gwb" ref-type="bibr">Aqueous
  Solutions, 2023</xref>), or OLI Studio
  (<xref alt="Wang et al., 2002" rid="ref-oli" ref-type="bibr">Wang et
  al., 2002</xref>) implement numerous electrolyte models and contain
  powerful capabilities for specialists. However, they are not highly
  accessible for routine use by others, due to a steep learning curve,
  difficult interoperability with other tools (such as external
  transport models), the lack of a freely-available version, and/or
  limitation to specific operating systems. Several
  <monospace>python</monospace> interfaces to the open-source
  <monospace>PHREEQC</monospace> software exist, including IPhreeqC
  (<xref alt="Parkhurst &amp; Appelo, 2013" rid="ref-Parkhurst2013" ref-type="bibr">Parkhurst
  &amp; Appelo, 2013</xref>), <monospace>phreeqpython</monospace>
  (<ext-link ext-link-type="uri" xlink:href="https://github.com/Vitens/phreeqpython">https://github.com/Vitens/phreeqpython</ext-link>),
  and <monospace>pyeqion2</monospace>
  (<xref alt="Marcellos et al., 2021" rid="ref-marcellos2021pyequion" ref-type="bibr">Marcellos
  et al., 2021</xref>). However, these interfaces are either not
  object-oriented, poorly documented, and/or only offer access to only a
  limited subset of the <monospace>PHREEQC</monospace> parameter
  databases. There are more subtle limitations as well. For example,
  <monospace>phreeqpython</monospace> is unable to calculate solution
  conductivity when used in conjunction with the
  <monospace>PHREEQC</monospace> <monospace>pitzer.dat</monospace>
  database (the most accurate for high salinity solutions). A researcher
  seeking quality data on common bulk properties such as density or
  viscosity or solute-specific properties such as diffusion coefficient,
  transport number, or activity coefficient is thus left to piece
  together outputs from disparate models and literature – a
  time-consuming and error-prone process.</p>
  <p><monospace>pyEQL</monospace> is designed to free researchers from
  the tedium of identifying and implementing the relevant models and
  compiling the required parameters from literature. It defines a python
  <monospace>Solution</monospace> class from which properties can be
  easily retrieved. It implements the Pitzer model
  (<xref alt="May et al., 2011" rid="ref-May2011b" ref-type="bibr">May
  et al., 2011</xref>) for binary salts, with mixing rules
  (<xref alt="Mistry et al., 2013" rid="ref-Mistry2013" ref-type="bibr">Mistry
  et al., 2013</xref>) for more complex solutions, and decays gracefully
  to more approximate models like the Debye-Huckel activity model
  (<xref alt="Stumm &amp; Morgan, 1999" rid="ref-Stumm1993" ref-type="bibr">Stumm
  &amp; Morgan, 1999</xref>) when adequate data is not available. The
  built-in property database includes Pitzer model parameters
  (<xref alt="May et al., 2011" rid="ref-May2011b" ref-type="bibr">May
  et al., 2011</xref>) for more than 100 salts, diffusion coefficients
  (<xref alt="Vanýsek, 2011" rid="ref-CRCdiffusion" ref-type="bibr">Vanýsek,
  2011</xref>) for more than 100 solutes, and an ever-expanding set of
  additional property data that make the best-available models
  transparently accessible to the end user.</p>
  <fig>
    <caption><p>Overview of <monospace>pyEQL</monospace>’s architecture.
    Properties such as ionic strength, conductivity, and concentrations
    are calculated directly by <monospace>pyEQL</monospace>. Modeling
    engines are used to calculate non-ideal effects such as activity
    coefficients, while property database stores necessary parameters.
    The modular design of the modeling engines and property database
    facilitate
    customization.<styled-content id="figU003Aexample"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/pyEQL_overview.png" />
  </fig>
</sec>
<sec id="example-use-cases">
  <title>Example Use Cases</title>
  <p><monospace>pyEQL</monospace> may be useful to scientists and
  engineers in various fields broadly related to aqueous solution
  chemistry. Specific use cases include, but are not limited to:</p>
  <list list-type="bullet">
    <list-item>
      <p>Calculating the osmotic pressure of concentrated salt
      solutions</p>
    </list-item>
    <list-item>
      <p>Estimating the speciation of complex electrolyte solutions at
      different pH values</p>
    </list-item>
    <list-item>
      <p>Calculating the transport number of a specific ion</p>
    </list-item>
    <list-item>
      <p>Computing bulk solution characteristics such as ionic strength,
      alkalinity, or total dissolved solids, given the composition of
      solutes</p>
    </list-item>
    <list-item>
      <p>Converting concentrations between different unit systems,
      e.g. moles per L, weight %, parts per million</p>
    </list-item>
    <list-item>
      <p>Looking up properties of individual ionic species, including
      molecular weight, diffusion coefficient, ionic, hydrated, and van
      der Waals radii, etc.</p>
    </list-item>
  </list>
</sec>
<sec id="design-principles">
  <title>Design Principles</title>
  <sec id="return-the-best-answer-possible">
    <title>Return the best answer possible</title>
    <p>Recognizing that accurate modeling of complex electrolyte
    solutions can be difficult or even impossible,
    <monospace>pyEQL</monospace> is designed to return <bold>the best
    answer possible</bold> given the data and models available. For
    example, to calculate the osmotic pressure of a solution, the
    built-in modeling engine first attempts to use the Pitzer model, but
    if parameters are not available, it reverts to a more approximate
    formula rather than raising an error. To maintain transparency, log
    messages (and where appropriate, warnings) are generated throughout
    the codebase to document when assumptions or approximations have to
    be invoked or when important model parameters are missing from the
    database.</p>
  </sec>
  <sec id="interoperate-with-other-scientific-codes">
    <title>Interoperate with other scientific codes</title>
    <p><monospace>pyEQL</monospace> is built to be extensible,
    customizable, and easy to use in conjunction with widely-used
    scientific <monospace>python</monospace> libraries. Specifically, it
    makes use of <monospace>pint</monospace>
    (<ext-link ext-link-type="uri" xlink:href="https://github.com/hgrecco/pint">https://github.com/hgrecco/pint</ext-link>)
    to provide automatic unit conversions and leverages codes in the
    Materials Project
    (<xref alt="Jain et al., 2013" rid="ref-Jain2013" ref-type="bibr">Jain
    et al., 2013</xref>) ecosystem – namely,
    <monospace>pymatgen</monospace>
    (<xref alt="Ong et al., 2013" rid="ref-Ong2013" ref-type="bibr">Ong
    et al., 2013</xref>) for chemical informatics (e.g., molecular
    weight, parsing chemical formulae) and <monospace>maggma</monospace>
    (<ext-link ext-link-type="uri" xlink:href="https://github.com/materialsproject/maggma">https://github.com/materialsproject/maggma</ext-link>)
    for accessing the built-in property database.</p>
  </sec>
</sec>
<sec id="architecture">
  <title>Architecture</title>
  <sec id="the-solution-class">
    <title>The <monospace>Solution</monospace> class</title>
    <p>The primary user-facing object in <monospace>pyEQL</monospace> is
    the <monospace>Solution</monospace> class. This class contains
    constitutive relationships for calculating most solution properties
    that depend on composition, such as total dissolved solids, ionic
    strength, density, conductivity, and many others
    (<xref alt="[fig:example]" rid="figU003Aexample">[fig:example]</xref>).
    Calculations that require information about non-idealities (e.g.,
    activity coefficients) are handled by a “modeling engine” that is
    stored in <monospace>Solution</monospace> as an attribute.</p>
  </sec>
  <sec id="modeling-engines">
    <title>Modeling Engines</title>
    <p>Every <monospace>Solution</monospace> contains a “modeling
    engine” which inherits from a base class defined in
    <monospace>pyEQL</monospace>. Modeling engines provide methods for
    calculating non-ideal thermodynamic corrections including solute
    activity coefficients and molar volumes as well as performing
    speciation. The results of these calculations are passed back to
    <monospace>Solution</monospace> where they can be transparently
    accessed by the user alongside other properties. This modular design
    facilitates connecting the <monospace>Solution</monospace> API to
    multiple modeling backends or software packages. Currently, the
    available modeling engines include an ideal solution approximation,
    a built-in implementation of the Pitzer model, and the
    <monospace>PHREEQC</monospace> modeling engine.</p>
  </sec>
  <sec id="the-property-database-and-solute-class">
    <title>The Property Database and <monospace>Solute</monospace>
    class</title>
    <p><monospace>pyEQL</monospace> also provides
    <monospace>Solute</monospace>, a <monospace>dataclass</monospace>
    that defines a structured schema for solute property data. The
    database distributed with <monospace>pyEQL</monospace> is a list of
    serialized <monospace>Solute</monospace> objects stored in a
    <monospace>.json</monospace> file, which is accessed via the
    <monospace>maggma</monospace> <monospace>Store</monospace> API. The
    database used by a particular <monospace>Solution</monospace>
    instance can be specified by keyword argument when the object is
    created, which makes it possible in principle to use customized
    databases. Furthermore, using the <monospace>Store</monospace> API
    means that such databases can be stored in any format supported by
    <monospace>maggma</monospace> (e.g., Mongo Database, .json file,
    etc.).</p>
  </sec>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The author gratefully acknowledges the Persson Research Group at
  the University of California, Berkeley, particularly Shyam Dwaraknath,
  Matthew K. Horton, Donny Winston, Jason Munro, and Orion Cohen, for
  their guidance in scientific software development practices. I also
  acknowledge Hernan Grecco for helpful discussions regarding unit
  conversion and Kirill Pushkarev, Dhruv Duseja and Andrew Rosen for
  recent contributions. The author acknowledges partial financial
  support from Princeton University, Membrion, Inc., and Bluecell
  Energy, LLC over the period 2013-2023.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-Parkhurst2013">
    <element-citation publication-type="report">
      <person-group person-group-type="author">
        <name><surname>Parkhurst</surname><given-names>David L.</given-names></name>
        <name><surname>Appelo</surname><given-names>C. A. J.</given-names></name>
      </person-group>
      <article-title>Description of input and examples for PHREEQC version 3: A computer program for speciation, batch-reaction, one-dimensional transport, and inverse geochemical calculations</article-title>
      <publisher-name>US Geological Survey</publisher-name>
      <year iso-8601-date="2013">2013</year>
      <issn>2328-7055</issn>
      <uri>http://dx.doi.org/10.3133/tm6A43</uri>
      <pub-id pub-id-type="doi">10.3133/tm6a43</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-rowland_ProgressAqueousSolution_2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Rowland</surname><given-names>Darren</given-names></name>
        <name><surname>May</surname><given-names>Peter M.</given-names></name>
      </person-group>
      <article-title>Progress in Aqueous Solution Modelling: Better Data and Better Interfaces</article-title>
      <source>Journal of Solution Chemistry</source>
      <year iso-8601-date="2019-07">2019</year><month>07</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2023-07-07">2023</year><month>07</month><day>07</day></date-in-citation>
      <volume>48</volume>
      <issue>7</issue>
      <issn>0095-9782</issn>
      <uri>http://link.springer.com/10.1007/s10953-019-00871-5</uri>
      <pub-id pub-id-type="doi">10.1007/s10953-019-00871-5</pub-id>
      <fpage>1066</fpage>
      <lpage>1078</lpage>
    </element-citation>
  </ref>
  <ref id="ref-CRCdiffusion">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Vanýsek</surname><given-names>Petr</given-names></name>
      </person-group>
      <article-title>Ionic Conductivity and Diffusion at Infinite Dilution</article-title>
      <source>CRC Handbook of Chemistry and Physics</source>
      <person-group person-group-type="editor">
        <name><surname>Hamner</surname><given-names>W M</given-names></name>
      </person-group>
      <year iso-8601-date="2011">2011</year>
    </element-citation>
  </ref>
  <ref id="ref-Mistry2013">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Mistry</surname><given-names>Karan H.</given-names></name>
        <name><surname>Hunter</surname><given-names>Harrison A.</given-names></name>
        <name><surname>Lienhard V</surname><given-names>John H.</given-names></name>
      </person-group>
      <article-title>Effect of composition and nonideal solution behavior on desalination calculations for mixed electrolyte solutions with comparison to seawater</article-title>
      <source>Desalination</source>
      <publisher-name>Elsevier B.V.</publisher-name>
      <year iso-8601-date="2013-06">2013</year><month>06</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2014-05-03">2014</year><month>05</month><day>03</day></date-in-citation>
      <volume>318</volume>
      <uri>http://linkinghub.elsevier.com/retrieve/pii/S0011916413001409</uri>
      <pub-id pub-id-type="doi">10.1016/j.desal.2013.03.015</pub-id>
      <fpage>34</fpage>
      <lpage>47</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Charlton2011">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Charlton</surname><given-names>Scott R.</given-names></name>
        <name><surname>Parkhurst</surname><given-names>David L.</given-names></name>
      </person-group>
      <article-title>Modules based on the geochemical model PHREEQC for use in scripting and programming languages</article-title>
      <source>Computers &amp; Geosciences</source>
      <publisher-name>Elsevier BV</publisher-name>
      <year iso-8601-date="2011-10">2011</year><month>10</month>
      <volume>37</volume>
      <issue>10</issue>
      <uri>https://doi.org/10.1016/j.cageo.2011.02.005</uri>
      <pub-id pub-id-type="doi">10.1016/j.cageo.2011.02.005</pub-id>
      <fpage>1653</fpage>
      <lpage>1663</lpage>
    </element-citation>
  </ref>
  <ref id="ref-marcellos2021pyequion">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Marcellos</surname><given-names>Caio Felippe Curitiba</given-names></name>
        <name><surname>Silva Junior</surname><given-names>Gerson Francisco da</given-names></name>
        <name><surname>Amaral Soares</surname><given-names>Elvis do</given-names></name>
        <name><surname>Ramos</surname><given-names>Fabio</given-names></name>
        <name><surname>au2</surname><given-names>Amaro G. Barreto Jr</given-names></name>
      </person-group>
      <article-title>PyEquIon: A python package for automatic speciation calculations of aqueous electrolyte solutions</article-title>
      <year iso-8601-date="2021">2021</year>
      <uri>https://arxiv.org/abs/2101.07246</uri>
      <pub-id pub-id-type="doi">10.48550/arXiv.2101.07246</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-gwb">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Aqueous Solutions</surname><given-names>LLC</given-names></name>
      </person-group>
      <article-title>The geochemist’s workbench, release 17</article-title>
      <year iso-8601-date="2023">2023</year>
      <uri>https://www.gwb.com/documentation.php</uri>
    </element-citation>
  </ref>
  <ref id="ref-oli">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wang</surname><given-names>Peiming</given-names></name>
        <name><surname>Anderko</surname><given-names>Andrzej</given-names></name>
        <name><surname>Young</surname><given-names>Robert D.</given-names></name>
      </person-group>
      <article-title>A speciation-based model for mixed-solvent electrolyte systems</article-title>
      <source>Fluid Phase Equilibria</source>
      <publisher-name>Elsevier BV</publisher-name>
      <year iso-8601-date="2002-12">2002</year><month>12</month>
      <volume>203</volume>
      <issue>1-2</issue>
      <uri>https://doi.org/10.1016/s0378-3812(02)00178-4</uri>
      <pub-id pub-id-type="doi">10.1016/s0378-3812(02)00178-4</pub-id>
      <fpage>141</fpage>
      <lpage>176</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Ong2013">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ong</surname><given-names>Shyue Ping</given-names></name>
        <name><surname>Richards</surname><given-names>William Davidson</given-names></name>
        <name><surname>Jain</surname><given-names>Anubhav</given-names></name>
        <name><surname>Hautier</surname><given-names>Geoffroy</given-names></name>
        <name><surname>Kocher</surname><given-names>Michael</given-names></name>
        <name><surname>Cholia</surname><given-names>Shreyas</given-names></name>
        <name><surname>Gunter</surname><given-names>Dan</given-names></name>
        <name><surname>Chevrier</surname><given-names>Vincent L.</given-names></name>
        <name><surname>Persson</surname><given-names>Kristin A.</given-names></name>
        <name><surname>Ceder</surname><given-names>Gerbrand</given-names></name>
      </person-group>
      <article-title>Python materials genomics (pymatgen): A robust, open-source python library for materials analysis</article-title>
      <source>Computational Materials Science</source>
      <publisher-name>Elsevier BV</publisher-name>
      <year iso-8601-date="2013-02">2013</year><month>02</month>
      <volume>68</volume>
      <uri>https://doi.org/10.1016/j.commatsci.2012.10.028</uri>
      <pub-id pub-id-type="doi">10.1016/j.commatsci.2012.10.028</pub-id>
      <fpage>314</fpage>
      <lpage>319</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Jain2013">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Jain</surname><given-names>Anubhav</given-names></name>
        <name><surname>Ong</surname><given-names>Shyue Ping</given-names></name>
        <name><surname>Hautier</surname><given-names>Geoffroy</given-names></name>
        <name><surname>Chen</surname><given-names>Wei</given-names></name>
        <name><surname>Richards</surname><given-names>William Davidson</given-names></name>
        <name><surname>Dacek</surname><given-names>Stephen</given-names></name>
        <name><surname>Cholia</surname><given-names>Shreyas</given-names></name>
        <name><surname>Gunter</surname><given-names>Dan</given-names></name>
        <name><surname>Skinner</surname><given-names>David</given-names></name>
        <name><surname>Ceder</surname><given-names>Gerbrand</given-names></name>
        <name><surname>Persson</surname><given-names>Kristin A.</given-names></name>
      </person-group>
      <article-title>Commentary: The materials project: A materials genome approach to accelerating materials innovation</article-title>
      <source>APL Materials</source>
      <publisher-name>AIP Publishing</publisher-name>
      <year iso-8601-date="2013-07">2013</year><month>07</month>
      <volume>1</volume>
      <issue>1</issue>
      <uri>https://doi.org/10.1063/1.4812323</uri>
      <pub-id pub-id-type="doi">10.1063/1.4812323</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-May2011b">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>May</surname><given-names>Peter M.</given-names></name>
        <name><surname>Rowland</surname><given-names>Darren</given-names></name>
        <name><surname>Hefter</surname><given-names>Glenn</given-names></name>
        <name><surname>Königsberger</surname><given-names>Erich</given-names></name>
      </person-group>
      <article-title>A Generic and Updatable Pitzer Characterization of Aqueous Binary Electrolyte Solutions at 1 bar and 25 °C</article-title>
      <source>Journal of Chemical and Engineering Data</source>
      <year iso-8601-date="2011-12-08">2011</year><month>12</month><day>08</day>
      <volume>56</volume>
      <issue>12</issue>
      <uri>http://pubs.acs.org/doi/abs/10.1021/je2009329</uri>
      <pub-id pub-id-type="doi">10.1021/je2009329</pub-id>
      <fpage>5066</fpage>
      <lpage>5077</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Stumm1993">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Stumm</surname><given-names>Werner (Ed.)</given-names></name>
        <name><surname>Morgan</surname><given-names>James J (ed.)</given-names></name>
      </person-group>
      <source>Aquatic Chemistry: Chemical Equilibria and Rates in Natural Waters</source>
      <person-group person-group-type="editor">
        <name><surname>Schnoor</surname><given-names>Jerald L.</given-names></name>
        <name><surname>Zehnder</surname><given-names>Alexander</given-names></name>
      </person-group>
      <publisher-name>Wiley Interscience</publisher-name>
      <publisher-loc>New York</publisher-loc>
      <year iso-8601-date="1999">1999</year>
      <isbn>0-471-51184-6</isbn>
      <pub-id pub-id-type="doi">10.1016/S0016-7037(97)81133-7</pub-id>
      <pub-id pub-id-type="pmid">2071424</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
