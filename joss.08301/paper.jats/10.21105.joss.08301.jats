<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">8301</article-id>
<article-id pub-id-type="doi">10.21105/joss.08301</article-id>
<title-group>
<article-title>HySetter: A Python Package for Reproducible Hydroclimate
Data Subsetting over CONUS</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-5430-6000</contrib-id>
<name>
<surname>Chegini</surname>
<given-names>Taher</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Lyles School of Civil Engineering, Purdue University, West
Lafayette, IN, US</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2025-03-31">
<day>31</day>
<month>3</month>
<year>2025</year>
</pub-date>
<volume>10</volume>
<issue>111</issue>
<fpage>8301</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>hydrology</kwd>
<kwd>climate</kwd>
<kwd>data</kwd>
<kwd>subsetting</kwd>
<kwd>CONUS</kwd>
<kwd>reproducibility</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Hydrological modeling requires integrating diverse hydroclimate
  datasets, which often creates a significant technical burden for
  researchers. HySetter addresses this challenge by providing a
  command-line interface for automated subsetting of hydroclimate data
  across the conterminous United States (CONUS). Built upon the HyRiver
  software stack, HySetter streamlines data acquisition through a
  unified configuration file that eliminates writing complex scripts for
  different data sources. By centralizing the workflow, HySetter enables
  researchers to focus on scientific questions rather than data
  preparation, while enhancing the reproducibility of hydrological
  research.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>Hydrological research demands integration of diverse datasets
  spanning multiple scales. The acquisition and processing of these
  datasets presents several challenges: (1) Traditional approaches
  require complex scripts for different data sources, leading to
  fragmented workflows; (2) Researchers often spend more time on data
  collection than scientific analysis; (3) Technical overhead impacts
  novice researchers with limited programming skills; (4) Experienced
  researchers develop redundant code for data acquisition across
  projects.</p>
  <p>These challenges undermine the adoption of FAIR principles
  (<xref alt="Wilkinson et al., 2016" rid="ref-wilkinson2016fair" ref-type="bibr">Wilkinson
  et al., 2016</xref>) in hydrological research. While tools like
  HydroMT
  (<xref alt="Eilander et al., 2023" rid="ref-eilander2023hydromt" ref-type="bibr">Eilander
  et al., 2023</xref>) address similar challenges for model building, a
  comparable solution for hydroclimate data acquisition for CONUS is
  lacking.</p>
  <p>HySetter fills this gap by providing a user-friendly framework
  requiring minimal technical expertise while supporting advanced
  applications. Through a YAML configuration file and command-line
  interface, HySetter democratizes access to hydroclimate data for
  researchers of varying technical backgrounds.</p>
</sec>
<sec id="functionality">
  <title>Functionality</title>
  <p>HySetter employs a streamlined workflow in four steps: (1) The user
  defines the area of interest in a YAML configuration file using HUCs,
  GAGES-II basins, NHDPlusV2 catchments, or user-defined geometries; (2)
  The user specifies desired datasets and parameters in the same file;
  (3) HySetter processes this configuration to access data through
  HyRiver; (4) Data is standardized and saved in analysis-ready
  formats.</p>
  <p>This approach accommodates different technical backgrounds: novice
  users can create simple configuration files without coding, while
  experienced users can programmatically generate configurations for
  complex analyses.</p>
  <p>Figure
  <xref alt="[fig:config-example]" rid="figU003Aconfig-example">[fig:config-example]</xref>
  shows a typical configuration file, and Figure
  <xref alt="[fig:config-demo]" rid="figU003Aconfig-demo">[fig:config-demo]</xref>
  demonstrates HySetter’s command-line interface with progress
  indicators.</p>
  <fig>
    <caption><p>Example YAML configuration file for HySetter specifying
    project parameters, area of interest, and data
    sources.<styled-content id="figU003Aconfig-example"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="config.png" />
  </fig>
  <fig>
    <caption><p>HySetter command-line interface showing real-time
    progress during data acquisition
    processes.<styled-content id="figU003Aconfig-demo"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="cli.png" />
  </fig>
  <p>HySetter currently supports subsetting from the following data
  sources:</p>
  <list list-type="bullet">
    <list-item>
      <p><bold>Area of Interest</bold>: HUC watersheds, GAGES-II basins,
      NHDPlusV2 catchments and their attributes (StreamCat and NLDI), or
      user-defined geometries</p>
    </list-item>
    <list-item>
      <p><bold>Drainage Network</bold>: NHDPlusV2</p>
    </list-item>
    <list-item>
      <p><bold>Climate Forcing</bold>: Daymet, GridMET, NLDAS2</p>
    </list-item>
    <list-item>
      <p><bold>Streamflow</bold>: National Water Information System
      (NWIS)</p>
    </list-item>
    <list-item>
      <p><bold>Soil</bold>: gNATSGO, SoilGrids</p>
    </list-item>
    <list-item>
      <p><bold>Topography</bold>: 3D Elevation Program (3DEP)</p>
    </list-item>
    <list-item>
      <p><bold>Dams</bold>: National Inventory of Dams (NID)</p>
    </list-item>
    <list-item>
      <p><bold>Land Use/Land Cover</bold>: Multi-Resolution Land
      Characteristics (MRLC) products including land cover, canopy,
      imperviousness, and urban descriptors</p>
    </list-item>
  </list>
  <fig>
    <caption><p>HySetter workflow showing data flow from remote dataset
    repositories and web services through HyRiver to create
    area-specific datasets for hydrological
    modeling.<styled-content id="figU003Aflowchart"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="flowchart.png" />
  </fig>
</sec>
<sec id="implementation">
  <title>Implementation</title>
  <p>HySetter’s workflow is illustrated in
  <xref alt="[fig:flowchart]" rid="figU003Aflowchart">[fig:flowchart]</xref>,
  showing data flow from various sources through HyRiver to create
  subsets for specific areas. HySetter builds upon the HyRiver stack
  (<xref alt="Chegini et al., 2021" rid="ref-chegini2021hyriver" ref-type="bibr">Chegini
  et al., 2021</xref>), which provides access to numerous hydroclimate
  web services. While HyRiver requires Python programming knowledge,
  HySetter adds an abstraction layer that translates user-friendly
  configuration files into appropriate function calls.</p>
  <p>The implementation follows modular design with three components:
  (1) <bold>Configuration Parser</bold> processes YAML files to extract
  user requirements; (2) <bold>Data Acquisition Engine</bold> interfaces
  with HyRiver to retrieve data; (3) <bold>Output Manager</bold>
  standardizes and exports processed data for analysis.</p>
  <p>HySetter provides detailed feedback through progress bars and
  messages during data acquisition, helping users track operations and
  diagnose issues. The software includes extensive error handling to
  manage challenges in accessing remote services.</p>
  <p>Advanced users can utilize HySetter as a Python library with a
  user-friendly API for further post-processing operations and
  integration with other libraries.</p>
</sec>
<sec id="research-applications">
  <title>Research Applications</title>
  <p>HySetter has demonstrated utility in: (1) <bold>Hydrological
  Modeling</bold>: Implementation and calibration of models across
  watersheds, leveraging consistent input datasets for parameterization;
  (2) <bold>Large-Scale Studies</bold>: Analysis of regional patterns
  requiring consistent data inputs across numerous basins; (3)
  <bold>Educational Contexts</bold>: Supporting classroom exercises
  where students focus on hydrological processes rather than data
  acquisition techniques.</p>
  <p>The standardized, reproducible nature of HySetter workflows ensures
  research outputs can be easily validated and extended, promoting
  transparency and collaboration. By abstracting data retrieval
  complexities, HySetter enables researchers to focus on answering
  critical hydrological questions rather than data preparation.</p>
</sec>
<sec id="comparison-with-existing-tools">
  <title>Comparison with Existing Tools</title>
  <p>Tools like HydroMT
  (<xref alt="Eilander et al., 2023" rid="ref-eilander2023hydromt" ref-type="bibr">Eilander
  et al., 2023</xref>) provide frameworks for model building and
  analysis, while SWAT+AW
  (<xref alt="Chawanda et al., 2020" rid="ref-chawanda2020user" ref-type="bibr">Chawanda
  et al., 2020</xref>) offers automated workflows for the SWAT model.
  However, these tools primarily target model building rather than
  standardized data acquisition.</p>
  <p>HySetter differentiates itself by focusing specifically on the data
  acquisition stage, offering a streamlined solution for accessing
  hydroclimate data across CONUS. HySetter is tailored to datasets
  commonly used in hydrological studies over CONUS, providing optimized
  workflows. Its YAML-based configuration approach requires minimal
  technical expertise, making it accessible to users with limited
  programming experience.</p>
</sec>
<sec id="conclusions-and-future-work">
  <title>Conclusions and Future Work</title>
  <p>HySetter addresses a critical gap in hydrological modeling by
  providing a reproducible framework for hydroclimate data acquisition
  across CONUS. By simplifying access to diverse data sources through a
  unified configuration approach, it enables researchers to focus on
  scientific questions rather than technical challenges.</p>
  <p>Future development plans include: (1) Support for additional data
  sources based on community needs; (2) Enhanced tools for large-scale
  studies requiring data acquisition over extensive areas; (3)
  Additional documentation examples demonstrating HySetter’s application
  in diverse hydrological contexts.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This work was supported by the Consortium of Universities for the
  Advancement of Hydrologic Science, Inc. (CUAHSI) through the
  Hydroinformatics Innovation Fellowship program.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-chegini2021hyriver">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Chegini</surname><given-names>Taher</given-names></name>
        <name><surname>Li</surname><given-names>Hong-Yi</given-names></name>
        <name><surname>Leung</surname><given-names>L. Ruby</given-names></name>
      </person-group>
      <article-title>HyRiver: Hydroclimate Data Retriever</article-title>
      <source>Journal of Open Source Software</source>
      <year iso-8601-date="2021-10">2021</year><month>10</month>
      <volume>6</volume>
      <issue>66</issue>
      <pub-id pub-id-type="doi">10.21105/joss.03175</pub-id>
      <fpage>1</fpage>
      <lpage>3</lpage>
    </element-citation>
  </ref>
  <ref id="ref-eilander2023hydromt">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Eilander</surname><given-names>Dirk</given-names></name>
        <name><surname>Boisgontier</surname><given-names>Hélène</given-names></name>
        <name><surname>Bouaziz</surname><given-names>Laurène J. e.</given-names></name>
        <name><surname>Buitink</surname><given-names>Joost</given-names></name>
        <name><surname>Couasnon</surname><given-names>Anaïs</given-names></name>
        <name><surname>Dalmijn</surname><given-names>Brendan</given-names></name>
        <name><surname>Hegnauer</surname><given-names>Mark</given-names></name>
        <name><surname>Jong</surname><given-names>Tjalling de</given-names></name>
        <name><surname>Loos</surname><given-names>Sibren</given-names></name>
        <name><surname>Marth</surname><given-names>Indra</given-names></name>
        <name><surname>Verseveld</surname><given-names>Willem van</given-names></name>
      </person-group>
      <article-title>HydroMT: Automated and reproducible model building and analysis</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <volume>8</volume>
      <issue>83</issue>
      <uri>https://doi.org/10.21105/joss.04897</uri>
      <pub-id pub-id-type="doi">10.21105/joss.04897</pub-id>
      <fpage>4897</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-chawanda2020user">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Chawanda</surname><given-names>Celray James</given-names></name>
        <name><surname>George</surname><given-names>Chris</given-names></name>
        <name><surname>Thiery</surname><given-names>Wim</given-names></name>
        <name><surname>Griensven</surname><given-names>Ann van</given-names></name>
        <name><surname>Tech</surname><given-names>Jaclyn</given-names></name>
        <name><surname>Arnold</surname><given-names>Jeffrey</given-names></name>
        <name><surname>Srinivasan</surname><given-names>Raghavan</given-names></name>
      </person-group>
      <article-title>User-friendly workflows for catchment modelling: Towards reproducible SWAT+ model studies</article-title>
      <source>Environmental Modelling &amp; Software</source>
      <publisher-name>Elsevier BV</publisher-name>
      <year iso-8601-date="2020-12">2020</year><month>12</month>
      <volume>134</volume>
      <issn>1364-8152</issn>
      <uri>http://dx.doi.org/10.1016/j.envsoft.2020.104812</uri>
      <pub-id pub-id-type="doi">10.1016/j.envsoft.2020.104812</pub-id>
      <fpage>104812</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-wilkinson2016fair">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wilkinson</surname><given-names>Mark D</given-names></name>
        <name><surname>Dumontier</surname><given-names>Michel</given-names></name>
        <name><surname>Aalbersberg</surname><given-names>IJsbrand Jan</given-names></name>
        <name><surname>Appleton</surname><given-names>Gabrielle</given-names></name>
        <name><surname>Axton</surname><given-names>Myles</given-names></name>
        <name><surname>Baak</surname><given-names>Arie</given-names></name>
        <name><surname>Blomberg</surname><given-names>Niklas</given-names></name>
        <name><surname>Boiten</surname><given-names>Jan-Willem</given-names></name>
        <name><surname>Silva Santos</surname><given-names>Luiz Bonino da</given-names></name>
        <name><surname>Bourne</surname><given-names>Philip E</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>The FAIR guiding principles for scientific data management and stewardship</article-title>
      <source>Scientific data</source>
      <publisher-name>Nature Publishing Group</publisher-name>
      <year iso-8601-date="2016">2016</year>
      <volume>3</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1038/sdata.2016.18</pub-id>
      <fpage>1</fpage>
      <lpage>9</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
