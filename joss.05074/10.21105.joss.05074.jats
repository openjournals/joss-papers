<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">5074</article-id>
<article-id pub-id-type="doi">10.21105/joss.05074</article-id>
<title-group>
<article-title>pycoxmunk: A python package for computing sea surface
reflectance</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-3880-6774</contrib-id>
<name>
<surname>Proud</surname>
<given-names>Simon R.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>National Centre for Earth Observation, RAL Space, STFC
Rutherford Appleton Laboratory, Harwell, OX11</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2022-10-27">
<day>27</day>
<month>10</month>
<year>2022</year>
</pub-date>
<volume>8</volume>
<issue>86</issue>
<fpage>5074</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>remote sensing</kwd>
<kwd>earth observation</kwd>
<kwd>oceanography</kwd>
<kwd>satellite</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Knowledge of how the sea surface reflects incoming sunlight is of
  key importance within satellite remote sensing of the Earth. For
  example, estimating the amount of dust or pollution in the atmosphere
  requires precise knowledge of the surface reflectance in order to be
  accurate. This paper introduces <italic>pycoxmunk</italic>, a python
  library that computes both the sea surface reflectance and the
  so-called Bidirectional Reflectance Distribution Function (BRDF)
  across the visible and near-infrared spectrum. Pycoxmunk is designed
  to work with data from many of the most commonly used satellite
  sensors and provides output that can be used within retrieval
  algorithms or as a standalone product in its own right.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The amount of sunlight reflected by a water surface depends upon
  factors such as the wavelength of light being examined, the wind speed
  - which affects wave height and the presence of <italic>white
  caps</italic> atop the waves - and the presence of pigments such as
  chlorophyll. Satellite sensors typically look down from space towards
  the water surface and hence have a good view of surface reflectance if
  we assume clear sky conditions. However, the presence of clouds or
  aerosols (smoke, dust, etc) can affect the measured <italic>top of
  atmosphere</italic> reflectance. There exist a multitude of algorithms
  to detect and analyse these cloud and aerosol features, and they
  typically require accurate information on the surface reflectance in
  order to retrieve the atmospheric properties.</p>
  <p>Therefore, a tool to calculate the expected sea surface reflectance
  for a given set of satellite measurements and weather conditions can
  provide a valuable input into such retrieval algorithms.</p>
</sec>
<sec id="state-of-the-field">
  <title>State of the field</title>
  <p>Previously, most retrieval algorithms have their own inbuilt method
  of computing this reflectance via a wide range of approaches and
  algorithms. A particularly well-used approach is that first described
  by Cox and Munk
  (<xref alt="Cox, 1954" rid="ref-coxU003A1954stats" ref-type="bibr">Cox,
  1954</xref>;
  <xref alt="Cox &amp; Munk, 1954" rid="ref-coxU003A1954meas" ref-type="bibr">Cox
  &amp; Munk, 1954</xref>), and expanded upon by subsequent research
  (<xref alt="Sayer et al., 2010" rid="ref-sayerU003A2010" ref-type="bibr">Sayer
  et al., 2010</xref>). For example, the ORAC algorithm that can
  retrieve both cloud and aerosol properties uses Cox-Munk at the core
  of its surface reflectance simulation
  (<xref alt="A. C. Povey, 2022" rid="ref-oracU003A2022" ref-type="bibr">A.
  C. Povey, 2022</xref>;
  <xref alt="Poulsen et al., 2012" rid="ref-poulsenU003A2012" ref-type="bibr">Poulsen
  et al., 2012</xref>). However, both ORAC and other projects have their
  implementations of Cox-Munk tightly bound with the rest of their
  codebase, meaning that users cannot easily run just the sea surface
  reflectance calculation. Many remaining tools, such as the
  commonly-used HydroLight algorithm that requires a purchased license
  to function, are therefore also of limited accessibility. An overview
  of some alternative models is given in
  (<xref alt="Zhang &amp; Wang, 2010" rid="ref-zhangU003A2010" ref-type="bibr">Zhang
  &amp; Wang, 2010</xref>), showing both the limited availability of
  suitable reflectance models and the good performance of the Cox-Munk
  technique.</p>
  <p>The library introduced here, <italic>pycoxmunk</italic>, implements
  the Cox-Munk method in a python library that is widely accessible
  without relying on custom code unique to a given retrieval system such
  as ORAC. This enables a more widely applicable version of Cox-Munk
  than has previously been available. In writing this library, ORAC’s
  fortran implementation of Cox-Munk was used as a reference to ensure
  <italic>pycoxmunk</italic> produced correct output.</p>
</sec>
<sec id="algorithm-details">
  <title>Algorithm details</title>
  <p>The sea surface has an intrinsic reflectance that depends on how
  much light is absorbed on the surface and reflected deeper within the
  water. This primarily depends on the chlorophyll content. At present,
  <italic>pycoxmunk</italic> assumes a fixed fraction of clorophyll and
  hence a fixed intrinsic reflectance at a given wavelength that in calm
  conditions, depends on the viewing geometry:</p>
  <p><inline-formula><alternatives>
  <tex-math><![CDATA[\theta_s]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>θ</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:math></alternatives></inline-formula>:
  The angle between the sun and vertical such that an angle of 0°
  specifies that the sun is directly above the target and an angle of
  90° specifies that the sun is at the horizon.</p>
  <p><inline-formula><alternatives>
  <tex-math><![CDATA[\theta_v]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>θ</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:math></alternatives></inline-formula>:
  The angle between the satellite and vertical, defined as above.</p>
  <p><inline-formula><alternatives>
  <tex-math><![CDATA[\phi_s]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ϕ</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:math></alternatives></inline-formula>:
  The angle between the sun and North, defined such that 0° and 180°
  specify that the sun is directly North and directly South of the
  target respectively and likewise 90° and 270° specify the sun being
  due East and West respectively.</p>
  <p><inline-formula><alternatives>
  <tex-math><![CDATA[\phi_v]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ϕ</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:math></alternatives></inline-formula>:
  The angle between the satellite and North, defined as above.</p>
  <p>Where the sun and satellite geometry is favourably aligned, on
  opposing sides of the target, the sea acts like a mirror, known as
  specular reflection, and there is a large peak in sea surface
  reflectance in the <italic>sun glint</italic> region - as shown in Fig
  1b. In other geometrical conditions the reflectance is significantly
  lower.</p>
  <p>In windy conditions, the assumption of specular reflection breaks
  down due to wave activity that, for high wind speeds, generates white
  caps atop the waves that appear very bright.
  <italic>pycoxmunk</italic> accounts for white caps using a simple
  relation(<xref alt="Sayer et al., 2010" rid="ref-sayerU003A2010" ref-type="bibr">Sayer
  et al., 2010</xref>):</p>
  <p><inline-formula><alternatives>
  <tex-math><![CDATA[\rho_{wc} = R_{wc} \cdot 2.951e^{-6} \cdot v_{wind}^{3.52}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>ρ</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mi>c</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mi>c</mml:mi></mml:mrow></mml:msub><mml:mo>⋅</mml:mo><mml:mn>2.951</mml:mn><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:msup><mml:mo>⋅</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi></mml:mrow><mml:mn>3.52</mml:mn></mml:msubsup></mml:mrow></mml:math></alternatives></inline-formula></p>
  <p>Where <inline-formula><alternatives>
  <tex-math><![CDATA[R_{wc}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mi>c</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>
  is the predefined whitecap reflectance at a given wavelength and
  <inline-formula><alternatives>
  <tex-math><![CDATA[v_{wind}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>
  is the wind speed.</p>
</sec>
<sec id="usage-and-integration-with-other-libraries">
  <title>Usage and integration with other libraries</title>
  <p><italic>pycoxmunk</italic> is designed to work in tandem with the
  <italic>satpy</italic> library
  (<xref alt="Raspaud et al., 2018" rid="ref-raspaudU003A2018" ref-type="bibr">Raspaud
  et al., 2018</xref>) that reads, calibrates and provides geometry
  information for many satellite sensors across a wide range of use
  cases. Once a user has loaded satellite data with satpy they can then
  pass satpy’s main class, the <italic>Scene</italic>, to
  <italic>pycoxmunk</italic> along with optional arguments to define the
  user-required processing. <italic>pycoxmunk</italic> will then compute
  the sea surface reflectance and store the results as additional
  datasets within the <italic>Scene</italic>, which are directly
  accessible to the user. A key feature of satpy, which
  <italic>pycoxmunk</italic> builds upon, is the use of
  <italic>dask</italic> arrays
  (<xref alt="Rocklin, 2015" rid="ref-rocklinU003A2015" ref-type="bibr">Rocklin,
  2015</xref>) to facilitate processing of datasets larger than the
  user’s total system memory. Internally, all of
  <italic>pycoxmunk</italic>’s processing is done via dask. If computing
  the BRDF parameters, <italic>pycoxmunk</italic> will use the
  <italic>numba</italic> library
  (<xref alt="Lam et al., 2015" rid="ref-lam2015numba" ref-type="bibr">Lam
  et al., 2015</xref>) to speed up computation of the
  <italic>rho_0d</italic>, <italic>rho_0v</italic> and
  <italic>rho_dd</italic> terms.</p>
  <p>To use <italic>pycoxmunk</italic>, a user first needs to load their
  satellite data via satpy, then pass this to
  <italic>pycoxmunk</italic>’s main class, <italic>PyCoxMunk</italic>,
  along with a list of sensor channels to be processed. Optionally, the
  user can then supply wind information in the U and V directions,
  preferably at 10m height above the surface. These can be passed as
  either two floats (for constant wind across the satellite image) or as
  arrays of equal size to the satellite data for the case of per-pixel
  wind data. The user can also supply ‘masks’ that remove areas of no
  interest, such as land pixels and cloud filled portions of the image.
  Lastly, the user calls <monospace>retr_coxmunk_refl</monospace> to
  compute the final reflectances, which can then be used by accessing
  the <monospace>PyCoxMunk.scn</monospace>.</p>
</sec>
<sec id="figures">
  <title>Figures</title>
  <fig>
    <caption><p>(a) An image from Japan’s Himawari-8 satellite at 04:10
    UTC on 13th Sept 2016, Super Typhoon Meranti is visible in the
    upper-center. (b) The corresponding Cox-Munk surface reflectance for
    the 0.47, 0.51 and 0.64 micron channels, showing regions of sunglint
    and wind driven white
    caps.<styled-content id="fig1"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="jpeg" xlink:href="media/Fig1.jpg" />
  </fig>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>I acknowledge the contributions of the ORAC development team for
  their initial creation of the Cox-Munk code within ORAC. In particular
  Greg McGarragh for writing numerous versions of the Fortran code and
  Andy Sayer for the original Cox-Munk formulation. This work was funded
  by the Natural Environment Research Council (NERC) through the
  National Centre for Earth Observation award ref. NE/R016518/1 and by a
  NERC Innovation fellowship, award ref. NE/R013144/1.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-sayerU003A2010">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Sayer</surname><given-names>AM</given-names></name>
        <name><surname>Thomas</surname><given-names>GE</given-names></name>
        <name><surname>Grainger</surname><given-names>RG</given-names></name>
      </person-group>
      <article-title>A sea surface reflectance model for (A)ATSR, and application to aerosol retrievals</article-title>
      <source>Atmospheric Measurement Techniques</source>
      <publisher-name>Copernicus GmbH</publisher-name>
      <year iso-8601-date="2010">2010</year>
      <volume>3</volume>
      <issue>4</issue>
      <pub-id pub-id-type="doi">10.5194/amt-3-813-2010</pub-id>
      <fpage>813</fpage>
      <lpage>838</lpage>
    </element-citation>
  </ref>
  <ref id="ref-poulsenU003A2012">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Poulsen</surname><given-names>CA</given-names></name>
        <name><surname>Siddans</surname><given-names>R</given-names></name>
        <name><surname>Thomas</surname><given-names>GE</given-names></name>
        <name><surname>Sayer</surname><given-names>AM</given-names></name>
        <name><surname>Grainger</surname><given-names>RG</given-names></name>
        <name><surname>Campmany</surname><given-names>E</given-names></name>
        <name><surname>Dean</surname><given-names>SM</given-names></name>
        <name><surname>Arnold</surname><given-names>C</given-names></name>
        <name><surname>Watts</surname><given-names>PD</given-names></name>
      </person-group>
      <article-title>Cloud retrievals from satellite data using optimal estimation: Evaluation and application to ATSR</article-title>
      <source>Atmospheric Measurement Techniques</source>
      <publisher-name>Copernicus GmbH</publisher-name>
      <year iso-8601-date="2012">2012</year>
      <volume>5</volume>
      <issue>8</issue>
      <pub-id pub-id-type="doi">10.5194/amt-5-1889-2012</pub-id>
      <fpage>1889</fpage>
      <lpage>1910</lpage>
    </element-citation>
  </ref>
  <ref id="ref-oracU003A2022">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>A. C. Povey</surname><given-names>S. R. Proud</given-names><suffix>G. McGarragh</suffix></name>
      </person-group>
      <article-title>ORAC: Optimal retrieval of aerosol and cloud</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <uri>https://github.com/ORAC-CC/orac</uri>
    </element-citation>
  </ref>
  <ref id="ref-coxU003A1954stats">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Cox</surname><given-names>Charles</given-names></name>
      </person-group>
      <article-title>Statistics of the sea surface derived from sun glitter</article-title>
      <source>J. mar. Res.</source>
      <year iso-8601-date="1954">1954</year>
      <volume>13</volume>
      <fpage>198</fpage>
      <lpage>227</lpage>
    </element-citation>
  </ref>
  <ref id="ref-coxU003A1954meas">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Cox</surname><given-names>Charles</given-names></name>
        <name><surname>Munk</surname><given-names>Walter</given-names></name>
      </person-group>
      <article-title>Measurement of the roughness of the sea surface from photographs of the sun’s glitter</article-title>
      <source>Josa</source>
      <publisher-name>Optica Publishing Group</publisher-name>
      <year iso-8601-date="1954">1954</year>
      <volume>44</volume>
      <issue>11</issue>
      <pub-id pub-id-type="doi">10.1364/josa.44.000838</pub-id>
      <fpage>838</fpage>
      <lpage>850</lpage>
    </element-citation>
  </ref>
  <ref id="ref-raspaudU003A2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Raspaud</surname><given-names>Martin</given-names></name>
        <name><surname>Hoese</surname><given-names>David</given-names></name>
        <name><surname>Dybbroe</surname><given-names>Adam</given-names></name>
        <name><surname>Lahtinen</surname><given-names>Panu</given-names></name>
        <name><surname>Devasthale</surname><given-names>Abhay</given-names></name>
        <name><surname>Itkin</surname><given-names>Mikhail</given-names></name>
        <name><surname>Hamann</surname><given-names>Ulrich</given-names></name>
        <name><surname>Rasmussen</surname><given-names>Lars Ørum</given-names></name>
        <name><surname>Nielsen</surname><given-names>Esben Stigård</given-names></name>
        <name><surname>Leppelt</surname><given-names>Thomas</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Pytroll: An open-source, community-driven python framework to process earth observation satellite data</article-title>
      <source>Bulletin of the American Meteorological Society</source>
      <year iso-8601-date="2018">2018</year>
      <volume>99</volume>
      <issue>7</issue>
      <pub-id pub-id-type="doi">10.1175/bams-d-17-0277.1</pub-id>
      <fpage>1329</fpage>
      <lpage>1336</lpage>
    </element-citation>
  </ref>
  <ref id="ref-rocklinU003A2015">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Rocklin</surname><given-names>Matthew</given-names></name>
      </person-group>
      <article-title>Dask: Parallel computation with blocked algorithms and task scheduling</article-title>
      <source>Proceedings of the 14th python in science conference</source>
      <publisher-name>Citeseer</publisher-name>
      <year iso-8601-date="2015">2015</year>
      <pub-id pub-id-type="doi">10.25080/majora-7b98e3ed-013</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-zhangU003A2010">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Zhang</surname><given-names>Hao</given-names></name>
        <name><surname>Wang</surname><given-names>Menghua</given-names></name>
      </person-group>
      <article-title>Evaluation of sun glint models using MODIS measurements</article-title>
      <source>Journal of Quantitative Spectroscopy and Radiative Transfer</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2010">2010</year>
      <volume>111</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1016/j.jqsrt.2009.10.001</pub-id>
      <fpage>492</fpage>
      <lpage>506</lpage>
    </element-citation>
  </ref>
  <ref id="ref-lam2015numba">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Lam</surname><given-names>Siu Kwan</given-names></name>
        <name><surname>Pitrou</surname><given-names>Antoine</given-names></name>
        <name><surname>Seibert</surname><given-names>Stanley</given-names></name>
      </person-group>
      <article-title>Numba: A llvm-based python jit compiler</article-title>
      <source>Proceedings of the second workshop on the LLVM compiler infrastructure in HPC</source>
      <year iso-8601-date="2015">2015</year>
      <fpage>1</fpage>
      <lpage>6</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
