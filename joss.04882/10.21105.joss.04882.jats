<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">4882</article-id>
<article-id pub-id-type="doi">10.21105/joss.04882</article-id>
<title-group>
<article-title><monospace>GALAHAD 4.0</monospace>: an open source
library of Fortran packages with C and Matlab interfaces for continuous
optimization</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Fowkes</surname>
<given-names>Jaroslav M.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Gould</surname>
<given-names>Nicholas I. M.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Science and Technology Facilities Council, Rutherford
Appleton Laboratory, Harwell Campus, Didcot, Oxfordshire, OX11 0QX,
UK</institution>
</institution-wrap>
</aff>
</contrib-group>
<volume>8</volume>
<issue>87</issue>
<fpage>4882</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>C</kwd>
<kwd>Fortran</kwd>
<kwd>Matlab</kwd>
<kwd>optimization</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The ability to solve continuous optimization problems is one of the
  cornerstones of computational mathematics. Such problems occur
  throughout science, engineering, planning and economics, since nature
  (and mankind) loves to optimize (minimize or maximize). Most real-life
  models of physical phenomena are nonlinear, and when discretised for
  computer solution they usually involve a large number of minimization
  variables (parameters) and/or constraints. Thus it is valuable to be
  able to rely on software specifically designed for optimization, and
  particularly that is designed to solve large, nonlinear problems.</p>
  <p>Continuous optimization problems occur in a variety of formats.
  Problems may or may not involve constraints, least-squares fitting
  being a common but vital example of the latter. If there are
  constraints, they may simply be bounds on the values of the variables,
  or there may be linear or nonlinear relationships (both equations or
  inequalities) between sets of variables. In an ideal world, a global
  optimizer is sought, but often that is beyond current (and likely
  future) expectations particularly if there are a large number of
  variables involved; fortunately a local minimizer often suffices.
  There is also a natural hierarchy of problems, and the ability to
  solve one is useful if it occurs as a subproblem in a harder
  one—solving linear systems (sometimes approximately) is vital in
  linear or quadratic programming, quadratic programs are used within
  nonlinear programming methods, and local optimization is often a vital
  component of global optimization.</p>
  <p>Thus ideally a comprehensive optimization library should address
  the different needs of its users by providing software tuned to a
  variety of commonly-occurring subclasses of problems. This is the aim
  of
  <ext-link ext-link-type="uri" xlink:href="https://github.com/ralna/GALAHAD"><monospace>GALAHAD</monospace></ext-link>.
  <monospace>GALAHAD</monospace> provides packages for basic subproblem
  solvers (such as for linear systems, trust-region and regularization
  of quadratic and linear least-squares functions), linear and quadratic
  programming, unconstrained and bound-constrained optimization,
  nonlinear least-squares fitting, general nonlinear programming and
  both approximate univariate and multivariate global optimization,
  together with an array of attendant utilities packages (such as for
  polynomial fitting, hashing, presolves, and matrix approximation). It
  is also recognised that there are excellent external sources of
  relevant software, particular for solving linear systems, and
  <monospace>GALAHAD</monospace> provides uniform bridges to these if
  they are available.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The first release of the Fortran 90 <monospace>GALAHAD</monospace>
  library
  (<xref alt="Gould et al., 2003" rid="ref-GoulOrbaToin03" ref-type="bibr">Gould
  et al., 2003</xref>) aimed to expand the functionality of the earlier
  Fortran 77 <monospace>LANCELOT</monospace> package
  (<xref alt="Conn et al., 1992" rid="ref-ConnGoulToin92" ref-type="bibr">Conn
  et al., 1992</xref>) for nonlinear optimization. Subsequent releases
  focused on increasing the scope of solvers provided, but aside from
  limited interfaces to Matlab and to the
  <ext-link ext-link-type="uri" xlink:href="https://github.com/ralna/CUTEst"><monospace>CUTEst</monospace></ext-link>
  modeling library
  (<xref alt="Gould et al., 2015" rid="ref-GoulOrbaToin15" ref-type="bibr">Gould
  et al., 2015</xref>), little effort was made to bridge the gap between
  Fortran and other, often more recent and popular, programming
  languages. <monospace>GALAHAD 4.0</monospace> addresses this
  deficiency.</p>
  <p>Although <monospace>GALAHAD 4.0</monospace> contains an increased
  variety of new solvers, the principal motivation for the new release
  is to raise the profile of the library by increasing its potential
  userbase. While modern Fortran is an extremely flexible programming
  language, it is perceived as old fashioned in many circles. Rival
  open-source solvers such as
  <ext-link ext-link-type="uri" xlink:href="https://github.com/coin-or/Ipopt"><monospace>IPOPT</monospace></ext-link>
  (<xref alt="Wächter &amp; Biegler, 2006" rid="ref-WachBieg06" ref-type="bibr">Wächter
  &amp; Biegler, 2006</xref>) and commercial ones such as
  <ext-link ext-link-type="uri" xlink:href="https://www.artelys.com/docs/knitro/"><monospace>KNITRO</monospace></ext-link>
  (<xref alt="Byrd et al., 2006" rid="ref-ByrdNoceWalt06" ref-type="bibr">Byrd
  et al., 2006</xref>) are written predominantly in C/C++, and this is
  attractive as there are often straightforward bridges from C to other
  popular languages such as Python and Julia. Thus, we have now provided
  interfaces between Fortran and C for a significant subset of the
  Fortran packages. This has been made possible using the standardised
  ISO-C bindings introduced in Fortran 2003, and enhanced in more modern
  revisions. Essentially an interface program binds Fortran types and
  functions to C equivalents, and a second C header file provides the C
  access.</p>
  <p>A current list of major packages with C interfaces and their
  functionality is as follows:</p>
  <table-wrap>
    <table>
      <colgroup>
        <col width="53%" />
        <col width="47%" />
      </colgroup>
      <thead>
        <tr>
          <th align="left">package</th>
          <th>purpose</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td align="left">uls</td>
          <td>unsymmetric linear systems (external bridge)</td>
        </tr>
        <tr>
          <td align="left">sls</td>
          <td>symmetric linear systems (external bridge)</td>
        </tr>
        <tr>
          <td align="left">sbls</td>
          <td>symmetric block linear systems</td>
        </tr>
        <tr>
          <td align="left">psls</td>
          <td>preconditioners for symmetric linear systems</td>
        </tr>
        <tr>
          <td align="left">fdc</td>
          <td>determine consistency and redundancy of linear
          systems</td>
        </tr>
        <tr>
          <td align="left">lpa</td>
          <td>linear programming using an active-set method (external
          bridge)</td>
        </tr>
        <tr>
          <td align="left">lpb</td>
          <td>linear programming using an interior-point method</td>
        </tr>
        <tr>
          <td align="left">wcp</td>
          <td>linear feasibility using an interior-point method</td>
        </tr>
        <tr>
          <td align="left">blls</td>
          <td>bound-constrained linear least-squares problems using a
          gradient-projection method</td>
        </tr>
        <tr>
          <td align="left">presolve</td>
          <td>simplify quadratic programs prior to solution</td>
        </tr>
        <tr>
          <td align="left">bqp</td>
          <td>bound-constrained convex quadratic programming using a
          gradient-projection method</td>
        </tr>
        <tr>
          <td align="left">bqpb</td>
          <td>bound-constrained convex quadratic programming using an
          interior-point method</td>
        </tr>
        <tr>
          <td align="left">lsqp</td>
          <td>linear and separable quadratic programming using an
          interior-point method</td>
        </tr>
        <tr>
          <td align="left">cqp</td>
          <td>convex quadratic programming using an interior-point
          method</td>
        </tr>
        <tr>
          <td align="left">dqp</td>
          <td>convex quadratic programming using a dual active-set
          method</td>
        </tr>
        <tr>
          <td align="left">eqp</td>
          <td>equality-constrained quadratic programming using an
          iterative method</td>
        </tr>
        <tr>
          <td align="left">trs</td>
          <td>the trust-region subproblem using matrix
          factorization</td>
        </tr>
        <tr>
          <td align="left">gltr</td>
          <td>the trust-region subproblem using matrix-vector
          products</td>
        </tr>
        <tr>
          <td align="left">rqs</td>
          <td>the regularized quadratic subproblem using matrix
          factorization</td>
        </tr>
        <tr>
          <td align="left">glrt</td>
          <td>the regularized quadratic subproblem using matrix-vector
          products</td>
        </tr>
        <tr>
          <td align="left">dps</td>
          <td>the trust-region and regularized quadratic subproblems in
          a diagonalising norm</td>
        </tr>
        <tr>
          <td align="left">llsr</td>
          <td>the regularized linear least-squares subproblem matrix
          factorization</td>
        </tr>
        <tr>
          <td align="left">llst</td>
          <td>the linear least-squares trust-region subproblem matrix
          factorization</td>
        </tr>
        <tr>
          <td align="left">lstr</td>
          <td>the linear least-squares trust-region subproblem using
          matrix-vector products</td>
        </tr>
        <tr>
          <td align="left">lsrt</td>
          <td>the regularized linear least-squares subproblem using
          matrix-vector products</td>
        </tr>
        <tr>
          <td align="left">l2rt</td>
          <td>the regularized linear <inline-formula><alternatives>
          <tex-math><![CDATA[l_2]]></tex-math>
          <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>l</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
          norm subproblem using matrix-vector products</td>
        </tr>
        <tr>
          <td align="left">qpa</td>
          <td>general quadratic programming using an active-set
          method</td>
        </tr>
        <tr>
          <td align="left">qpb</td>
          <td>general quadratic programming using an interior-point
          method</td>
        </tr>
        <tr>
          <td align="left">blls</td>
          <td>bound-constrained linear-least-squares using a
          gradient-projection method</td>
        </tr>
        <tr>
          <td align="left">tru</td>
          <td>unconstrained optimization using a trust-region
          method</td>
        </tr>
        <tr>
          <td align="left">arc</td>
          <td>unconstrained optimization using a regularization
          method</td>
        </tr>
        <tr>
          <td align="left">nls</td>
          <td>least-squares optimization using a regularization
          method</td>
        </tr>
        <tr>
          <td align="left">trb</td>
          <td>bound-constrained optimization using a gradient-projection
          trust-region method</td>
        </tr>
        <tr>
          <td align="left">ugo</td>
          <td>univariate global optimization</td>
        </tr>
        <tr>
          <td align="left">bgo</td>
          <td>multivariate global optimization in a box using a
          multi-start trust-region method</td>
        </tr>
        <tr>
          <td align="left">dgo</td>
          <td>multivariate global optimization in a box using a
          deterministic partition-and-bound method</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <p>Interfaces to other <monospace>GALAHAD</monospace> packages, such
  as <monospace>LANCELOT</monospace> and <monospace>FILTRANE</monospace>
  will be provided as time and demand permit. Future extensions to
  provide follow-on interfaces to Python and Julia using the C
  functionality are underway.</p>
  <p><monospace>GALAHAD</monospace> is easy to install using its own
  make -based system. Fortran documentation is provided in PDF via
  LaTeX, while HTML, PDF and man documents for the C packages are
  available using Doxygen, Doxyrest and Sphinx.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The authors are grateful for support provided by the Engineering
  and Physical Sciences Research Council (UK) grants EP/F005369/1,
  EP/I013067/1 and EP/M025179/1.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-ByrdNoceWalt06">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Byrd</surname><given-names>R. H.</given-names></name>
        <name><surname>Nocedal</surname><given-names>J.</given-names></name>
        <name><surname>Waltz</surname><given-names>R&gt; A.</given-names></name>
      </person-group>
      <article-title>KNITRO: An integrated package for nonlinear optimization</article-title>
      <source>Large-scale nonlinear optimization</source>
      <publisher-name>Springer, New York</publisher-name>
      <year iso-8601-date="2006">2006</year>
      <volume>83</volume>
      <pub-id pub-id-type="doi">10.1007/0-387-30065-1_4</pub-id>
      <fpage>35</fpage>
      <lpage>59</lpage>
    </element-citation>
  </ref>
  <ref id="ref-ConnGoulToin92">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Conn</surname><given-names>A. R.</given-names></name>
        <name><surname>Gould</surname><given-names>N. I. M.</given-names></name>
        <name><surname>L. Toint</surname></name>
      </person-group>
      <source>LANCELOT: A Fortran package for large-scale nonlinear optimization (Release A)</source>
      <publisher-name>Springer-Verlag</publisher-name>
      <publisher-loc>Heidelberg, Berlin</publisher-loc>
      <year iso-8601-date="1992">1992</year>
      <pub-id pub-id-type="doi">10.1007/978-3-662-12211-2</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-GoulOrbaToin03">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Gould</surname><given-names>N. I. M.</given-names></name>
        <name><surname>Orban</surname><given-names>D.</given-names></name>
        <name><surname>L. Toint</surname></name>
      </person-group>
      <article-title>GALAHAD—a library of thread-safe Fortran 90 packages for large-scale nonlinear optimization</article-title>
      <source>ACM Transactions on Mathematical Software</source>
      <year iso-8601-date="2003">2003</year>
      <volume>29</volume>
      <issue>4</issue>
      <pub-id pub-id-type="doi">10.1145/962437.962438</pub-id>
      <fpage>353</fpage>
      <lpage>372</lpage>
    </element-citation>
  </ref>
  <ref id="ref-GoulOrbaToin15">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Gould</surname><given-names>N. I. M.</given-names></name>
        <name><surname>Orban</surname><given-names>D.</given-names></name>
        <name><surname>L. Toint</surname></name>
      </person-group>
      <article-title>CUTEst: A constrained and unconstrained testing environment with safe threads for mathematical optimization</article-title>
      <source>Computational Optimization and Applications</source>
      <year iso-8601-date="2015">2015</year>
      <volume>60</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1007/s10589-014-9687-3</pub-id>
      <fpage>545</fpage>
      <lpage>557</lpage>
    </element-citation>
  </ref>
  <ref id="ref-WachBieg06">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wächter</surname><given-names>A.</given-names></name>
        <name><surname>Biegler</surname><given-names>L. T.</given-names></name>
      </person-group>
      <article-title>On the implementation of an interior-point filter line-search algorithm for large-scale nonlinear programming</article-title>
      <source>Mathematical Programming Series A</source>
      <year iso-8601-date="2006">2006</year>
      <volume>106</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1007/s10107-004-0559-y</pub-id>
      <fpage>25</fpage>
      <lpage>57</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
