<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">5869</article-id>
<article-id pub-id-type="doi">10.21105/joss.05869</article-id>
<title-group>
<article-title>lys: interactive multi-dimensional data analysis and
visualization platform</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-3010-9475</contrib-id>
<name>
<surname>Nakamura</surname>
<given-names>Asuka</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>RIKEN Center for Emergent Matter Science,
Japan</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-06-29">
<day>29</day>
<month>6</month>
<year>2023</year>
</pub-date>
<volume>8</volume>
<issue>92</issue>
<fpage>5869</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>dask</kwd>
<kwd>matplotlib</kwd>
<kwd>multi-dimensional data</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Analyzing and visualizing scientific data is an essential part of
  scientific research, by which researchers investigate complex
  phenomena behind it. In particular, the recent development of an
  open-source scientific Python ecosystem enables us to utilize
  state-of-the-art analysis and visualization. However, investigation of
  multi-dimensional data array still requires substantial coding,
  preventing intuitive and flexible analysis/visualization.
  <monospace>lys</monospace> is a Python-based multi-dimensional data
  analysis and visualization platform that provides graphical user
  interfaces (GUIs) to intuitively and flexibly manipulate
  multi-dimensional data arrays and publication-quality graphics.
  Massive multi-dimensional data over hundreds of gigabytes can be
  analyzed via automatic parallel calculation behind the GUI when
  <monospace>lys</monospace> is run on high-performance computers
  (HPCs). As well as the user-friendly GUIs, <monospace>lys</monospace>
  also provides flexibility for experts through its character user
  interface (CUI). The hybrid GUI/CUI architecture in
  <monospace>lys</monospace> enables an intuitive, low-code, parallel,
  flexible, and extensible multi-dimensional data analysis.
  <monospace>lys</monospace> is designed as a versatile data analysis
  and visualization platform that can handle all analysis processes from
  data loading to publication-quality figure generation. These features
  of <monospace>lys</monospace> enable us to minimize the time required
  for data analysis and visualization for a broad range of users.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Data analysis and visualization are indispensable parts of
  scientific research. Understanding experimental and simulated data
  deeply is essential for extracting complex phenomena behind them. To
  this end, intuitive and fast analysis/visualization is highly
  required. There are several well-known software that focus on analysis
  and visualization, such as <monospace>IGOR Pro</monospace>
  (<xref alt="WaveMetrics Inc., 2023" rid="ref-IGOR" ref-type="bibr">WaveMetrics
  Inc., 2023</xref>) (RRID:SCR_000325) and <monospace>MATLAB</monospace>
  (<xref alt="The MathWorks Inc., 2023" rid="ref-MATLAB" ref-type="bibr">The
  MathWorks Inc., 2023</xref>) (RRID:SCR_001622), as well as
  domain-specific software in respective fields. Although they have been
  utilized for scientific research for a long time, recent progress in
  experimental/computational methods has changed the situation. The data
  sizes obtained from experiments and calculations have increased
  rapidly over the past decade, reaching more than terabytes in many
  fields. As a result, the general analysis ecosystem maintained by the
  large scientific open-source community has an advantage in
  state-of-the-art analysis compared to proprietary/domain-specific
  software. Python and its scientific libraries provide one of the most
  popular analysis/visualization environments at the moment. In the
  scientific Python ecosystem, flexible and fast analysis of numerical
  arrays has been done by several popular libraries such as
  <monospace>numpy</monospace>
  (<xref alt="Harris et al., 2020" rid="ref-harris2020array" ref-type="bibr">Harris
  et al., 2020</xref>), <monospace>scipy</monospace>
  (<xref alt="Virtanen et al., 2020" rid="ref-2020SciPy-NMeth" ref-type="bibr">Virtanen
  et al., 2020</xref>), <monospace>dask</monospace>
  (<xref alt="Rocklin, 2015" rid="ref-rocklin2015dask" ref-type="bibr">Rocklin,
  2015</xref>) combined with visualization tools such as
  <monospace>matplotlib</monospace>
  (<xref alt="Hunter, 2007" rid="ref-HunterU003A2007" ref-type="bibr">Hunter,
  2007</xref>), <monospace>pyqtgraph</monospace>
  (<xref alt="L. Campagnola &amp; Moore, 2023" rid="ref-pyqtgraph" ref-type="bibr">L.
  Campagnola &amp; Moore, 2023</xref>) and <monospace>Mayavi</monospace>
  (<xref alt="Ramachandran &amp; Varoquaux, 2011" rid="ref-ramachandran2011mayavi" ref-type="bibr">Ramachandran
  &amp; Varoquaux, 2011</xref>). Development of
  <monospace>Jupyter Notebook</monospace>
  (<xref alt="Kluyver et al., 2016" rid="ref-Kluyver2016jupyter" ref-type="bibr">Kluyver
  et al., 2016</xref>) and related libraries further enhance the
  capability of interactive data analysis. However, most of these
  libraries require users to be familiar with low-level application
  programming interfaces (APIs), which prevents intuitive analysis and
  visualization. In particular, when the analyzed data is a more than
  3-dimensional array, even simple interactive visualization usually
  requires Python code of tens of lines. Such on-demand analysis and
  visualization programs should be modified (and tested) when the data
  change, although a very similar process is frequently applied to data
  with different dimensions. Furthermore, the code for such an analysis
  should be preserved to guarantee the reproducibility of scientific
  results. To solve these problems, several Python-based tools such as
  <monospace>data-slicer</monospace>
  (<xref alt="Kramer &amp; Chang, 2021" rid="ref-Kramer2021" ref-type="bibr">Kramer
  &amp; Chang, 2021</xref>) and <monospace>napari</monospace>
  (<xref alt="Chiu &amp; Clack, 2022" rid="ref-chiu_clack_2022" ref-type="bibr">Chiu
  &amp; Clack, 2022</xref>) have been developed. Although both of them
  offer sophisticated GUIs, they are not designed as a general research
  platform. <monospace>data-slicer</monospace> focuses on quick data
  inspection and visualization rather than publication-quality figure
  generation. <monospace>napari</monospace> is mainly developed for
  multi-dimensional image data, and therefore visualization of other
  data types such as curves, contours, vectors is limited. In such
  situations, a versatile Python-based analysis and visualization
  platform that can handle all scientific analysis processes, from data
  loading to publication-quality figure generation of a variety of data
  types, is highly required.</p>
  <p>The multi-dimensional data analysis and visualization platform,
  <monospace>lys</monospace>, offers a graphical user interface (GUI)
  for intuitive analysis and visualization of multi-dimensional arrays.
  It employs <monospace>dask</monospace> as a backend, which can be used
  for easy parallel calculations on high-performance clusters (HPCs).
  Publication-quality and fast data visualizations are provided by
  <monospace>matplotlib</monospace> and
  <monospace>pyqtgraph</monospace>, respectively.
  <monospace>lys</monospace> is a low-code system where most analysis
  and visualization processes can be done from the GUI without any
  knowledge of respective libraries. In particular, a tool for
  interactive and fast analysis of multi-dimensional arrays has been
  developed. This tool allows all analysis processes to be exported as a
  single file, ensuring scientific reproducibility. In contrast to such
  a user-friendly GUI, <monospace>lys</monospace> can be easily extended
  because it employs a hybrid CUI/GUI architecture. Users can edit and
  run their own Python code in <monospace>lys</monospace> to extend the
  functionalities of <monospace>lys</monospace>.</p>
  <p>The philosophy of <monospace>lys</monospace> is to serve as a
  versatile data analysis and visualization platform, rather than a
  basic image viewer/analysis program. It was developed to minimize the
  time required for data analysis and visualization for researchers. All
  of the processes from loading data to generating publication-quality
  figures can be done in <monospace>lys</monospace>. In addition, these
  processes (including user-defined Python code) are stored in a single
  directory and can be used to reproduce the results. The rich features
  of <monospace>lys</monospace> significantly reduce the time for
  analysis/visualization of multi-dimensional arrays.</p>
</sec>
<sec id="overview">
  <title>Overview</title>
  <p><monospace>lys</monospace> is a hybrid GUI/CUI platform oriented
  towards multi-dimensional data analysis. Figure 1 shows the main
  features of <monospace>lys</monospace>. Arbitrary Python commands can
  be executed from an integrated Python shell (#1). User-defined Python
  scripts can be edited by the internal editor (#2) and can be executed.
  <monospace>matplotlib</monospace> graphs that contain curves, images,
  vector fields, and RGB images can be displayed (#3) and edited via GUI
  in the sidebar (#4).</p>
  <p><monospace>MultiCut</monospace> is a central tool in
  <monospace>lys</monospace>, which enables intuitive, low-code,
  parallel, flexible, and extensible analysis for multi-dimensional
  arrays. In the following, the data analysis and visualization
  processes are explained, using three-dimensional movie data
  <inline-formula><alternatives>
  <tex-math><![CDATA[A(x_i,y_j,t_k)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>A</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  as an example (<inline-formula><alternatives>
  <tex-math><![CDATA[i,j,k]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  represent indices of the array). The data analysis in
  <monospace>MultiCut</monospace> is done in four steps. First, the
  original <inline-formula><alternatives>
  <tex-math><![CDATA[N]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>N</mml:mi></mml:math></alternatives></inline-formula>-dimensional
  data <inline-formula><alternatives>
  <tex-math><![CDATA[A]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>A</mml:mi></mml:math></alternatives></inline-formula>
  is modified by preprocessing as <inline-formula><alternatives>
  <tex-math><![CDATA[A' = P(A)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>A</mml:mi><mml:mi>′</mml:mi><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>A</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>,
  where <inline-formula><alternatives>
  <tex-math><![CDATA[P]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>P</mml:mi></mml:math></alternatives></inline-formula>
  is an arbitrary function that translates
  <inline-formula><alternatives>
  <tex-math><![CDATA[N]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>N</mml:mi></mml:math></alternatives></inline-formula>
  dimensional data to <inline-formula><alternatives>
  <tex-math><![CDATA[M]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>M</mml:mi></mml:math></alternatives></inline-formula>
  dimensional data. In the example case in Fig. 2, impulsive noise in
  the original data is removed using <inline-formula><alternatives>
  <tex-math><![CDATA[3 \times 3 \times 3]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mn>3</mml:mn><mml:mo>×</mml:mo><mml:mn>3</mml:mn><mml:mo>×</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
  median filter:</p>
  <p><disp-formula><alternatives>
  <tex-math><![CDATA[A'(x_i,y_j,t_k) = \mathcal{M}[A(x_i,y_j,t_k)],]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>A</mml:mi><mml:mi>′</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>ℳ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">[</mml:mo><mml:mi>A</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo stretchy="true" form="postfix">]</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula></p>
  <fig>
    <caption><p>Screenshot of lys. Users can execute arbitrary Python
    commands from embedded CUI (#1), which can be extended by the
    user-defined scripts (#2). Matplotlib figures that contain curves,
    images, vector fields, and RGB images can be displayed (#3). These
    figures can be edited via GUI in the sidebar (#4).</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/Fig1.png" />
  </fig>
  <p>where <inline-formula><alternatives>
  <tex-math><![CDATA[P = \mathcal{M}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:mi>ℳ</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  represents median filter to remove the noise. Since the median filter
  does not change the dimension of data, <inline-formula><alternatives>
  <tex-math><![CDATA[N=3]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
  equals <inline-formula><alternatives>
  <tex-math><![CDATA[M]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>M</mml:mi></mml:math></alternatives></inline-formula>
  in this case. The preprocessing is used for heavy analysis that
  requires whole <inline-formula><alternatives>
  <tex-math><![CDATA[N]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>N</mml:mi></mml:math></alternatives></inline-formula>-dimensional
  data. Second, MultiCut generates an arbitrary number of 2-dimensional
  images and 1-dimensional curves from <inline-formula><alternatives>
  <tex-math><![CDATA[M]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>M</mml:mi></mml:math></alternatives></inline-formula>-dimensional
  <inline-formula><alternatives>
  <tex-math><![CDATA[A']]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>A</mml:mi><mml:mi>′</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  by taking a summation along arbitrary axes. In the example case in
  Fig. 2, an image <inline-formula><alternatives>
  <tex-math><![CDATA[I(x_i,y_j)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  and a curve <inline-formula><alternatives>
  <tex-math><![CDATA[C(t_k)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>C</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  is generated as:</p>
  <p><disp-formula><alternatives>
  <tex-math><![CDATA[
  \begin{aligned}
  I(x_i,y_j) &= \sum_{t_k}A'(x_i,y_j,t_k), \\
  C(t_k) &= \sum_{x_i, y_j}A'(x_i,y_j,t_k).
  \end{aligned}
  ]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mtable><mml:mtr><mml:mtd columnalign="right" style="text-align: right"><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left" style="text-align: left"><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:munder><mml:mi>A</mml:mi><mml:mi>′</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right" style="text-align: right"><mml:mi>C</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left" style="text-align: left"><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:munder><mml:mi>A</mml:mi><mml:mi>′</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mi>.</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula></p>
  <p>The range of the summation is specified from the GUI as described
  later. These images and curves are used for visualization in step 4.
  Third, each image and curve can be individually modified by
  postprocessing. In Fig. 2, Fourier transformation along time axis
  <inline-formula><alternatives>
  <tex-math><![CDATA[\mathcal{F}_t]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ℱ</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  is applied to time-dependent image intensity
  <inline-formula><alternatives>
  <tex-math><![CDATA[C(t_k)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>C</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>:</p>
  <p><disp-formula><alternatives>
  <tex-math><![CDATA[
  C'(\omega_l) = \mathcal{F}_t[C(t_k)].
  ]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>C</mml:mi><mml:mi>′</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>ω</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>ℱ</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">[</mml:mo><mml:mi>C</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo stretchy="true" form="postfix">]</mml:mo></mml:mrow><mml:mi>.</mml:mi></mml:mrow></mml:math></alternatives></disp-formula></p>
  <p>Different from the preprocessing (step 1), the postprocessing
  function accesses only an image or a curve. In addition, the
  postprocessing should be executed within a short time (&lt; 0.1 s)
  because it is repeatedly called whenever the summation range in step 2
  is changed. Finally, these analyzed data are displayed in a GUI, where
  users can modify the ranges of the summation interactively. Once the
  summation range from step 2 is changed, the postprocess is
  recalculated and the result is automatically updated. A four-step
  calculation enables flexible analysis of multi-dimensional data. In
  the above example, the spectrum of the image intensity
  <inline-formula><alternatives>
  <tex-math><![CDATA[C'(\omega_l)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>C</mml:mi><mml:mi>′</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>ω</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  within the user-specified image region can be interactively analyzed
  and displayed while the time-consuming median filter is done only once
  in step 1. It should be noted that a multi-dimensional array of
  arbitrary dimensions can be analyzed and visualized by
  <monospace>MultiCut</monospace> although the given example is for a
  3-dimensional case. Constructing such an interactive analysis system
  is a hard task in conventional Python systems. Once the interactive
  analysis system is set up using MultiCut, the settings for the
  analysis can be exported as a file and reused. This guarantees the
  scientific reproducibility of the data analysis, which can be verified
  by other scientists. In addition, all of the processes in
  <monospace>lys</monospace> are implemented using
  <monospace>dask</monospace> arrays, and therefore all calculations can
  be performed in parallel when they are done on HPC systems.</p>
  <fig>
    <caption><p>Example for 3-dimensional time-dependent data analysis
    and visualization by MultiCut. The median filter is applied to the
    original data (Step 1), from which several curves and images are
    generated (Step 2). Each curve and image are independently processed
    in Step 3, and visualized in a single GUI window (Step
    4).</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/Fig2.png" />
  </fig>
  <p>In addition to the features described above,
  <monospace>lys</monospace> provides some basic analysis such as data
  fitting and array editor GUIs. Combining these functionalities of
  <monospace>lys</monospace> offers intuitive, low-code, fast, and
  flexible analysis to users not familiar with Python while preserving
  the extensibility for experts.</p>
  <p>As compared to other analysis/visualization software,
  <monospace>lys</monospace> has several advantages. First, it employs
  Python (<monospace>numpy</monospace>/<monospace>dask</monospace>) as a
  backend, and therefore a variety of scientific computing libraries
  such as <monospace>scipy</monospace> can be used. This cannot be
  achieved by similar software such as <monospace>IGOR Pro</monospace>
  and <monospace>MATLAB</monospace>. Second, <monospace>lys</monospace>
  is open-source software. Users can verify the software and modify it
  if needed, which cannot be realized in proprietary software. Third,
  <monospace>lys</monospace> offers interactive GUIs represented by
  <monospace>MultiCut</monospace>. Although there has been much effort
  to realize sophisticated GUIs such as <monospace>napari</monospace>
  (<xref alt="Chiu &amp; Clack, 2022" rid="ref-chiu_clack_2022" ref-type="bibr">Chiu
  &amp; Clack, 2022</xref>) and <monospace>data-slicer</monospace>
  (<xref alt="Kramer &amp; Chang, 2021" rid="ref-Kramer2021" ref-type="bibr">Kramer
  &amp; Chang, 2021</xref>), this is still very limited in the
  scientific Python ecosystems so far. Fourth,
  <monospace>lys</monospace> can treat massive multi-dimensional arrays
  of more than hundreds of gigabytes through
  <monospace>dask</monospace>. The coexistence of intuitive GUI and fast
  parallel calculation is very limited in other similar
  software/libraries so far. Finally, <monospace>lys</monospace> is a
  general platform for data analysis and visualization. All of the
  processes from loading data to generating publication-quality figures
  can be done in <monospace>lys</monospace>. Although
  <monospace>data-slicer</monospace> offers similar and interactive data
  manipulation, it is data inspection and visualization software rather
  than the general platform for research scientists. While
  <monospace>napari</monospace> also offers similar functionalities for
  multi-dimensional images, <monospace>lys</monospace> is designed to
  handle a variety of data types (images, curves, contours, vector
  fields, and RGB images) to serve as a general-purpose platform.</p>
</sec>
<sec id="projects-using-the-software">
  <title>Projects using the software</title>
  <p>As <monospace>lys</monospace> is a general-purpose
  multi-dimensional data analysis system, it has been used in many works
  within the last five years, particularly for our experiments and
  simulations. Simple visualization functionalities are used for the
  analysis of movies obtained by ultrafast electron diffraction and
  microscopy
  (<xref alt="Asuka Nakamura et al., 2018" rid="ref-APEX2018" ref-type="bibr">Asuka
  Nakamura et al., 2018</xref>,
  <xref alt="2020" rid="ref-NanoLett2020" ref-type="bibr">2020</xref>).
  A pre-release version of MultiCut was used for analyzing the
  propagation of nanometric acoustic waves
  (<xref alt="Asuka Nakamura et al., 2023" rid="ref-NanoLett2023" ref-type="bibr">Asuka
  Nakamura et al., 2023</xref>) and magnetic-texture dynamics
  (<xref alt="Takahiro Shimojima et al., 2021" rid="ref-SciAdv2021" ref-type="bibr">Takahiro
  Shimojima et al., 2021</xref>). Analyzing massive five-dimensional
  data sets obtained by five-dimensional scanning transmission electron
  microscopy
  (<xref alt="A. Nakamura et al., 2022" rid="ref-Faraday2022" ref-type="bibr">A.
  Nakamura et al., 2022</xref>;
  <xref alt="T. Shimojima et al., 2023a" rid="ref-RSI2023" ref-type="bibr">T.
  Shimojima et al., 2023a</xref>;
  <xref alt="T. Shimojima et al., 2023b" rid="ref-JMicro2023" ref-type="bibr">T.
  Shimojima et al., 2023b</xref>) was also achieved using parallel
  calculations on an HPC, demonstrating the scalability of
  <monospace>lys</monospace>. It was also used for the postprocessing of
  finite-element simulation results
  (<xref alt="A. Nakamura et al., 2021" rid="ref-StrDyn2021" ref-type="bibr">A.
  Nakamura et al., 2021</xref>).</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We acknowledge contributions from Yusuke Chiashi, Jumpei Koga,
  Dongxue Han, and comments from Takahiro Shimojima and Kyoko Ishizaka.
  This work was partially supported by a Grant-in-Aid for Scientific
  Research (KAKENHI) (Grant No. 21K14488).</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-harris2020array">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>Walt</surname><given-names>Stéfan J. van der</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Wieser</surname><given-names>Eric</given-names></name>
        <name><surname>Taylor</surname><given-names>Julian</given-names></name>
        <name><surname>Berg</surname><given-names>Sebastian</given-names></name>
        <name><surname>Smith</surname><given-names>Nathaniel J.</given-names></name>
        <name><surname>Kern</surname><given-names>Robert</given-names></name>
        <name><surname>Picus</surname><given-names>Matti</given-names></name>
        <name><surname>Hoyer</surname><given-names>Stephan</given-names></name>
        <name><surname>Kerkwijk</surname><given-names>Marten H. van</given-names></name>
        <name><surname>Brett</surname><given-names>Matthew</given-names></name>
        <name><surname>Haldane</surname><given-names>Allan</given-names></name>
        <name><surname>Río</surname><given-names>Jaime Fernández del</given-names></name>
        <name><surname>Wiebe</surname><given-names>Mark</given-names></name>
        <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
        <name><surname>Gérard-Marchant</surname><given-names>Pierre</given-names></name>
        <name><surname>Sheppard</surname><given-names>Kevin</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
        <name><surname>Abbasi</surname><given-names>Hameer</given-names></name>
        <name><surname>Gohlke</surname><given-names>Christoph</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
      </person-group>
      <article-title>Array programming with NumPy</article-title>
      <source>Nature</source>
      <publisher-name>Springer Science; Business Media LLC</publisher-name>
      <year iso-8601-date="2020-09">2020</year><month>09</month>
      <volume>585</volume>
      <issue>7825</issue>
      <uri>https://doi.org/10.1038/s41586-020-2649-2</uri>
      <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
      <fpage>357</fpage>
      <lpage>362</lpage>
    </element-citation>
  </ref>
  <ref id="ref-2020SciPy-NMeth">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
        <name><surname>Haberland</surname><given-names>Matt</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Burovski</surname><given-names>Evgeni</given-names></name>
        <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
        <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
        <name><surname>Bright</surname><given-names>Jonathan</given-names></name>
        <name><surname>van der Walt</surname><given-names>Stéfan J.</given-names></name>
        <name><surname>Brett</surname><given-names>Matthew</given-names></name>
        <name><surname>Wilson</surname><given-names>Joshua</given-names></name>
        <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
        <name><surname>Mayorov</surname><given-names>Nikolay</given-names></name>
        <name><surname>Nelson</surname><given-names>Andrew R. J.</given-names></name>
        <name><surname>Jones</surname><given-names>Eric</given-names></name>
        <name><surname>Kern</surname><given-names>Robert</given-names></name>
        <name><surname>Larson</surname><given-names>Eric</given-names></name>
        <name><surname>Carey</surname><given-names>C J</given-names></name>
        <name><surname>Polat</surname><given-names>İlhan</given-names></name>
        <name><surname>Feng</surname><given-names>Yu</given-names></name>
        <name><surname>Moore</surname><given-names>Eric W.</given-names></name>
        <name><surname>VanderPlas</surname><given-names>Jake</given-names></name>
        <name><surname>Laxalde</surname><given-names>Denis</given-names></name>
        <name><surname>Perktold</surname><given-names>Josef</given-names></name>
        <name><surname>Cimrman</surname><given-names>Robert</given-names></name>
        <name><surname>Henriksen</surname><given-names>Ian</given-names></name>
        <name><surname>Quintero</surname><given-names>E. A.</given-names></name>
        <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
        <name><surname>Archibald</surname><given-names>Anne M.</given-names></name>
        <name><surname>Ribeiro</surname><given-names>Antônio H.</given-names></name>
        <name><surname>Pedregosa</surname><given-names>Fabian</given-names></name>
        <name><surname>van Mulbregt</surname><given-names>Paul</given-names></name>
        <string-name>SciPy 1.0 Contributors</string-name>
      </person-group>
      <article-title>SciPy 1.0: Fundamental Algorithms for Scientific Computing in Python</article-title>
      <source>Nature Methods</source>
      <year iso-8601-date="2020">2020</year>
      <volume>17</volume>
      <pub-id pub-id-type="doi">10.1038/s41592-019-0686-2</pub-id>
      <fpage>261</fpage>
      <lpage>272</lpage>
    </element-citation>
  </ref>
  <ref id="ref-rocklin2015dask">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Rocklin</surname><given-names>Matthew</given-names></name>
      </person-group>
      <article-title>Dask: Parallel computation with blocked algorithms and task scheduling</article-title>
      <source>Proceedings of the 14th Python in science conference</source>
      <publisher-name>Citeseer</publisher-name>
      <year iso-8601-date="2015">2015</year>
      <pub-id pub-id-type="doi">10.25080/majora-7b98e3ed-013</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-HunterU003A2007">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hunter</surname><given-names>J. D.</given-names></name>
      </person-group>
      <article-title>Matplotlib: A 2D graphics environment</article-title>
      <source>Computing in Science &amp; Engineering</source>
      <publisher-name>IEEE COMPUTER SOC</publisher-name>
      <year iso-8601-date="2007">2007</year>
      <volume>9</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1109/MCSE.2007.55</pub-id>
      <fpage>90</fpage>
      <lpage>95</lpage>
    </element-citation>
  </ref>
  <ref id="ref-ramachandran2011mayavi">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ramachandran</surname><given-names>P.</given-names></name>
        <name><surname>Varoquaux</surname><given-names>G.</given-names></name>
      </person-group>
      <article-title>Mayavi: 3D Visualization of Scientific Data</article-title>
      <source>Computing in Science &amp; Engineering</source>
      <publisher-name>IEEE</publisher-name>
      <year iso-8601-date="2011">2011</year>
      <volume>13</volume>
      <issue>2</issue>
      <issn>1521-9615</issn>
      <pub-id pub-id-type="doi">10.1109/mcse.2011.35</pub-id>
      <fpage>40</fpage>
      <lpage>51</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Kluyver2016jupyter">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Kluyver</surname><given-names>Thomas</given-names></name>
        <name><surname>Ragan-Kelley</surname><given-names>Benjamin</given-names></name>
        <name><surname>Pérez</surname><given-names>Fernando</given-names></name>
        <name><surname>Granger</surname><given-names>Brian</given-names></name>
        <name><surname>Bussonnier</surname><given-names>Matthias</given-names></name>
        <name><surname>Frederic</surname><given-names>Jonathan</given-names></name>
        <name><surname>Kelley</surname><given-names>Kyle</given-names></name>
        <name><surname>Hamrick</surname><given-names>Jessica</given-names></name>
        <name><surname>Grout</surname><given-names>Jason</given-names></name>
        <name><surname>Corlay</surname><given-names>Sylvain</given-names></name>
        <name><surname>Ivanov</surname><given-names>Paul</given-names></name>
        <name><surname>Avila</surname><given-names>Damián</given-names></name>
        <name><surname>Abdalla</surname><given-names>Safia</given-names></name>
        <name><surname>Willing</surname><given-names>Carol</given-names></name>
      </person-group>
      <article-title>Jupyter notebooks – a publishing format for reproducible computational workflows</article-title>
      <person-group person-group-type="editor">
        <name><surname>Loizides</surname><given-names>F.</given-names></name>
        <name><surname>Schmidt</surname><given-names>B.</given-names></name>
      </person-group>
      <publisher-name>IOS Press</publisher-name>
      <year iso-8601-date="2016">2016</year>
      <fpage>87 </fpage>
      <lpage> 90</lpage>
    </element-citation>
  </ref>
  <ref id="ref-pyqtgraph">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>L. Campagnola</surname><suffix>K. Lyons</suffix></name>
        <name><surname>Moore</surname><given-names>O.</given-names></name>
      </person-group>
      <article-title>PyQtGraph: Scientific graphics and GUI library for Python</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/pyqtgraph/pyqtgraph</uri>
    </element-citation>
  </ref>
  <ref id="ref-APEX2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Nakamura</surname><given-names>Asuka</given-names></name>
        <name><surname>Shimojima</surname><given-names>Takahiro</given-names></name>
        <name><surname>Matsuura</surname><given-names>Masatoshi</given-names></name>
        <name><surname>Chiashi</surname><given-names>Yusuke</given-names></name>
        <name><surname>Kamitani</surname><given-names>Manabu</given-names></name>
        <name><surname>Sakai</surname><given-names>Hideaki</given-names></name>
        <name><surname>Ishiwata</surname><given-names>Shintaro</given-names></name>
        <name><surname>Li</surname><given-names>Han</given-names></name>
        <name><surname>Oshiyama</surname><given-names>Atsushi</given-names></name>
        <name><surname>Ishizaka</surname><given-names>Kyoko</given-names></name>
      </person-group>
      <article-title>Evaluation of photo-induced shear strain in monoclinic VTe2 by ultrafast electron diffraction</article-title>
      <source>Applied Physics Express</source>
      <publisher-name>The Japan Society of Applied Physics</publisher-name>
      <year iso-8601-date="2018-08">2018</year><month>08</month>
      <volume>11</volume>
      <issue>9</issue>
      <uri>https://dx.doi.org/10.7567/APEX.11.092601</uri>
      <pub-id pub-id-type="doi">10.7567/APEX.11.092601</pub-id>
      <fpage>092601</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-NanoLett2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Nakamura</surname><given-names>Asuka</given-names></name>
        <name><surname>Shimojima</surname><given-names>Takahiro</given-names></name>
        <name><surname>Chiashi</surname><given-names>Yusuke</given-names></name>
        <name><surname>Kamitani</surname><given-names>Manabu</given-names></name>
        <name><surname>Sakai</surname><given-names>Hideaki</given-names></name>
        <name><surname>Ishiwata</surname><given-names>Shintaro</given-names></name>
        <name><surname>Li</surname><given-names>Han</given-names></name>
        <name><surname>Ishizaka</surname><given-names>Kyoko</given-names></name>
      </person-group>
      <article-title>Nanoscale imaging of unusual photoacoustic waves in thin flake VTe2</article-title>
      <source>Nano Letters</source>
      <year iso-8601-date="2020">2020</year>
      <volume>20</volume>
      <issue>7</issue>
      <uri> https://doi.org/10.1021/acs.nanolett.0c01006</uri>
      <pub-id pub-id-type="doi">10.1021/acs.nanolett.0c01006</pub-id>
      <fpage>4932</fpage>
      <lpage>4938</lpage>
    </element-citation>
  </ref>
  <ref id="ref-StrDyn2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Nakamura</surname><given-names>A.</given-names></name>
        <name><surname>Shimojima</surname><given-names>T.</given-names></name>
        <name><surname>Ishizaka</surname><given-names>K.</given-names></name>
      </person-group>
      <article-title>Finite-element simulation of photoinduced strain dynamics in silicon thin plates</article-title>
      <source>Structural Dynamics</source>
      <year iso-8601-date="2021-04">2021</year><month>04</month>
      <volume>8</volume>
      <issue>2</issue>
      <issn>2329-7778</issn>
      <uri>https://doi.org/10.1063/4.0000059</uri>
      <pub-id pub-id-type="doi">10.1063/4.0000059</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-NanoLett2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Nakamura</surname><given-names>Asuka</given-names></name>
        <name><surname>Shimojima</surname><given-names>Takahiro</given-names></name>
        <name><surname>Ishizaka</surname><given-names>Kyoko</given-names></name>
      </person-group>
      <article-title>Characterizing an optically induced sub-micrometer gigahertz acoustic wave in a silicon thin plate</article-title>
      <source>Nano Letters</source>
      <year iso-8601-date="2023">2023</year>
      <volume>23</volume>
      <issue>7</issue>
      <uri>https://doi.org/10.1021/acs.nanolett.2c03938</uri>
      <pub-id pub-id-type="doi">10.1021/acs.nanolett.2c03938</pub-id>
      <fpage>2490</fpage>
      <lpage>2495</lpage>
    </element-citation>
  </ref>
  <ref id="ref-SciAdv2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Shimojima</surname><given-names>Takahiro</given-names></name>
        <name><surname>Nakamura</surname><given-names>Asuka</given-names></name>
        <name><surname>Yu</surname><given-names>Xiuzhen</given-names></name>
        <name><surname>Karube</surname><given-names>Kosuke</given-names></name>
        <name><surname>Taguchi</surname><given-names>Yasujiro</given-names></name>
        <name><surname>Tokura</surname><given-names>Yoshinori</given-names></name>
        <name><surname>Ishizaka</surname><given-names>Kyoko</given-names></name>
      </person-group>
      <article-title>Nano-to-micro spatiotemporal imaging of magnetic skyrmion’s life cycle</article-title>
      <source>Science Advances</source>
      <year iso-8601-date="2021">2021</year>
      <volume>7</volume>
      <issue>25</issue>
      <uri>https://www.science.org/doi/abs/10.1126/sciadv.abg1322</uri>
      <pub-id pub-id-type="doi">10.1126/sciadv.abg1322</pub-id>
      <fpage>eabg1322</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-RSI2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Shimojima</surname><given-names>T.</given-names></name>
        <name><surname>Nakamura</surname><given-names>A.</given-names></name>
        <name><surname>Ishizaka</surname><given-names>K.</given-names></name>
      </person-group>
      <article-title>Development of five-dimensional scanning transmission electron microscopy</article-title>
      <source>Review of Scientific Instruments</source>
      <year iso-8601-date="2023-02">2023</year><month>02</month>
      <volume>94</volume>
      <issue>2</issue>
      <issn>0034-6748</issn>
      <uri>https://doi.org/10.1063/5.0106517</uri>
      <pub-id pub-id-type="doi">10.1063/5.0106517</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-JMicro2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Shimojima</surname><given-names>T</given-names></name>
        <name><surname>Nakamura</surname><given-names>A</given-names></name>
        <name><surname>Ishizaka</surname><given-names>K</given-names></name>
      </person-group>
      <article-title>Development and applications of ultrafast transmission electron microscopy</article-title>
      <source>Microscopy</source>
      <year iso-8601-date="2023-03">2023</year><month>03</month>
      <issn>2050-5701</issn>
      <uri>https://doi.org/10.1093/jmicro/dfad021</uri>
      <pub-id pub-id-type="doi">10.1093/jmicro/dfad021</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Faraday2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Nakamura</surname><given-names>A.</given-names></name>
        <name><surname>Shimojima</surname><given-names>T.</given-names></name>
        <name><surname>Ishizaka</surname><given-names>K.</given-names></name>
      </person-group>
      <article-title>Visualizing optically-induced strains by five-dimensional ultrafast electron microscopy</article-title>
      <source>Faraday Discuss.</source>
      <publisher-name>The Royal Society of Chemistry</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <volume>237</volume>
      <uri>http://dx.doi.org/10.1039/D2FD00062H</uri>
      <pub-id pub-id-type="doi">10.1039/D2FD00062H</pub-id>
      <fpage>27</fpage>
      <lpage>39</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Kramer2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kramer</surname><given-names>Kevin</given-names></name>
        <name><surname>Chang</surname><given-names>Johan</given-names></name>
      </person-group>
      <article-title>Visualization of multi-dimensional data – the data-slicer package</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <volume>6</volume>
      <issue>60</issue>
      <uri>https://doi.org/10.21105/joss.02969</uri>
      <pub-id pub-id-type="doi">10.21105/joss.02969</pub-id>
      <fpage>2969</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-chiu_clack_2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Chiu</surname><given-names>Chi-Li</given-names></name>
        <name><surname>Clack</surname><given-names>Nathan</given-names></name>
      </person-group>
      <article-title>Napari: A Python multi-dimensional image viewer platform for the research community</article-title>
      <source>Microscopy and Microanalysis</source>
      <publisher-name>Cambridge University Press</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <volume>28</volume>
      <issue>S1</issue>
      <pub-id pub-id-type="doi">10.1017/S1431927622006328</pub-id>
      <fpage>1576</fpage>
      <lpage>1577</lpage>
    </element-citation>
  </ref>
  <ref id="ref-MATLAB">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <string-name>The MathWorks Inc.</string-name>
      </person-group>
      <article-title>MATLAB (R2023b)</article-title>
      <publisher-name>The MathWorks Inc.</publisher-name>
      <publisher-loc>Natick, Massachusetts, United States</publisher-loc>
      <year iso-8601-date="2023">2023</year>
      <uri>https://www.mathworks.com</uri>
    </element-citation>
  </ref>
  <ref id="ref-IGOR">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <string-name>WaveMetrics Inc.</string-name>
      </person-group>
      <article-title>IGOR pro 9.05</article-title>
      <publisher-name>WaveMetrics Inc.</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://www.wavemetrics.com</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
