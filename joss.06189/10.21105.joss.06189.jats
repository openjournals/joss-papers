<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">6189</article-id>
<article-id pub-id-type="doi">10.21105/joss.06189</article-id>
<title-group>
<article-title>Copulas.jl: A fully Distributions.jl-compliant copula
package</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-7508-999X</contrib-id>
<name>
<surname>Laverny</surname>
<given-names>Oskar</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-8198-3656</contrib-id>
<name>
<surname>Jimenez</surname>
<given-names>Santiago</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Aix Marseille Univ, Inserm, IRD, SESSTIM, Sciences
Economiques &amp; Sociales de la Sant√© &amp; Traitement de l‚ÄôInformation
M√©dicale, ISSPAM, Marseille, France.</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Federal University of Pernambuco</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-11-16">
<day>16</day>
<month>11</month>
<year>2023</year>
</pub-date>
<volume>9</volume>
<issue>94</issue>
<fpage>6189</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>julia</kwd>
<kwd>copula dependence statistics</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Copulas are functions that describe dependence structures of random
  vectors, without describing their univariate marginals. In statistics,
  the separation is sometimes useful, the quality and/or quantity of
  available information on these two objects might differ. This
  separation can be formally stated through Sklar‚Äôs theorem:</p>
  <p><bold>Theorem: existence and uniqueness of the copula
  (<xref alt="Sklar, 1959" rid="ref-sklar1959fonctions" ref-type="bibr">Sklar,
  1959</xref>):</bold> For a given <inline-formula><alternatives>
  <tex-math><![CDATA[d]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>d</mml:mi></mml:math></alternatives></inline-formula>-variate
  absolutely continuous random vector <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf X]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>ùêó</mml:mi></mml:math></alternatives></inline-formula>
  with marginals <inline-formula><alternatives>
  <tex-math><![CDATA[X_1,...X_d]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi>.</mml:mi><mml:mi>.</mml:mi><mml:mi>.</mml:mi><mml:msub><mml:mi>X</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>,
  there exists a unique function <inline-formula><alternatives>
  <tex-math><![CDATA[C]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>C</mml:mi></mml:math></alternatives></inline-formula>,
  the copula, such that <disp-formula><alternatives>
  <tex-math><![CDATA[F(\mathbf x) = C(F_1(x_1),...,F_d(x_d)),]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>ùê±</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>C</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>.</mml:mi><mml:mi>.</mml:mi><mml:mi>.</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
  where <inline-formula><alternatives>
  <tex-math><![CDATA[F, F_1,...F_d]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>F</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi>.</mml:mi><mml:mi>.</mml:mi><mml:mi>.</mml:mi><mml:msub><mml:mi>F</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>
  are respectively the distributions functions of
  <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbf X, X_1,...X_d]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>ùêó</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi>.</mml:mi><mml:mi>.</mml:mi><mml:mi>.</mml:mi><mml:msub><mml:mi>X</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>.</p>
  <p>Copulas are standard tools in probability and statistics, with a
  wide range of applications from biostatistics, finance or medicine, to
  fuzzy logic, global sensitivity and broader analysis. A few standard
  theoretical references on the matter are Joe
  (<xref alt="1997" rid="ref-joe1997" ref-type="bibr">1997</xref>),
  Nelsen
  (<xref alt="2006" rid="ref-nelsen2006" ref-type="bibr">2006</xref>),
  Joe (<xref alt="2014" rid="ref-joe2014" ref-type="bibr">2014</xref>),
  and Durante &amp; Sempi
  (<xref alt="2015" rid="ref-durantePrinciplesCopulaTheory2015" ref-type="bibr">2015</xref>).</p>
  <p>The Julia package <monospace>Copulas.jl</monospace> brings most
  standard copula-related features into native Julia: random number
  generation, density and distribution function evaluations, fitting,
  construction of multivariate models through Sklar‚Äôs theorem, and many
  more related functionalities. Since copulas can combine arbitrary
  univariate distributions to form distributions of multivariate random
  vectors, we fully comply with the
  <ext-link ext-link-type="uri" xlink:href="https://github.com/JuliaStats/Distributions.jl"><monospace>Distributions.jl</monospace></ext-link>
  API
  (<xref alt="Besan√ßon et al., 2021" rid="ref-djl1" ref-type="bibr">Besan√ßon
  et al., 2021</xref>;
  <xref alt="Lin et al., 2019" rid="ref-djl2" ref-type="bibr">Lin et
  al., 2019</xref>), the Julian standard for implementation of random
  variables and random vectors. This compliance allows interoperability
  with other packages based on this API such as, e.g.,
  <ext-link ext-link-type="uri" xlink:href="https://github.com/TuringLang/Turing.jl"><monospace>Turing.jl</monospace></ext-link>
  (<xref alt="Ge et al., 2018" rid="ref-turing" ref-type="bibr">Ge et
  al., 2018</xref>) and several others.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The R package <monospace>copula</monospace>
  (<xref alt="Hofert et al., 2020" rid="ref-r_copula_citation1" ref-type="bibr">Hofert
  et al., 2020</xref>;
  <xref alt="Ivan Kojadinovic &amp; Jun Yan, 2010" rid="ref-r_copula_citation3" ref-type="bibr">Ivan
  Kojadinovic &amp; Jun Yan, 2010</xref>;
  <xref alt="Jun Yan, 2007" rid="ref-r_copula_citation2" ref-type="bibr">Jun
  Yan, 2007</xref>;
  <xref alt="Marius Hofert &amp; Martin M√§chler, 2011" rid="ref-r_copula_citation4" ref-type="bibr">Marius
  Hofert &amp; Martin M√§chler, 2011</xref>) is the gold standard when it
  comes to sampling, estimating, or simply working around dependence
  structures. However, in other languages, the available tools are not
  as developed and/or not as recognized. We bridge the gap in the Julian
  ecosystem with this Julia-native implementation. Due to the very
  flexible type system in Julia, our code‚Äôs expressiveness and tidiness
  will increase its usability and maintainability in the long-run.
  Type-stability allows sampling in arbitrary precision without
  requiring more code, and Julia‚Äôs multiple dispatch yields most of the
  below-described applications.</p>
  <p>There are competing packages in Julia, such as
  <ext-link ext-link-type="uri" xlink:href="https://github.com/AnderGray/BivariateCopulas.jl"><monospace>BivariateCopulas.jl</monospace></ext-link>
  (<xref alt="Gray et al., 2023" rid="ref-BivariateCopulas" ref-type="bibr">Gray
  et al., 2023</xref>) which only deals with a few models in bivariate
  settings but has very nice graphs, or
  <ext-link ext-link-type="uri" xlink:href="https://github.com/iitis/DatagenCopulaBased.jl"><monospace>DatagenCopulaBased.jl</monospace></ext-link>
  (<xref alt="Domino, 2019" rid="ref-DatagenCopulaBased_3" ref-type="bibr">Domino,
  2019</xref>,
  <xref alt="2020" rid="ref-DatagenCopulaBased_4" ref-type="bibr">2020</xref>;
  <xref alt="Domino et al., 2023" rid="ref-DatagenCopulaBased_1" ref-type="bibr">Domino
  et al., 2023</xref>;
  <xref alt="Domino &amp; Glos, 2018" rid="ref-DatagenCopulaBased_2" ref-type="bibr">Domino
  &amp; Glos, 2018</xref>), which only provides sampling and does not
  have exactly the same models as <monospace>Copulas.jl</monospace>.
  While not fully covering out both of these package‚Äôs functionality
  (mostly because the three projects chose different implementation
  paths), <monospace>Copulas.jl</monospace> brings, as a key feature,
  the compliance with the broader ecosystem. The following table
  provides a feature comparison between the three:</p>
  <table-wrap>
    <table>
      <colgroup>
        <col width="30%" />
        <col width="16%" />
        <col width="28%" />
        <col width="26%" />
      </colgroup>
      <thead>
        <tr>
          <th></th>
          <th><monospace>Copulas.jl</monospace></th>
          <th><monospace>DatagenCopulaBased.jl</monospace></th>
          <th><monospace>BivariateCopulas.jl</monospace></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><monospace>Distributions.jl</monospace>‚Äôs API</td>
          <td>Yes</td>
          <td>No</td>
          <td>Yes</td>
        </tr>
        <tr>
          <td>Fitting</td>
          <td>Yes</td>
          <td>No</td>
          <td>No</td>
        </tr>
        <tr>
          <td>Plotting</td>
          <td>No</td>
          <td>No</td>
          <td>Yes</td>
        </tr>
        <tr>
          <td>Available copulas</td>
          <td></td>
          <td></td>
          <td></td>
        </tr>
        <tr>
          <td>- Classic Bivariate</td>
          <td>Yes</td>
          <td>Yes</td>
          <td>Yes</td>
        </tr>
        <tr>
          <td>- Classic Multivariate</td>
          <td>Yes</td>
          <td>Yes</td>
          <td>No</td>
        </tr>
        <tr>
          <td>- Archimedeans</td>
          <td>All of them</td>
          <td>Selected ones</td>
          <td>Selected ones</td>
        </tr>
        <tr>
          <td>- Obscure Bivariate</td>
          <td>Yes</td>
          <td>No</td>
          <td>No</td>
        </tr>
        <tr>
          <td>- Archimedean Chains</td>
          <td>No</td>
          <td>Yes</td>
          <td>No</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <p>Since our primary target is maintainability and readability of the
  implementation, we have not considered the efficiency and the
  performance of the code yet. However, a (limited in scope) benchmark
  on Clayton‚Äôs <monospace>pdf</monospace> shows competitive behavior of
  our implementation w.r.t <monospace>DatagenCopulaBased.jl</monospace>
  (but not <monospace>BivariateCopulas.jl</monospace>). To perform this
  test we use the
  <ext-link ext-link-type="uri" xlink:href="https://github.com/JuliaCI/BenchmarkTools.jl"><monospace>BenchmarkTools.jl</monospace></ext-link>
  (<xref alt="Chen &amp; Revels, 2016" rid="ref-BenchmarkTools" ref-type="bibr">Chen
  &amp; Revels, 2016</xref>) package and generate 10^6 samples for
  Clayton copulas of dimensions 2, 5, 10 with parameter 0.8. The
  execution times (in seconds) are given below:</p>
  <table-wrap>
    <table>
      <thead>
        <tr>
          <th></th>
          <th>2</th>
          <th>5</th>
          <th>10</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><monospace>Copulas.Clayton</monospace></td>
          <td>1.1495578</td>
          <td>1.3448951</td>
          <td>1.8044065</td>
        </tr>
        <tr>
          <td><monospace>BivariateCopulas.Clayton</monospace></td>
          <td>0.1331608</td>
          <td>X</td>
          <td>X</td>
        </tr>
        <tr>
          <td><monospace>DatagenCopulaBased.Clayton</monospace></td>
          <td>1.9868345</td>
          <td>2.4276321</td>
          <td>2.8009263</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <p>Code for these benchmarks in available in the repository.</p>
</sec>
<sec id="examples">
  <title>Examples</title>
  <sec id="sklardist-sampling-and-fitting-examples">
    <title><monospace>SklarDist</monospace>: sampling and fitting
    examples</title>
    <p>The <monospace>Distributions.jl</monospace>‚Äôs API provides a
    <monospace>fit</monospace> function. You may use it to simply fit a
    compound model to some dataset as follows:</p>
    <code language="julia">using Copulas, Distributions, Random

# Define the marginals and the copula, then use Sklar's theorem:
X‚ÇÅ = Gamma(2,3)
X‚ÇÇ = Pareto(0.5)
X‚ÇÉ = Normal(10,0.8)
C = ClaytonCopula(3,0.7)
D = SklarDist(C,(X‚ÇÅ,X‚ÇÇ,X‚ÇÉ))

# Sample as follows: 
x = rand(D,1000)

# You may estimate the model as follows: 
DÃÇ = fit(SklarDist{ClaytonCopula,Tuple{Gamma,Pareto, Normal}}, x)</code>
    <p>The API does not fix the fitting procedure, and only loosely
    specifies it, thus the implemented default might vary on the copula.
    If you want more control, you may turn to Bayesian estimation using
    <monospace>Turing.jl</monospace>:</p>
    <code language="julia">using Turing
@model function model(dataset)
  # Priors
  Œ∏ ~ TruncatedNormal(1.0, 1.0, 0, Inf)
  Œ≥ ~ TruncatedNormal(1.0, 1.0, 0.25, Inf)
  Œ∑ ~ Beta(1,1)
  Œ¥ ~ Exponential(1)

  # Define the model through Sklar's theorem: 
  X‚ÇÅ = Gamma(2,Œ∏)
  X‚ÇÇ = Pareto(Œ≥)
  X‚ÇÉ = Binomial(10,Œ∑)
  C = ClaytonCopula(3,Œ¥)
  D = SklarDist(C,(X‚ÇÅ,X‚ÇÇ,X‚ÇÉ))

  # Add the loglikelihood to the model : 
  Turing.Turing.@addlogprob! loglikelihood(D, dataset)
end</code>
  </sec>
  <sec id="the-archimedean-interface">
    <title>The Archimedean interface</title>
    <p>Archimedean copulas form a large class of copulas that has seen a
    lot of theoretical work. Among others, you may take a look at
    (<xref alt="McNeil &amp; Ne≈°lehov√°, 2009" rid="ref-mcneilMultivariateArchimedeanCopulas2009b" ref-type="bibr">McNeil
    &amp; Ne≈°lehov√°, 2009</xref>). We use
    <ext-link ext-link-type="uri" xlink:href="https://github.com/lrnv/WilliamsonTransforms.jl/"><monospace>WilliamsonTransforms.jl</monospace></ext-link>‚Äôs
    implementation of the Williamson <inline-formula><alternatives>
    <tex-math><![CDATA[d]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>d</mml:mi></mml:math></alternatives></inline-formula>-transform
    to sample from any Archimedean copula, including for example the
    <monospace>ClaytonCopula</monospace> with negative dependence
    parameter in any dimension, which is a first to our knowledge.</p>
    <p>To construct an Archimedean copula, you first need to reference
    its generator through the following API:</p>
    <code language="julia">struct MyGenerator{T} &lt;: Copulas.Generator
    Œ∏::T
end
œï(G::MyGenerator,t) = exp(-G.Œ∏ * t)
Copulas.max_monotony(G::MyGenerator) = Inf
C = ArchimedeanCopula(4,MyGenerator(1.3)) # 4-dimensional copula</code>
    <p>The obtained model automatically gets all copula functionalities
    (pdf, cdf, sampling, dependence measures, etc‚Ä¶). We nevertheless
    have specific implementation for a (large) list of known generators,
    and you may implement some other methods if you know closed form
    formulas for more performance. The use of the (inverse) Williamson
    d-transform allows the technical boundaries of our Archimedean
    implementation to <italic>match</italic> the necessary and
    sufficient conditions for a generator to produce a genuine
    Archimedean copula.</p>
  </sec>
  <sec id="broader-ecosystem">
    <title>Broader ecosystem</title>
    <p>The package is starting to get used in several other places of
    the ecosystem. Among others, we noted:</p>
    <list list-type="bullet">
      <list-item>
        <p>The package
        <ext-link ext-link-type="uri" xlink:href="https://github.com/SciML/GlobalSensitivity.jl"><monospace>GlobalSensitivity.jl</monospace></ext-link>
        exploits <monospace>Copulas.jl</monospace> to provide Shapley
        effects implementation, see
        <ext-link ext-link-type="uri" xlink:href="https://docs.sciml.ai/GlobalSensitivity/stable/tutorials/shapley/">this
        documentation</ext-link>.</p>
      </list-item>
      <list-item>
        <p><ext-link ext-link-type="uri" xlink:href="https://github.com/JuliaActuary/EconomicScenarioGenerators.jl"><monospace>EconomicScenarioGenerators.jl</monospace></ext-link>
        uses <monospace>Copulas.jl</monospace>‚Äôs dependence structures
        to construct multivariate financial assets.</p>
      </list-item>
    </list>
  </sec>
</sec>
<sec id="acknowledgement">
  <title>Acknowledgement</title>
  <p>Santiago Jim√©nez Ramos thanks FACEPE for the full financing of his
  postgraduate studies.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-sklar1959fonctions">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Sklar</surname><given-names>Abe</given-names></name>
      </person-group>
      <article-title>Fonction de r√©partition dont les marges sont donn√©es</article-title>
      <source>Inst. Stat. Univ. Paris</source>
      <year iso-8601-date="1959">1959</year>
      <volume>8</volume>
      <fpage>229</fpage>
      <lpage>231</lpage>
    </element-citation>
  </ref>
  <ref id="ref-r_copula_citation1">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Hofert</surname><given-names>Marius</given-names></name>
        <name><surname>Kojadinovic</surname><given-names>Ivan</given-names></name>
        <name><surname>Maechler</surname><given-names>Martin</given-names></name>
        <name><surname>Yan</surname><given-names>Jun</given-names></name>
      </person-group>
      <source>Copula: Multivariate dependence with copulas</source>
      <year iso-8601-date="2020">2020</year>
      <uri>https://CRAN.R-project.org/package=copula</uri>
    </element-citation>
  </ref>
  <ref id="ref-r_copula_citation2">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <string-name>Jun Yan</string-name>
      </person-group>
      <article-title>Enjoy the joy of copulas: With a package copula</article-title>
      <source>Journal of Statistical Software</source>
      <year iso-8601-date="2007">2007</year>
      <volume>21</volume>
      <issue>4</issue>
      <uri>http://www.jstatsoft.org/v21/i04/</uri>
      <pub-id pub-id-type="doi">10.18637/jss.v021.i04</pub-id>
      <fpage>1</fpage>
      <lpage>21</lpage>
    </element-citation>
  </ref>
  <ref id="ref-r_copula_citation3">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <string-name>Ivan Kojadinovic</string-name>
        <string-name>Jun Yan</string-name>
      </person-group>
      <article-title>Modeling multivariate distributions with continuous margins using the copula R package</article-title>
      <source>Journal of Statistical Software</source>
      <year iso-8601-date="2010">2010</year>
      <volume>34</volume>
      <issue>9</issue>
      <uri>http://www.jstatsoft.org/v34/i09/</uri>
      <pub-id pub-id-type="doi">10.18637/jss.v034.i09</pub-id>
      <fpage>1</fpage>
      <lpage>20</lpage>
    </element-citation>
  </ref>
  <ref id="ref-r_copula_citation4">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <string-name>Marius Hofert</string-name>
        <string-name>Martin M√§chler</string-name>
      </person-group>
      <article-title>Nested Archimedean copulas meet R: The nacopula package</article-title>
      <source>Journal of Statistical Software</source>
      <year iso-8601-date="2011">2011</year>
      <volume>39</volume>
      <issue>9</issue>
      <uri>http://www.jstatsoft.org/v39/i09/</uri>
      <pub-id pub-id-type="doi">10.18637/jss.v039.i09</pub-id>
      <fpage>1</fpage>
      <lpage>20</lpage>
    </element-citation>
  </ref>
  <ref id="ref-nelsen2006">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Nelsen</surname><given-names>Roger B.</given-names></name>
      </person-group>
      <source>An introduction to copulas</source>
      <publisher-name>Springer</publisher-name>
      <publisher-loc>New York</publisher-loc>
      <year iso-8601-date="2006">2006</year>
      <edition>2nd ed</edition>
      <isbn>978-0-387-28659-4</isbn>
    </element-citation>
  </ref>
  <ref id="ref-joe1997">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Joe</surname><given-names>Harry</given-names></name>
      </person-group>
      <source>Multivariate models and multivariate dependence concepts</source>
      <publisher-name>CRC press</publisher-name>
      <year iso-8601-date="1997">1997</year>
      <pub-id pub-id-type="doi">10.1201/9780367803896</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-joe2014">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Joe</surname><given-names>Harry</given-names></name>
      </person-group>
      <source>Dependence modeling with copulas</source>
      <publisher-name>CRC press</publisher-name>
      <year iso-8601-date="2014">2014</year>
    </element-citation>
  </ref>
  <ref id="ref-durantePrinciplesCopulaTheory2015">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Durante</surname><given-names>Fabrizio</given-names></name>
        <name><surname>Sempi</surname><given-names>Carlo</given-names></name>
      </person-group>
      <source>Principles of copula theory</source>
      <publisher-name>Chapman and Hall/CRC</publisher-name>
      <year iso-8601-date="2015">2015</year>
      <pub-id pub-id-type="doi">10.1201/b18674</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-mcneilMultivariateArchimedeanCopulas2009b">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>McNeil</surname><given-names>Alexander J.</given-names></name>
        <name><surname>Ne≈°lehov√°</surname><given-names>Johanna</given-names></name>
      </person-group>
      <article-title>Multivariate Archimedean copulas, d -monotone functions and L1 -norm symmetric distributions</article-title>
      <source>The Annals of Statistics</source>
      <year iso-8601-date="2009-10">2009</year><month>10</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2019-07-09">2019</year><month>07</month><day>09</day></date-in-citation>
      <volume>37</volume>
      <issue>5B</issue>
      <issn>0090-5364</issn>
      <pub-id pub-id-type="doi">10.1214/07-AOS556</pub-id>
      <fpage>3059</fpage>
      <lpage>3097</lpage>
    </element-citation>
  </ref>
  <ref id="ref-djl1">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Besan√ßon</surname><given-names>Mathieu</given-names></name>
        <name><surname>Papamarkou</surname><given-names>Theodore</given-names></name>
        <name><surname>Anthoff</surname><given-names>David</given-names></name>
        <name><surname>Arslan</surname><given-names>Alex</given-names></name>
        <name><surname>Byrne</surname><given-names>Simon</given-names></name>
        <name><surname>Lin</surname><given-names>Dahua</given-names></name>
        <name><surname>Pearson</surname><given-names>John</given-names></name>
      </person-group>
      <article-title>Distributions.jl: Definition and modeling of probability distributions in the JuliaStats ecosystem</article-title>
      <source>Journal of Statistical Software</source>
      <year iso-8601-date="2021">2021</year>
      <volume>98</volume>
      <issue>16</issue>
      <issn>1548-7660</issn>
      <uri>https://www.jstatsoft.org/v098/i16</uri>
      <pub-id pub-id-type="doi">10.18637/jss.v098.i16</pub-id>
      <fpage>1</fpage>
      <lpage>30</lpage>
    </element-citation>
  </ref>
  <ref id="ref-djl2">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Lin</surname><given-names>Dahua</given-names></name>
        <name><surname>White</surname><given-names>John Myles</given-names></name>
        <name><surname>Byrne</surname><given-names>Simon</given-names></name>
        <name><surname>Bates</surname><given-names>Douglas</given-names></name>
        <name><surname>Noack</surname><given-names>Andreas</given-names></name>
        <name><surname>Pearson</surname><given-names>John</given-names></name>
        <name><surname>Arslan</surname><given-names>Alex</given-names></name>
        <name><surname>Squire</surname><given-names>Kevin</given-names></name>
        <name><surname>Anthoff</surname><given-names>David</given-names></name>
        <name><surname>Papamarkou</surname><given-names>Theodore</given-names></name>
        <name><surname>Besan√ßon</surname><given-names>Mathieu</given-names></name>
        <name><surname>Drugowitsch</surname><given-names>Jan</given-names></name>
        <name><surname>Schauer</surname><given-names>Moritz</given-names></name>
        <name><surname>contributors</surname></name>
      </person-group>
      <article-title>JuliaStats/Distributions.jl: a Julia package for probability distributions and associated functions</article-title>
      <year iso-8601-date="2019-07">2019</year><month>07</month>
      <uri>https://doi.org/10.5281/zenodo.2647458</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.2647458</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-turing">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Ge</surname><given-names>Hong</given-names></name>
        <name><surname>Xu</surname><given-names>Kai</given-names></name>
        <name><surname>Ghahramani</surname><given-names>Zoubin</given-names></name>
      </person-group>
      <article-title>Turing: A language for flexible probabilistic inference</article-title>
      <source>International conference on artificial intelligence and statistics, AISTATS 2018, 9-11 april 2018, playa blanca, lanzarote, canary islands, spain</source>
      <year iso-8601-date="2018">2018</year>
      <uri>http://proceedings.mlr.press/v84/ge18b.html</uri>
      <fpage>1682</fpage>
      <lpage>1690</lpage>
    </element-citation>
  </ref>
  <ref id="ref-DatagenCopulaBased_1">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Domino</surname><given-names>Krzysztof</given-names></name>
        <name><surname>Adam</surname></name>
        <name><surname>Laverny</surname><given-names>Oskar</given-names></name>
        <name><surname>TagBot</surname><given-names>Julia</given-names></name>
      </person-group>
      <article-title>Iitis/DatagenCopulaBased.jl: v1.4.2</article-title>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2023-05">2023</year><month>05</month>
      <uri>https://doi.org/10.5281/zenodo.7944064</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.7944064</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-DatagenCopulaBased_2">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Domino</surname><given-names>Krzysztof</given-names></name>
        <name><surname>Glos</surname><given-names>Adam</given-names></name>
      </person-group>
      <article-title>Introducing higher order correlations to marginals‚Äô subset of multivariate data by means of Archimedean copulas</article-title>
      <year iso-8601-date="2018">2018</year>
      <uri>https://arxiv.org/abs/1803.07813</uri>
    </element-citation>
  </ref>
  <ref id="ref-DatagenCopulaBased_3">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Domino</surname><given-names>Krzysztof</given-names></name>
      </person-group>
      <article-title>Selected methods for non-Gaussian data analysis</article-title>
      <year iso-8601-date="2019">2019</year>
      <uri>https://arxiv.org/abs/1811.10486</uri>
    </element-citation>
  </ref>
  <ref id="ref-DatagenCopulaBased_4">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Domino</surname><given-names>Krzysztof</given-names></name>
      </person-group>
      <article-title>Multivariate cumulants in outlier detection for financial data analysis</article-title>
      <source>Physica A: Statistical Mechanics and its Applications</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <volume>558</volume>
      <fpage>124995</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-BivariateCopulas">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Gray</surname><given-names>Ander</given-names></name>
        <name><surname>Behrensdorf</surname><given-names>Jasper</given-names></name>
        <name><surname>amrods</surname></name>
        <name><surname>Schilling</surname><given-names>Christian</given-names></name>
      </person-group>
      <article-title>AnderGray/BivariateCopulas.jl: 0.1.5</article-title>
      <publisher-name>Zenodo</publisher-name>
      <year iso-8601-date="2023-12">2023</year><month>12</month>
      <uri>https://doi.org/10.5281/zenodo.10412898</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.10412898</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-BenchmarkTools">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Chen</surname><given-names>Jiahao</given-names></name>
        <name><surname>Revels</surname><given-names>Jarrett</given-names></name>
      </person-group>
      <article-title>Robust benchmarking in noisy environments</article-title>
      <source>arXiv e-prints</source>
      <year iso-8601-date="2016-08">2016</year><month>08</month>
      <uri>https://arxiv.org/abs/1608.04295</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
