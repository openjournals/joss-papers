<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">4944</article-id>
<article-id pub-id-type="doi">10.21105/joss.04944</article-id>
<title-group>
<article-title>APGG - A Modular C++ Framework for Asymmetric Public
Goods Games</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Rosenthal</surname>
<given-names>Mirko</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-5413-6710</contrib-id>
<name>
<surname>Richter</surname>
<given-names>David J.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="aff" rid="aff-5"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Hübner</surname>
<given-names>Falk</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-0619-4606</contrib-id>
<name>
<surname>Staudacher</surname>
<given-names>Jochen</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-4872-1961</contrib-id>
<name>
<surname>Hintze</surname>
<given-names>Arend</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Kempten University of Applied Sciences,
Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Purdue University Northwest, USA</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>MicroData Analytics, Dalarna University,
Sweden</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>BEACON Center for the Study of Evolution in Action,
Michigan State University, USA</institution>
</institution-wrap>
</aff>
<aff id="aff-5">
<institution-wrap>
<institution>Chonnam National University, South Korea</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2023-07-15">
<day>15</day>
<month>7</month>
<year>2023</year>
</pub-date>
<volume>8</volume>
<issue>89</issue>
<fpage>4944</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Public Goods Games</kwd>
<kwd>Framework</kwd>
<kwd>C++</kwd>
<kwd>Open Source</kwd>
<kwd>Asymmetric Public Goods Games</kwd>
<kwd>Evolutionary Algorithms</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The Asymmetric Public Goods Game (APGG) C++ framework offers an
  easy to use environment to study game theoretical questions.
  Specifically, it is designed to address questions in the domain of
  asymmetric public goods games. The modular architecture allows for a
  vast amount of scenarios and setups for experimenting with different
  public goods games, using easy to change parameters. Users can
  experiment with well mixed and structured populations as well as with
  symmetric and asymmetric payoffs. APGG also features group level
  payoffs and individual payoffs, and different evolutionary selection
  mechanisms
  (<xref alt="Miller et al., 1995" rid="ref-miller1995genetic" ref-type="bibr">Miller
  et al., 1995</xref>) and replication schemes. Results are
  automatically saved in semantic and descriptive structures and can be
  easily visualized with the included Python scripts. This paper aims to
  explain the functionality and the structure of the framework, to show
  the workflow that APGG follows, to present the different modules that
  are available, and to show how APGG can be used to run experiments
  with public goods games on example scenarios.</p>
  <fig>
    <caption><p>APGG
    Logo.<styled-content id="figU003ALogo"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/img/logo300.png" />
  </fig>
</sec>
<sec id="introduction-literature-review">
  <title>Introduction / Literature Review</title>
  <p>Public Good Games illustrate the tragedy of the commons, see Hardin
  (<xref alt="1968" rid="ref-hardin1968tragedy" ref-type="bibr">1968</xref>)
  for the standard reference which is both widely cited and still
  controversially discussed
  (<xref alt="Mildenberger, 2019" rid="ref-mildenberger2019tragedy" ref-type="bibr">Mildenberger,
  2019</xref>). These games have been intensively studied before, with
  an increasing interest in the asymmetric variant of the game
  (<xref alt="Hintze et al., 2020" rid="ref-hintze2020inclusive" ref-type="bibr">Hintze
  et al., 2020</xref>;
  <xref alt="McGinty &amp; Milam, 2013" rid="ref-mcginty2013public" ref-type="bibr">McGinty
  &amp; Milam, 2013</xref>). Typically, game theoretical problems are
  solved using rigourous mathematical analysis, but that approach
  reaches its limits when it comes to the stochastic and random behavior
  of the evolutionary process
  (<xref alt="Adami et al., 2016" rid="ref-adami2016evolutionary" ref-type="bibr">Adami
  et al., 2016</xref>). Consequently, computational models, such as this
  one, are used.</p>
  <p>One problem of using computational models in research, is their
  oftentimes limited expandability. APGG remedies this problem by
  providing a modular framework that is designed to be easily extended
  in a vein similar to Bohm et al.
  (<xref alt="2017" rid="ref-bohm2017mabe" ref-type="bibr">2017</xref>)
  and Richter
  (<xref alt="2019" rid="ref-richter2019evo" ref-type="bibr">2019</xref>).</p>
</sec>
<sec id="what-is-a-public-goods-game">
  <title>What is a Public Goods Game</title>
  <p>The tragedy of the commons describes an important social and
  economical phenomenon that pitches self interest against the interests
  of a group. Players in a Public Goods Game (PGG) can either contribute
  to a common pool (cooperate) or withhold their contribution (defect).
  The money collected in the pool is increased by a multiplicative
  synergy factor, and then equally distributed amongst the players. It
  becomes immediately clear that the defecting players will always
  receive the same as the cooperators, but end up having more money than
  the cooperators due to the amount they withheld before. The tragedy
  specifically describes the dilemma, that if all players would
  cooperate the total amount received by everyone would be higher, but
  the greed (or self interest) of the defectors prevents that favourable
  outcome.</p>
  <p>The question is how to overcome the tragedy of the commons. In
  social societies, often institutions, regulations, and incentives are
  used
  (<xref alt="Fehr &amp; Gächter, 2002" rid="ref-fehr2002altruistic" ref-type="bibr">Fehr
  &amp; Gächter, 2002</xref>;
  <xref alt="Hintze et al., 2020" rid="ref-hintze2020inclusive" ref-type="bibr">Hintze
  et al., 2020</xref>). In the theoretical context, all of this becomes
  abstracted as costly punishment
  (<xref alt="Hardin, 1968" rid="ref-hardin1968tragedy" ref-type="bibr">Hardin,
  1968</xref>). This costly punishment has been shown to affect human
  behavior
  (<xref alt="Fehr &amp; Gächter, 2002" rid="ref-fehr2002altruistic" ref-type="bibr">Fehr
  &amp; Gächter, 2002</xref>) and can indeed lead to the evolution of
  cooperation
  (<xref alt="Hintze &amp; Adami, 2015" rid="ref-hintze2015punishment" ref-type="bibr">Hintze
  &amp; Adami, 2015</xref>). Another option that alters the outcome
  towards cooperation could be asymmetric distribution of resources, as
  it can be found in many animal hierarchies. Hyenas for example have a
  steep despotic index
  (<xref alt="Smith et al., 2007" rid="ref-smith2007rank" ref-type="bibr">Smith
  et al., 2007</xref>) while also cooperating with each other,
  supporting the idea of asymmetric payoffs potentially leading to
  cooperation.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>Studying evolution in biological systems is cumbersome, to say the
  least
  (<xref alt="Lenski, 2017" rid="ref-lenski2017experimental" ref-type="bibr">Lenski,
  2017</xref>). Consequently, using computational models becomes a
  viable alternative. However, for new experiments to build on previous
  results, the modeling software needs to be extendable. This leads to a
  challenging problem. Future users will independently modify the
  software to suit their own needs, with no regard for other users. This
  could create an ever growing tree of alternative versions, that might
  not be compatible with each other. Here, a modular design (see
  <xref alt="[fig:Classes]" rid="figU003AClasses">[fig:Classes]</xref>)
  approach is used, such that possible future users can define custom
  modules. However, those modules will remain interoperable, because
  interfaces are well defined.</p>
</sec>
<sec id="code-overview">
  <title>Code Overview</title>
  <fig>
    <caption><p>A Figure Displaying the Class Structure of
    APGG.<styled-content id="figU003AClasses"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/img/ClassStructure.png" />
  </fig>
  <p><bold>World</bold>: Encapsulates a single experiment. The World
  Class is divided into 4 methods, init, tick (plays the game), evolve
  and fini. The main loop (tick and evolve) is being run within the
  world class and controls the entire game, by calling all the relevant
  classes and methods. All other classes are being initialized within
  the world class. World has no subclasses and is used for every
  experiment.</p>
  <p><bold>Grid</bold>: The grid is home to all organisms (the
  population), and functions as the playing field/game-board for the
  model. Grid does not necessarily have to be a “grid” in a geometric
  sense. All organisms are initialized onto the grid and the population
  will play, compete and evolve on the grid. The grid can either be used
  as a “grid” (spatialGrid), just like the word suggests, where the
  spatial location of the organisms matters and is taken into
  consideration. In the “defaultGrid” mode, where the grid only stores
  the organisms, the placement has no effect on the games and evolution
  (well mixed population). Extending this module allows users to define
  arbitrary population topologies.</p>
  <p><bold>Organism</bold>: The organisms in APGG are the class for the
  agents that participate in the evolutionary public goods games.
  Depending on the grid size, a fixed number of organisms will be
  spawned. Organisms contain a Genome, which in turn holds the
  information that determines how agents act during the game. The
  Genomes are also used for the selection and repopulation process, as
  offspring will be derived from those Genomes by copying them. If users
  want to change how strategies are encoded this class should be
  modified. See Mutator for changing how Genomes are copied.</p>
  <p><bold>Archiver</bold>: The Archiver Class is used to collect data
  during the runtime of the model. It has 2 subclasses. The
  SimpleArchiver, which will write the status of the current generation
  (number of cooperators, defectors) as well as the LODArchiver, which
  will print the whole Line of Descent (for the best organism and his
  ancestors) to a file at the end of each experiment.</p>
  <p><bold>Mutator</bold>: The mutator is responsible for mutating the
  genome of organisms during the selection process. The chance for the
  organisms to mutate is set by the mutationRate parameter. If a random
  value between 0 and 1 exceeds the mutationRate, the genomes of the
  organism will be changed. In addition to the normal (default) mutator,
  there is a threshold mutator, which will reassign the genome a new
  value within a specific range of the current value. Overloading this
  class allows users to implement other mutation schemes or modes.</p>
  <p><bold>PayOffCalculator</bold>: The payoff calculator is the
  calculation class of the APGG framework. It is used to calculate the
  payoff each organism receives based on its decisions. For example, in
  a PGG with punishment, the punishment cost and the punishment fine as
  well as the rewards from cooperation or defection are calculated.
  Other game modes can be implemented by overloading this class.</p>
  <p>The payoff calculation for the PGG with punishment is a two step
  process. In the first step, the base costs, fines, and payoff are
  calculated. The second step calculates the individual payoff based on
  the organism’s decision. Depending on its decision, the organism has
  to pay a punishment cost or a punishment fine out of its individual
  payoff. There are payoff calculators for different scenarios: The
  AsymmetricPayoffCalculator is a calculator, which calculates the
  payoff based on a spatial tier list. Everyone transfers his individual
  payoff into a group pool. After that, everyone gets his individual
  payoff out of this pool based on his rank in the group
  (<xref alt="Smith et al., 2007" rid="ref-smith2007rank" ref-type="bibr">Smith
  et al., 2007</xref>). The GroupLevelPayoffCalculator
  (<xref alt="Hintze et al., 2020" rid="ref-hintze2020inclusive" ref-type="bibr">Hintze
  et al., 2020</xref>) is a calculator where everyone transfers a
  predefined part of his payoff into a group pool for group members to
  share rewards with each other. After everyone has paid into this pool,
  the pool will be split by the number of group members and the value
  will be added to the individual payoff.</p>
</sec>
<sec id="workflow">
  <title>Workflow</title>
  <fig>
    <caption><p>A Figure displaying the Workflow that APGG
    follows.<styled-content id="figU003AWorkflow"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/img/flow300.png" />
  </fig>
  <p>APGG was designed to be an easy-to-use framework for making
  experiments with Public Goods Games available to a wide range of
  users. Hence, the workflow
  <xref alt="[fig:Workflow]" rid="figU003AWorkflow">[fig:Workflow]</xref>
  has been designed to not only please computer scientists but to also
  invite social and biological researchers with basic programming
  skills. To set up and configure an experiment or a set of them, all
  users have to do is edit a csv file in a spreadsheet software of their
  choice. To expand the framework by adding or changing modules only
  basic C++ programming knowledge is recommended.</p>
  <p>The computer model runs using the following steps:</p>
  <list list-type="order">
    <list-item>
      <p>Initialize the grid and create all organisms randomly</p>
    </list-item>
    <list-item>
      <p>Start the main loop for number of generations</p>
    </list-item>
    <list-item>
      <p>Generate all sets of players interacting in games during one
      generation</p>
    </list-item>
    <list-item>
      <p>Evaluate all sets of games</p>
    </list-item>
    <list-item>
      <p>Select those organisms who will reproduce based on their
      payoff</p>
    </list-item>
    <list-item>
      <p>Repopulate the grid using the organisms identified in the
      previous step</p>
    </list-item>
    <list-item>
      <p>Go to step 2, until the total number of desired generations is
      reached</p>
    </list-item>
    <list-item>
      <p>Save all data</p>
    </list-item>
  </list>
</sec>
<sec id="proof-of-concept">
  <title>Proof of Concept</title>
  <table-wrap>
    <table>
      <colgroup>
        <col width="16%" />
        <col width="12%" />
        <col width="12%" />
        <col width="13%" />
        <col width="8%" />
        <col width="13%" />
        <col width="14%" />
        <col width="12%" />
      </colgroup>
      <thead>
        <tr>
          <th>Parameters</th>
          <th><inline-formula><alternatives>
          <tex-math><![CDATA[r]]></tex-math>
          <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>r</mml:mi></mml:math></alternatives></inline-formula></th>
          <th><inline-formula><alternatives>
          <tex-math><![CDATA[\mu]]></tex-math>
          <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>μ</mml:mi></mml:math></alternatives></inline-formula></th>
          <th>Pop. Size</th>
          <th>Group Size</th>
          <th><inline-formula><alternatives>
          <tex-math><![CDATA[\gamma]]></tex-math>
          <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>γ</mml:mi></mml:math></alternatives></inline-formula></th>
          <th><inline-formula><alternatives>
          <tex-math><![CDATA[\beta]]></tex-math>
          <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>β</mml:mi></mml:math></alternatives></inline-formula></th>
          <th><inline-formula><alternatives>
          <tex-math><![CDATA[i]]></tex-math>
          <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>i</mml:mi></mml:math></alternatives></inline-formula></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>Value:</td>
          <td>1.5 to 7.0</td>
          <td>0.02</td>
          <td>1000</td>
          <td>5</td>
          <td>0.2</td>
          <td>0.8</td>
          <td>1</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <p><bold>Table 1</bold>: Parameters used to replicate our first proof
  of concept experiment, where <inline-formula><alternatives>
  <tex-math><![CDATA[r]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>r</mml:mi></mml:math></alternatives></inline-formula>
  is the synergy factor, <inline-formula><alternatives>
  <tex-math><![CDATA[\mu]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>μ</mml:mi></mml:math></alternatives></inline-formula>
  is the mutation rate, <inline-formula><alternatives>
  <tex-math><![CDATA[\gamma]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>γ</mml:mi></mml:math></alternatives></inline-formula>
  is the punishment cost, <inline-formula><alternatives>
  <tex-math><![CDATA[\beta]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>β</mml:mi></mml:math></alternatives></inline-formula>
  is the punishment fine, and <inline-formula><alternatives>
  <tex-math><![CDATA[i]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>i</mml:mi></mml:math></alternatives></inline-formula>
  is the payoff individualism (with <inline-formula><alternatives>
  <tex-math><![CDATA[i = 1]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
  denoting the maximal level of selfishness and thus the classical
  public goods game). The experiment was run for 100,000 generations
  with 100 replicates. The Random Mutator was picked, as was the Random
  Selector. The Repopulator used was the Proportionate Repopulator.</p>
  <p>To illustrate that the software is capable of reproducing
  scientific results, we first repeated an experiment from Hintze &amp;
  Adami
  (<xref alt="2015" rid="ref-hintze2015punishment" ref-type="bibr">2015</xref>).
  In that experiment the synergy factor in the public goods game was
  varied and the outcome of evolution, given that factor, determined.
  When the synergy factor is low, we expect defectors to win, while
  cooperators should thrive when synergy is high. However, in this
  variant of the game, agents can also punish, and punishment can
  modulate the response of agents to the synergy factor. The expectation
  was that punishment should allow agents to cooperate at lower synergy
  factors, and one should observe punishment to increase around this
  critical point. Interestingly, agents’ probabilities to cooperate and
  to punish evolved as expected, and punishment lowered the critical
  point, but the chance to punish went from 0.0 to 0.5 (drifting).
  <xref alt="[fig:Figure6]" rid="figU003AFigure6">[fig:Figure6]</xref>
  confirms both the phenomenon of drifting as well as the fact that at a
  synergy level of around 4.0 there are hardly any defectors left.</p>
  <p>Let us look at the shift of the critical point from 5.0 (without
  punishment) down to a lower level (with punishment) in a little more
  detail. The critical point is defined as the smallest synergy factor
  for which the payoff of a cooperator equals or exceeds the payoff of a
  defector. Hintze &amp; Adami
  (<xref alt="2015" rid="ref-hintze2015punishment" ref-type="bibr">2015</xref>)
  first observed that this critical point depends upon the density of
  punishers <inline-formula><alternatives>
  <tex-math><![CDATA[\rho_{P}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ρ</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  and Hintze et al.
  (<xref alt="2020" rid="ref-hintze2020inclusive" ref-type="bibr">2020</xref>)
  pointed out that in the absence of mutations the critical point can be
  expressed as
  <named-content id="criticalPointWithP" content-type="equation"><disp-formula><alternatives>
  <tex-math><![CDATA[\begin{aligned}
   
  r_{C} = i (1 - \beta \rho_{P}) (k+1) - i + 1  - (1- i) (\beta + \gamma) \rho_{P}
  \end{aligned}]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mtable><mml:mtr><mml:mtd columnalign="right" style="text-align: right"><mml:msub><mml:mi>r</mml:mi><mml:mi>C</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>i</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>β</mml:mi><mml:msub><mml:mi>ρ</mml:mi><mml:mi>P</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>β</mml:mi><mml:mo>+</mml:mo><mml:mi>γ</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:msub><mml:mi>ρ</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula></named-content>
  with <inline-formula><alternatives>
  <tex-math><![CDATA[k+1]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
  standing for the group size. For example, for
  <inline-formula><alternatives>
  <tex-math><![CDATA[\rho_{P}=0.4]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>ρ</mml:mi><mml:mi>P</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0.4</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
  and our setting of parameters, expression
  (<xref alt="1" rid="criticalPointWithP">1</xref>) predicts
  <inline-formula><alternatives>
  <tex-math><![CDATA[r_{C} = 1 \cdot (1 - 0.8 \cdot 0.4) \cdot 5 = 3.4]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>C</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>⋅</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mn>0.8</mml:mn><mml:mo>⋅</mml:mo><mml:mn>0.4</mml:mn><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>⋅</mml:mo><mml:mn>5</mml:mn><mml:mo>=</mml:mo><mml:mn>3.4</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
  without mutations. As expected we observe a transition from defection
  to cooperation for synergy factors between 2.5 and 4.0 in
  <xref alt="[fig:Figure6]" rid="figU003AFigure6">[fig:Figure6]</xref>.</p>
  <fig>
    <caption><p>Evolved agent behavior (y-axes) in the public goods game
    with punishment for different synergy factors (x-axis). The evolved
    likelihood to cooperate (in black, left y-axis) and to punish (in
    red, right y-axis) is shown for 100 replicate experiments per tested
    synergy factor value. Shadows in red and black show the 95%
    confidence intervals respectively. The expected critical point for
    agents not being able to punish is at a synergy factor of 5.0, and
    here we find this critical point to be shifted to a lower level as
    expected.
    <styled-content id="figU003AFigure6"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/img/Figure6.png" />
  </fig>
  <table-wrap>
    <table>
      <colgroup>
        <col width="17%" />
        <col width="13%" />
        <col width="12%" />
        <col width="13%" />
        <col width="9%" />
        <col width="12%" />
        <col width="12%" />
        <col width="13%" />
      </colgroup>
      <thead>
        <tr>
          <th>Parameters</th>
          <th><inline-formula><alternatives>
          <tex-math><![CDATA[r]]></tex-math>
          <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>r</mml:mi></mml:math></alternatives></inline-formula></th>
          <th><inline-formula><alternatives>
          <tex-math><![CDATA[\mu]]></tex-math>
          <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>μ</mml:mi></mml:math></alternatives></inline-formula></th>
          <th>Pop. Size</th>
          <th>Group Size</th>
          <th><inline-formula><alternatives>
          <tex-math><![CDATA[\gamma]]></tex-math>
          <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>γ</mml:mi></mml:math></alternatives></inline-formula></th>
          <th><inline-formula><alternatives>
          <tex-math><![CDATA[\beta]]></tex-math>
          <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>β</mml:mi></mml:math></alternatives></inline-formula></th>
          <th><inline-formula><alternatives>
          <tex-math><![CDATA[i]]></tex-math>
          <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>i</mml:mi></mml:math></alternatives></inline-formula></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>Value:</td>
          <td>1.5 to 7.0</td>
          <td>0.02</td>
          <td>1000</td>
          <td>5</td>
          <td>0</td>
          <td>0</td>
          <td>0.5</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <p><bold>Table 2</bold>: Parameters used to replicate our second proof
  of concept experiment, where <inline-formula><alternatives>
  <tex-math><![CDATA[r]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>r</mml:mi></mml:math></alternatives></inline-formula>
  is the synergy factor, <inline-formula><alternatives>
  <tex-math><![CDATA[\mu]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>μ</mml:mi></mml:math></alternatives></inline-formula>
  is the mutation rate, <inline-formula><alternatives>
  <tex-math><![CDATA[\gamma = \beta = 0]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>γ</mml:mi><mml:mo>=</mml:mo><mml:mi>β</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
  denote that neither a punishment cost nor a punishment fine is
  imposed, and <inline-formula><alternatives>
  <tex-math><![CDATA[i=0.5]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
  is the payoff individualism (which is called the level of selfishness
  <inline-formula><alternatives>
  <tex-math><![CDATA[\zeta]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>ζ</mml:mi></mml:math></alternatives></inline-formula>
  in Hintze et al.
  (<xref alt="2020" rid="ref-hintze2020inclusive" ref-type="bibr">2020</xref>)).
  The experiment was run for 100,000 generations with 100 replicates.
  The Random Mutator was picked, as was the Random Selector. The
  Repopulator used was the Proportionate Repopulator.</p>
  <p>We also confirm a result from Hintze et al.
  (<xref alt="2020" rid="ref-hintze2020inclusive" ref-type="bibr">2020</xref>).
  Again, the synergy factor in the public goods game was varied and the
  outcome of evolution, given that factor, determined. In this variant
  of the game, there are neither fines nor costs for punishment.
  However, we impose a payoff individualism of
  <inline-formula><alternatives>
  <tex-math><![CDATA[i=0.5]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>,
  meaning that players keep only half of their individual payoffs
  whereas the other half is transferred into a pool and then distributed
  evenly among the group members. Expression
  (<xref alt="1" rid="criticalPointWithP">1</xref>) predicts
  <inline-formula><alternatives>
  <tex-math><![CDATA[r_{C} = 0.5 \cdot 5 - 0.5 + 1 = 3]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>C</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn><mml:mo>⋅</mml:mo><mml:mn>5</mml:mn><mml:mo>−</mml:mo><mml:mn>0.5</mml:mn><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>=</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
  implying that as soon as the synergy factor exceeds 3.0 cooperators
  will benefit from a larger payoff than defectors.
  <xref alt="[fig:secondProof]" rid="figU003AsecondProof">[fig:secondProof]</xref>
  confirms the shift of the critical point from 5.0 (classical public
  goods game, <inline-formula><alternatives>
  <tex-math><![CDATA[i=1]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>)
  down to a synergy factor of 3.0 with a probability to cooperate of 0.5
  for that case. It also displays the gradual transition from defection
  to cooperation in the presence of mutations reported in Hintze et al.
  (<xref alt="2020" rid="ref-hintze2020inclusive" ref-type="bibr">2020</xref>),
  Figure 1. The probability to punish is drifting throughout the
  experiment as expected.</p>
  <fig>
    <caption><p>Evolved agent behavior (y-axes) in the public goods game
    with punishment for different synergy factors (x-axis). The evolved
    likelihood to cooperate (in black, left y-axis) and to punish (in
    red, right y-axis) is shown for 100 replicate experiments per tested
    synergy factor value. Shadows in red and black show the 95%
    confidence intervals respectively. The expected critical point for
    agents in the classical public goods game
    (<inline-formula><alternatives>
    <tex-math><![CDATA[i=1]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>)
    is at a synergy factor of 5.0, and here we find this critical point
    to be shifted to a lower level around 3.0 as expected.
    <styled-content id="figU003AsecondProof"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/img/secondProof.png" />
  </fig>
</sec>
<sec id="conclusion">
  <title>Conclusion</title>
  <p>After the initial development of the APGG software different groups
  of students performed additional experiments with ease, supporting the
  usability design goal. Extensions to other population structures like
  graphs were also attempted and proved to be easily achievable in
  practice, thus underlining the quality of the modular design of the
  tool. Further, we could accurately replicate already existing results
  from previous publications using our tool (see
  <xref alt="[fig:Figure6]" rid="figU003AFigure6">[fig:Figure6]</xref>
  and
  <xref alt="[fig:secondProof]" rid="figU003AsecondProof">[fig:secondProof]</xref>).
  Lastly, we used our tool to conduct original research on another
  public goods game featuring asymmetric payoff redistribution
  (<xref alt="Hintze et al., 2020" rid="ref-hintze2020inclusive" ref-type="bibr">Hintze
  et al., 2020</xref>). We look forward to further extending our
  software and hope other researchers will join our endeavor and benefit
  from our tool.</p>
</sec>
<sec id="outlook">
  <title>Outlook</title>
  <p>Since APGG is written in a modular fashion, adding to and expanding
  on the existing code base should be easy to do, and therefore our tool
  allows anyone who wants to conduct experiments to write their specific
  use cases into APGG. Creating these extentions has already been tested
  (<xref alt="Hintze et al., 2020" rid="ref-hintze2020inclusive" ref-type="bibr">Hintze
  et al., 2020</xref>), and shown to work easily. Further additions can
  also be contributed to the github repository via pull requests. APGG
  will remain under further development for future experiments by Jochen
  Staudacher (Kempten University, Germany) and Arend Hintze (Dalarna
  University, Sweden).</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The authors would like to thank Marcel Stimberg and Yanjie Zhou for
  their careful reviews which helped improve both our software and paper
  as well as Antonello Lobianco for some helpful comments and
  suggestions. We are indebted to Nikoleta Glynatsi for editing our
  paper and for always being there for our procedural questions. Jochen
  Staudacher thanks the funding of the Bavarian State Ministry of
  Science and Arts.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-miller1995genetic">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Miller</surname><given-names>Brad L</given-names></name>
        <name><surname>Goldberg</surname><given-names>David E</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Genetic algorithms, tournament selection, and the effects of noise</article-title>
      <source>Complex systems</source>
      <publisher-name>[Champaign, IL, USA: Complex Systems Publications, Inc., c1987-</publisher-name>
      <year iso-8601-date="1995">1995</year>
      <volume>9</volume>
      <issue>3</issue>
      <uri>https://doi.org/10.1162/evco.1996.4.2.113</uri>
      <pub-id pub-id-type="doi">10.1162/evco.1996.4.2.113</pub-id>
      <fpage>193</fpage>
      <lpage>212</lpage>
    </element-citation>
  </ref>
  <ref id="ref-hardin1968tragedy">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hardin</surname><given-names>Garrett</given-names></name>
      </person-group>
      <article-title>The tragedy of the commons: The population problem has no technical solution; it requires a fundamental extension in morality.</article-title>
      <source>science</source>
      <publisher-name>American Association for the Advancement of Science</publisher-name>
      <year iso-8601-date="1968">1968</year>
      <volume>162</volume>
      <issue>3859</issue>
      <uri>https://doi.org/10.1126/science.162.3859.1243</uri>
      <pub-id pub-id-type="doi">10.1126/science.162.3859.1243</pub-id>
      <fpage>1243</fpage>
      <lpage>1248</lpage>
    </element-citation>
  </ref>
  <ref id="ref-mildenberger2019tragedy">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Mildenberger</surname><given-names>Matto</given-names></name>
      </person-group>
      <article-title>The tragedy of the tragedy of the commons</article-title>
      <publisher-name>https://blogs.scientificamerican.com/voices/the-tragedy-of-the-tragedy-of-the-commons/</publisher-name>
      <year iso-8601-date="2019">2019</year>
    </element-citation>
  </ref>
  <ref id="ref-mcginty2013public">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>McGinty</surname><given-names>Matthew</given-names></name>
        <name><surname>Milam</surname><given-names>Garrett</given-names></name>
      </person-group>
      <article-title>Public goods provision by asymmetric agents: Experimental evidence</article-title>
      <source>Social Choice and Welfare</source>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2013">2013</year>
      <volume>40</volume>
      <issue>4</issue>
      <uri>https://doi.org/10.1007/s00355-012-0658-2</uri>
      <pub-id pub-id-type="doi">10.1007/s00355-012-0658-2</pub-id>
      <fpage>1159</fpage>
      <lpage>1177</lpage>
    </element-citation>
  </ref>
  <ref id="ref-hintze2020inclusive">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hintze</surname><given-names>Arend</given-names></name>
        <name><surname>Staudacher</surname><given-names>Jochen</given-names></name>
        <name><surname>Gelhar</surname><given-names>Katja</given-names></name>
        <name><surname>Pothmann</surname><given-names>Alexander</given-names></name>
        <name><surname>Rasch</surname><given-names>Juliana</given-names></name>
        <name><surname>Wildegger</surname><given-names>Daniel</given-names></name>
      </person-group>
      <article-title>Inclusive groups can avoid the tragedy of the commons</article-title>
      <source>Scientific reports</source>
      <publisher-name>Nature Publishing Group</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <volume>10</volume>
      <issue>1</issue>
      <uri>https://doi.org/10.1038/s41598-020-79731-y</uri>
      <pub-id pub-id-type="doi">10.1038/s41598-020-79731-y</pub-id>
      <fpage>1</fpage>
      <lpage>8</lpage>
    </element-citation>
  </ref>
  <ref id="ref-adami2016evolutionary">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Adami</surname><given-names>Christoph</given-names></name>
        <name><surname>Schossau</surname><given-names>Jory</given-names></name>
        <name><surname>Hintze</surname><given-names>Arend</given-names></name>
      </person-group>
      <article-title>Evolutionary game theory using agent-based methods</article-title>
      <source>Physics of life reviews</source>
      <publisher-name>Elsevier</publisher-name>
      <year iso-8601-date="2016">2016</year>
      <volume>19</volume>
      <uri>https://doi.org/10.1016/j.plrev.2016.08.015</uri>
      <pub-id pub-id-type="doi">10.1016/j.plrev.2016.08.015</pub-id>
      <fpage>1</fpage>
      <lpage>26</lpage>
    </element-citation>
  </ref>
  <ref id="ref-bohm2017mabe">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Bohm</surname><given-names>Clifford</given-names></name>
        <name><surname>Hintze</surname><given-names>Arend</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>MABE (modular agent based evolver): A framework for digital evolution research</article-title>
      <source>ECAL 2017, the fourteenth european conference on artificial life</source>
      <publisher-name>MIT Press</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <uri>https://doi.org/10.7551/ecal_a_016</uri>
      <pub-id pub-id-type="doi">10.7551/ecal_a_016</pub-id>
      <fpage>76</fpage>
      <lpage>83</lpage>
    </element-citation>
  </ref>
  <ref id="ref-fehr2002altruistic">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Fehr</surname><given-names>Ernst</given-names></name>
        <name><surname>Gächter</surname><given-names>Simon</given-names></name>
      </person-group>
      <article-title>Altruistic punishment in humans</article-title>
      <source>Nature</source>
      <publisher-name>Nature Publishing Group</publisher-name>
      <year iso-8601-date="2002">2002</year>
      <volume>415</volume>
      <issue>6868</issue>
      <uri>https://doi.org/10.1038/415137a</uri>
      <pub-id pub-id-type="doi">10.1038/415137a</pub-id>
      <fpage>137</fpage>
      <lpage>140</lpage>
    </element-citation>
  </ref>
  <ref id="ref-hintze2015punishment">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hintze</surname><given-names>Arend</given-names></name>
        <name><surname>Adami</surname><given-names>Christoph</given-names></name>
      </person-group>
      <article-title>Punishment in public goods games leads to meta-stable phase transitions and hysteresis</article-title>
      <source>Physical biology</source>
      <publisher-name>IOP Publishing</publisher-name>
      <year iso-8601-date="2015">2015</year>
      <volume>12</volume>
      <issue>4</issue>
      <uri>https://doi.org/10.1088/1478-3975/12/4/046005</uri>
      <pub-id pub-id-type="doi">10.1088/1478-3975/12/4/046005</pub-id>
      <fpage>046005</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-smith2007rank">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Smith</surname><given-names>Jennifer E</given-names></name>
        <name><surname>Memenis</surname><given-names>Sandra K</given-names></name>
        <name><surname>Holekamp</surname><given-names>Kay E</given-names></name>
      </person-group>
      <article-title>Rank-related partner choice in the fission–fusion society of the spotted hyena (crocuta crocuta)</article-title>
      <source>Behavioral Ecology and Sociobiology</source>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2007">2007</year>
      <volume>61</volume>
      <issue>5</issue>
      <uri>https://doi.org/10.1007/s00265-006-0305-y</uri>
      <pub-id pub-id-type="doi">10.1007/s00265-006-0305-y</pub-id>
      <fpage>753</fpage>
      <lpage>765</lpage>
    </element-citation>
  </ref>
  <ref id="ref-lenski2017experimental">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lenski</surname><given-names>Richard E</given-names></name>
      </person-group>
      <article-title>Experimental evolution and the dynamics of adaptation and genome evolution in microbial populations</article-title>
      <source>The ISME journal</source>
      <publisher-name>Nature Publishing Group</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <volume>11</volume>
      <issue>10</issue>
      <uri>https://doi.org/10.1038/ismej.2017.69</uri>
      <pub-id pub-id-type="doi">10.1038/ismej.2017.69</pub-id>
      <fpage>2181</fpage>
      <lpage>2194</lpage>
    </element-citation>
  </ref>
  <ref id="ref-richter2019evo">
    <element-citation publication-type="thesis">
      <person-group person-group-type="author">
        <name><surname>Richter</surname><given-names>David Jona</given-names></name>
      </person-group>
      <article-title>Evolutionary computational modeling in a 3D physics environment</article-title>
      <publisher-name>Kempten University</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <uri>https://doi.org/10.13140/RG.2.2.27100.72322/2</uri>
      <pub-id pub-id-type="doi">10.13140/RG.2.2.27100.72322/2</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
