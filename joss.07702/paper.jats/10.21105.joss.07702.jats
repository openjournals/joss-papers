<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">7702</article-id>
<article-id pub-id-type="doi">10.21105/joss.07702</article-id>
<title-group>
<article-title>Minterpy: multivariate polynomial interpolation in
Python</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-8587-7730</contrib-id>
<name>
<surname>Wicaksono</surname>
<given-names>Damar</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-6182-1481</contrib-id>
<name>
<surname>Acosta</surname>
<given-names>Uwe Hernandez</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-4852-2839</contrib-id>
<name>
<surname>Veettil</surname>
<given-names>Sachin Krishnan Thekke</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-1819-6975</contrib-id>
<name>
<surname>Kissinger</surname>
<given-names>Jannik</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-9214-8253</contrib-id>
<name>
<surname>Hecht</surname>
<given-names>Michael</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Center for Advanced Systems Understanding (CASUS) -
Helmholtz-Zentrum Dresden-Rossendorf (HZDR), Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>University of Wrocław, Poland</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Max Planck Institute of Molecular Cell Biology and
Genetics, Dresden, Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>Technische Universität Dresden, Germany</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-09-30">
<day>30</day>
<month>9</month>
<year>2024</year>
</pub-date>
<volume>10</volume>
<issue>108</issue>
<fpage>7702</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>numerical computing</kwd>
<kwd>function approximation</kwd>
<kwd>polynomial interpolation</kwd>
<kwd>polynomial regression</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Interpolation is essential in various computational tasks,
  including function approximation, curve fitting, numerical
  integration, differential geometry, spectral methods, optimization,
  and uncertainty quantification.</p>
  <p>Minterpy is an open-source Python package designed for multivariate
  polynomial interpolation. It provides stable and accurate
  interpolating polynomials for approximating a wide range of functions.
  Key features include:</p>
  <list list-type="bullet">
    <list-item>
      <p>Polynomial interpolation on properly selected nodes and
      regression on arbitrary nodes.</p>
    </list-item>
    <list-item>
      <p>Differentiation and integration operations on the
      polynomials.</p>
    </list-item>
    <list-item>
      <p>Addition, subtraction, and multiplication operations on the
      polynomials.</p>
    </list-item>
  </list>
  <p>Minterpy’s long-term vision is to provide researchers and engineers
  a software solution that mitigates the curse of dimensionality
  commonly associated with interpolation tasks.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>As a means of approximating functions, global polynomials—where a
  single polynomial is defined over the entire domain—offer several
  advantages. For sufficiently smooth functions, global polynomials can
  achieve high accuracy with a smaller number of data points (sampled
  over the entire domain) compared to local piecewise polynomials.
  Additionally, their relatively simple structure facilitates many
  common numerical operations. These operations include differentiation,
  integration, addition, subtraction, and multiplication
  (<xref alt="Trefethen, 2019" rid="ref-Trefethen2019" ref-type="bibr">Trefethen,
  2019</xref>).</p>
  <p>The Stone-Weierstrass theorem establishes that any continuous
  function on a bounded domain in multiple dimensions can be
  approximated uniformly to arbitrary precision by multivariate global
  polynomials
  (<xref alt="de Branges, 1959" rid="ref-Branges1959" ref-type="bibr">de
  Branges, 1959</xref>). However, the theorem does not specify a
  concrete method for constructing such approximating polynomials.
  Various techniques can be employed to build approximating polynomials,
  such as least square approximations. Minterpy focuses on constructing
  approximating global polynomials using one of the earliest and most
  established methods: interpolation
  (<xref alt="Goldstine, 1977" rid="ref-Goldstine1977" ref-type="bibr">Goldstine,
  1977</xref>).</p>
  <p>Polynomial interpolation is based on the principle that, in one
  dimension, there exists a unique polynomial
  <inline-formula><alternatives>
  <tex-math><![CDATA[Q_{f, n}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>f</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>
  of degree <inline-formula><alternatives>
  <tex-math><![CDATA[n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>
  that interpolates a function <inline-formula><alternatives>
  <tex-math><![CDATA[f: \Omega \to \mathbb{R}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>f</mml:mi><mml:mo>:</mml:mo><mml:mi>Ω</mml:mi><mml:mo>→</mml:mo><mml:mi>ℝ</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  in a bounded domain <inline-formula><alternatives>
  <tex-math><![CDATA[\Omega]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>Ω</mml:mi></mml:math></alternatives></inline-formula>
  with <inline-formula><alternatives>
  <tex-math><![CDATA[n + 1]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
  <italic>distinct (unisolvent<xref ref-type="fn" rid="fn1">1</xref>)
  interpolation nodes (or points)</italic>
  <inline-formula><alternatives>
  <tex-math><![CDATA[P_n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>P</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  such that
  <named-content id="eqU003Ainterpolation-condition" content-type="equation"><disp-formula><alternatives>
  <tex-math><![CDATA[
  Q_{f, n} (p_i) = f(p_i),\; \forall p_i \in P_n \subset \Omega,\; i = 0, \ldots, n.]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>f</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="0.278em"></mml:mspace><mml:mo>∀</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>⊂</mml:mo><mml:mi>Ω</mml:mi><mml:mo>,</mml:mo><mml:mspace width="0.278em"></mml:mspace><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mi>.</mml:mi></mml:mrow></mml:math></alternatives></disp-formula></named-content>
  Polynomial interpolation has its roots in the works of Newton, Euler,
  Lagrange, and others
  (<xref alt="Meijering, 2002" rid="ref-Meijering2002" ref-type="bibr">Meijering,
  2002</xref>), and its significance in mathematics and computing is
  well-established
  (<xref alt="Cools, 2002" rid="ref-Cools2002" ref-type="bibr">Cools,
  2002</xref>;
  <xref alt="Xiu, 2009" rid="ref-Xiu2009" ref-type="bibr">Xiu,
  2009</xref>).</p>
  <p>Despite their aforementioned advantages as global polynomials,
  global interpolating polynomials have a controversial reputation due
  to several misconceptions
  (<xref alt="Trefethen, 2011" rid="ref-Trefethen2011" ref-type="bibr">Trefethen,
  2011</xref>,
  <xref alt="2016" rid="ref-Trefethen2016" ref-type="bibr">2016</xref>,
  <xref alt="2017a" rid="ref-Trefethen2017" ref-type="bibr">2017a</xref>):</p>
  <list list-type="bullet">
    <list-item>
      <p>They are often thought to be prone to Runge’s phenomenon,
      whereby increasing the degree of interpolating polynomials worsens
      the approximation quality.</p>
    </list-item>
    <list-item>
      <p>Their evaluation is frequently believed to be numerically
      unstable and susceptible to round-off errors.</p>
    </list-item>
    <list-item>
      <p>Their extension to multiple dimensions is seen as severely
      limited by the curse of dimensionality, particularly when using
      tensor product constructions, which causes the required number of
      interpolation nodes (i.e., data points) to grow exponentially with
      the number of spatial dimensions.</p>
    </list-item>
    <list-item>
      <p>They are said to generally fail to converge to the approximated
      function as the degree increases, with Faber’s theorem often cited
      to justify this assertion. This view has contributed to a more
      generally pessimistic outlook on the use of interpolating
      polynomials for function approximation.</p>
    </list-item>
  </list>
  <p>Minterpy addresses these issues by:</p>
  <list list-type="bullet">
    <list-item>
      <p>Constructing multivariate interpolating polynomials using
      appropriate interpolation nodes (e.g., Chebyshev-Lobatto nodes) to
      help mitigate Runge’s
      phenomenon<xref ref-type="fn" rid="fn2">2</xref>;</p>
    </list-item>
    <list-item>
      <p>Representing the interpolating polynomials in the Newton basis,
      combined with Leja ordering of the interpolation nodes to ensure
      stable evaluation
      (<xref alt="Breuß et al., 2018" rid="ref-Breuss2018" ref-type="bibr">Breuß
      et al., 2018</xref>;
      <xref alt="Reichel, 1990" rid="ref-Reichel1990" ref-type="bibr">Reichel,
      1990</xref>;
      <xref alt="Tal-Ezer, 1991" rid="ref-TalEzer1991" ref-type="bibr">Tal-Ezer,
      1991</xref>);</p>
    </list-item>
    <list-item>
      <p>Using a multi-index set to represent the multivariate
      polynomials, which can be tailored to mitigate the curse of
      dimensionality while preserving the approximation power of the
      interpolating polynomials (more on this in the next section).</p>
    </list-item>
  </list>
  <p>While Faber’s theorem shows that no <italic>interpolating
  polynomial</italic> can converge for <italic>all</italic> continuous
  functions, it has been demonstrated that if the function is reasonably
  smooth, the interpolating polynomials do converge at high algebraic
  rates for common regular (Lipschitz
  continuous<xref ref-type="fn" rid="fn3">3</xref>) functions and at
  geometric rates for analytic functions
  (<xref alt="Trefethen, 2017b" rid="ref-Trefethen2017a" ref-type="bibr">Trefethen,
  2017b</xref>).</p>
  <p>Minterpy shares similar objectives and functionality with Chebfun
  (<xref alt="Driscoll et al., 2014" rid="ref-Driscoll2014" ref-type="bibr">Driscoll
  et al., 2014</xref>), a popular MATLAB
  package<xref ref-type="fn" rid="fn4">4</xref> designed for numerical
  computations using interpolating polynomials, specifically Chebyshev
  polynomials. Chebfun provides features such as root finding,
  differentiation, and integration for function approximation in up to
  three dimensions. In contrast, Minterpy supports higher dimensions but
  with fewer features.</p>
  <p>Several Python packages, such as Chaospy
  (<xref alt="Feinberg &amp; Langtangen, 2015" rid="ref-Feinberg2015" ref-type="bibr">Feinberg
  &amp; Langtangen, 2015</xref>), equadratures
  (<xref alt="Seshadri &amp; Parks, 2017" rid="ref-Seshadri2017" ref-type="bibr">Seshadri
  &amp; Parks, 2017</xref>), PyGPC
  (<xref alt="Weise et al., 2020" rid="ref-Weise2020" ref-type="bibr">Weise
  et al., 2020</xref>), PyThia
  (<xref alt="Hegemann &amp; Heidenreich, 2023" rid="ref-Hegemann2023" ref-type="bibr">Hegemann
  &amp; Heidenreich, 2023</xref>), and UncertainSci
  (<xref alt="Tate et al., 2023" rid="ref-Tate2023" ref-type="bibr">Tate
  et al., 2023</xref>), provide polynomial-based function
  approximations, primarily for uncertainty quantification (UQ) using
  generalized polynomial chaos expansion
  (<xref alt="Xiu &amp; Karniadakis, 2002" rid="ref-Xiu2002" ref-type="bibr">Xiu
  &amp; Karniadakis, 2002</xref>). These tools frame problems as UQ
  tasks, where inputs are modeled probabilistically. With few exceptions
  (notably Chaospy), the resulting polynomials are primarily used for
  function approximations, accompanied by additional post-processing
  utilities tailored to UQ tasks (e.g., uncertainty propagation,
  sensitivity analysis). In contrast, Minterpy offers a simpler, UQ-free
  approach to function approximation using interpolating polynomials,
  with fewer barriers to entry, and includes several mathematical
  operations on the polynomials.</p>
  <p>Several other Python packages construct polynomial approximations
  from data. SciPy
  (<xref alt="Virtanen et al., 2020" rid="ref-Virtanen2020" ref-type="bibr">Virtanen
  et al., 2020</xref>) provides multivariate interpolation methods
  (e.g., linear, nearest, pchip<xref ref-type="fn" rid="fn5">5</xref>)
  for rectilinear grids. ndsplines
  (<xref alt="Margolis &amp; Lyons, 2019" rid="ref-Margolis2019" ref-type="bibr">Margolis
  &amp; Lyons, 2019</xref>) efficiently implements tensor-product
  multivariate B-splines that can be differentiated and
  anti-differentiated. Unlike Minterpy, these tools rely on piecewise
  local polynomials and are tailored for input/output data pairs.
  Familiar and widely used, piecewise polynomials—especially
  splines—remain established tools for polynomial interpolation
  tasks.</p>
  <p>In summary, while not a universal tool for all function
  approximation problems, Minterpy offers a robust solution for
  approximating a wide range of multidimensional Lipschitz continuous
  functions using accurate and stable polynomials. Once obtained, these
  polynomials can be readily manipulated using standard arithmetic
  operations, such as addition and multiplication, as well as calculus
  operations, like differentiation and integration. The significance of
  this capability extends beyond function approximation, as many
  numerical methods (e.g., root finding, optimization) can be boiled
  down to these fundamental operations on functions. By leveraging
  Minterpy’s polynomials, users can conveniently carry out symbolic-like
  computations that would normally require direct manipulation of
  function values.</p>
</sec>
<sec id="package-overview">
  <title>Package overview</title>
  <p>Consider an <inline-formula><alternatives>
  <tex-math><![CDATA[m]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>m</mml:mi></mml:math></alternatives></inline-formula>-dimensional
  function <inline-formula><alternatives>
  <tex-math><![CDATA[f: \boldsymbol{\Omega} \subset \mathbb{R}^m \to \mathbb{R}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>f</mml:mi><mml:mo>:</mml:mo><mml:mi>𝛀</mml:mi><mml:mo>⊂</mml:mo><mml:msup><mml:mi>ℝ</mml:mi><mml:mi>m</mml:mi></mml:msup><mml:mo>→</mml:mo><mml:mi>ℝ</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>,
  defined on a hypercube. Minterpy interpolates the function using a
  polynomial expansion in the Lagrange basis
  <named-content id="eqU003Ainterpolating-polynomial" content-type="equation"><disp-formula><alternatives>
  <tex-math><![CDATA[
  f (\boldsymbol{x}) \approx Q (\boldsymbol{x}) = \sum_{\boldsymbol{\alpha} \in A} f(\boldsymbol{p}_{\boldsymbol{\alpha}}) \, L_{\boldsymbol{\alpha}} (\boldsymbol{x}),]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>≈</mml:mo><mml:mi>Q</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>𝛂</mml:mi><mml:mo>∈</mml:mo><mml:mi>A</mml:mi></mml:mrow></mml:munder><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>𝐩</mml:mi><mml:mi>𝛂</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mspace width="0.167em"></mml:mspace><mml:msub><mml:mi>L</mml:mi><mml:mi>𝛂</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula></named-content>
  where <inline-formula><alternatives>
  <tex-math><![CDATA[A \subseteq \mathbb{N}^m]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>A</mml:mi><mml:mo>⊆</mml:mo><mml:msup><mml:mi>ℕ</mml:mi><mml:mi>m</mml:mi></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>,
  <inline-formula><alternatives>
  <tex-math><![CDATA[L_{\boldsymbol{\alpha}}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>L</mml:mi><mml:mi>𝛂</mml:mi></mml:msub></mml:math></alternatives></inline-formula>,
  and <inline-formula><alternatives>
  <tex-math><![CDATA[\boldsymbol{p}_{\boldsymbol{\alpha}}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>𝐩</mml:mi><mml:mi>𝛂</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  are the multi-index set, the Lagrange basis polynomial, and the
  unisolvent node that correspond to the index element
  <inline-formula><alternatives>
  <tex-math><![CDATA[\boldsymbol{\alpha}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>𝛂</mml:mi></mml:math></alternatives></inline-formula>,
  respectively. The set <inline-formula><alternatives>
  <tex-math><![CDATA[\{ \boldsymbol{p}_{\boldsymbol{\alpha}} \}_{\boldsymbol{\alpha} \in A}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="false" form="prefix">{</mml:mo><mml:msub><mml:mi>𝐩</mml:mi><mml:mi>𝛂</mml:mi></mml:msub><mml:msub><mml:mo stretchy="false" form="postfix">}</mml:mo><mml:mrow><mml:mi>𝛂</mml:mi><mml:mo>∈</mml:mo><mml:mi>A</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>
  forms the interpolation grid.</p>
  <p>Each basis polynomial satisfies the Kronecker delta condition
  <disp-formula><alternatives>
  <tex-math><![CDATA[
  L_{\boldsymbol{\alpha}} (p_{\boldsymbol{\beta}}) = \delta_{\boldsymbol{\alpha}, \boldsymbol{\beta}},\;\; p_{\boldsymbol{\beta}} \in \{ \boldsymbol{p}_{\boldsymbol{\alpha}} \}_{\boldsymbol{\alpha} \in A},\;\; \boldsymbol{\alpha} \in A,
  ]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>𝛂</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>𝛃</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>δ</mml:mi><mml:mrow><mml:mi>𝛂</mml:mi><mml:mo>,</mml:mo><mml:mi>𝛃</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mspace width="0.278em"></mml:mspace><mml:mspace width="0.278em"></mml:mspace><mml:msub><mml:mi>p</mml:mi><mml:mi>𝛃</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mo stretchy="false" form="prefix">{</mml:mo><mml:msub><mml:mi>𝐩</mml:mi><mml:mi>𝛂</mml:mi></mml:msub><mml:msub><mml:mo stretchy="false" form="postfix">}</mml:mo><mml:mrow><mml:mi>𝛂</mml:mi><mml:mo>∈</mml:mo><mml:mi>A</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mspace width="0.278em"></mml:mspace><mml:mspace width="0.278em"></mml:mspace><mml:mi>𝛂</mml:mi><mml:mo>∈</mml:mo><mml:mi>A</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
  ensuring <inline-formula><alternatives>
  <tex-math><![CDATA[Q(\boldsymbol{x})]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>Q</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  in
  <xref alt="Equation 2" rid="eqU003Ainterpolating-polynomial">Equation 2</xref>
  is an interpolating polynomial.</p>
  <p>The multi-index set <inline-formula><alternatives>
  <tex-math><![CDATA[A]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>A</mml:mi></mml:math></alternatives></inline-formula>
  determines polynomial coefficients, unisolvent nodes, and function
  evaluations. In Minterpy, the default is a downward-closed set
  <inline-formula><alternatives>
  <tex-math><![CDATA[A_{m, n, p}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>
  with spatial dimension <inline-formula><alternatives>
  <tex-math><![CDATA[m \in \mathbb{N}_{> 0}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>ℕ</mml:mi><mml:mrow><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>,
  polynomial degree <inline-formula><alternatives>
  <tex-math><![CDATA[n \in \mathbb{N}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mi>ℕ</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>,
  and <inline-formula><alternatives>
  <tex-math><![CDATA[\ell_p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mo>ℓ</mml:mo><mml:mi>p</mml:mi></mml:msub></mml:math></alternatives></inline-formula>-degree
  <inline-formula><alternatives>
  <tex-math><![CDATA[p \in \mathbb{R}_{> 0}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>ℝ</mml:mi><mml:mrow><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>.
  The set is defined as <disp-formula><alternatives>
  <tex-math><![CDATA[  
  A_{m, n, p} = \{ \boldsymbol{\alpha} \in \mathbb{N}^m: \lVert \boldsymbol{\alpha} \rVert_p = (\alpha_1^p + \cdots + \alpha_m^p)^{1/p} \leq n \}.  
  ]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>A</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo stretchy="false" form="prefix">{</mml:mo><mml:mi>𝛂</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mi>ℕ</mml:mi><mml:mi>m</mml:mi></mml:msup><mml:mo>:</mml:mo><mml:mo stretchy="false" form="prefix">∥</mml:mo><mml:mi>𝛂</mml:mi><mml:msub><mml:mo stretchy="false" form="postfix">∥</mml:mo><mml:mi>p</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msubsup><mml:mi>α</mml:mi><mml:mn>1</mml:mn><mml:mi>p</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:mi>⋯</mml:mi><mml:mo>+</mml:mo><mml:msubsup><mml:mi>α</mml:mi><mml:mi>m</mml:mi><mml:mi>p</mml:mi></mml:msubsup><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mi>/</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msup><mml:mo>≤</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false" form="postfix">}</mml:mo><mml:mi>.</mml:mi></mml:mrow></mml:math></alternatives></disp-formula>
  Here, typical choices for <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula>
  are <inline-formula><alternatives>
  <tex-math><![CDATA[1.0]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>1.0</mml:mn></mml:math></alternatives></inline-formula>,
  <inline-formula><alternatives>
  <tex-math><![CDATA[2.0]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>2.0</mml:mn></mml:math></alternatives></inline-formula>,
  and <inline-formula><alternatives>
  <tex-math><![CDATA[\infty]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>∞</mml:mi></mml:math></alternatives></inline-formula>,
  representing the total, Euclidean, and maximum degree
  (tensor-product), respectively. These values for
  <inline-formula><alternatives>
  <tex-math><![CDATA[p]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>p</mml:mi></mml:math></alternatives></inline-formula>
  correspond to polynomial, sub-exponential, and exponential growth of
  the set size as a function of the spatial dimension. Consequently, the
  maximum degree set faces a severe curse of dimensionality due to the
  rapid growth of the set size.</p>
  <p>It has been shown that the Euclidean degree
  <inline-formula><alternatives>
  <tex-math><![CDATA[p = 2.0]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mn>2.0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
  offers the best compromise for isotropic functions (where each
  variable has the same
  importance)<xref ref-type="fn" rid="fn6">6</xref>, as its convergence
  rate matches that of <inline-formula><alternatives>
  <tex-math><![CDATA[p = \infty]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mi>∞</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  with respect to the polynomial degree, yet with a significantly
  smaller multi-index set. In contrast, while the size of the
  multi-index set for <inline-formula><alternatives>
  <tex-math><![CDATA[p = 2.0]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mn>2.0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
  is larger than that for <inline-formula><alternatives>
  <tex-math><![CDATA[p = 1.0]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mn>1.0</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>,
  the gain in accuracy more than compensates for the increased cost
  (<xref alt="Hecht et al., 2025" rid="ref-Hecht2025" ref-type="bibr">Hecht
  et al., 2025</xref>;
  <xref alt="Trefethen, 2017b" rid="ref-Trefethen2017a" ref-type="bibr">Trefethen,
  2017b</xref>).</p>
  <p>Deriving multidimensional Lagrange bases for non-tensorial grids is
  challenging. Minterpy uses the Newton basis for efficient evaluation
  and differentiation <disp-formula><alternatives>
  <tex-math><![CDATA[
  Q (\boldsymbol{x}) = \sum_{\boldsymbol{\alpha} \in A} c_{\boldsymbol{\alpha}} \, N_{\boldsymbol{\alpha}} (\boldsymbol{x}),\;\; N_{\boldsymbol{\alpha}} (\boldsymbol{x}) = \prod_{i = 1}^m \prod_{j = 0}^{\alpha_i - 1} (x_i - q_j),\;\; q_j \in P_i,
  ]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>Q</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>𝛂</mml:mi><mml:mo>∈</mml:mo><mml:mi>A</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>c</mml:mi><mml:mi>𝛂</mml:mi></mml:msub><mml:mspace width="0.167em"></mml:mspace><mml:msub><mml:mi>N</mml:mi><mml:mi>𝛂</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="0.278em"></mml:mspace><mml:mspace width="0.278em"></mml:mspace><mml:msub><mml:mi>N</mml:mi><mml:mi>𝛂</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="0.278em"></mml:mspace><mml:mspace width="0.278em"></mml:mspace><mml:msub><mml:mi>q</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
  where <inline-formula><alternatives>
  <tex-math><![CDATA[c_{\boldsymbol{\alpha}}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>c</mml:mi><mml:mi>𝛂</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[N_{\boldsymbol{\alpha}}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>N</mml:mi><mml:mi>𝛂</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  are the Newton coefficient and Newton polynomial that correspond to
  the index element <inline-formula><alternatives>
  <tex-math><![CDATA[\boldsymbol{\alpha}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>𝛂</mml:mi></mml:math></alternatives></inline-formula>,
  respectively; <inline-formula><alternatives>
  <tex-math><![CDATA[P_i]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>P</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  is a set of interpolation nodes in each dimension. Using Leja-ordered
  Chebyshev-Lobatto interpolation nodes by default, Newton basis offers
  numerical stability
  (<xref alt="Breuß et al., 2018" rid="ref-Breuss2018" ref-type="bibr">Breuß
  et al., 2018</xref>;
  <xref alt="Reichel, 1990" rid="ref-Reichel1990" ref-type="bibr">Reichel,
  1990</xref>;
  <xref alt="Tal-Ezer, 1991" rid="ref-TalEzer1991" ref-type="bibr">Tal-Ezer,
  1991</xref>). Computing Newton coefficients, based on the Lagrange
  coefficients and interpolation grid, via a multidimensional
  divided-difference scheme (DDS) is a key step in Minterpy
  (<xref alt="Hecht et al., 2025" rid="ref-Hecht2025" ref-type="bibr">Hecht
  et al., 2025</xref>).</p>
  <p>Minterpy also supports other polynomial bases, including the
  canonical (monomial) and Chebyshev (first kind) bases, along with
  transformations between them.</p>
  <sec id="minterpy-polynomials-for-function-approximation">
    <title>Minterpy polynomials for function approximation</title>
    <p>Minterpy prioritizes stable and accurate function approximation
    through polynomial interpolations, even for high-degree polynomials.
    Consider, the Runge function: <disp-formula><alternatives>
    <tex-math><![CDATA[
    f(\boldsymbol{x}) = \frac{1}{1 + \lVert \boldsymbol{x} \rVert^2},\; \boldsymbol{x} \in [-1, 1]^m,
    ]]></tex-math>
    <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mo stretchy="false" form="prefix">∥</mml:mo><mml:mi>𝐱</mml:mi><mml:msup><mml:mo stretchy="false" form="postfix">∥</mml:mo><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mfrac><mml:mo>,</mml:mo><mml:mspace width="0.278em"></mml:mspace><mml:mi>𝐱</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="true" form="prefix">[</mml:mo><mml:mi>−</mml:mi><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="true" form="postfix">]</mml:mo></mml:mrow><mml:mi>m</mml:mi></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
    commonly used to demonstrate Runge’s phenomenon, a pitfall in
    high-degree interpolation with equispaced points.</p>
    <fig>
      <caption><p>The comparison of Minterpy interpolating polynomials,
      approximating the Runge function in dimension
      <inline-formula><alternatives>
      <tex-math><![CDATA[m = 3, 4]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>,
      with alternative methods from designated
      packages.<styled-content id="figU003Aconvergence"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="convergence.png" />
    </fig>
    <p><xref alt="[fig:convergence]" rid="figU003Aconvergence">[fig:convergence]</xref>
    shows the accuracy of Minterpy interpolating polynomials for three
    different <inline-formula><alternatives>
    <tex-math><![CDATA[\ell_p]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mo>ℓ</mml:mo><mml:mi>p</mml:mi></mml:msub></mml:math></alternatives></inline-formula>-degrees
    in dimension <inline-formula><alternatives>
    <tex-math><![CDATA[m = 3, 4]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math></alternatives></inline-formula><xref ref-type="fn" rid="fn7">7</xref>.
    The horizontal axis shows the number of coefficients (and function
    evaluations), directly linked to the polynomial degree, to enable
    comparisons with other methods. The infinity norm of the difference
    between the function and its approximation,
    <disp-formula><alternatives>
    <tex-math><![CDATA[
    \lVert f - Q_f \rVert_{\infty} = \max_{\boldsymbol{x} \in [-1, 1]^m} \lvert f(\boldsymbol{x}) - Q_f(\boldsymbol{x}) \rvert
    ]]></tex-math>
    <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="false" form="prefix">∥</mml:mo><mml:mi>f</mml:mi><mml:mo>−</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:msub><mml:mo stretchy="false" form="postfix">∥</mml:mo><mml:mi>∞</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mo>max</mml:mo><mml:mrow><mml:mi>𝐱</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="true" form="prefix">[</mml:mo><mml:mi>−</mml:mi><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="true" form="postfix">]</mml:mo></mml:mrow><mml:mi>m</mml:mi></mml:msup></mml:mrow></mml:munder><mml:mo stretchy="false" form="prefix">|</mml:mo><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>𝐱</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo stretchy="false" form="postfix">|</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
    is measured at <inline-formula><alternatives>
    <tex-math><![CDATA[1'000'000]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mn>1</mml:mn><mml:mi>′</mml:mi><mml:mn>000</mml:mn><mml:mi>′</mml:mi><mml:mn>000</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
    random points.</p>
    <p>The figure compares data-driven methods (SciPy v1.13.1, ndsplines
    v0.2.0post0) and pseudo-spectral methods (Chaospy v4.3.18,
    Equadratures v10). In the data-driven methods, approximation
    complexity is fixed as data increases. While ndsplines supports
    higher degrees, splines above degree 5 are rare in practice. The
    pseudo-spectral methods approximate functions using Legendre
    polynomial expansions on tensor-product grids, with coefficients
    computed via numerical integration. The coefficient count matches
    Minterpy interpolating polynomials with
    <inline-formula><alternatives>
    <tex-math><![CDATA[p = \infty]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mi>∞</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>.
    Equadratures, whose results are comparable to Minterpy, (softly)
    limits multi-index cardinality to <inline-formula><alternatives>
    <tex-math><![CDATA[5 \times 10^4]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mn>5</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mn>4</mml:mn></mml:msup></mml:mrow></mml:math></alternatives></inline-formula>
    due to computational expense, while Chaospy struggles with
    tensor-product grids<xref ref-type="fn" rid="fn8">8</xref>.</p>
    <p>The results show that Minterpy polynomials provide highly
    accurate function approximation, demonstrating numerical stability
    and convergence down to <inline-formula><alternatives>
    <tex-math><![CDATA[10^{-14}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mi>−</mml:mi><mml:mn>14</mml:mn></mml:mrow></mml:msup></mml:math></alternatives></inline-formula>,
    and outperforming selected competing tools. However, global
    polynomials are generally more computationally expensive to evaluate
    than local piecewise polynomials or B-splines, as they require more
    floating-point operations. There are two primary reasons for this.
    First, global polynomials lack compact support; evaluating them
    typically involves computing all terms (i.e., coefficient-basis
    function pairs) in the expansion. Second, they often require high
    polynomial degrees, resulting in a large number of terms compared to
    local methods, which usually employ low-degree polynomials.
    Moreover, the basis functions in a high-degree global polynomial
    involve numerous multiplications, further increasing the
    computational cost.</p>
  </sec>
  <sec id="operations-on-the-minterpy-polynomials">
    <title>Operations on the Minterpy polynomials</title>
    <p>As mentioned, Minterpy polynomials support arithmetic operations
    (addition, subtraction, multiplication) and calculus operations
    (differentiation, definite integration). Except for definite
    integration (yielding a numerical value), these operations produce
    another polynomial, ensuring closure. Among compared tools, only
    Chaospy offers similar capabilities.</p>
  </sec>
  <sec id="polynomial-regression">
    <title>Polynomial regression</title>
    <p>By default, Minterpy uses Leja-ordered Chebyshev-Lobatto nodes.
    For scattered or equispaced data, it supports well-conditioned
    least-squares construction
    (<xref alt="Veettil et al., 2022" rid="ref-Veettil2022" ref-type="bibr">Veettil
    et al., 2022</xref>). The resulting polynomials are Minterpy
    polynomials<xref ref-type="fn" rid="fn9">9</xref>.</p>
  </sec>
  <sec id="applications">
    <title>Applications</title>
    <p>Minterpy has been applied in various research fields, including
    data fitting in physics
    (<xref alt="Dornheim et al., 2023" rid="ref-Dornheim2023" ref-type="bibr">Dornheim
    et al., 2023</xref>), serving as a surrogate model in blackbox
    optimization
    (<xref alt="Schreiber et al., 2023" rid="ref-Schreiber2023" ref-type="bibr">Schreiber
    et al., 2023</xref>), and representing level sets in differential
    geometry
    (<xref alt="Veettil et al., 2023" rid="ref-Veettil2023" ref-type="bibr">Veettil
    et al., 2023</xref>).</p>
  </sec>
</sec>
<sec id="author-contributions">
  <title>Author contributions</title>
  <p>The contributions to this paper are listed according to
  <ext-link ext-link-type="uri" xlink:href="https://credit.niso.org">CRediT</ext-link>.
  <bold>D. Wicaksono</bold>: Conceptualization, software, validation,
  visualization, writing—original draft. <bold>U. Hernandez
  Acosta</bold>: Conceptualization, project administration, software,
  writing—review &amp; editing. <bold>S. K. Thekke Veettil</bold>:
  Conceptualization, software. <bold>J. Kissinger</bold>:
  Conceptualization, software. <bold>M. Hecht</bold>: Conceptualization,
  supervision, funding acquisition, writing—review &amp; editing.</p>
</sec>
<sec id="acknowledgments">
  <title>Acknowledgments</title>
  <p>The authors express their gratitude to Michael Bussmann for his
  support and suggestions; Michał Bajda for the Minterpy logo design;
  and Janina Schreiber for the code review.</p>
  <p>The work is partly funded by the Center for Advanced Systems
  Understanding
  (<ext-link ext-link-type="uri" xlink:href="https://www.casus.science">CASUS</ext-link>)
  which is financed by Germany’s Federal Ministry of Education and
  Research (BMBF) and by the Saxony Ministry for Science, Culture and
  Tourism (SMWK). Funding is provided through tax funds based on the
  budget approved by the Saxony State Parliament.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-Dornheim2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Dornheim</surname><given-names>Tobias</given-names></name>
        <name><surname>Wicaksono</surname><given-names>Damar</given-names></name>
        <name><surname>Suarez-Cardona</surname><given-names>Juan E.</given-names></name>
        <name><surname>Tolias</surname><given-names>Panagiotis</given-names></name>
        <name><surname>Böhme</surname><given-names>Maximilian P.</given-names></name>
        <name><surname>Moldabekov</surname><given-names>Zhandos A.</given-names></name>
        <name><surname>Hecht</surname><given-names>Michael</given-names></name>
        <name><surname>Vorberger</surname><given-names>Jan</given-names></name>
      </person-group>
      <article-title>Extraction of the frequency moments of spectral densities from imaginary-time correlation function data</article-title>
      <source>Physical Review B</source>
      <publisher-name>American Physical Society (APS)</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <volume>107</volume>
      <issue>15</issue>
      <pub-id pub-id-type="doi">10.1103/physrevb.107.155148</pub-id>
      <fpage>155148</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Schreiber2023">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Schreiber</surname><given-names>Janina</given-names></name>
        <name><surname>Wicaksono</surname><given-names>Damar</given-names></name>
        <name><surname>Hecht</surname><given-names>Michael</given-names></name>
      </person-group>
      <article-title>Minimizing black boxes due to polynomial-model-based optimization</article-title>
      <source>Proceedings of the companion conference on genetic and evolutionary computation</source>
      <year iso-8601-date="2023">2023</year>
      <volume>2</volume>
      <pub-id pub-id-type="doi">10.1145/3583133.3590743</pub-id>
      <fpage>759</fpage>
      <lpage>762</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Veettil2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Veettil</surname><given-names>Sachin Krishnan Thekke</given-names></name>
        <name><surname>Zavalani</surname><given-names>Gentian</given-names></name>
        <name><surname>Acosta</surname><given-names>Uwe Hernandez</given-names></name>
        <name><surname>Sbalzarini</surname><given-names>Ivo F.</given-names></name>
        <name><surname>Hecht</surname><given-names>Michael</given-names></name>
      </person-group>
      <article-title>Global polynomial level sets for numerical differential geometry of smooth closed surfaces</article-title>
      <source>SIAM Journal on Scientific Computing</source>
      <year iso-8601-date="2023">2023</year>
      <volume>45</volume>
      <issue>4</issue>
      <pub-id pub-id-type="doi">10.1137/22m1536510</pub-id>
      <fpage>A1995</fpage>
      <lpage>A2018</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Meijering2002">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Meijering</surname><given-names>E.</given-names></name>
      </person-group>
      <article-title>A chronology of interpolation: From ancient astronomy to modern signal and image processing</article-title>
      <source>Proceedings of the IEEE</source>
      <year iso-8601-date="2002">2002</year>
      <volume>90</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1109/5.993400</pub-id>
      <fpage>319</fpage>
      <lpage>342</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Cools2002">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Cools</surname><given-names>Ronald</given-names></name>
      </person-group>
      <article-title>Advances in multidimensional integration</article-title>
      <source>Journal of Computational and Applied Mathematics</source>
      <year iso-8601-date="2002">2002</year>
      <volume>149</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1016/s0377-0427(02)00517-4</pub-id>
      <fpage>1</fpage>
      <lpage>12</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Xiu2009">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Xiu</surname><given-names>Dongbin</given-names></name>
      </person-group>
      <article-title>Fast numerical methods for stochastic computations: A review</article-title>
      <source>Communications in Computational Physics</source>
      <year iso-8601-date="2009">2009</year>
      <volume>5</volume>
      <issue>2–4</issue>
      <fpage>242</fpage>
      <lpage>272</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Trefethen2019">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Trefethen</surname><given-names>L. N.</given-names></name>
      </person-group>
      <source>Approximation theory and approximation practice, extended edition</source>
      <publisher-name>Society for Industrial; Applied Mathematics (SIAM)</publisher-name>
      <publisher-loc>Philadelphia, PA</publisher-loc>
      <year iso-8601-date="2019">2019</year>
    </element-citation>
  </ref>
  <ref id="ref-Branges1959">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>de Branges</surname><given-names>Louis</given-names></name>
      </person-group>
      <article-title>The Stone-Weierstrass theorem</article-title>
      <source>Proceedings of the American Mathematical Society</source>
      <year iso-8601-date="1959">1959</year>
      <volume>10</volume>
      <issue>5</issue>
      <pub-id pub-id-type="doi">10.1090/s0002-9939-1959-0113131-7</pub-id>
      <fpage>822</fpage>
      <lpage>824</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Trefethen2011">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Trefethen</surname><given-names>L. N.</given-names></name>
      </person-group>
      <article-title>Six myths of polynomial interpolation and quadrature</article-title>
      <source>Mathematics Today</source>
      <year iso-8601-date="2011">2011</year>
      <volume>47</volume>
      <fpage>184</fpage>
      <lpage>188</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Trefethen2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Trefethen</surname><given-names>L. N.</given-names></name>
      </person-group>
      <article-title>Cubature, approximation, and isotropy in the hypercube</article-title>
      <source>SIAM Review</source>
      <year iso-8601-date="2017">2017</year>
      <volume>59</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1137/16m1066312</pub-id>
      <fpage>469</fpage>
      <lpage>491</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Driscoll2014">
    <element-citation publication-type="book">
      <source>Chebfun guide</source>
      <person-group person-group-type="editor">
        <name><surname>Driscoll</surname><given-names>Tobin A.</given-names></name>
        <name><surname>Hale</surname><given-names>Nicholas</given-names></name>
        <name><surname>Trefethen</surname><given-names>Llyod N.</given-names></name>
      </person-group>
      <publisher-name>Pafnuty Publications</publisher-name>
      <publisher-loc>Oxford</publisher-loc>
      <year iso-8601-date="2014">2014</year>
      <uri>https://www.chebfun.org/docs/guide/</uri>
    </element-citation>
  </ref>
  <ref id="ref-Olver2023">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Olver</surname><given-names>Sheehan</given-names></name>
        <name><surname>Townsend</surname><given-names>Alex</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>ApproxFun.jl: A Julia package for function approximation</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <uri>https://github.com/JuliaApproximation/ApproxFun.jl</uri>
    </element-citation>
  </ref>
  <ref id="ref-Richardson2024">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Richardson</surname><given-names>Mark</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>ChebPy - a Python implementation of Chebfun</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <uri>https://github.com/chebpy/chebpy</uri>
    </element-citation>
  </ref>
  <ref id="ref-Swierczewski2024">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Swierczewski</surname><given-names>Chris</given-names></name>
        <name><surname>Verdier</surname><given-names>Olivier</given-names></name>
      </person-group>
      <article-title>pychebfun - Python Chebyshev functions</article-title>
      <source>GitHub repository</source>
      <publisher-name>GitHub</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <uri>https://github.com/pychebfun/pychebfun</uri>
    </element-citation>
  </ref>
  <ref id="ref-Feinberg2015">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Feinberg</surname><given-names>Jonathan</given-names></name>
        <name><surname>Langtangen</surname><given-names>Hans Petter</given-names></name>
      </person-group>
      <article-title>Chaospy: An open source tool for designing methods of uncertainty quantification</article-title>
      <source>Journal of Computational Science</source>
      <year iso-8601-date="2015">2015</year>
      <volume>11</volume>
      <pub-id pub-id-type="doi">10.1016/j.jocs.2015.08.008</pub-id>
      <fpage>46</fpage>
      <lpage>57</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Tate2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Tate</surname><given-names>Jess</given-names></name>
        <name><surname>Liu</surname><given-names>Zexin</given-names></name>
        <name><surname>Bergquist</surname><given-names>Jake A.</given-names></name>
        <name><surname>Rampersad</surname><given-names>Sumientra</given-names></name>
        <name><surname>White</surname><given-names>Dan</given-names></name>
        <name><surname>Charlebois</surname><given-names>Chantel</given-names></name>
        <name><surname>Rupp</surname><given-names>Lindsay</given-names></name>
        <name><surname>Brooks</surname><given-names>Dana H.</given-names></name>
        <name><surname>MacLeod</surname><given-names>Rob S.</given-names></name>
        <name><surname>Narayan</surname><given-names>Akil</given-names></name>
      </person-group>
      <article-title>UncertainSCI: A Python package for noninvasive parametric uncertainty quantification of simulation pipelines</article-title>
      <source>Journal of Open Source Software</source>
      <year iso-8601-date="2023">2023</year>
      <volume>8</volume>
      <issue>90</issue>
      <pub-id pub-id-type="doi">10.21105/joss.04249</pub-id>
      <fpage>4249</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Weise2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Weise</surname><given-names>Konstantin</given-names></name>
        <name><surname>Poßner</surname><given-names>Lucas</given-names></name>
        <name><surname>Müller</surname><given-names>Erik</given-names></name>
        <name><surname>Gast</surname><given-names>Richard</given-names></name>
        <name><surname>Knösche</surname><given-names>Thomas R.</given-names></name>
      </person-group>
      <article-title>Pygpc: A sensitivity and uncertainty analysis toolbox for Python</article-title>
      <source>SoftwareX</source>
      <year iso-8601-date="2020">2020</year>
      <volume>11</volume>
      <pub-id pub-id-type="doi">10.1016/j.softx.2020.100450</pub-id>
      <fpage>100450</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Seshadri2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Seshadri</surname><given-names>Pranay</given-names></name>
        <name><surname>Parks</surname><given-names>Geoffrey</given-names></name>
      </person-group>
      <article-title>Effective-Quadratures (EQ): Polynomials for computational engineering studies</article-title>
      <source>The Journal of Open Source Software</source>
      <year iso-8601-date="2017">2017</year>
      <volume>2</volume>
      <issue>11</issue>
      <pub-id pub-id-type="doi">10.21105/joss.00166</pub-id>
      <fpage>166</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Hegemann2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hegemann</surname><given-names>Nando</given-names></name>
        <name><surname>Heidenreich</surname><given-names>Sebastian</given-names></name>
      </person-group>
      <article-title>PyThia: A Python package for uncertainty quantification based on non-intrusive polynomial chaos expansions</article-title>
      <source>Journal of Open Source Software</source>
      <year iso-8601-date="2023">2023</year>
      <volume>8</volume>
      <issue>89</issue>
      <pub-id pub-id-type="doi">10.21105/joss.05489</pub-id>
      <fpage>5489</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Xiu2002">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Xiu</surname><given-names>Dongbin</given-names></name>
        <name><surname>Karniadakis</surname><given-names>George Em</given-names></name>
      </person-group>
      <article-title>The Wiener–Askey polynomial chaos for stochastic differential equations</article-title>
      <source>SIAM Journal on Scientific Computing</source>
      <year iso-8601-date="2002">2002</year>
      <volume>24</volume>
      <issue>2</issue>
      <pub-id pub-id-type="doi">10.1137/S1064827501387826</pub-id>
      <fpage>619</fpage>
      <lpage>644</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Virtanen2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
        <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
        <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
        <name><surname>Haberland</surname><given-names>Matt</given-names></name>
        <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
        <name><surname>Cournapeau</surname><given-names>David</given-names></name>
        <name><surname>Burovski</surname><given-names>Evgeni</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>SciPy 1.0: Fundamental algorithms for scientific computing in Python</article-title>
      <source>Nature Methods</source>
      <publisher-name>Springer Science; Business Media LLC</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <volume>17</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1038/s41592-019-0686-2</pub-id>
      <fpage>261</fpage>
      <lpage>272</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Margolis2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Margolis</surname><given-names>Benjamin</given-names></name>
        <name><surname>Lyons</surname><given-names>Kenneth</given-names></name>
      </person-group>
      <article-title>ndsplines: A Python library for tensor-product B-Splines of arbitrary dimension</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <volume>4</volume>
      <issue>42</issue>
      <pub-id pub-id-type="doi">10.21105/joss.01745</pub-id>
      <fpage>1745</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Trefethen2017a">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Trefethen</surname><given-names>L. N.</given-names></name>
      </person-group>
      <article-title>Multivariate polynomial approximation in the hypercube</article-title>
      <source>Proceedings of the American Mathematical Society</source>
      <year iso-8601-date="2017">2017</year>
      <volume>145</volume>
      <issue>11</issue>
      <pub-id pub-id-type="doi">10.1090/proc/13623</pub-id>
      <fpage>4837</fpage>
      <lpage>4844</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Veettil2022">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Veettil</surname><given-names>Sachin Krishnan Thekke</given-names></name>
        <name><surname>Zheng</surname><given-names>Yuxi</given-names></name>
        <name><surname>Hernandez Acosta</surname><given-names>Uwe</given-names></name>
        <name><surname>Wicaksono</surname><given-names>Damar</given-names></name>
        <name><surname>Hecht</surname><given-names>Michael</given-names></name>
      </person-group>
      <article-title>Multivariate polynomial regression of Euclidean degree extends the stability for fast approximations of Trefethen functions</article-title>
      <publisher-name>arXiv</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <pub-id pub-id-type="doi">10.48550/arXiv.2212.11706</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Goldstine1977">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Goldstine</surname><given-names>Herman H.</given-names></name>
      </person-group>
      <source>A history of numerical analysis from the 16th through the 19th century</source>
      <publisher-name>Springer New York</publisher-name>
      <year iso-8601-date="1977">1977</year>
      <isbn>9781468494723</isbn>
      <pub-id pub-id-type="doi">10.1007/978-1-4684-9472-3</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Trefethen2016">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Trefethen</surname><given-names>L. N.</given-names></name>
      </person-group>
      <article-title>Inverse Yogiisms</article-title>
      <source>Notices of the American Mathematical Society</source>
      <publisher-name>American Mathematical Society (AMS)</publisher-name>
      <year iso-8601-date="2016">2016</year>
      <volume>63</volume>
      <issue>11</issue>
      <pub-id pub-id-type="doi">10.1090/noti1446</pub-id>
      <fpage>1281</fpage>
      <lpage>1285</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Breuss2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Breuß</surname><given-names>Michael</given-names></name>
        <name><surname>Kemm</surname><given-names>Friedemann</given-names></name>
        <name><surname>Vogel</surname><given-names>Oliver</given-names></name>
      </person-group>
      <article-title>A numerical study of Newton interpolation with extremely high degrees</article-title>
      <source>Kybernetika</source>
      <year iso-8601-date="2018">2018</year>
      <pub-id pub-id-type="doi">10.14736/kyb-2018-2-0279</pub-id>
      <fpage>279</fpage>
      <lpage>288</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Reichel1990">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Reichel</surname><given-names>Lothar</given-names></name>
      </person-group>
      <article-title>Newton interpolation at Leja points</article-title>
      <source>BIT</source>
      <year iso-8601-date="1990">1990</year>
      <volume>30</volume>
      <issue>2</issue>
      <pub-id pub-id-type="doi">10.1007/bf02017352</pub-id>
      <fpage>332</fpage>
      <lpage>346</lpage>
    </element-citation>
  </ref>
  <ref id="ref-TalEzer1991">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Tal-Ezer</surname><given-names>Hillel</given-names></name>
      </person-group>
      <article-title>High degree polynomial interpolation in Newton form</article-title>
      <source>SIAM Journal on Scientific and Statistical Computing</source>
      <year iso-8601-date="1991">1991</year>
      <volume>12</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">10.1137/0912034</pub-id>
      <fpage>648</fpage>
      <lpage>667</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Wicaksono2025">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Wicaksono</surname><given-names>Damar Canggih</given-names></name>
        <name><surname>Hernandez Acosta</surname><given-names>Uwe</given-names></name>
        <name><surname>Thekke Veettil</surname><given-names>Sachin Krishnan</given-names></name>
        <name><surname>Kissinger</surname><given-names>Jannik</given-names></name>
        <name><surname>Hecht</surname><given-names>Michael</given-names></name>
      </person-group>
      <article-title>Data to &quot;Minterpy: Multivariate polynomial interpolation in Python&quot;</article-title>
      <year iso-8601-date="2025">2025</year>
      <uri>https://doi.org/10.14278/rodare.3379</uri>
      <pub-id pub-id-type="doi">10.14278/rodare.3379</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Hecht2025">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Hecht</surname><given-names>Michael</given-names></name>
        <name><surname>Hofmann</surname><given-names>Phil-Alexander</given-names></name>
        <name><surname>Wicaksono</surname><given-names>Damar</given-names></name>
        <name><surname>Hernandez Acosta</surname><given-names>Uwe</given-names></name>
        <name><surname>Gonciarz</surname><given-names>Krzysztof</given-names></name>
        <name><surname>Kissinger</surname><given-names>Jannik</given-names></name>
        <name><surname>Sivkin</surname><given-names>Vladimir</given-names></name>
        <name><surname>Sbalzarini</surname><given-names>Ivo F.</given-names></name>
      </person-group>
      <article-title>Multivariate Newton interpolation in downward closed spaces reaches the optimal geometric approximation rates for Bos–Levenberg–Trefethen functions</article-title>
      <year iso-8601-date="2025">2025</year>
      <uri>https://arxiv.org/abs/2504.17899</uri>
    </element-citation>
  </ref>
</ref-list>
<fn-group>
  <fn id="fn1">
    <label>1</label><p>Unisolvent here means that the interpolating
    polynomial can be uniquely determined by the given interpolation
    nodes. In one dimension, this implies that the nodes are of distinct
    values.</p>
  </fn>
  <fn id="fn2">
    <label>2</label><p>Runge’s phenomenon arises when using equispaced
    interpolation nodes, causing large oscillations, especially near the
    interval’s endpoints. Adding more points does not resolve these
    oscillations.</p>
  </fn>
  <fn id="fn3">
    <label>3</label><p>that is, <inline-formula><alternatives>
    <tex-math><![CDATA[\lvert f(x) - f(y) \rvert \leq L \lvert x - y \rvert]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="false" form="prefix">|</mml:mo><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo stretchy="false" form="postfix">|</mml:mo><mml:mo>≤</mml:mo><mml:mi>L</mml:mi><mml:mo stretchy="false" form="prefix">|</mml:mo><mml:mi>x</mml:mi><mml:mo>−</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false" form="postfix">|</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>
    for some constant <inline-formula><alternatives>
    <tex-math><![CDATA[L]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>L</mml:mi></mml:math></alternatives></inline-formula>
    and for all <inline-formula><alternatives>
    <tex-math><![CDATA[x, y \in \Omega]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>∈</mml:mo><mml:mi>Ω</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
    where <inline-formula><alternatives>
    <tex-math><![CDATA[\Omega]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>Ω</mml:mi></mml:math></alternatives></inline-formula>
    is a bounded domain.</p>
  </fn>
  <fn id="fn4">
    <label>4</label><p>Packages in other languages based on or similar
    to Chebfun include ApproxFun
    (<xref alt="Olver et al., 2023" rid="ref-Olver2023" ref-type="bibr">Olver
    et al., 2023</xref>) (Julia), and ChebPy
    (<xref alt="Richardson &amp; others, 2024" rid="ref-Richardson2024" ref-type="bibr">Richardson
    &amp; others, 2024</xref>) and pychebfun
    (<xref alt="Swierczewski &amp; Verdier, 2024" rid="ref-Swierczewski2024" ref-type="bibr">Swierczewski
    &amp; Verdier, 2024</xref>) (Python).</p>
  </fn>
  <fn id="fn5">
    <label>5</label><p>Piecewise cubic Hermite interpolating
    polynomial.</p>
  </fn>
  <fn id="fn6">
    <label>6</label><p>Incorporating anisotropy (e.g., via an adaptive
    scheme) enables sparser polynomials. While Minterpy does not yet
    support adaptivity, users can define custom downward-closed
    multi-index sets for interpolation.</p>
  </fn>
  <fn id="fn7">
    <label>7</label><p>Details of the numerical experiments can be found
    in
    (<xref alt="Wicaksono et al., 2025" rid="ref-Wicaksono2025" ref-type="bibr">Wicaksono
    et al., 2025</xref>).</p>
  </fn>
  <fn id="fn8">
    <label>8</label><p>Both Chaospy and equadratures support sparse
    polynomial construction, which can help reduce the number of
    coefficients. Comparing these approaches, however, is beyond the
    scope of this work.</p>
  </fn>
  <fn id="fn9">
    <label>9</label><p>The polynomials are, however, not strictly
    interpolatory, i.e., they generally do not satisfy
    <xref alt="Equation 1" rid="eqU003Ainterpolation-condition">Equation 1</xref>.</p>
  </fn>
</fn-group>
</back>
</article>
