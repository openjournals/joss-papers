<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">7871</article-id>
<article-id pub-id-type="doi">10.21105/joss.07871</article-id>
<title-group>
<article-title>GCol: A High-Performance Python Library for Graph
Colouring</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-1046-811X</contrib-id>
<name>
<surname>Lewis</surname>
<given-names>Rhyd</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-7865-6964</contrib-id>
<name>
<surname>Palmer</surname>
<given-names>Geraint</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>School of Mathematics, Cardiff University, Wales, United
Kingdom</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2025-03-21">
<day>21</day>
<month>3</month>
<year>2025</year>
</pub-date>
<volume>10</volume>
<issue>108</issue>
<fpage>7871</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2025</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>graph theory</kwd>
<kwd>graph colouring</kwd>
<kwd>networks</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Graph colouring is the computational problem of assigning colours
  to entities of a graph so that adjacent entities receive different
  colours. The aim is to use as few colours as possible. In general
  terms, a graph is a mathematical object comprising a set of
  <italic>nodes</italic> and a set of <italic>edges</italic> that join
  pairs of nodes. Graphs are also known as <italic>networks</italic>,
  nodes as <italic>vertices</italic>, and edges as
  <italic>links</italic>. Examples of graph colouring are shown in
  <xref alt="[fig:demo]" rid="figU003Ademo">[fig:demo]</xref>, which
  help to demonstrate the following principles.</p>
  <fig>
    <caption><p>A node colouring, edge colouring, and face colouring
    (respectively), of a fifteen-node planar graph. Each of these
    examples uses the minimum number of colours and was generated using
    GCol’s colouring and visualisation
    routines.<styled-content id="figU003Ademo"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="output_00_01_02_combined.png" />
  </fig>
  <list list-type="bullet">
    <list-item>
      <p>A <italic>node colouring</italic> is an assignment of colours
      to the nodes of a graph so that adjacent nodes have different
      colours. The smallest number of colours needed for the nodes of a
      graph <inline-formula><alternatives>
      <tex-math><![CDATA[G]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>G</mml:mi></mml:math></alternatives></inline-formula>
      is known as its chromatic number, denoted by
      <inline-formula><alternatives>
      <tex-math><![CDATA[\chi(G)]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>.
      Identification of <inline-formula><alternatives>
      <tex-math><![CDATA[\chi(G)]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
      is an NP-hard problem.</p>
    </list-item>
    <list-item>
      <p>An <italic>edge colouring</italic> is an assignment of colours
      to the edges of a graph so that all adjacent edges have different
      colours. The smallest number of colours needed for the edges of a
      graph <inline-formula><alternatives>
      <tex-math><![CDATA[G]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>G</mml:mi></mml:math></alternatives></inline-formula>
      is known at the chromatic index, denoted by
      <inline-formula><alternatives>
      <tex-math><![CDATA[\chi'(G)]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>χ</mml:mi><mml:mi>′</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>.
      According to Vizing’s theorem, <inline-formula><alternatives>
      <tex-math><![CDATA[\chi'(G)]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>χ</mml:mi><mml:mi>′</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
      is either <inline-formula><alternatives>
      <tex-math><![CDATA[\Delta(G)]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>Δ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
      or <inline-formula><alternatives>
      <tex-math><![CDATA[\Delta(G)+1]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>Δ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>,
      where <inline-formula><alternatives>
      <tex-math><![CDATA[\Delta(G)]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>Δ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
      is the maximum degree in <inline-formula><alternatives>
      <tex-math><![CDATA[G]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>G</mml:mi></mml:math></alternatives></inline-formula>.
      Identifying <inline-formula><alternatives>
      <tex-math><![CDATA[\chi'(G)]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>χ</mml:mi><mml:mi>′</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
      is also NP-hard
      (<xref alt="Toft &amp; Wilson, 2011" rid="ref-Toft2021" ref-type="bibr">Toft
      &amp; Wilson, 2011</xref>).</p>
    </list-item>
    <list-item>
      <p>A <italic>face colouring</italic> is an assignment of colours
      to the faces of a planar embedding so that all adjacent faces have
      different colours. Note that planar embeddings only exist for
      planar graphs. The smallest number of colours needed to colour the
      faces of a planar embedding is known as its face chromatic number.
      Due to the Four Colour Theorem, this number never exceeds four
      and, unlike <inline-formula><alternatives>
      <tex-math><![CDATA[\chi(G)]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
      and <inline-formula><alternatives>
      <tex-math><![CDATA[\chi'(G)]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>χ</mml:mi><mml:mi>′</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>,
      can be determined in polynomial time
      (<xref alt="Robertson et al., 1997" rid="ref-Robertson1997" ref-type="bibr">Robertson
      et al., 1997</xref>).</p>
    </list-item>
  </list>
  <p>Graph colouring has applications in many practical areas including
  timetabling, sports league scheduling, designing seating plans, code
  optimisation, and solving Sudoku puzzles
  (<xref alt="Lewis, 2021a" rid="ref-Lewis2021Book" ref-type="bibr">Lewis,
  2021a</xref>). It is also a topic of theoretical interest that often
  appears in university-level courses on graph theory, algorithms, and
  combinatorics
  (<xref alt="Cranston, 2024" rid="ref-Cranston2024" ref-type="bibr">Cranston,
  2024</xref>).</p>
  <p>GCol is a new, open-source Python library for graph colouring that
  is built on top of the well-known NetworkX library
  (<xref alt="Hagberg et al., 2008" rid="ref-Hagberg2008" ref-type="bibr">Hagberg
  et al., 2008</xref>). It provides easy-to-use, high-performance
  algorithms for the above three problems, as well as routines for
  equitable colouring, weighted colouring, pre-colouring, maximum
  independent set identification, and solution visualisation. The
  following code snippet shows how to use the library to create a
  dodecahedral graph <inline-formula><alternatives>
  <tex-math><![CDATA[G]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>G</mml:mi></mml:math></alternatives></inline-formula>,
  colour its nodes using <inline-formula><alternatives>
  <tex-math><![CDATA[\chi(G) = 3]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></alternatives></inline-formula>
  colours, and then output the solution in textual and diagrammatic form
  (see
  <xref alt="[fig:snippet]" rid="figU003Asnippet">[fig:snippet]</xref>).</p>
  <code language="python">&gt;&gt;&gt; import networkx as nx
&gt;&gt;&gt; import matplotlib.pyplot as plt
&gt;&gt;&gt; import gcol
&gt;&gt;&gt; G = nx.dodecahedral_graph()
&gt;&gt;&gt; c = gcol.node_coloring(G)
&gt;&gt;&gt; print(&quot;Node coloring of G =&quot;, c)
Node coloring of G = {0: 0, 1: 1, 19: 1, 10: 1, 2: 0, 3: 2, 8: 0, 9: 2, 18: 0,
11: 2, 6: 1, 7: 2, 4: 0, 5: 2, 13: 0, 12: 1, 14: 1, 15: 0, 16: 2, 17: 1}
&gt;&gt;&gt; nx.draw_networkx(G, node_color=gcol.get_node_colors(G, c))
&gt;&gt;&gt; plt.show() # See Figure 2</code>
  <fig>
    <caption><p>Output from the code
    snippet.<styled-content id="figU003Asnippet"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Figure_2.png" />
  </fig>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Open-source resources for graph colouring have existed for some
  time, primarily for node colouring. An early example is the PL/I code
  for node colouring included in the paper of Leighton
  (<xref alt="1979" rid="ref-Leighton1979" ref-type="bibr">1979</xref>).
  Stand-alone C-based resources were also made available online in the
  mid-1990s due to Culberson
  (<xref alt="1994" rid="ref-Culberson1994" ref-type="bibr">1994</xref>)
  and Trick
  (<xref alt="1994" rid="ref-Trick1994" ref-type="bibr">1994</xref>). A
  Java-based package implementing the methods of Culberson is now also
  available
  (<xref alt="Shah, 2020" rid="ref-Shah2020" ref-type="bibr">Shah,
  2020</xref>).</p>
  <p>Graph colouring functionality is also included in some popular
  open-source C++ libraries. <italic>The Boost Graph Library, Version
  1.8.7</italic>
  (<xref alt="2025" rid="ref-Boost" ref-type="bibr">2025</xref>) uses a
  simple constructive heuristic for node colouring, while the Lemon
  library
  (<xref alt="Dezso et al., 2011" rid="ref-Dezso2011" ref-type="bibr">Dezso
  et al., 2011</xref>) includes a method for colouring the nodes of
  planar graphs using at most five colours. <italic>The Goblin Graph
  Library, Version 2.8</italic>
  (<xref alt="2025" rid="ref-Goblin" ref-type="bibr">2025</xref>)
  features a similar method to Lemon and, in addition, includes a mixed
  integer linear programming approach for exactly solving the node and
  edge colouring problems. This algorithm has an exponential time
  complexity and, consequently, is unsuitable for larger problem
  instances.</p>
  <p>A further open-source option that, in addition, includes
  visualisation tools is provided by SageMath
  (<xref alt="The Sage Developers, 2025" rid="ref-sagemath" ref-type="bibr">The
  Sage Developers, 2025</xref>). This has methods for both node and edge
  colouring, and can also enumerate <italic>all</italic> node colourings
  of a graph. Like Goblin, however, its algorithms are based on integer
  programming and operate in exponential time. NetworkX itself also
  includes some simple greedy heuristics for node colouring
  (<xref alt="Hagberg et al., 2008" rid="ref-Hagberg2008" ref-type="bibr">Hagberg
  et al., 2008</xref>) as does the alternative Python library Graph-Tool
  (<xref alt="Peixoto, 2014" rid="ref-Peixoto2014" ref-type="bibr">Peixoto,
  2014</xref>). In addition, NetworkX features an exact polynomial-time
  algorithm for balancing the number of nodes per colour (equitable node
  colouring); however, this can only be applied when the number of
  available colours exceeds <inline-formula><alternatives>
  <tex-math><![CDATA[\Delta(G)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>Δ</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>—for
  fewer colours, where the problem is NP-hard, no functionality is
  available.</p>
  <p>Further specialised methods for node colouring are also provided by
  the ColPack software
  (<xref alt="Gebremedhin et al., 2013" rid="ref-Gebremedhin2013" ref-type="bibr">Gebremedhin
  et al., 2013</xref>) and in the algorithm suite of Lewis
  (<xref alt="2021b" rid="ref-Lewis2021BookWeb" ref-type="bibr">2021b</xref>),
  both in C++. The algorithms of ColPack are described as “greedy
  heuristics in the sense that the algorithms progressively extend a
  partial colouring by processing one vertex at a time, in some order,
  in each step assigning a vertex the smallest allowable colour”. On the
  other hand, the suite of Lewis
  (<xref alt="2021b" rid="ref-Lewis2021BookWeb" ref-type="bibr">2021b</xref>)
  features several contrasting algorithms, including constructive
  heuristics, an exact algorithm based on backtracking, and bespoke
  metaheuristics. Finally, graph colouring functionality is also
  provided by the igraph library
  (<xref alt="Csardi &amp; Nepusz, 2005" rid="ref-Csardi2005" ref-type="bibr">Csardi
  &amp; Nepusz, 2005</xref>). The open-source C- and R-based versions of
  this library use similar greedy heuristics to ColPack, whereas the
  (proprietary) Mathematica version also includes tools for edge and
  face colouring.</p>
  <p>The above survey suggests that existing open-source options for
  graph colouring are limited. Current resources tend to either use
  simple constructive heuristics that lead to low-quality solutions, or
  exponential-time exact algorithms that cannot cope with larger graphs.
  There are also few open-source options for edge colouring, equitable
  colouring, and solution visualisation, and, to our knowledge, no
  options for face colouring, weighted colouring, or pre-colouring.</p>
  <p>The GCol library features routines for all of the above.
  Optimisation is performed by a choice of node-colouring algorithms
  that include an exact, heuristically-guided, exponential-time
  backtracking algorithm, and several high-performance polynomial-time
  heuristics. The latter methods combine fast constructive methods with
  contemporary local search heuristics that extend the C++
  implementations of Lewis
  (<xref alt="2021b" rid="ref-Lewis2021BookWeb" ref-type="bibr">2021b</xref>),
  allowing high-quality solutions to be generated in reasonable run
  times, even for very large graphs. Edge colourings and face colourings
  are also determined by these algorithms by colouring, respectively,
  the nodes of the corresponding line graphs and dual graphs.</p>
  <p>The various optimisation algorithms available in the GCol library
  are described in detail in its official documentation
  (<xref alt="GCol, 2025" rid="ref-GColDocs" ref-type="bibr"><italic>GCol</italic>,
  2025</xref>) and in the book of Lewis
  (<xref alt="2021a" rid="ref-Lewis2021Book" ref-type="bibr">2021a</xref>).
  These resources include detailed information on the asymptotic
  complexity of all methods used. Results concerning the runtimes and
  accuracy of GCol’s algorithms, equitable colouring functionality, and
  other associated optimisation problems are also reported in the
  documentation.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-Boost">
    <element-citation>
      <article-title>The Boost graph library, version 1.8.7</article-title>
      <publisher-name>https://www.boost.org/doc/libs/1_46_1/libs/graph/doc/index.html</publisher-name>
      <year iso-8601-date="2025">2025</year>
    </element-citation>
  </ref>
  <ref id="ref-Gebremedhin2013">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Gebremedhin</surname><given-names>A.</given-names></name>
        <name><surname>Nguyen</surname><given-names>D.</given-names></name>
        <name><surname>Patwary</surname><given-names>M</given-names></name>
        <name><surname>Pothen</surname><given-names>A.</given-names></name>
      </person-group>
      <article-title>ColPack: Graph coloring software for derivative computation and beyond</article-title>
      <source>ACM Transactions on Mathematical Software</source>
      <year iso-8601-date="2013">2013</year>
      <volume>40</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1145/2513109.2513110</pub-id>
      <fpage>1</fpage>
      <lpage>31</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Hagberg2008">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Hagberg</surname><given-names>A.</given-names></name>
        <name><surname>Schult</surname><given-names>D.</given-names></name>
        <name><surname>Swart</surname><given-names>P.</given-names></name>
      </person-group>
      <article-title>Exploring network structure, dynamics, and function using NetworkX</article-title>
      <source>Proceedings of the 7th Python in science conference (SciPy2008)</source>
      <person-group person-group-type="editor">
        <name><surname>Varoquaux</surname><given-names>G.</given-names></name>
        <name><surname>Vaught</surname><given-names>T.</given-names></name>
        <name><surname>Millman</surname><given-names>J.</given-names></name>
      </person-group>
      <publisher-loc>Pasadena, CA</publisher-loc>
      <year iso-8601-date="2008-08">2008</year><month>08</month>
      <pub-id pub-id-type="doi">10.25080/TCWV9851</pub-id>
      <fpage>11</fpage>
      <lpage>15</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Dezso2011">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Dezso</surname><given-names>B.</given-names></name>
        <name><surname>Juttner</surname><given-names>A.</given-names></name>
        <name><surname>Kovacs</surname><given-names>P.</given-names></name>
      </person-group>
      <article-title>LEMON – an open source C++ graph template library</article-title>
      <source>Electronic Notes in Theoretical Computer Science</source>
      <year iso-8601-date="2011">2011</year>
      <volume>264</volume>
      <issue>5</issue>
      <pub-id pub-id-type="doi">10.1016/j.entcs.2011.06.003</pub-id>
      <fpage>23</fpage>
      <lpage>45</lpage>
    </element-citation>
  </ref>
  <ref id="ref-sagemath">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <string-name>The Sage Developers</string-name>
      </person-group>
      <source>SageMath, the Sage Mathematics Software System (Version 10.5)</source>
      <year iso-8601-date="2025">2025</year>
    </element-citation>
  </ref>
  <ref id="ref-Toft2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Toft</surname><given-names>B.</given-names></name>
        <name><surname>Wilson</surname><given-names>R.</given-names></name>
      </person-group>
      <article-title>A brief history of edge-colorings – with personal reminiscences</article-title>
      <source>Discrete Mathematics Letters</source>
      <year iso-8601-date="2011">2011</year>
      <volume>6</volume>
      <pub-id pub-id-type="doi">10.47443/dml.2021.s105</pub-id>
      <fpage>38</fpage>
      <lpage>46</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Cranston2024">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Cranston</surname><given-names>D.</given-names></name>
      </person-group>
      <source>Graph coloring methods</source>
      <publisher-name>Cranston, Richmond, Virginia</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <isbn>979-8-218-46240-0</isbn>
      <uri>https://graphcoloringmethods.com/</uri>
    </element-citation>
  </ref>
  <ref id="ref-Culberson1994">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Culberson</surname><given-names>J.</given-names></name>
      </person-group>
      <article-title>Culberson’s node coloring implementations</article-title>
      <publisher-name>https://www3.cs.stonybrook.edu/~algorith/implement/culberson/implement.shtml</publisher-name>
      <year iso-8601-date="1994">1994</year>
    </element-citation>
  </ref>
  <ref id="ref-GColDocs">
    <element-citation>
      <article-title>GCol: A library for graph coloring</article-title>
      <publisher-name>https://gcol.readthedocs.io/en/latest/</publisher-name>
      <year iso-8601-date="2025">2025</year>
    </element-citation>
  </ref>
  <ref id="ref-Goblin">
    <element-citation>
      <article-title>The Goblin graph library, version 2.8</article-title>
      <publisher-name>https://goblin2.sourceforge.net/</publisher-name>
      <year iso-8601-date="2025">2025</year>
    </element-citation>
  </ref>
  <ref id="ref-Leighton1979">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Leighton</surname><given-names>F.</given-names></name>
      </person-group>
      <article-title>A graph coloring algorithm for large scheduling problems</article-title>
      <source>Journal of Research of the National Bureau of Standards</source>
      <year iso-8601-date="1979">1979</year>
      <volume>84</volume>
      <issue>6</issue>
      <pub-id pub-id-type="doi">10.6028/jres.084.024</pub-id>
      <fpage>489</fpage>
      <lpage>506</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Lewis2021Book">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Lewis</surname><given-names>R.</given-names></name>
      </person-group>
      <source>A guide to graph colouring: Algorithms and applications</source>
      <publisher-name>Springer Cham</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <isbn>978-3-030-81056-6</isbn>
      <pub-id pub-id-type="doi">10.1007/978-3-030-81054-2</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Lewis2021BookWeb">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Lewis</surname><given-names>R.</given-names></name>
      </person-group>
      <article-title>A guide to graph colouring: User guide</article-title>
      <publisher-name>https://rhydlewis.eu/gcol/</publisher-name>
      <year iso-8601-date="2021">2021</year>
    </element-citation>
  </ref>
  <ref id="ref-Robertson1997">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Robertson</surname><given-names>N.</given-names></name>
        <name><surname>Sanders</surname><given-names>D.</given-names></name>
        <name><surname>Seymour</surname><given-names>P.</given-names></name>
        <name><surname>Thomas</surname><given-names>R.</given-names></name>
      </person-group>
      <article-title>The four color theorem</article-title>
      <source>Journal of Combinatorial Theory</source>
      <year iso-8601-date="1997">1997</year>
      <volume>70</volume>
      <fpage>2</fpage>
      <lpage>44</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Shah2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Shah</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>JCOL: A Java package for solving the graph coloring problem</article-title>
      <source>Journal of Open Source Software</source>
      <publisher-name>The Open Journal</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <volume>5</volume>
      <issue>48</issue>
      <pub-id pub-id-type="doi">10.21105/joss.01843</pub-id>
      <fpage>1843</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Trick1994">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Trick</surname><given-names>M.</given-names></name>
      </person-group>
      <article-title>COLOR.C: Easy code for graph coloring</article-title>
      <publisher-name>https://mat.tepper.cmu.edu/COLOR/solvers/trick.c</publisher-name>
      <year iso-8601-date="1994">1994</year>
    </element-citation>
  </ref>
  <ref id="ref-Peixoto2014">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Peixoto</surname><given-names>T.</given-names></name>
      </person-group>
      <article-title>The graph-tool Python library</article-title>
      <source>figshare</source>
      <year iso-8601-date="2014">2014</year>
      <uri>http://figshare.com/articles/graph_tool/1164194</uri>
      <pub-id pub-id-type="doi">10.6084/m9.figshare.1164194</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Csardi2005">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Csardi</surname><given-names>G.</given-names></name>
        <name><surname>Nepusz</surname><given-names>T.</given-names></name>
      </person-group>
      <article-title>The IGraph software package for complex network research</article-title>
      <source>InterJournal</source>
      <year iso-8601-date="2005-11">2005</year><month>11</month>
      <volume>Complex Systems</volume>
      <issue>1695</issue>
      <uri>https://igraph.org/</uri>
      <fpage>1</fpage>
      <lpage>9</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
