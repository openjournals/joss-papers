<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">4371</article-id>
<article-id pub-id-type="doi">10.21105/joss.04371</article-id>
<title-group>
<article-title>anndata: Access and store annotated data
matrices</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-1710-8945</contrib-id>
<name>
<surname>Virshup</surname>
<given-names>Isaac</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-4944-6586</contrib-id>
<name>
<surname>Rybakov</surname>
<given-names>Sergei</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-2419-1943</contrib-id>
<name>
<surname>Theis</surname>
<given-names>Fabian J.</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-0369-2888</contrib-id>
<name>
<surname>Angerer</surname>
<given-names>Philipp</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-8760-7838</contrib-id>
<name>
<surname>Wolf</surname>
<given-names>F. Alexander</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>University of Melbourne, Australia</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Helmholtz Munich, Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>TU Munich, Germany</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2021-12-16">
<day>16</day>
<month>12</month>
<year>2021</year>
</pub-date>
<volume>9</volume>
<issue>101</issue>
<fpage>4371</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>data structures</kwd>
<kwd>data science</kwd>
<kwd>machine learning</kwd>
<kwd>computational biology</kwd>
<kwd>bioinformatics</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>anndata is a Python package for handling annotated data matrices in
  memory and on disk
  (<ext-link ext-link-type="uri" xlink:href="https://github.com/scverse/anndata">github.com/scverse/anndata</ext-link>),
  positioned between pandas and xarray. anndata offers generic data
  access features including, among others, sparse data support, lazy
  operations, and a PyTorch interface.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Generating insight from high-dimensional data matrices typically
  works through training models that annotate observations and variables
  via low-dimensional representations. In exploratory data analysis,
  this involves <italic>iterative</italic> training and analysis using
  original and learned annotations and task-associated representations.
  anndata offers a canonical data structure for book-keeping these,
  which is neither addressed by pandas
  (<xref alt="McKinney, 2010" rid="ref-McKinney2010" ref-type="bibr">McKinney,
  2010</xref>), nor xarray
  (<xref alt="Hoyer &amp; Hamman, 2017" rid="ref-Hoyer2017" ref-type="bibr">Hoyer
  &amp; Hamman, 2017</xref>), nor commonly-used modeling packages like
  scikit-learn
  (<xref alt="Pedregosa et al., 2011" rid="ref-Pedregosa2011" ref-type="bibr">Pedregosa
  et al., 2011</xref>).</p>
</sec>
<sec id="introduction">
  <title>Introduction</title>
  <p>Since its initial publication as part of Scanpy
  (<xref alt="Wolf et al., 2018" rid="ref-Wolf2018" ref-type="bibr">Wolf
  et al., 2018</xref>), anndata matured into an independent software
  project and became widely adopted (694k total PyPI downloads &amp; 48k
  downloads/month, 225 GitHub stars &amp; 581 dependent
  repositories).</p>
  <p>anndata has been particularly useful for data analysis in
  computational biology where advances in single-cell RNA sequencing
  (scRNA-seq) gave rise to new classes of analysis problems with an
  increasing adoption of Python over the traditional R ecosystem (Zappia
  &amp; Theis
  (<xref alt="2021" rid="ref-Zappia2021" ref-type="bibr">2021</xref>),
  Fig. 2a). Previous bulk RNA datasets had few observations with dense
  measurements while more recent scRNA-seq datasets come with high
  numbers of observations and sparse measurements, both in 20k
  dimensions and more. These new data profit much from the application
  of the scalable machine learning tools of the Python ecosystem.</p>
</sec>
<sec id="the-anndata-object">
  <title>The AnnData object</title>
  <p><monospace>AnnData</monospace> is designed for data scientists and
  was inspired by a similar data structure in the R ecosystem,
  <monospace>ExpressionSet</monospace>
  (<xref alt="Huber et al., 2015" rid="ref-Huber2015" ref-type="bibr">Huber
  et al., 2015</xref>), filling this gap in the Python
  ecosystem.<xref ref-type="fn" rid="fn1">1</xref></p>
  <p>Within the pydata ecosystem, xarray
  (<xref alt="Hoyer &amp; Hamman, 2017" rid="ref-Hoyer2017" ref-type="bibr">Hoyer
  &amp; Hamman, 2017</xref>) enables to deal with labeled data tensors
  of arbitrary dimensions, while pandas
  (<xref alt="McKinney, 2010" rid="ref-McKinney2010" ref-type="bibr">McKinney,
  2010</xref>) operates on single data matrices (tables) represented as
  <monospace>DataFrame</monospace> objects. anndata is positioned in
  between pandas and xarray by providing structure that organizes data
  matrix annotations. In contrast to pandas and xarray,
  <monospace>AnnData</monospace> offers a native on-disk format that
  allows sharing data with analysis results in form of learned
  annotations.</p>
  <fig>
    <caption><p><bold>Structure of the AnnData object.</bold>
    <bold>a,</bold> The <monospace>AnnData</monospace> object is a
    collection of arrays aligned to the common dimensions of
    observations (<monospace>obs</monospace>) and variables
    (<monospace>var</monospace>). Here, color is used to denote elements
    of the object, with “warm” colors selected for elements aligned to
    the observations and “cool” colors for elements aligned to
    variables. The object is centered around the main data matrix
    <monospace>X</monospace>, whose two dimensions correspond to
    observations and variables respectively. Primary labels for each of
    these dimensions are stored as <monospace>obs_names</monospace> and
    <monospace>var_names</monospace>. If needed,
    <monospace>layers</monospace> stores matrices of the exact same
    shape as <monospace>X</monospace>. One-dimensional annotations for
    each dimension are stored in pandas
    <monospace>DataFrame</monospace>s <monospace>obs</monospace> and
    <monospace>var</monospace>. Multi-dimensional annotations are stored
    in <monospace>obsm</monospace> and <monospace>varm</monospace>.
    Pairwise relationships are stored in <monospace>obsp</monospace> and
    <monospace>varp</monospace>. Unstructured data which doesn’t fit
    this model, but should stay associated to the dataset are stored in
    <monospace>uns</monospace>. <bold>b,</bold> Let us discuss a few
    examples. The response variable ŷ learned from X is stored as a
    one-dimensional annotation of observations. <bold>c,</bold>
    Principal components and the transformed dimensionality-reduced data
    matrix obtained through PCA can be stored as multi-dimensional
    annotations of variables and observations, respectively.
    <bold>d,</bold> A k-nearest neighbor graph of any desired
    representation is stored as a sparse adjacency matrix of pairwise
    relationships among observations in <monospace>obsp</monospace>.
    This is useful to have easy access to the connectivities of points
    on a low-dimensional manifold. <bold>e,</bold> Subsetting the
    <monospace>AnnData</monospace> object by observations produces a
    view of data and annotations.
    <styled-content id="figU003Aoverview"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="fig1_overview.pdf" />
  </fig>
  <sec id="the-data-structure">
    <title>The data structure</title>
    <p>Standardized data structures facilitate data science, with one of
    the most adopted standards being <italic>tidy data</italic>
    (<xref alt="Wickham, 2014" rid="ref-Wickham2014" ref-type="bibr">Wickham,
    2014</xref>). anndata complies with <italic>tidy data</italic> but
    introduces additional conventions by defining a data structure that
    makes use of conserved dimensions between data matrix and
    annotations. With that, <monospace>AnnData</monospace> makes a
    particular choice for data organization that has been left
    unaddressed by packages like scikit-learn or PyTorch
    (<xref alt="Paszke et al., 2019" rid="ref-Paszke2019" ref-type="bibr">Paszke
    et al., 2019</xref>), which model input and output of model
    transformations as unstructured sets of tensors.</p>
    <p>At the core of <monospace>AnnData</monospace> is the measured
    data matrix from which we wish to generate insight
    (<monospace>X</monospace>). Each data matrix element stores a value
    and belongs to an observation in a row
    (<monospace>obs_names</monospace>) and a variable in a column
    (<monospace>var_names</monospace>), following the <italic>tidy
    data</italic> standard. Performing exploratory data analysis with
    <monospace>AnnData</monospace>, one builds an understanding of the
    data matrix by annotating observations and variables using
    <monospace>AnnData</monospace>’s fields
    (<xref alt="[fig:overview]" rid="figU003Aoverview">[fig:overview]</xref>)
    as follows:</p>
    <list list-type="bullet">
      <list-item>
        <p>One-dimensional annotations get added to the main annotation
        <monospace>DataFrame</monospace> for each axis,
        <monospace>obs</monospace> and <monospace>var</monospace>.</p>
      </list-item>
      <list-item>
        <p>Multi-dimensional representations get added to
        <monospace>obsm</monospace> and <monospace>varm</monospace>.</p>
      </list-item>
      <list-item>
        <p>Pair-wise relations among observations and variables get
        added to <monospace>obsp</monospace> and
        <monospace>varp</monospace> in form of sparse graph adjacency
        matrices.</p>
      </list-item>
      <list-item>
        <p>Unstructured dictionary-like annotations get added to a field
        <monospace>uns</monospace>.</p>
      </list-item>
    </list>
    <p>Prior annotations of observations will often denote the
    experimental groups and conditions that come along with measured
    data. Derived annotations of observations might be summary
    statistics, cluster assignments, low-dimensional representations or
    manifolds. Annotations of variables will often denote alternative
    names or measures quantifying feature importance.
    <monospace>AnnData</monospace> also offers a field
    <monospace>layers</monospace>, which allows to store multiple data
    matrices of the same shape.</p>
    <p>In the context of how Wickham
    (<xref alt="2014" rid="ref-Wickham2014" ref-type="bibr">2014</xref>)
    recommends to order variables, one can think of
    <monospace>X</monospace> as contiguously grouping the data of a
    specific set of <italic>measured</italic> variables of interest,
    typically high-dimensional readout data in an experiment. Other
    tables aligned to the observations axis in
    <monospace>AnnData</monospace> are then available to store both
    <italic>fixed</italic> (meta-)data of the experiment and derived
    data.</p>
    <p>We note that adoption of <italic>tidy data</italic>
    (<xref alt="Wickham, 2014" rid="ref-Wickham2014" ref-type="bibr">Wickham,
    2014</xref>) leaves some room for ambiguity. For instance, the R
    package <monospace>tidySummarizedExperiment</monospace>
    (<xref alt="Mangiola, 2021" rid="ref-Mangiola2021" ref-type="bibr">Mangiola,
    2021</xref>) provisions tables for scRNA-seq data that take a long
    form that spreads variables belonging to the same observational unit
    (a cell) across multiple rows. Generally, it may occur that there is
    no unique observational unit that is defined through a <italic>joint
    measurement</italic>, for instance, by measuring variables in the
    same system at the same time. It such cases, the <italic>tidy
    data</italic> layout is ambiguous and results in longer or wider
    table layouts depending on what an analyst considers the
    observational unit.</p>
  </sec>
  <sec id="the-data-analysis-workflow">
    <title>The data analysis workflow</title>
    <p>Let us illustrate how <monospace>AnnData</monospace> supports
    analysis workflows of iteratively learning representations and
    scalar annotations. For instance, training a clustering,
    classification or regression model on raw data in
    <monospace>X</monospace> produces an estimate of a response variable
    <italic>ŷ</italic>. This derived vector is conveniently kept track
    of by adding it as an annotation of observations
    (<monospace>obs</monospace>,
    <xref alt="[fig:overview]" rid="figU003Aoverview">[fig:overview]</xref>b).
    A reduced dimensional representation obtained through, say Principal
    Component Analysis or any bottleneck layer of a machine learning
    model, would be stored as multi-dimensional annotation
    (<monospace>obsm</monospace>,
    <xref alt="[fig:overview]" rid="figU003Aoverview">[fig:overview]</xref>c).
    Storing low-dimensional manifold structure within a desired reduced
    representation is achieved through a k-nearest neighbor graph in
    form of a sparse adjacency matrix: a matrix of pairwise
    relationships of observations (<monospace>obsp</monospace>,
    <xref alt="[fig:overview]" rid="figU003Aoverview">[fig:overview]</xref>d).
    Subsetting the data by observations produces a memory-efficient view
    of <monospace>AnnData</monospace>
    (<xref alt="[fig:overview]" rid="figU003Aoverview">[fig:overview]</xref>e).</p>
  </sec>
  <sec id="data-access-principles">
    <title>Data access principles</title>
    <p>anndata offers sparse data support, out of core conversions
    between dense and sparse data, lazy subsetting (“views”),
    per-element operations for low total memory usage, in-place
    subsetting, combining <monospace>AnnData</monospace> objects with
    various merge strategies, lazy concatenation, batching, and a backed
    out-of-memory mode.</p>
    <p>While there is no production-ready API for working with sparse
    and dense data in the python ecosystem,
    <monospace>AnnData</monospace> abstracts over the existing APIs
    making it much easier for novices to handle each. This concerns
    handling data both on-disk and in-memory with operations for
    out-of-core access. When access patterns are expected to be
    observation/row-based as in batched learning algorithms, the user
    can store data matrices as CSR sparse matrices or C-order dense
    matrices. For access along variables, for instance, to visualize
    gene expression across a dataset, CSC sparse and Fortran order dense
    matrices allow fast access along columns.</p>
  </sec>
  <sec id="the-on-disk-format">
    <title>The on-disk format</title>
    <p>An <monospace>AnnData</monospace> object captures a unit of the
    data analysis workflow that groups original and derived data
    together. Providing a persistent and standard on-disk format for
    this unit relieves the pain of working with many competing formats
    for each individual element and thereby aids reproducibility. This
    is particularly needed as even pandas
    <monospace>DataFrame</monospace> has no canonical persistent data
    storage format. <monospace>AnnData</monospace> has chosen the
    self-describing hierarchical data formats HDF5
    (<xref alt="Collette, 2013" rid="ref-collette14" ref-type="bibr">Collette,
    2013</xref>) and zarr
    (<xref alt="Miles et al., 2020" rid="ref-zarr" ref-type="bibr">Miles
    et al., 2020</xref>) for this purpose
    (<xref alt="[fig:ecosystem]" rid="figU003Aecosystem">[fig:ecosystem]</xref>),
    which are compatible with non-Python programming environments. The
    broad compatibility and high stability of the format led to wide
    adoption, and initiatives like the Human Cell Atlas
    (<xref alt="Regev et al., 2017" rid="ref-HCA" ref-type="bibr">Regev
    et al., 2017</xref>), HuBMAP
    (<xref alt="Consortium &amp; others, 2019" rid="ref-HuBMAP" ref-type="bibr">Consortium
    &amp; others, 2019</xref>) and a NeurIPS 2021 competition
    (<xref alt="Luecken et al., 2021" rid="ref-Luecken21" ref-type="bibr">Luecken
    et al., 2021</xref>) distribute their single-cell omics datasets
    through the HDF5 AnnData format <monospace>.h5ad</monospace>.</p>
    <fig>
      <caption><p><bold>AnnData provides broad interoperability with
      tools and platforms.</bold> <monospace>AnnData</monospace> objects
      can be created from a number of formats, including common
      delimited text files, or domain-specific formats like
      <monospace>loom</monospace> files or
      <monospace>CellRanger</monospace> outputs. Once in memory, AnnData
      provides an API for handling annotated matrices, proving a common
      base object used by a range of analytic computational biology
      tools and integrating well with the APIs of the established Python
      machine learning ecosystem. The in memory format has a one-to-one
      relationship with its hierarchical on disk formats (mapping of
      elements indicated by color) and uses language-independent
      technologies, enabling the use by non-Python applications and
      interchange with other ecosystems.
      <styled-content id="figU003Aecosystem"></styled-content></p></caption>
      <graphic mimetype="application" mime-subtype="pdf" xlink:href="fig2_ecosystem.pdf" />
    </fig>
    <p>Within HDF5 and zarr, we could not find a standard for sparse
    matrices and <monospace>DataFrame</monospace> objects. To account
    for this, we defined a schema for these types, which specifies how
    these elements can be read from disk to memory. This schema is
    versioned and stored in an internal registry, which evolves with
    anndata while maintaining the ability to access older versions.
    On-disk formats within this schema closely mirror their in-memory
    representations: Compressed sparse matrices (CSR, CSC) are stored as
    a collection of three arrays, <monospace>data</monospace>,
    <monospace>indices</monospace>, and <monospace>indptr</monospace>,
    while tabular data is stored in a columnar format.</p>
  </sec>
</sec>
<sec id="the-ecosystem">
  <title>The ecosystem</title>
  <p>Over the past 5 years, an ecosystem of packages that are built
  around anndata has grown. This ecosystem is highly focused on
  scRNA-seq
  (<xref alt="[fig:ecosystem]" rid="figU003Aecosystem">[fig:ecosystem]</xref>),
  and ranges from Python APIs
  (<xref alt="Zappia &amp; Theis, 2021" rid="ref-Zappia2021" ref-type="bibr">Zappia
  &amp; Theis, 2021</xref>) to user-interface-based applications
  (<xref alt="Megill et al., 2021" rid="ref-Megill2021" ref-type="bibr">Megill
  et al., 2021</xref>). Tools like scikit-learn and UMAP
  (<xref alt="McInnes et al., 2020" rid="ref-mcinnes2020" ref-type="bibr">McInnes
  et al., 2020</xref>), which are designed around numpy and not anndata,
  are still centered around data matrices and hence integrate seamlessly
  with anndata-based workflows. Since releasing the PyTorch
  <monospace>DataLoader</monospace> interface
  <monospace>AnnLoader</monospace> and the lazy concatenation structure
  <monospace>AnnCollection</monospace>, <monospace>anndata</monospace>
  also offers native ways of integrating into the Pytorch ecosystem.
  scvi-tools
  (<xref alt="Gayoso et al., 2021" rid="ref-Gayoso2021" ref-type="bibr">Gayoso
  et al., 2021</xref>) offers a widely used alternative for this.</p>
  <p>Through the language-independent on-disk format
  <monospace>h5ad</monospace>, interchange of data with non-Python
  ecosystems is easily possible. For analysis of scRNA-seq data in R
  this has been further simplified by anndata2ri, the CRAN anndata
  package
  (<xref alt="Cannoodt, 2021" rid="ref-Cannoodt21" ref-type="bibr">Cannoodt,
  2021</xref>), and zellkonverter
  (<xref alt="Zappia &amp; Lun, 2022" rid="ref-Zappia22" ref-type="bibr">Zappia
  &amp; Lun, 2022</xref>). These allow conversion to
  <monospace>SingleCellExperiment</monospace>
  (<xref alt="Amezquita et al., 2020" rid="ref-amezquita2020" ref-type="bibr">Amezquita
  et al., 2020</xref>) and Seurat’s data format
  (<xref alt="Hao et al., 2020" rid="ref-Hao2020" ref-type="bibr">Hao et
  al., 2020</xref>).</p>
  <fig>
    <caption><p><bold>Examples of how AnnData is used by packages in the
    ecosystem.</bold> <bold>a,</bold> Squidpy uses
    <monospace>AnnData</monospace> for working with spatial data: the
    coordinates of each observation are stored in
    <monospace>obsm</monospace>, a spatial neighborhood graph in
    <monospace>obsp</monospace>, and a complementary image is stored in
    <monospace>uns</monospace>. <bold>b,</bold> Multiple modalities can
    be represented in multiple <monospace>AnnData</monospace> objects.
    The variables axis now corresponds to the union of variables across
    modalities. Modality-specific and joint representations and
    manifolds are stored as separate elements in
    <monospace>obsm</monospace> or <monospace>obsp</monospace>, while
    inter-modality relations can be stored as graphs in
    <monospace>varp</monospace>. <bold>c,</bold>
    <monospace>AnnData</monospace> allows for RNA velocity analyses by
    storing counts of different splicing states as separate
    <monospace>layers</monospace> with velocity-based directed graphs in
    <monospace>obsp</monospace>.
    <styled-content id="figU003Aexamples"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="fig3_examples.pdf" />
  </fig>
  <p>Let us give three examples of <monospace>AnnData</monospace>’s
  applications: spatial transcriptomics, multiple modalities, and RNA
  velocity
  (<xref alt="[fig:examples]" rid="figU003Aexamples">[fig:examples]</xref>).
  In spatial transcriptomics, each high-dimensional observation is
  annotated with spatial coordinates. Squidpy
  (<xref alt="Palla et al., 2021" rid="ref-Palla2021" ref-type="bibr">Palla
  et al., 2021</xref>) uses <monospace>AnnData</monospace> to model
  their data by storing spatial coordinates as an array
  (<monospace>obsm</monospace>) and a spatial neighborhood graph
  (<monospace>obsp</monospace>), which is used to find features which
  are spatially correlated
  (<xref alt="[fig:examples]" rid="figU003Aexamples">[fig:examples]</xref>a).
  In addition, values from the high-dimensional transcriptomic
  measurement can be overlaid on an image of the sampled tissue, where
  an image array (reference) is stored in
  <monospace>uns</monospace>.</p>
  <p>To model multimodal data, one approach is to join separate
  <monospace>AnnData</monospace> objects
  (<xref alt="[fig:examples]" rid="figU003Aexamples">[fig:examples]</xref>b)
  for each modality on the observations index through
  <monospace>anndata.concat</monospace>. Relations between the variables
  of different modalities can then be stored as graphs in
  <monospace>varp</monospace>, and analyses using information from both
  modalities, like a joint manifold, in <monospace>obsp</monospace>.
  Formalizing this further, the <monospace>muon</monospace> package
  (<xref alt="Bredikhin et al., 2021" rid="ref-Bredikhin2021" ref-type="bibr">Bredikhin
  et al., 2021</xref>) offers a container-like object
  <monospace>MuData</monospace> for a collection of
  <monospace>AnnData</monospace> objects, one for each modality. This
  structure extends to an on-disk format where individual
  <monospace>AnnData</monospace> objects are stored as discrete elements
  inside <monospace>h5mu</monospace> files. This approach has similarity
  with <monospace>MultiAssayExperiment</monospace> within the
  Bioconductor ecosystem
  (<xref alt="Ramos et al., 2017" rid="ref-Ramos2017" ref-type="bibr">Ramos
  et al., 2017</xref>).</p>
  <p><monospace>AnnData</monospace> has been used to model data for
  fitting models of RNA velocity
  (<xref alt="Bergen et al., 2020" rid="ref-Bergen2020" ref-type="bibr">Bergen
  et al., 2020</xref>) exploiting the <monospace>layers</monospace>
  field to store a set of matrices for different types of RNA counts
  (<xref alt="[fig:examples]" rid="figU003Aexamples">[fig:examples]</xref>c).</p>
</sec>
<sec id="outlook">
  <title>Outlook</title>
  <p>The anndata project is under active development towards more
  advanced out-of-core access, better cloud &amp; relational database
  integration, a split-apply-combine framework, and interchange with
  more formats, like Apache Arrow or TileDB
  (<xref alt="Papadopoulos et al., 2016" rid="ref-papadopoulos2016" ref-type="bibr">Papadopoulos
  et al., 2016</xref>). Furthermore, anndata engages with projects that
  aim at building out infrastructure for modeling multi-modal
  (<xref alt="Bredikhin et al., 2021" rid="ref-Bredikhin2021" ref-type="bibr">Bredikhin
  et al., 2021</xref>) and non-homogeneous data, for instance, to enable
  learning from Electronic Health Records
  (<xref alt="Heumos &amp; Theis, 2021" rid="ref-Heumos2021" ref-type="bibr">Heumos
  &amp; Theis, 2021</xref>). Finally, we aim at further complementing
  anndata by interfacing with scientific domain knowledge and data
  provenance tracking.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>Isaac is grateful to Christine Wells for consistent support and
  freedom to pursue work on anndata and Scanpy. We thank Ryan Williams
  and Tom White for contributing code related to zarr and Jonathan Bloom
  for contributing a comprehensive PR on group-by functionality. Alex
  and Phil thank Cellarity for supporting continued engagement with open
  source software. We are grateful to Fabian’s lab for continuing
  dissemination along with Scanpy over the past years. This project
  receives funding through CZI’s Essential Open Source Software for
  Science grant.</p>
</sec>
<sec id="author-contributions">
  <title>Author contributions</title>
  <p>Isaac has led the anndata project since v0.7, and contributed as a
  developer before. His contributions include generalized storage for
  sparse matrices, IO efficiency, dedicated graph storage,
  concatenation, and general maintenance. Sergei made diverse
  contributions to the code base, in particular, the first version of
  <monospace>layers</monospace>, benchmarking and improvement of the
  earlier versions of the IO code, the PyTorch dataloader
  <monospace>AnnLoader</monospace> and the lazy concatenation data
  structure <monospace>AnnCollection</monospace>. Fabian contributed to
  supervision of the project. Phil co-created the package. He suggested
  to replace Scanpy’s initial unstructured annotated data object to one
  mimicking R’s ExpressionSet, and wrote AnnData’s
  <ext-link ext-link-type="uri" xlink:href="https://github.com/scverse/scanpy/commit/315859c5586116434ea3b7ce97512a5e2a1030e2">first
  implementation</ext-link> with indexing and slicing affecting
  one-dimensional metadata and the central matrix. He further
  ascertained good software practices in the project, authored the
  documentation tool extensions for scanpy and anndata and anndata2ri, a
  library for in-memory conversion between anndata and
  SingleCellExperiment. Alex co-created the package. He introduced
  centering data science workflows around an
  <ext-link ext-link-type="uri" xlink:href="https://github.com/scverse/scanpy/tree/c22e48abe45a6ccca5918bbf689637caa4b31250">initially
  unstructured annotated data object</ext-link>, designed the API, wrote
  tutorials and documentation until v0.7, and implemented most of the
  early functionality, among others, reading &amp; writing, the on-disk
  format <monospace>h5ad</monospace>, views, sparse data support,
  concatenation, backed mode. Isaac and Alex wrote the paper with help
  from all co-authors
  (<ext-link ext-link-type="uri" xlink:href="https://github.com/ivirshup/anndata-paper">github.com/ivirshup/anndata-paper</ext-link>).</p>
</sec>
<sec id="competing-interests">
  <title>Competing interests</title>
  <p>Fabian consults for Immunai Inc., Singularity Bio B.V., CytoReason
  Ltd, and Omniscope Ltd, and has ownership interest in Cellarity
  Inc. and Dermagnostix GmbH. Phil and Alex are full-time employees of
  Cellarity Inc., and have ownership interest in Cellarity Inc..</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-Wolf2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wolf</surname><given-names>F Alexander</given-names></name>
        <name><surname>Angerer</surname><given-names>Philipp</given-names></name>
        <name><surname>Theis</surname><given-names>Fabian J</given-names></name>
      </person-group>
      <article-title>SCANPY: Large-scale single-cell gene expression data analysis.</article-title>
      <source>Genome Biology</source>
      <year iso-8601-date="2018">2018</year>
      <volume>19</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1186/s13059-017-1382-0</pub-id>
      <fpage>15</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Huber2015">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Huber</surname><given-names>W</given-names></name>
        <name><surname>Carey</surname><given-names>VJ</given-names></name>
        <name><surname>Gentleman</surname><given-names>R</given-names></name>
        <name><surname>Anders</surname><given-names>S</given-names></name>
        <name><surname>Carlson</surname><given-names>M</given-names></name>
        <name><surname>Carvalho</surname><given-names>BS</given-names></name>
        <name><surname>Bravo</surname><given-names>HC</given-names></name>
        <name><surname>Davis</surname><given-names>S</given-names></name>
        <name><surname>Gatto</surname><given-names>L</given-names></name>
        <name><surname>Girke</surname><given-names>T</given-names></name>
        <name><surname>Gottardo</surname><given-names>R</given-names></name>
        <name><surname>Hahne</surname><given-names>F</given-names></name>
        <name><surname>Hansen</surname><given-names>KD</given-names></name>
        <name><surname>Irizarry</surname><given-names>RA</given-names></name>
        <name><surname>Lawrence</surname><given-names>M</given-names></name>
        <name><surname>Love</surname><given-names>MI</given-names></name>
        <name><surname>MacDonald</surname><given-names>J</given-names></name>
        <name><surname>Obenchain</surname><given-names>V</given-names></name>
        <name><surname>Oleś</surname><given-names>AK</given-names></name>
        <name><surname>Pagès</surname><given-names>H</given-names></name>
        <name><surname>Reyes</surname><given-names>A</given-names></name>
        <name><surname>Shannon</surname><given-names>P</given-names></name>
        <name><surname>Smyth</surname><given-names>GK</given-names></name>
        <name><surname>Tenenbaum</surname><given-names>D</given-names></name>
        <name><surname>Waldron</surname><given-names>L</given-names></name>
        <name><surname>Morgan</surname><given-names>M</given-names></name>
      </person-group>
      <article-title>Orchestrating high-throughput genomic analysis with bioconductor.</article-title>
      <source>Nature Methods</source>
      <year iso-8601-date="2015">2015</year>
      <volume>12</volume>
      <issue>2</issue>
      <pub-id pub-id-type="doi">10.1038/nmeth.3252</pub-id>
      <fpage>115</fpage>
      <lpage>121</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Hoyer2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hoyer</surname><given-names>Stephan</given-names></name>
        <name><surname>Hamman</surname><given-names>Joe</given-names></name>
      </person-group>
      <article-title>Xarray: ND labeled arrays and datasets in python</article-title>
      <source>Journal of Open Research Software</source>
      <year iso-8601-date="2017">2017</year>
      <volume>5</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.5281/zenodo.264282</pub-id>
      <fpage>10</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Pedregosa2011">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Pedregosa</surname><given-names>F.</given-names></name>
        <name><surname>Varoquaux</surname><given-names>G.</given-names></name>
        <name><surname>Gramfort</surname><given-names>A.</given-names></name>
        <name><surname>Michel</surname><given-names>V.</given-names></name>
        <name><surname>Thirion</surname><given-names>B.</given-names></name>
        <name><surname>Grisel</surname><given-names>O.</given-names></name>
        <name><surname>Blondel</surname><given-names>M.</given-names></name>
        <name><surname>Prettenhofer</surname><given-names>P.</given-names></name>
        <name><surname>Weiss</surname><given-names>R.</given-names></name>
        <name><surname>Dubourg</surname><given-names>V.</given-names></name>
        <name><surname>Vanderplas</surname><given-names>J.</given-names></name>
        <name><surname>Passos</surname><given-names>A.</given-names></name>
        <name><surname>Cournapeau</surname><given-names>D.</given-names></name>
        <name><surname>Brucher</surname><given-names>M.</given-names></name>
        <name><surname>Perrot</surname><given-names>M.</given-names></name>
        <name><surname>Duchesnay</surname><given-names>E.</given-names></name>
      </person-group>
      <article-title>Scikit-learn: Machine learning in Python</article-title>
      <source>Journal of Machine Learning Research</source>
      <year iso-8601-date="2011">2011</year>
      <volume>12</volume>
      <fpage>2825</fpage>
      <lpage>2830</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Hao2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Hao</surname><given-names>Yuhan</given-names></name>
        <name><surname>Hao</surname><given-names>Stephanie</given-names></name>
        <name><surname>Andersen-Nissen</surname><given-names>Erica</given-names></name>
        <name><surname>Mauck</surname><given-names>William M.</given-names></name>
        <name><surname>Zheng</surname><given-names>Shiwei</given-names></name>
        <name><surname>Butler</surname><given-names>Andrew</given-names></name>
        <name><surname>Lee</surname><given-names>Maddie J.</given-names></name>
        <name><surname>Wilk</surname><given-names>Aaron J.</given-names></name>
        <name><surname>Darby</surname><given-names>Charlotte</given-names></name>
        <name><surname>Zagar</surname><given-names>Michael</given-names></name>
        <name><surname>Hoffman</surname><given-names>Paul</given-names></name>
        <name><surname>Stoeckius</surname><given-names>Marlon</given-names></name>
        <name><surname>Papalexi</surname><given-names>Efthymia</given-names></name>
        <name><surname>Mimitou</surname><given-names>Eleni P.</given-names></name>
        <name><surname>Jain</surname><given-names>Jaison</given-names></name>
        <name><surname>Srivastava</surname><given-names>Avi</given-names></name>
        <name><surname>Stuart</surname><given-names>Tim</given-names></name>
        <name><surname>Fleming</surname><given-names>Lamar B.</given-names></name>
        <name><surname>Yeung</surname><given-names>Bertrand</given-names></name>
        <name><surname>Rogers</surname><given-names>Angela J.</given-names></name>
        <name><surname>McElrath</surname><given-names>Juliana M.</given-names></name>
        <name><surname>Blish</surname><given-names>Catherine A.</given-names></name>
        <name><surname>Gottardo</surname><given-names>Raphael</given-names></name>
        <name><surname>Smibert</surname><given-names>Peter</given-names></name>
        <name><surname>Satija</surname><given-names>Rahul</given-names></name>
      </person-group>
      <article-title>Integrated analysis of multimodal single-cell data</article-title>
      <source>Cell</source>
      <year iso-8601-date="2020">2020</year>
      <volume>184</volume>
      <pub-id pub-id-type="doi">10.1016/j.cell.2021.04.048</pub-id>
      <fpage>3573</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-McKinney2010">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>McKinney</surname><given-names>Wes</given-names></name>
      </person-group>
      <source>Data structures for statistical computing in python</source>
      <publisher-name>Austin, TX</publisher-name>
      <year iso-8601-date="2010">2010</year>
      <pub-id pub-id-type="doi">10.25080/majora-92bf1922-00a</pub-id>
      <fpage>51</fpage>
      <lpage>56</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Palla2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Palla</surname><given-names>Giovanni</given-names></name>
        <name><surname>Spitzer</surname><given-names>Hannah</given-names></name>
        <name><surname>Klein</surname><given-names>Michal</given-names></name>
        <name><surname>Fischer</surname><given-names>David</given-names></name>
        <name><surname>Schaar</surname><given-names>Anna Christina</given-names></name>
        <name><surname>Kuemmerle</surname><given-names>Louis Benedikt</given-names></name>
        <name><surname>Rybakov</surname><given-names>Sergei</given-names></name>
        <name><surname>Ibarra</surname><given-names>Ignacio L.</given-names></name>
        <name><surname>Holmberg</surname><given-names>Olle</given-names></name>
        <name><surname>Virshup</surname><given-names>Isaac</given-names></name>
        <name><surname>Lotfollahi</surname><given-names>Mohammad</given-names></name>
        <name><surname>Richter</surname><given-names>Sabrina</given-names></name>
        <name><surname>Theis</surname><given-names>Fabian J.</given-names></name>
      </person-group>
      <article-title>Squidpy: A scalable framework for spatial single cell analysis</article-title>
      <source>bioRxiv</source>
      <year iso-8601-date="2021">2021</year>
      <pub-id pub-id-type="doi">10.1101/2021.02.19.431994</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Megill2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Megill</surname><given-names>Colin</given-names></name>
        <name><surname>Martin</surname><given-names>Bruce</given-names></name>
        <name><surname>Weaver</surname><given-names>Charlotte</given-names></name>
        <name><surname>Bell</surname><given-names>Sidney</given-names></name>
        <name><surname>Prins</surname><given-names>Lia</given-names></name>
        <name><surname>Badajoz</surname><given-names>Seve</given-names></name>
        <name><surname>McCandless</surname><given-names>Brian</given-names></name>
        <name><surname>Pisco</surname><given-names>Angela Oliveira</given-names></name>
        <name><surname>Kinsella</surname><given-names>Marcus</given-names></name>
        <name><surname>Griffin</surname><given-names>Fiona</given-names></name>
        <name><surname>Kiggins</surname><given-names>Justin</given-names></name>
        <name><surname>Haliburton</surname><given-names>Genevieve</given-names></name>
        <name><surname>Mani</surname><given-names>Arathi</given-names></name>
        <name><surname>Weiden</surname><given-names>Matthew</given-names></name>
        <name><surname>Dunitz</surname><given-names>Madison</given-names></name>
        <name><surname>Lombardo</surname><given-names>Maximilian</given-names></name>
        <name><surname>Huang</surname><given-names>Timmy</given-names></name>
        <name><surname>Smith</surname><given-names>Trent</given-names></name>
        <name><surname>Chambers</surname><given-names>Signe</given-names></name>
        <name><surname>Freeman</surname><given-names>Jeremy</given-names></name>
        <name><surname>Cool</surname><given-names>Jonah</given-names></name>
        <name><surname>Carr</surname><given-names>Ambrose</given-names></name>
      </person-group>
      <article-title>Cellxgene: A performant, scalable exploration platform for high dimensional sparse matrices</article-title>
      <source>bioRxiv</source>
      <year iso-8601-date="2021">2021</year>
      <pub-id pub-id-type="doi">10.1101/2021.04.05.438318</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Gayoso2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Gayoso</surname><given-names>Adam</given-names></name>
        <name><surname>Lopez</surname><given-names>Romain</given-names></name>
        <name><surname>Xing</surname><given-names>Galen</given-names></name>
        <name><surname>Boyeau</surname><given-names>Pierre</given-names></name>
        <name><surname>Wu</surname><given-names>Katherine</given-names></name>
        <name><surname>Jayasuriya</surname><given-names>Michael</given-names></name>
        <name><surname>Melhman</surname><given-names>Edouard</given-names></name>
        <name><surname>Langevin</surname><given-names>Maxime</given-names></name>
        <name><surname>Liu</surname><given-names>Yining</given-names></name>
        <name><surname>Samaran</surname><given-names>Jules</given-names></name>
        <name><surname>Misrachi</surname><given-names>Gabriel</given-names></name>
        <name><surname>Nazaret</surname><given-names>Achille</given-names></name>
        <name><surname>Clivio</surname><given-names>Oscar</given-names></name>
        <name><surname>Xu</surname><given-names>Chenling</given-names></name>
        <name><surname>Ashuach</surname><given-names>Tal</given-names></name>
        <name><surname>Lotfollahi</surname><given-names>Mohammad</given-names></name>
        <name><surname>Svensson</surname><given-names>Valentine</given-names></name>
        <name><surname>Beltrame</surname><given-names>Eduardo da Veiga</given-names></name>
        <name><surname>Talavera-López</surname><given-names>Carlos</given-names></name>
        <name><surname>Pachter</surname><given-names>Lior</given-names></name>
        <name><surname>Theis</surname><given-names>Fabian J.</given-names></name>
        <name><surname>Streets</surname><given-names>Aaron</given-names></name>
        <name><surname>Jordan</surname><given-names>Michael I.</given-names></name>
        <name><surname>Regier</surname><given-names>Jeffrey</given-names></name>
        <name><surname>Yosef</surname><given-names>Nir</given-names></name>
      </person-group>
      <article-title>Scvi-tools: A library for deep probabilistic analysis of single-cell omics data</article-title>
      <source>bioRxiv</source>
      <year iso-8601-date="2021">2021</year>
      <pub-id pub-id-type="doi">10.1101/2021.04.28.441833</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Wickham2014">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wickham</surname><given-names>Hadley</given-names></name>
      </person-group>
      <article-title>Tidy data</article-title>
      <source>Journal of statistical software</source>
      <year iso-8601-date="2014">2014</year>
      <volume>59</volume>
      <issue>10</issue>
      <fpage>1</fpage>
      <lpage>23</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Bergen2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bergen</surname><given-names>V</given-names></name>
        <name><surname>Lange</surname><given-names>M</given-names></name>
        <name><surname>Peidli</surname><given-names>S</given-names></name>
        <name><surname>Wolf</surname><given-names>FA</given-names></name>
        <name><surname>Theis</surname><given-names>FJ</given-names></name>
      </person-group>
      <article-title>Generalizing RNA velocity to transient cell states through dynamical modeling.</article-title>
      <source>Nature Biotechnology</source>
      <year iso-8601-date="2020">2020</year>
      <volume>38</volume>
      <issue>12</issue>
      <pub-id pub-id-type="doi">10.1038/s41587-020-0591-3</pub-id>
      <fpage>1408</fpage>
      <lpage>1414</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Bredikhin2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Bredikhin</surname><given-names>Danila</given-names></name>
        <name><surname>Kats</surname><given-names>Ilia</given-names></name>
        <name><surname>Stegle</surname><given-names>Oliver</given-names></name>
      </person-group>
      <article-title>Muon: Multimodal omics analysis framework</article-title>
      <source>bioRxiv</source>
      <year iso-8601-date="2021">2021</year>
      <pub-id pub-id-type="doi">10.1101/2021.06.01.445670</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Ramos2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ramos</surname><given-names>Marcel</given-names></name>
        <name><surname>Schiffer</surname><given-names>Lucas</given-names></name>
        <name><surname>Re</surname><given-names>Angela</given-names></name>
        <name><surname>Azhar</surname><given-names>Rimsha</given-names></name>
        <name><surname>Basunia</surname><given-names>Azfar</given-names></name>
        <name><surname>Rodriguez</surname><given-names>Carmen</given-names></name>
        <name><surname>Chan</surname><given-names>Tiffany</given-names></name>
        <name><surname>Chapman</surname><given-names>Phil</given-names></name>
        <name><surname>Davis</surname><given-names>Sean R.</given-names></name>
        <name><surname>Gomez-Cabrero</surname><given-names>David</given-names></name>
        <name><surname>Culhane</surname><given-names>Aedin C.</given-names></name>
        <name><surname>Haibe-Kains</surname><given-names>Benjamin</given-names></name>
        <name><surname>Hansen</surname><given-names>Kasper D.</given-names></name>
        <name><surname>Kodali</surname><given-names>Hanish</given-names></name>
        <name><surname>Louis</surname><given-names>Marie S.</given-names></name>
        <name><surname>Mer</surname><given-names>Arvind S.</given-names></name>
        <name><surname>Riester</surname><given-names>Markus</given-names></name>
        <name><surname>Morgan</surname><given-names>Martin</given-names></name>
        <name><surname>Carey</surname><given-names>Vince</given-names></name>
        <name><surname>Waldron</surname><given-names>Levi</given-names></name>
      </person-group>
      <article-title>Software for the integration of multiomics experiments in bioconductor</article-title>
      <source>Cancer Research</source>
      <year iso-8601-date="2017">2017</year>
      <volume>77</volume>
      <issue>21</issue>
      <pub-id pub-id-type="doi">10.1158/0008-5472.can-17-0344</pub-id>
      <fpage>e39</fpage>
      <lpage>e42</lpage>
    </element-citation>
  </ref>
  <ref id="ref-collette14">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Collette</surname><given-names>Andrew</given-names></name>
      </person-group>
      <source>Python and HDF5</source>
      <publisher-name>O’Reilly</publisher-name>
      <year iso-8601-date="2013">2013</year>
    </element-citation>
  </ref>
  <ref id="ref-zarr">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Miles</surname><given-names>Alistair</given-names></name>
        <name><surname>Kirkham</surname><given-names>John</given-names></name>
        <name><surname>Durant</surname><given-names>Martin</given-names></name>
        <name><surname>Bourbeau</surname><given-names>James</given-names></name>
        <name><surname>Onalan</surname><given-names>Tarik</given-names></name>
        <name><surname>Hamman</surname><given-names>Joe</given-names></name>
        <name><surname>Patel</surname><given-names>Zain</given-names></name>
        <name><surname>shikharsg</surname></name>
        <name><surname>Rocklin</surname><given-names>Matthew</given-names></name>
        <name><surname>dussin</surname></name>
        <name><surname>Schut</surname><given-names>Vincent</given-names></name>
        <name><surname>Andrade</surname><given-names>Elliott Sales de</given-names></name>
        <name><surname>Abernathey</surname><given-names>Ryan</given-names></name>
        <name><surname>Noyes</surname><given-names>Charles</given-names></name>
        <name><surname>sbalmer</surname></name>
        <name><surname>bot</surname></name>
        <name><surname>Tran</surname><given-names>Tommy</given-names></name>
        <name><surname>Saalfeld</surname><given-names>Stephan</given-names></name>
        <name><surname>Swaney</surname><given-names>Justin</given-names></name>
        <name><surname>Moore</surname><given-names>Josh</given-names></name>
        <name><surname>Jevnik</surname><given-names>Joe</given-names></name>
        <name><surname>Kelleher</surname><given-names>Jerome</given-names></name>
        <name><surname>Funke</surname><given-names>Jan</given-names></name>
        <name><surname>Sakkis</surname><given-names>George</given-names></name>
        <name><surname>Barnes</surname><given-names>Chris</given-names></name>
        <name><surname>Banihirwe</surname><given-names>Anderson</given-names></name>
      </person-group>
      <article-title>Zarr</article-title>
      <source>Zenodo</source>
      <year iso-8601-date="2020">2020</year>
      <pub-id pub-id-type="doi">10.5281/zenodo.3773450</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Mangiola2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Mangiola</surname><given-names>Stefano</given-names></name>
      </person-group>
      <article-title>tidySummarizedExperiment: Brings SummarizedExperiment to the tidyverse</article-title>
      <source>Bioconductor</source>
      <year iso-8601-date="2021">2021</year>
      <pub-id pub-id-type="doi">10.18129/B9.bioc.tidySummarizedExperiment</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-mcinnes2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>McInnes</surname><given-names>Leland</given-names></name>
        <name><surname>Healy</surname><given-names>John</given-names></name>
        <name><surname>Melville</surname><given-names>James</given-names></name>
      </person-group>
      <article-title>UMAP: Uniform manifold approximation and projection for dimension reduction</article-title>
      <source>arXiv</source>
      <year iso-8601-date="2020">2020</year>
      <pub-id pub-id-type="doi">10.48550/arXiv.1802.03426</pub-id>
      <fpage>1802.03426</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-amezquita2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Amezquita</surname><given-names>Robert A</given-names></name>
        <name><surname>Lun</surname><given-names>Aaron TL</given-names></name>
        <name><surname>Becht</surname><given-names>Etienne</given-names></name>
        <name><surname>Carey</surname><given-names>Vince J</given-names></name>
        <name><surname>Carpp</surname><given-names>Lindsay N</given-names></name>
        <name><surname>Geistlinger</surname><given-names>Ludwig</given-names></name>
        <name><surname>Marini</surname><given-names>Federico</given-names></name>
        <name><surname>Rue-Albrecht</surname><given-names>Kevin</given-names></name>
        <name><surname>Risso</surname><given-names>Davide</given-names></name>
        <name><surname>Soneson</surname><given-names>Charlotte</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Orchestrating single-cell analysis with bioconductor</article-title>
      <source>Nature Methods</source>
      <year iso-8601-date="2020">2020</year>
      <volume>17</volume>
      <issue>2</issue>
      <pub-id pub-id-type="doi">10.1038/s41592-019-0654-x</pub-id>
      <fpage>137</fpage>
      <lpage>145</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Paszke2019">
    <element-citation publication-type="chapter">
      <person-group person-group-type="author">
        <name><surname>Paszke</surname><given-names>Adam</given-names></name>
        <name><surname>Gross</surname><given-names>Sam</given-names></name>
        <name><surname>Massa</surname><given-names>Francisco</given-names></name>
        <name><surname>Lerer</surname><given-names>Adam</given-names></name>
        <name><surname>Bradbury</surname><given-names>James</given-names></name>
        <name><surname>Chanan</surname><given-names>Gregory</given-names></name>
        <name><surname>Killeen</surname><given-names>Trevor</given-names></name>
        <name><surname>Lin</surname><given-names>Zeming</given-names></name>
        <name><surname>Gimelshein</surname><given-names>Natalia</given-names></name>
        <name><surname>Antiga</surname><given-names>Luca</given-names></name>
        <name><surname>Desmaison</surname><given-names>Alban</given-names></name>
        <name><surname>Kopf</surname><given-names>Andreas</given-names></name>
        <name><surname>Yang</surname><given-names>Edward</given-names></name>
        <name><surname>DeVito</surname><given-names>Zachary</given-names></name>
        <name><surname>Raison</surname><given-names>Martin</given-names></name>
        <name><surname>Tejani</surname><given-names>Alykhan</given-names></name>
        <name><surname>Chilamkurthy</surname><given-names>Sasank</given-names></name>
        <name><surname>Steiner</surname><given-names>Benoit</given-names></name>
        <name><surname>Fang</surname><given-names>Lu</given-names></name>
        <name><surname>Bai</surname><given-names>Junjie</given-names></name>
        <name><surname>Chintala</surname><given-names>Soumith</given-names></name>
      </person-group>
      <article-title>PyTorch: An imperative style, high-performance deep learning library</article-title>
      <source>Advances in neural information processing systems 32</source>
      <year iso-8601-date="2019">2019</year>
      <pub-id pub-id-type="doi">10.48550/arXiv.1912.01703</pub-id>
      <fpage>8024</fpage>
      <lpage>8035</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Heumos2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Heumos</surname><given-names>Lukas</given-names></name>
        <name><surname>Theis</surname><given-names>Fabian</given-names></name>
      </person-group>
      <article-title>Ehrapy: Exploratory analysis of electronic health records</article-title>
      <year iso-8601-date="2021">2021</year>
      <uri>https://github.com/theislab/ehrapy</uri>
      <pub-id pub-id-type="doi">10.1101/2023.12.11.23299816</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Zappia2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Zappia</surname><given-names>Luke</given-names></name>
        <name><surname>Theis</surname><given-names>Fabian J</given-names></name>
      </person-group>
      <article-title>Over 1000 tools reveal trends in the single-cell RNA-seq analysis landscape</article-title>
      <source>Genome biology</source>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <volume>22</volume>
      <issue>1</issue>
      <pub-id pub-id-type="doi">10.1186/s13059-021-02519-4</pub-id>
      <fpage>1</fpage>
      <lpage>18</lpage>
    </element-citation>
  </ref>
  <ref id="ref-papadopoulos2016">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Papadopoulos</surname><given-names>Stavros</given-names></name>
        <name><surname>Datta</surname><given-names>Kushal</given-names></name>
        <name><surname>Madden</surname><given-names>Samuel</given-names></name>
        <name><surname>Mattson</surname><given-names>Timothy</given-names></name>
      </person-group>
      <article-title>The tiledb array data storage manager</article-title>
      <source>Proceedings of the VLDB Endowment</source>
      <publisher-name>VLDB Endowment</publisher-name>
      <year iso-8601-date="2016">2016</year>
      <volume>10</volume>
      <issue>4</issue>
      <pub-id pub-id-type="doi">10.14778/3025111.3025117</pub-id>
      <fpage>349</fpage>
      <lpage>360</lpage>
    </element-citation>
  </ref>
  <ref id="ref-HuBMAP">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Consortium</surname><given-names>HuBMAP</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>The human body at cellular resolution: The NIH human biomolecular atlas program</article-title>
      <source>Nature</source>
      <publisher-name>Nature Publishing Group</publisher-name>
      <year iso-8601-date="2019">2019</year>
      <volume>574</volume>
      <issue>7777</issue>
      <pub-id pub-id-type="doi">10.1038/s41586-019-1629-x</pub-id>
      <fpage>187</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-HCA">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Regev</surname><given-names>Aviv</given-names></name>
        <name><surname>Teichmann</surname><given-names>Sarah A</given-names></name>
        <name><surname>Lander</surname><given-names>Eric S</given-names></name>
        <name><surname>Amit</surname><given-names>Ido</given-names></name>
        <name><surname>Benoist</surname><given-names>Christophe</given-names></name>
        <name><surname>Birney</surname><given-names>Ewan</given-names></name>
        <name><surname>Bodenmiller</surname><given-names>Bernd</given-names></name>
        <name><surname>Campbell</surname><given-names>Peter</given-names></name>
        <name><surname>Carninci</surname><given-names>Piero</given-names></name>
        <name><surname>Clatworthy</surname><given-names>Menna</given-names></name>
        <name><surname>others</surname></name>
      </person-group>
      <article-title>Science forum: The human cell atlas</article-title>
      <source>elife</source>
      <publisher-name>eLife Sciences Publications Limited</publisher-name>
      <year iso-8601-date="2017">2017</year>
      <volume>6</volume>
      <pub-id pub-id-type="doi">10.7554/eLife.27041</pub-id>
      <fpage>e27041</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-Cannoodt21">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Cannoodt</surname><given-names>Robrecht</given-names></name>
      </person-group>
      <article-title>Anndata: ’Anndata’ for r</article-title>
      <source>CRAN</source>
      <year iso-8601-date="2021">2021</year>
      <uri>https://CRAN.R-project.org/package=anndata</uri>
      <pub-id pub-id-type="doi">10.32614/cran.package.anndata</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Zappia22">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Zappia</surname><given-names>Luke</given-names></name>
        <name><surname>Lun</surname><given-names>Aaron</given-names></name>
      </person-group>
      <article-title>Conversion between scRNA-seq objects</article-title>
      <source>Bioconductor</source>
      <year iso-8601-date="2022">2022</year>
      <pub-id pub-id-type="doi">10.18129/B9.bioc.zellkonverter</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-Luecken21">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Luecken</surname><given-names>Malte D</given-names></name>
        <name><surname>Burkhardt</surname><given-names>Daniel Bernard</given-names></name>
        <name><surname>Cannoodt</surname><given-names>Robrecht</given-names></name>
        <name><surname>Lance</surname><given-names>Christopher</given-names></name>
        <name><surname>Agrawal</surname><given-names>Aditi</given-names></name>
        <name><surname>Aliee</surname><given-names>Hananeh</given-names></name>
        <name><surname>Chen</surname><given-names>Ann T</given-names></name>
        <name><surname>Deconinck</surname><given-names>Louise</given-names></name>
        <name><surname>Detweiler</surname><given-names>Angela M</given-names></name>
        <name><surname>Granados</surname><given-names>Alejandro A</given-names></name>
        <name><surname>Huynh</surname><given-names>Shelly</given-names></name>
        <name><surname>Isacco</surname><given-names>Laura</given-names></name>
        <name><surname>Kim</surname><given-names>Yang Joon</given-names></name>
        <name><surname>Klein</surname><given-names>Dominik</given-names></name>
        <name><surname>KUMAR</surname><given-names>BONY DE</given-names></name>
        <name><surname>Kuppasani</surname><given-names>Sunil</given-names></name>
        <name><surname>Lickert</surname><given-names>Heiko</given-names></name>
        <name><surname>McGeever</surname><given-names>Aaron</given-names></name>
        <name><surname>Mekonen</surname><given-names>Honey</given-names></name>
        <name><surname>Melgarejo</surname><given-names>Joaquin Caceres</given-names></name>
        <name><surname>Morri</surname><given-names>Maurizio</given-names></name>
        <name><surname>Müller</surname><given-names>Michaela</given-names></name>
        <name><surname>Neff</surname><given-names>Norma</given-names></name>
        <name><surname>Paul</surname><given-names>Sheryl</given-names></name>
        <name><surname>Rieck</surname><given-names>Bastian</given-names></name>
        <name><surname>Schneider</surname><given-names>Kaylie</given-names></name>
        <name><surname>Steelman</surname><given-names>Scott</given-names></name>
        <name><surname>Sterr</surname><given-names>Michael</given-names></name>
        <name><surname>Treacy</surname><given-names>Daniel J.</given-names></name>
        <name><surname>Tong</surname><given-names>Alexander</given-names></name>
        <name><surname>Villani</surname><given-names>Alexandra-Chloe</given-names></name>
        <name><surname>Wang</surname><given-names>Guilin</given-names></name>
        <name><surname>Yan</surname><given-names>Jia</given-names></name>
        <name><surname>Zhang</surname><given-names>Ce</given-names></name>
        <name><surname>Pisco</surname><given-names>Angela Oliveira</given-names></name>
        <name><surname>Krishnaswamy</surname><given-names>Smita</given-names></name>
        <name><surname>Theis</surname><given-names>Fabian J</given-names></name>
        <name><surname>Bloom</surname><given-names>Jonathan M.</given-names></name>
      </person-group>
      <article-title>A sandbox for prediction and integration of DNA, RNA, and proteins in single cells</article-title>
      <source>Thirty-fifth conference on neural information processing systems datasets and benchmarks track (round 2)</source>
      <year iso-8601-date="2021">2021</year>
      <uri>https://openreview.net/forum?id=gN35BGa1Rt</uri>
    </element-citation>
  </ref>
</ref-list>
<fn-group>
  <fn id="fn1">
    <label>1</label><p>Please note that <monospace>AnnData</monospace>
    denotes the class (data structure), whereas anndata denotes the
    software package (python module).</p>
  </fn>
</fn-group>
</back>
</article>
