<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/5.3.1"
           xmlns:ai="http://www.crossref.org/AccessIndicators.xsd"
           xmlns:rel="http://www.crossref.org/relations.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           version="5.3.1"
           xsi:schemaLocation="http://www.crossref.org/schema/5.3.1 http://www.crossref.org/schemas/crossref5.3.1.xsd">
  <head>
    <doi_batch_id>20220827T064033-8a87f7be85de81ca7ef6635c6eb416eea37e5110</doi_batch_id>
    <timestamp>20220827064033</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>https://joss.theoj.org/</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>08</month>
          <year>2022</year>
        </publication_date>
        <journal_volume>
          <volume>7</volume>
        </journal_volume>
        <issue>76</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>\rho\mu: A Java library of randomization enhancements
and other math utilities</title>
        </titles>
        <contributors>
          <person_name sequence="first" contributor_role="author">
            <given_name>Vincent A.</given_name>
            <surname>Cicirello</surname>
            <ORCID>https://orcid.org/0000-0003-1072-8559</ORCID>
          </person_name>
        </contributors>
        <publication_date>
          <month>08</month>
          <day>27</day>
          <year>2022</year>
        </publication_date>
        <pages>
          <first_page>4663</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.04663</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">10.5281/zenodo.7026452</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/4663</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.04663</doi>
          <resource>https://joss.theoj.org/papers/10.21105/joss.04663</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://joss.theoj.org/papers/10.21105/joss.04663.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="Cicirello2020">
            <article_title>Chips-n-salsa: A java library of
customizable, hybridizable, iterative, parallel, stochastic, and
self-adaptive local search algorithms</article_title>
            <author>Cicirello</author>
            <journal_title>Journal of Open Source
Software</journal_title>
            <issue>52</issue>
            <volume>5</volume>
            <doi>10.21105/joss.02448</doi>
            <cYear>2020</cYear>
            <unstructured_citation>Cicirello, V. A. (2020).
Chips-n-salsa: A java library of customizable, hybridizable, iterative,
parallel, stochastic, and self-adaptive local search algorithms. Journal
of Open Source Software, 5(52), 2448.
https://doi.org/10.21105/joss.02448</unstructured_citation>
          </citation>
          <citation key="Cicirello2018b">
            <article_title>JavaPermutationTools: A java library of
permutation distance metrics</article_title>
            <author>Cicirello</author>
            <journal_title>Journal of Open Source
Software</journal_title>
            <issue>31</issue>
            <volume>3</volume>
            <doi>10.21105/joss.00950</doi>
            <cYear>2018</cYear>
            <unstructured_citation>Cicirello, V. A. (2018).
JavaPermutationTools: A java library of permutation distance metrics.
Journal of Open Source Software, 3(31), 950.
https://doi.org/10.21105/joss.00950</unstructured_citation>
          </citation>
          <citation key="Cicirello2018a">
            <article_title>Impact of random number generation on
parallel genetic algorithms</article_title>
            <author>Cicirello</author>
            <journal_title>Proceedings of the thirty-first international
florida artificial intelligence research society
conference</journal_title>
            <cYear>2018</cYear>
            <unstructured_citation>Cicirello, V. A. (2018). Impact of
random number generation on parallel genetic algorithms. Proceedings of
the Thirty-First International Florida Artificial Intelligence Research
Society Conference, 2–7.</unstructured_citation>
          </citation>
          <citation key="Cicirello2022">
            <article_title>Cycle mutation: Evolving permutations via
cycle induction</article_title>
            <author>Cicirello</author>
            <journal_title>Applied Sciences</journal_title>
            <issue>11</issue>
            <volume>12</volume>
            <doi>10.3390/app12115506</doi>
            <cYear>2022</cYear>
            <unstructured_citation>Cicirello, V. A. (2022). Cycle
mutation: Evolving permutations via cycle induction. Applied Sciences,
12(11). https://doi.org/10.3390/app12115506</unstructured_citation>
          </citation>
          <citation key="Lemire2019">
            <article_title>Fast random integer generation in an
interval</article_title>
            <author>Lemire</author>
            <journal_title>ACM Transactions on Modeling and Computer
Simulation</journal_title>
            <issue>1</issue>
            <volume>29</volume>
            <doi>10.1145/3230636</doi>
            <cYear>2019</cYear>
            <unstructured_citation>Lemire, D. (2019). Fast random
integer generation in an interval. ACM Transactions on Modeling and
Computer Simulation, 29(1).
https://doi.org/10.1145/3230636</unstructured_citation>
          </citation>
          <citation key="Marsaglia2000">
            <article_title>The ziggurat method for generating random
variables</article_title>
            <author>Marsaglia</author>
            <journal_title>Journal of Statistical
Software</journal_title>
            <issue>8</issue>
            <volume>5</volume>
            <doi>10.18637/jss.v005.i08</doi>
            <cYear>2000</cYear>
            <unstructured_citation>Marsaglia, G., &amp; Tsang, W. W.
(2000). The ziggurat method for generating random variables. Journal of
Statistical Software, 5(8), 1–7.
https://doi.org/10.18637/jss.v005.i08</unstructured_citation>
          </citation>
          <citation key="Leong2005">
            <article_title>A comment on the implementation of the
ziggurat method</article_title>
            <author>Leong</author>
            <journal_title>Journal of Statistical
Software</journal_title>
            <issue>7</issue>
            <volume>12</volume>
            <doi>10.18637/jss.v012.i07</doi>
            <cYear>2005</cYear>
            <unstructured_citation>Leong, P. H. W., Zhang, G., Lee,
D.-U., Luk, W., &amp; Villasenor, J. (2005). A comment on the
implementation of the ziggurat method. Journal of Statistical Software,
12(7), 1–4.
https://doi.org/10.18637/jss.v012.i07</unstructured_citation>
          </citation>
          <citation key="Voss2014">
            <article_title>The ziggurat method for generating gaussian
random numbers</article_title>
            <author>Voss</author>
            <journal_title>GNU Scientific Library</journal_title>
            <cYear>2014</cYear>
            <unstructured_citation>Voss, J. (2014). The ziggurat method
for generating gaussian random numbers. In GNU Scientific Library. GNU.
https://www.seehuhn.de/pages/ziggurat</unstructured_citation>
          </citation>
          <citation key="Apache2021">
            <article_title>Apache commons RNG: Random numbers
generators</article_title>
            <author>The Apache Software Foundation</author>
            <cYear>2021</cYear>
            <unstructured_citation>The Apache Software Foundation.
(2021). Apache commons RNG: Random numbers generators. Apache.
https://commons.apache.org/proper/commons-rng/</unstructured_citation>
          </citation>
          <citation key="Dyer2014">
            <article_title>Uncommons maths: Random number generators,
probability distributions, combinatorics and statistics for
java</article_title>
            <author>Dyer</author>
            <journal_title>GitHub Repository</journal_title>
            <cYear>2014</cYear>
            <unstructured_citation>Dyer, D. W. (2014). Uncommons maths:
Random number generators, probability distributions, combinatorics and
statistics for java. In GitHub Repository. ​GitHub.
https://github.com/dwdyer/uncommons-maths</unstructured_citation>
          </citation>
          <citation key="Jenetics2022">
            <article_title>PRNGine - pseudo random number engines for
monte carlo simulations</article_title>
            <author>​Jenetics</author>
            <journal_title>​GitHub repository</journal_title>
            <cYear>2022</cYear>
            <unstructured_citation>​Jenetics. (2022). PRNGine - pseudo
random number engines for monte carlo simulations. In ​GitHub repository.
​GitHub. https://github.com/jenetics/prngine</unstructured_citation>
          </citation>
          <citation key="Vitter1985">
            <article_title>Random sampling with a
reservoir</article_title>
            <author>Vitter</author>
            <journal_title>ACM Transactions on Mathematical
Software</journal_title>
            <issue>1</issue>
            <volume>11</volume>
            <doi>10.1145/3147.3165</doi>
            <cYear>1985</cYear>
            <unstructured_citation>Vitter, J. S. (1985). Random sampling
with a reservoir. ACM Transactions on Mathematical Software, 11(1),
37–57. https://doi.org/10.1145/3147.3165</unstructured_citation>
          </citation>
          <citation key="Ernvall1982">
            <article_title>An algorithm for unbiased random
sampling</article_title>
            <author>Ernvall</author>
            <journal_title>The Computer Journal</journal_title>
            <issue>1</issue>
            <volume>25</volume>
            <doi>10.1093/comjnl/25.1.45</doi>
            <cYear>1982</cYear>
            <unstructured_citation>Ernvall, J., &amp; Nevalainen, O.
(1982). An algorithm for unbiased random sampling. The Computer Journal,
25(1), 45–47.
https://doi.org/10.1093/comjnl/25.1.45</unstructured_citation>
          </citation>
          <citation key="Hoos2018">
            <article_title>Stochastic local search</article_title>
            <author>Hoos</author>
            <journal_title>Handbook of approximation algorithms and
metaheuristics methologies and traditional applications</journal_title>
            <volume>1</volume>
            <cYear>2018</cYear>
            <unstructured_citation>Hoos, H. H., &amp; Stützle, T.
(2018). Stochastic local search. In Handbook of approximation algorithms
and metaheuristics methologies and traditional applications (2nd ed.,
Vol. 1). Chapman; Hall/CRC.</unstructured_citation>
          </citation>
          <citation key="Petrowski2017">
            <volume_title>Evolutionary algorithms</volume_title>
            <author>Petrowski</author>
            <doi>10.1002/9781119136378</doi>
            <isbn>9781848218048</isbn>
            <cYear>2017</cYear>
            <unstructured_citation>Petrowski, A., &amp; Ben-Hamida, S.
(2017). Evolutionary algorithms. Wiley.
https://doi.org/10.1002/9781119136378</unstructured_citation>
          </citation>
          <citation key="Doerr2019">
            <volume_title>Theory of evolutionary computation: Recent
developments in discrete optimization</volume_title>
            <author>Doerr</author>
            <isbn>9783030294144</isbn>
            <cYear>2019</cYear>
            <unstructured_citation>Doerr, B., &amp; Neumann, F. (2019).
Theory of evolutionary computation: Recent developments in discrete
optimization. Springer. ISBN: 9783030294144</unstructured_citation>
          </citation>
          <citation key="Tobin2017">
            <article_title>Domain randomization for transferring deep
neural networks from simulation to the real world</article_title>
            <author>Tobin</author>
            <journal_title>2017 IEEE/RSJ international conference on
intelligent robots and systems (IROS)</journal_title>
            <doi>10.1109/IROS.2017.8202133</doi>
            <cYear>2017</cYear>
            <unstructured_citation>Tobin, J., Fong, R., Ray, A.,
Schneider, J., Zaremba, W., &amp; Abbeel, P. (2017). Domain
randomization for transferring deep neural networks from simulation to
the real world. 2017 IEEE/RSJ International Conference on Intelligent
Robots and Systems (IROS), 23–30.
https://doi.org/10.1109/IROS.2017.8202133</unstructured_citation>
          </citation>
          <citation key="Zhao2020">
            <article_title>Sim-to-real transfer in deep reinforcement
learning for robotics: A survey</article_title>
            <author>Zhao</author>
            <journal_title>2020 IEEE symposium series on computational
intelligence (SSCI)</journal_title>
            <doi>10.1109/SSCI47803.2020.9308468</doi>
            <cYear>2020</cYear>
            <unstructured_citation>Zhao, W., Queralta, J. P., &amp;
Westerlund, T. (2020). Sim-to-real transfer in deep reinforcement
learning for robotics: A survey. 2020 IEEE Symposium Series on
Computational Intelligence (SSCI), 737–744.
https://doi.org/10.1109/SSCI47803.2020.9308468</unstructured_citation>
          </citation>
          <citation key="Zhang2019">
            <article_title>Modeling and simulation in intelligent
manufacturing</article_title>
            <author>Zhang</author>
            <journal_title>Computers in Industry</journal_title>
            <volume>112</volume>
            <doi>10.1016/j.compind.2019.08.004</doi>
            <cYear>2019</cYear>
            <unstructured_citation>Zhang, L., Zhou, L., Ren, L., &amp;
Laili, Y. (2019). Modeling and simulation in intelligent manufacturing.
Computers in Industry, 112, 103123.
https://doi.org/10.1016/j.compind.2019.08.004</unstructured_citation>
          </citation>
          <citation key="Rabe2020">
            <article_title>Speeding up computational times in
simheuristics combining genetic algorithms with discrete-event
simulation</article_title>
            <author>Rabe</author>
            <journal_title>Simulation Modelling Practice and
Theory</journal_title>
            <volume>103</volume>
            <doi>10.1016/j.simpat.2020.102089</doi>
            <cYear>2020</cYear>
            <unstructured_citation>Rabe, M., Deininger, M., &amp; Juan,
A. A. (2020). Speeding up computational times in simheuristics combining
genetic algorithms with discrete-event simulation. Simulation Modelling
Practice and Theory, 103, 102089.
https://doi.org/10.1016/j.simpat.2020.102089</unstructured_citation>
          </citation>
          <citation key="Greasley2021">
            <article_title>Enhancing discrete-event simulation with big
data analytics: A review</article_title>
            <author>Greasley</author>
            <journal_title>Journal of the Operational Research
Society</journal_title>
            <issue>2</issue>
            <volume>72</volume>
            <doi>10.1080/01605682.2019.1678406</doi>
            <cYear>2021</cYear>
            <unstructured_citation>Greasley, A., &amp; Edwards, J. S.
(2021). Enhancing discrete-event simulation with big data analytics: A
review. Journal of the Operational Research Society, 72(2), 247–267.
https://doi.org/10.1080/01605682.2019.1678406</unstructured_citation>
          </citation>
          <citation key="Hinterding1995">
            <article_title>Gaussian mutation and self-adaption for
numeric genetic algorithms</article_title>
            <author>Hinterding</author>
            <journal_title>IEEE international conference on evolutionary
computation</journal_title>
            <volume>1</volume>
            <doi>10.1109/ICEC.1995.489178</doi>
            <cYear>1995</cYear>
            <unstructured_citation>Hinterding, R. (1995). Gaussian
mutation and self-adaption for numeric genetic algorithms. IEEE
International Conference on Evolutionary Computation, 1, 384–389.
https://doi.org/10.1109/ICEC.1995.489178</unstructured_citation>
          </citation>
          <citation key="Szu1987">
            <article_title>Nonconvex optimization by fast simulated
annealing</article_title>
            <author>Szu</author>
            <journal_title>Proceedings of the IEEE</journal_title>
            <issue>11</issue>
            <volume>75</volume>
            <doi>10.1109/PROC.1987.13916</doi>
            <cYear>1987</cYear>
            <unstructured_citation>Szu, H. H., &amp; Hartley, R. L.
(1987). Nonconvex optimization by fast simulated annealing. Proceedings
of the IEEE, 75(11), 1538–1540.
https://doi.org/10.1109/PROC.1987.13916</unstructured_citation>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
