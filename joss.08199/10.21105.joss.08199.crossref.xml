<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/5.3.1"
           xmlns:ai="http://www.crossref.org/AccessIndicators.xsd"
           xmlns:rel="http://www.crossref.org/relations.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           version="5.3.1"
           xsi:schemaLocation="http://www.crossref.org/schema/5.3.1 http://www.crossref.org/schemas/crossref5.3.1.xsd">
  <head>
    <doi_batch_id>20250612074159-e077bf999b8d03843fb528e7d3a88f067a237784</doi_batch_id>
    <timestamp>20250612074159</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>https://joss.theoj.org</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>06</month>
          <year>2025</year>
        </publication_date>
        <journal_volume>
          <volume>10</volume>
        </journal_volume>
        <issue>110</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>LMDiskANN.jl: An Implementation of the Low Memory Disk Approximate Nearest Neighbors Search Algorithm</title>
        </titles>
        <contributors>
          <person_name sequence="first" contributor_role="author">
            <given_name>Alexander V.</given_name>
            <surname>Mantzaris</surname>
            <affiliations>
              <institution><institution_name>Department of Statistics and Data Science, University of Central Florida (UCF), USA</institution_name></institution>
            </affiliations>
            <ORCID>https://orcid.org/0000-0002-0026-5725</ORCID>
          </person_name>
        </contributors>
        <publication_date>
          <month>06</month>
          <day>12</day>
          <year>2025</year>
        </publication_date>
        <pages>
          <first_page>8199</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.08199</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">10.6084/m9.figshare.29286668</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/8199</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.08199</doi>
          <resource>https://joss.theoj.org/papers/10.21105/joss.08199</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://joss.theoj.org/papers/10.21105/joss.08199.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="pan2023lm">
            <article_title>Lm-diskann: Low memory footprint in disk-native dynamic graph-based ann indexing</article_title>
            <author>Pan</author>
            <journal_title>2023 IEEE international conference on big data (BigData)</journal_title>
            <doi>10.1109/BigData59044.2023.10386517</doi>
            <cYear>2023</cYear>
            <unstructured_citation>Pan, Y., Sun, J., &amp; Yu, H. (2023). Lm-diskann: Low memory footprint in disk-native dynamic graph-based ann indexing. 2023 IEEE International Conference on Big Data (BigData), 5987–5996. https://doi.org/10.1109/BigData59044.2023.10386517</unstructured_citation>
          </citation>
          <citation key="singh2021freshdiskann">
            <article_title>Freshdiskann: A fast and accurate graph-based ann index for streaming similarity search</article_title>
            <author>Singh</author>
            <journal_title>arXiv preprint arXiv:2105.09613</journal_title>
            <doi>10.48550/arXiv.2105.09613</doi>
            <cYear>2021</cYear>
            <unstructured_citation>Singh, A., Subramanya, S. J., Krishnaswamy, R., &amp; Simhadri, H. V. (2021). Freshdiskann: A fast and accurate graph-based ann index for streaming similarity search. arXiv Preprint arXiv:2105.09613. https://doi.org/10.48550/arXiv.2105.09613</unstructured_citation>
          </citation>
          <citation key="jayaram2019diskann">
            <article_title>Diskann: Fast accurate billion-point nearest neighbor search on a single node</article_title>
            <author>Jayaram Subramanya</author>
            <journal_title>Advances in neural information processing Systems</journal_title>
            <volume>32</volume>
            <cYear>2019</cYear>
            <unstructured_citation>Jayaram Subramanya, S., Devvrit, F., Simhadri, H. V., Krishnawamy, R., &amp; Kadekodi, R. (2019). Diskann: Fast accurate billion-point nearest neighbor search on a single node. Advances in Neural Information Processing Systems, 32.</unstructured_citation>
          </citation>
          <citation key="wang2021comprehensive">
            <article_title>A comprehensive survey and experimental comparison of graph-based approximate nearest neighbor search</article_title>
            <author>Wang</author>
            <journal_title>arXiv preprint arXiv:2101.12631</journal_title>
            <doi>10.48550/arXiv.2101.12631</doi>
            <cYear>2021</cYear>
            <unstructured_citation>Wang, M., Xu, X., Yue, Q., &amp; Wang, Y. (2021). A comprehensive survey and experimental comparison of graph-based approximate nearest neighbor search. arXiv Preprint arXiv:2101.12631. https://doi.org/10.48550/arXiv.2101.12631</unstructured_citation>
          </citation>
          <citation key="nene1997simple">
            <article_title>A simple algorithm for nearest neighbor search in high dimensions</article_title>
            <author>Nene</author>
            <journal_title>IEEE Transactions on pattern analysis and machine intelligence</journal_title>
            <issue>9</issue>
            <volume>19</volume>
            <doi>10.1109/34.615448</doi>
            <cYear>1997</cYear>
            <unstructured_citation>Nene, S. A., &amp; Nayar, S. K. (1997). A simple algorithm for nearest neighbor search in high dimensions. IEEE Transactions on Pattern Analysis and Machine Intelligence, 19(9), 989–1003. https://doi.org/10.1109/34.615448</unstructured_citation>
          </citation>
          <citation key="tellez2022similarity">
            <article_title>Similarity search on neighbor graphs with automatic pareto optimal performance and minimum expected quality setups based on hyperparameter optimization</article_title>
            <author>Tellez</author>
            <journal_title>CoRR</journal_title>
            <volume>abs/2201.07917</volume>
            <doi>10.48550/arXiv.2201.07917</doi>
            <cYear>2022</cYear>
            <unstructured_citation>Tellez, E. S., &amp; Ruiz, G. (2022). Similarity search on neighbor graphs with automatic pareto optimal performance and minimum expected quality setups based on hyperparameter optimization. CoRR, abs/2201.07917. https://doi.org/10.48550/arXiv.2201.07917</unstructured_citation>
          </citation>
          <citation key="Tellez2022">
            <article_title>SimilaritySearch.jl: Autotuned nearest neighbor indexes for julia</article_title>
            <author>Tellez</author>
            <journal_title>Journal of Open Source Software</journal_title>
            <issue>75</issue>
            <volume>7</volume>
            <doi>10.21105/joss.04442</doi>
            <cYear>2022</cYear>
            <unstructured_citation>Tellez, E. S., &amp; Ruiz, G. (2022). SimilaritySearch.jl: Autotuned nearest neighbor indexes for julia. Journal of Open Source Software, 7(75), 4442. https://doi.org/10.21105/joss.04442</unstructured_citation>
          </citation>
          <citation key="julia">
            <article_title>Julia: A fresh approach to numerical computing</article_title>
            <author>Bezanson</author>
            <journal_title>SIAM Review</journal_title>
            <issue>1</issue>
            <volume>59</volume>
            <doi>10.1137/141000671</doi>
            <cYear>2017</cYear>
            <unstructured_citation>Bezanson, J., Edelman, A., Karpinski, S., &amp; Shah, V. B. (2017). Julia: A fresh approach to numerical computing. SIAM Review, 59(1), 65–98. https://doi.org/10.1137/141000671</unstructured_citation>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
