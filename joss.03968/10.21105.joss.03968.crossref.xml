<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/5.3.1"
           xmlns:ai="http://www.crossref.org/AccessIndicators.xsd"
           xmlns:rel="http://www.crossref.org/relations.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           version="5.3.1"
           xsi:schemaLocation="http://www.crossref.org/schema/5.3.1 http://www.crossref.org/schemas/crossref5.3.1.xsd">
  <head>
    <doi_batch_id>20221101T124249-e78e8a6bfcbbda79d9d656ee4bf3bf565dcd3011</doi_batch_id>
    <timestamp>20221101124249</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>Journal of Open Source Software</full_title>
        <abbrev_title>JOSS</abbrev_title>
        <issn media_type="electronic">2475-9066</issn>
        <doi_data>
          <doi>10.21105/joss</doi>
          <resource>https://joss.theoj.org/</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>11</month>
          <year>2022</year>
        </publication_date>
        <journal_volume>
          <volume>7</volume>
        </journal_volume>
        <issue>79</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>rustworkx: A High-Performance Graph Library for
Python</title>
        </titles>
        <contributors>
          <person_name sequence="first" contributor_role="author">
            <given_name>Matthew</given_name>
            <surname>Treinish</surname>
            <ORCID>https://orcid.org/0000-0001-9713-2875</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Ivan</given_name>
            <surname>Carvalho</surname>
            <ORCID>https://orcid.org/0000-0002-8257-2103</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Georgios</given_name>
            <surname>Tsilimigkounakis</surname>
            <ORCID>https://orcid.org/0000-0001-6174-0801</ORCID>
          </person_name>
          <person_name sequence="additional"
                       contributor_role="author">
            <given_name>Nahum</given_name>
            <surname>Sá</surname>
            <ORCID>https://orcid.org/0000-0002-3234-8154</ORCID>
          </person_name>
        </contributors>
        <publication_date>
          <month>11</month>
          <day>01</day>
          <year>2022</year>
        </publication_date>
        <pages>
          <first_page>3968</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/joss.03968</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">10.5281/zenodo.7158473</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/openjournals/joss-reviews/issues/3968</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/joss.03968</doi>
          <resource>https://joss.theoj.org/papers/10.21105/joss.03968</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://joss.theoj.org/papers/10.21105/joss.03968.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="SciPyProceedings_11">
            <article_title>Exploring network structure, dynamics, and
function using NetworkX</article_title>
            <author>Hagberg</author>
            <journal_title>Proceedings of the 7th Python in Science
Conference</journal_title>
            <cYear>2008</cYear>
            <unstructured_citation>Hagberg, A. A., Schult, D. A., &amp;
Swart, P. J. (2008). Exploring network structure, dynamics, and function
using NetworkX. In G. Varoquaux, T. Vaught, &amp; J. Millman (Eds.),
Proceedings of the 7th Python in Science Conference (pp. 11–15).
http://conference.scipy.org/proceedings/SciPy2008/paper_2/</unstructured_citation>
          </citation>
          <citation key="Qiskit2021">
            <volume_title>Qiskit/qiskit-terra: Qiskit terra
0.19.1</volume_title>
            <author>Treinish</author>
            <doi>10.5281/zenodo.2583252</doi>
            <cYear>2021</cYear>
            <unstructured_citation>Treinish, M., Gambetta, J.,
Rodríguez, D. M., Marques, M., Bello, L., Wood, C. J., Gomez, J.,
Nation, P., Chen, R., Winston, E., Gacon, J., Cross, A., Krsulich, K.,
Sertage, I. F., Wood, S., Alexander, T., Capelluto, L., Puente González,
S. de la, Rubio, J., … Woerner, S. (2021). Qiskit/qiskit-terra: Qiskit
terra 0.19.1 (Version 0.19.1) [Computer software]. Zenodo.
https://doi.org/10.5281/zenodo.2583252</unstructured_citation>
          </citation>
          <citation key="Childs2019">
            <article_title>Circuit Transformations for Quantum
Architectures</article_title>
            <author>Childs</author>
            <journal_title>14th Conference on the Theory of Quantum
Computation, Communication and Cryptography (TQC 2019)</journal_title>
            <volume>135</volume>
            <doi>10.4230/LIPIcs.TQC.2019.3</doi>
            <issn>1868-8969</issn>
            <isbn>978-3-95977-112-2</isbn>
            <cYear>2019</cYear>
            <unstructured_citation>Childs, A. M., Schoute, E., &amp;
Unsal, C. M. (2019). Circuit Transformations for Quantum Architectures.
In W. van Dam &amp; L. Mancinska (Eds.), 14th Conference on the Theory
of Quantum Computation, Communication and Cryptography (TQC 2019) (Vol.
135, pp. 3:1–3:24). Schloss Dagstuhl–Leibniz-Zentrum fuer Informatik.
https://doi.org/10.4230/LIPIcs.TQC.2019.3</unstructured_citation>
          </citation>
          <citation key="Matsakis2014">
            <article_title>The Rust language</article_title>
            <author>Matsakis</author>
            <journal_title>Proceedings of the 2014 ACM SIGAda annual
conference on high integrity language technology</journal_title>
            <doi>10.1145/2663171.2663188</doi>
            <isbn>9781450332170</isbn>
            <cYear>2014</cYear>
            <unstructured_citation>Matsakis, N. D., &amp; Klock, F. S.
(2014). The Rust language. Proceedings of the 2014 ACM SIGAda Annual
Conference on High Integrity Language Technology, 103–104.
https://doi.org/10.1145/2663171.2663188</unstructured_citation>
          </citation>
          <citation key="Leskovec2016">
            <article_title>SNAP: A general-purpose network analysis and
graph-mining library</article_title>
            <author>Leskovec</author>
            <journal_title>ACM Trans. Intell. Syst.
Technol.</journal_title>
            <issue>1</issue>
            <volume>8</volume>
            <doi>10.1145/2898361</doi>
            <issn>2157-6904</issn>
            <cYear>2016</cYear>
            <unstructured_citation>Leskovec, J., &amp; Sosič, R. (2016).
SNAP: A general-purpose network analysis and graph-mining library. ACM
Trans. Intell. Syst. Technol., 8(1).
https://doi.org/10.1145/2898361</unstructured_citation>
          </citation>
          <citation key="Csardi2006">
            <article_title>The igraph software package for complex
network research</article_title>
            <author>Csardi</author>
            <journal_title>InterJournal</journal_title>
            <volume>Complex Systems</volume>
            <cYear>2006</cYear>
            <unstructured_citation>Csardi, G., &amp; Nepusz, T. (2006).
The igraph software package for complex network research. InterJournal,
Complex Systems, 1695. https://igraph.org</unstructured_citation>
          </citation>
          <citation key="Peixoto2014">
            <article_title>The graph-tool Python library</article_title>
            <author>Peixoto</author>
            <journal_title>figshare</journal_title>
            <doi>10.6084/m9.figshare.1164194</doi>
            <cYear>2014</cYear>
            <unstructured_citation>Peixoto, T. P. (2014). The graph-tool
Python library. Figshare.
https://doi.org/10.6084/m9.figshare.1164194</unstructured_citation>
          </citation>
          <citation key="Ullberg2021">
            <article_title>atompack: A flexible Python library for
atomic structure generation</article_title>
            <author>Ullberg</author>
            <journal_title>GitHub repository</journal_title>
            <cYear>2021</cYear>
            <unstructured_citation>Ullberg, S. (2021). atompack: A
flexible Python library for atomic structure generation. In GitHub
repository. GitHub.
https://github.com/seatonullberg/atompack</unstructured_citation>
          </citation>
          <citation key="Jha2021">
            <article_title>Qtcodes</article_title>
            <author>Jha</author>
            <journal_title>GitHub repository</journal_title>
            <cYear>2021</cYear>
            <unstructured_citation>Jha, S., Chen, J., Householder, A.,
&amp; Mi, A. (2021). Qtcodes. In GitHub repository. GitHub.
https://github.com/yaleqc/qtcodes</unstructured_citation>
          </citation>
          <citation key="bluss2021">
            <article_title>Petgraph</article_title>
            <author>bluss</author>
            <journal_title>GitHub repository</journal_title>
            <cYear>2021</cYear>
            <unstructured_citation>bluss, Comets, J.-M., Borgna, A.,
Larralde, M., Mitchener, B., &amp; Kochkov, A. (2021). Petgraph. In
GitHub repository. GitHub.
https://github.com/petgraph/petgraph</unstructured_citation>
          </citation>
          <citation key="Hewitt2021">
            <article_title>PyO3</article_title>
            <author>Hewitt</author>
            <journal_title>GitHub repository</journal_title>
            <cYear>2021</cYear>
            <unstructured_citation>Hewitt, D., Kanagawa, Y., Kim, N.,
Grunwald, D., Niederbühl, A., messense, Kolenbrander, B., Brandl, G.,
&amp; Ganssle, P. (2021). PyO3. In GitHub repository. GitHub.
https://github.com/PyO3/pyo3</unstructured_citation>
          </citation>
          <citation key="Cordella2004">
            <article_title>A (sub)graph isomorphism algorithm for
matching large graphs</article_title>
            <author>Cordella</author>
            <journal_title>IEEE Transactions on Pattern Analysis and
Machine Intelligence</journal_title>
            <issue>10</issue>
            <volume>26</volume>
            <doi>10.1109/TPAMI.2004.75</doi>
            <cYear>2004</cYear>
            <unstructured_citation>Cordella, L. P., Foggia, P., Sansone,
C., &amp; Vento, M. (2004). A (sub)graph isomorphism algorithm for
matching large graphs. IEEE Transactions on Pattern Analysis and Machine
Intelligence, 26(10), 1367–1372.
https://doi.org/10.1109/TPAMI.2004.75</unstructured_citation>
          </citation>
          <citation key="Juttner2018">
            <article_title>VF2++—an improved subgraph isomorphism
algorithm</article_title>
            <author>Jüttner</author>
            <journal_title>Discrete Applied Mathematics</journal_title>
            <volume>242</volume>
            <doi>10.1016/j.dam.2018.02.018</doi>
            <issn>0166-218X</issn>
            <cYear>2018</cYear>
            <unstructured_citation>Jüttner, A., &amp; Madarasi, P.
(2018). VF2++—an improved subgraph isomorphism algorithm. Discrete
Applied Mathematics, 242, 69–81.
https://doi.org/10.1016/j.dam.2018.02.018</unstructured_citation>
          </citation>
          <citation key="Staudt2016">
            <article_title>NetworKit: A tool suite for large-scale
complex network analysis</article_title>
            <author>Staudt</author>
            <journal_title>Network Science</journal_title>
            <issue>4</issue>
            <volume>4</volume>
            <doi>10.1017/nws.2016.20</doi>
            <cYear>2016</cYear>
            <unstructured_citation>Staudt, C. L., Sazonovs, A., &amp;
Meyerhenke, H. (2016). NetworKit: A tool suite for large-scale complex
network analysis. Network Science, 4(4), 508–530.
https://doi.org/10.1017/nws.2016.20</unstructured_citation>
          </citation>
          <citation key="Sagemath2020">
            <volume_title>SageMath, the Sage Mathematics Software System
(Version 9.1)</volume_title>
            <author>The Sage Developers</author>
            <doi>10.5281/zenodo.4066866</doi>
            <cYear>2020</cYear>
            <unstructured_citation>The Sage Developers. (2020).
SageMath, the Sage Mathematics Software System (Version 9.1).
https://doi.org/10.5281/zenodo.4066866</unstructured_citation>
          </citation>
          <citation key="Bergholm2020">
            <article_title>PennyLane: Automatic differentiation of
hybrid quantum-classical computations</article_title>
            <author>Bergholm</author>
            <doi>10.48550/ARXIV.1811.04968</doi>
            <cYear>2020</cYear>
            <unstructured_citation>Bergholm, V., Izaac, J., Schuld, M.,
Gogolin, C., Alam, M. S., Ahmed, S., Arrazola, J. M., Blank, C.,
Delgado, A., Jahangiri, S., McKiernan, K., Meyer, J. J., Niu, Z., Száva,
A., &amp; Killoran, N. (2020). PennyLane: Automatic differentiation of
hybrid quantum-classical computations.
https://doi.org/10.48550/ARXIV.1811.04968</unstructured_citation>
          </citation>
          <citation key="Stone2021">
            <article_title>Rayon: A data parallelism library for
Rust</article_title>
            <author>Stone</author>
            <journal_title>GitHub repository</journal_title>
            <cYear>2021</cYear>
            <unstructured_citation>Stone, J., &amp; Matsakis, N. D.
(2021). Rayon: A data parallelism library for Rust. In GitHub
repository. GitHub.
https://github.com/rayon-rs/rayon</unstructured_citation>
          </citation>
          <citation key="Cross2021">
            <article_title>OpenQASM 3: A broader and deeper quantum
assembly language</article_title>
            <author>Cross</author>
            <doi>10.48550/arXiv.2104.14722</doi>
            <cYear>2021</cYear>
            <unstructured_citation>Cross, A. W., Javadi-Abhari, A.,
Alexander, T., Beaudrap, N. de, Bishop, L. S., Heidel, S., Ryan, C. A.,
Smolin, J., Gambetta, J. M., &amp; Johnson, B. R. (2021). OpenQASM 3: A
broader and deeper quantum assembly language.
https://doi.org/10.48550/arXiv.2104.14722</unstructured_citation>
          </citation>
          <citation key="Li2021">
            <article_title>Qubit mapping based on subgraph isomorphism
and filtered depth-limited search</article_title>
            <author>Li</author>
            <journal_title>IEEE Transactions on
Computers</journal_title>
            <issue>11</issue>
            <volume>70</volume>
            <doi>10.1109/tc.2020.3023247</doi>
            <issn>2326-3814</issn>
            <cYear>2021</cYear>
            <unstructured_citation>Li, S., Zhou, X., &amp; Feng, Y.
(2021). Qubit mapping based on subgraph isomorphism and filtered
depth-limited search. IEEE Transactions on Computers, 70(11), 1777–1788.
https://doi.org/10.1109/tc.2020.3023247</unstructured_citation>
          </citation>
          <citation key="Bharti2021">
            <article_title>Noisy intermediate-scale quantum
algorithms</article_title>
            <author>Bharti</author>
            <journal_title>Reviews of Modern Physics</journal_title>
            <issue>1</issue>
            <volume>94</volume>
            <doi>10.1103/revmodphys.94.015004</doi>
            <issn>1539-0756</issn>
            <cYear>2022</cYear>
            <unstructured_citation>Bharti, K., Cervera-Lierta, A., Kyaw,
T. H., Haug, T., Alperin-Lea, S., Anand, A., Degroote, M., Heimonen, H.,
Kottmann, J. S., Menke, T., Mok, W.-K., Sim, S., Kwek, L.-C., &amp;
Aspuru-Guzik, A. (2022). Noisy intermediate-scale quantum algorithms.
Reviews of Modern Physics, 94(1).
https://doi.org/10.1103/revmodphys.94.015004</unstructured_citation>
          </citation>
          <citation key="Preskill2018">
            <article_title>Quantum computing in the NISQ era and
beyond</article_title>
            <author>Preskill</author>
            <journal_title>Quantum</journal_title>
            <volume>2</volume>
            <doi>10.22331/q-2018-08-06-79</doi>
            <issn>2521-327X</issn>
            <cYear>2018</cYear>
            <unstructured_citation>Preskill, J. (2018). Quantum
computing in the NISQ era and beyond. Quantum, 2, 79.
https://doi.org/10.22331/q-2018-08-06-79</unstructured_citation>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
