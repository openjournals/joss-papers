<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">4989</article-id>
<article-id pub-id-type="doi">10.21105/joss.04989</article-id>
<title-group>
<article-title>SigCorr: A Python package for studies of trials
factors</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" equal-contrib="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-3649-7621</contrib-id>
<name>
<surname>Ananiev</surname>
<given-names>V.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author" equal-contrib="yes" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-5751-6636</contrib-id>
<name>
<surname>Read</surname>
<given-names>A. L.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Physics, University of Oslo, Boks 1072
Blindern, Oslo, NO-0316, Norway</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2022-09-05">
<day>5</day>
<month>9</month>
<year>2022</year>
</pub-date>
<volume>8</volume>
<issue>87</issue>
<fpage>4989</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>python</kwd>
<kwd>statistics</kwd>
<kwd>look-elsewhere effect</kwd>
<kwd>lee</kwd>
<kwd>trials factor</kwd>
<kwd>statistical significance</kwd>
<kwd>gaussian process</kwd>
<kwd>resonance search</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The Trials factor (TF) is a generalization of the Bonferroni
  correction for the significance of repeated experiments. In a
  likelihood ratio scan that searches for the most significant peak of
  signal amplitude as a function of some parameter, e.g. the mass of a
  hypothetical particle, repeated experiments emerge effectively due to
  the localized nature of the hypothetical signal. The trials factor in
  such a search is the ratio between the probability of observing such
  an excess anywhere in the scanned search region to the probability of
  observing the excess at the point of maximum observed significance.
  For a more detailed introduction of the TF, we refer the reader to the
  work of Gross and Vitells
  (<xref alt="Gross &amp; Vitells, 2010" rid="ref-gross2010" ref-type="bibr">Gross
  &amp; Vitells, 2010</xref>).</p>
  <p>There are several ways to estimate the trials factor or an upper
  bound for it. Most of the approaches require a number of samples from
  the background distribution (Monte Carlo (MC) toys) to be generated
  and fitted with a statistical model. This procedure is separated in
  the upper block of
  <xref alt="[fig:tf_ways]" rid="figU003Atf_ways">[fig:tf_ways]</xref>,
  mainly because it is the most time-consuming part of the analysis.</p>
  <p>The lower block in
  <xref alt="[fig:tf_ways]" rid="figU003Atf_ways">[fig:tf_ways]</xref>
  shows various ways to estimate the trials factor from the fitted MC
  toys. When expressed as a pipeline, each way can be assembled from
  some simple building blocks, the implementation of which is at the
  core of SigCorr.</p>
  <p>The communication between the upper (fitting) and the lower
  (analysis) components is conducted via HDF5 files with a well defined
  structure, which can be referred to in the documentation of SigCorr
  (<xref alt="Ananiev &amp; Read, 2023a" rid="ref-gitlab-sigcorr-docs" ref-type="bibr">Ananiev
  &amp; Read, 2023a</xref>). Such a weak coupling allows to easily
  replace parts of the pipeline with more efficient tools if needed.</p>
  <fig>
    <caption><p>Various ways to estimate the trials
    factor.<styled-content id="figU003Atf_ways"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/img/tf_ways.dot.png" />
  </fig>
  <p>SigCorr is a framework that implements a wide range of tools and
  was developed to simplify the process of construction of the pipelines
  shown above, and, therefore, to make studies of the global
  significance or a trials factor a straightforward exercise. It is
  worth mentioning, though, that the figure above is not exhaustive. We
  believe there are more ways to approach the trials factor, and some of
  them may also be possible to implement with the tools provided by
  SigCorr!</p>
  <p>The project has a hybrid structure:</p>
  <list list-type="bullet">
    <list-item>
      <p>From the perspective of fitting the Monte Carlo toys, it is a
      framework. Users will have to implement their own statistical
      models following the guides and examples in the documentation.</p>
    </list-item>
    <list-item>
      <p>From the perspective of analysis of the fitted toys, however,
      SigCorr is a Swiss Army knife that assembles into one tool the
      knowledge from the frequently cited HEP papers that studied
      statistical hypothesis testing and the trials factor
      (<xref alt="Cowan et al., 2011" rid="ref-cowan2011" ref-type="bibr">Cowan
      et al., 2011</xref>;
      <xref alt="Gross &amp; Vitells, 2010" rid="ref-gross2010" ref-type="bibr">Gross
      &amp; Vitells, 2010</xref>;
      <xref alt="Vitells &amp; Gross, 2011" rid="ref-vitells2011" ref-type="bibr">Vitells
      &amp; Gross, 2011</xref>).</p>
    </list-item>
  </list>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>In high-energy physics it is a recurring challenge to efficiently
  and precisely (enough) calculate the global significance of, e.g., a
  potential new resonance. The Gross and Vitells trials factor
  approximation
  (<xref alt="Gross &amp; Vitells, 2010" rid="ref-gross2010" ref-type="bibr">Gross
  &amp; Vitells, 2010</xref>) and
  (<xref alt="Vitells &amp; Gross, 2011" rid="ref-vitells2011" ref-type="bibr">Vitells
  &amp; Gross, 2011</xref>) is based on the average “up-crossings” of
  the significance in the search region, or generally on the average
  Euler characteristic of the set of significance measurements that
  exceed the threshold of the local significance. It has revolutionized
  the trials factor estimation for significances above 3 standard
  deviations, but the challenges of actually calculating the average
  up-crossings and the validity of the approximation for smaller
  significances remain.</p>
  <p>In Ananiev &amp; Read
  (<xref alt="2023b" rid="ref-ananiev2022" ref-type="bibr">2023b</xref>)
  a new method was proposed. It models the significance in the search
  region as a Gaussian process (GP). The method was developed to
  overcome the limitations of the Gross and Vitells approach via
  replacing expensive MC fits with lightweight GP toys.</p>
  <p>Up-crossings, Euler characteristic and Gaussian processes are
  commonly relied on in this field of research. When studied together,
  they have many useful properties for the estimation of trials factors.
  SigCorr is the first project that assembles all of them into one
  Python package, that also includes the tools for parallel analysis of
  the MC toys and GP toys in a unified fashion. Together with the
  fitting framework it allows the path from the statistical model
  definition to a TF estimate to be travelled.</p>
  <p>SigCorr is a framework developed with a goal to cover a wide range
  of use cases for TF estimates. There are, however, popular and
  well-maintained packages which cover some aspects of this process. For
  example, <monospace>RooFit</monospace>
  (<xref alt="Verkerke &amp; Kirkby, 2006" rid="ref-RooFit" ref-type="bibr">Verkerke
  &amp; Kirkby, 2006</xref>) and <monospace>PyHF</monospace>
  (<xref alt="Heinrich et al., n.d." rid="ref-pyhf" ref-type="bibr">Heinrich
  et al., n.d.</xref>), which are widely used in particle physics, may
  significantly replace or augment the part of SigCorr that is
  responsible for optimizing the likelihoods of the statistical models.
  The <monospace>pyBumpHunter</monospace> package
  (<xref alt="Vaslin &amp; Donini, 2023" rid="ref-pyBumpHunter" ref-type="bibr">Vaslin
  &amp; Donini, 2023</xref>) may help with brute force estimates of the
  TF.</p>
  <p>Although SigCorr covers just simplified versions of all the above,
  it also implements validated approximations and asymptotics for fast
  computations of the TF and its upper bound based on classical papers
  in the field. The possibility of doing this in a modular but
  consistent fashion makes SigCorr unique in the field, and will allow
  users to try different methods
  (<xref alt="[fig:tf_ways]" rid="figU003Atf_ways">[fig:tf_ways]</xref>),
  cross-validate and choose or construct the most suitable approach to
  their analysis.</p>
</sec>
<sec id="examples-of-use">
  <title>Examples of use</title>
  <p><italic>Average Euler characteristic propagation</italic></p>
  <p>For the Gaussian process field, for any chosen threshold on the
  field values, one can define a set of points above this threshold. The
  Euler characteristic of this set gives an estimation of the number of
  peaks above the threshold, which is a very important characteristic of
  the Gaussian process for the Trials factor studies.</p>
  <p>A Gaussian process has a property that the average Euler
  characteristic at any threshold is a simple function of a few
  reference Euler characteristic values and the threshold
  (<xref alt="Vitells &amp; Gross, 2011" rid="ref-vitells2011" ref-type="bibr">Vitells
  &amp; Gross, 2011</xref>). The number of reference values required
  depends on the dimensionality of the Gaussian field.</p>
  <p>Here is how to estimate the average Euler characteristic for
  arbitrary thresholds with SigCorr, knowing 2 reference values for a
  2-dimensional Gaussian field:</p>
  <code language="python">import numpy as np
from sigcorr.tools.stats.gp.euler_number import GPEulerNumberPropagator

# 2D Gaussian process requires 2 reference values
ref_thresholds = np.array([1, 2.])
ref_euler_nums = np.array([3.2, 1.2])
target_thresholds = np.array([0.5, 1.5, 2.5])
euler_number_propagator = GPEulerNumberPropagator(ref_thresholds,
                                                  ref_euler_nums)
target_euler_numbers = euler_number_propagator.calc(target_thresholds)
# array([3.10791656, 2.29280228, 0.46934814])</code>
  <p><italic>Batched statistics</italic></p>
  <p>When the number of samples is known in advance but not all samples
  are available at the moment (e.g. they don’t fit into RAM), it is
  still possible to estimate mean, variance, covariance and statistical
  errors by processing the samples in batches.</p>
  <code language="python">import numpy as np
from sigcorr.tools.stats.batch_stats import BatchStats2

n_samples = 3
one_sample_shape = 2
samples = np.array([[1, 2], [2, 3], [3., 4.]])

bs = BatchStats2(n_samples, one_sample_shape)
bs.push(samples[:1])  # push first batch
bs.push(samples[1:])  # push second batch

# sample mean
mean = bs.get_mean()
# array([2., 3.])

# sample variance
variance = bs.get_var()
# array([0.66666667, 0.66666667])

# covariance matrix between observables
covariance = bs.get_cov()
# array([[0.66666667, 0.66666667],
#        [0.66666667, 0.66666667]])

# variance of the covariance matrix between observables,
# can be used to estimate statistical errors
# on the sample covariance estimate
covariance_variance = bs.get_cov_var()
# array([[0.22222222, 0.22222222],
#        [0.22222222, 0.22222222]])</code>
  <p><italic>Statistical analysis of GP samples (parallel)</italic></p>
  <p>A set of standard normal random variables when squared follow a
  chi-squared distribution with 1 degree of freedom. One can see the
  analogy with a test statistic curve emerging from a likelihood scan.
  If we ask the question, what is the fraction of curves that exceed
  some threshold, this would resemble the procedure used to estimate the
  trials factor via brute force. Below we estimate the fraction of test
  statistic curves that exceed the threshold
  <monospace>1.2</monospace>.</p>
  <code language="python">import numpy as np
from sigcorr.mapreduce.gp import gp_batch_mapreduce
from sigcorr.tools.utils import get_last_from_iter
from sigcorr.mapreduce.map_reducers import ChainCalc
from sigcorr.mapreduce.map_reducers import MathCalc
from sigcorr.mapreduce.map_reducers import OverflowsCalc
from sigcorr.mapreduce.map_reducers import BatchStats1Reduce

cov = np.eye(3) + 0.1
result_iterator = gp_batch_mapreduce(
    cov,  # covariance matrix of the GP
    100,  # number of GP samples
    10,  # batch size
    (3, ),  # sample shape
    ChainCalc([MathCalc(np.square), OverflowsCalc(1.2)]),  # apply to every batch
    BatchStats1Reduce())  # aggregate
resulting_bs, num_processed = get_last_from_iter(result_iterator)
resulting_bs.get_mean()</code>
  <p>Here, <monospace>ChainCalc</monospace>,
  <monospace>MathCalc</monospace>, <monospace>OverflowsCalc</monospace>
  are building blocks of the pipeline used to square the GP sample and
  then to set the value <monospace>0</monospace> or
  <monospace>1</monospace> per curve in the batch depending on whether
  the curve exceeds the threshold <monospace>1.2</monospace>. There are
  other building blocks that, for example, help to estimate the
  significance from the maximum likelihood values
  (<monospace>SigsCalc</monospace>), or to compute the Euler
  characteristic of the batch of samples
  (<monospace>EulerNumberCalc</monospace>), etc.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We would like to thank Ofer Vitells for several very helpful
  discussions, in particular about the details of the statistical model
  in the Gross and Vitells paper, the implementation of which became a
  part of the SigCorr package to serve as one of the examples of its
  use. We would also like to acknowledge the support of the ATLAS
  Collaboration. This research was supported by the European Union
  Framework Programme for Research and Innovation Horizon 2020
  (2014–2021) under the Marie Sklodowska-Curie Grant Agreement
  No.765710.</p>
</sec>
</body>
<back>
<ref-list>
  <ref id="ref-RooFit">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Verkerke</surname><given-names>W.</given-names></name>
        <name><surname>Kirkby</surname><given-names>D.</given-names></name>
      </person-group>
      <article-title>The RooFit Toolkit for data modeling</article-title>
      <source>Statistical problems in particle physics, astrophysics and cosmology</source>
      <publisher-name>Publishedd by Imperial College Press and distributed by World Scientific Publishing Co.</publisher-name>
      <year iso-8601-date="2006-05">2006</year><month>05</month>
      <uri>https://doi.org/10.1142/9781860948985_0039</uri>
      <pub-id pub-id-type="doi">10.1142/9781860948985_0039</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-pyhf">
    <element-citation publication-type="software">
      <person-group person-group-type="author">
        <name><surname>Heinrich</surname><given-names>Lukas</given-names></name>
        <name><surname>Feickert</surname><given-names>Matthew</given-names></name>
        <name><surname>Stark</surname><given-names>Giordon</given-names></name>
      </person-group>
      <article-title>Pyhf</article-title>
      <uri>https://doi.org/10.5281/zenodo.1169739</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.1169739</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-pyBumpHunter">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Vaslin</surname><given-names>Louis</given-names></name>
        <name><surname>Donini</surname><given-names>Julien</given-names></name>
      </person-group>
      <article-title>pyBumpHunter</article-title>
      <source>GitHub repository</source>
      <publisher-name>https://github.com/scikit-hep/pyBumpHunter; GitHub</publisher-name>
      <year iso-8601-date="2023">2023</year>
    </element-citation>
  </ref>
  <ref id="ref-gross2010">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Gross</surname><given-names>Eilam</given-names></name>
        <name><surname>Vitells</surname><given-names>Ofer</given-names></name>
      </person-group>
      <article-title>Trial factors for the look elsewhere effect in high energy physics</article-title>
      <source>The European Physical Journal C</source>
      <publisher-name>Springer Science; Business Media LLC</publisher-name>
      <year iso-8601-date="2010-10">2010</year><month>10</month>
      <volume>70</volume>
      <issue>1-2</issue>
      <issn>1434-6052</issn>
      <pub-id pub-id-type="doi">10.1140/epjc/s10052-010-1470-8</pub-id>
      <fpage>525</fpage>
      <lpage>530</lpage>
    </element-citation>
  </ref>
  <ref id="ref-vitells2011">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Vitells</surname><given-names>Ofer</given-names></name>
        <name><surname>Gross</surname><given-names>Eilam</given-names></name>
      </person-group>
      <article-title>Estimating the significance of a signal in a multi-dimensional search</article-title>
      <source>Astroparticle Physics</source>
      <publisher-name>Elsevier BV</publisher-name>
      <year iso-8601-date="2011-12">2011</year><month>12</month>
      <volume>35</volume>
      <issue>5</issue>
      <issn>0927-6505</issn>
      <pub-id pub-id-type="doi">10.1016/j.astropartphys.2011.08.005</pub-id>
      <fpage>230</fpage>
      <lpage>234</lpage>
    </element-citation>
  </ref>
  <ref id="ref-ananiev2022">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ananiev</surname><given-names>V.</given-names></name>
        <name><surname>Read</surname><given-names>A. L.</given-names></name>
      </person-group>
      <article-title>Gaussian process-based calculation of look-elsewhere trials factor</article-title>
      <source>Journal of Instrumentation</source>
      <publisher-name>IOP Publishing</publisher-name>
      <year iso-8601-date="2023-05">2023</year><month>05</month>
      <volume>18</volume>
      <issue>05</issue>
      <uri>https://dx.doi.org/10.1088/1748-0221/18/05/P05041</uri>
      <pub-id pub-id-type="doi">10.1088/1748-0221/18/05/P05041</pub-id>
      <fpage>P05041</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-gitlab-sigcorr-docs">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Ananiev</surname><given-names>V.</given-names></name>
        <name><surname>Read</surname><given-names>A. L.</given-names></name>
      </person-group>
      <article-title>Documentation and examples for SigCorr</article-title>
      <year iso-8601-date="2023">2023</year>
      <uri>https://sigcorr.gitlab.io/sigcorr/latest/</uri>
    </element-citation>
  </ref>
  <ref id="ref-cowan2011">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Cowan</surname><given-names>Glen</given-names></name>
        <name><surname>Cranmer</surname><given-names>Kyle</given-names></name>
        <name><surname>Gross</surname><given-names>Eilam</given-names></name>
        <name><surname>Vitells</surname><given-names>Ofer</given-names></name>
      </person-group>
      <article-title>Asymptotic formulae for likelihood-based tests of new physics</article-title>
      <source>The European Physical Journal C</source>
      <publisher-name>Springer Science; Business Media LLC</publisher-name>
      <year iso-8601-date="2011-02">2011</year><month>02</month>
      <volume>71</volume>
      <issue>2</issue>
      <issn>1434-6052</issn>
      <pub-id pub-id-type="doi">10.1140/epjc/s10052-011-1554-0</pub-id>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
