<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">3957</article-id>
<article-id pub-id-type="doi">10.21105/joss.03957</article-id>
<title-group>
<article-title>PWSpy: A Python library dedicated to the analysis of
Partial Wave Spectroscopic Microscopy data.</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-2882-2471</contrib-id>
<name>
<surname>Anthony</surname>
<given-names>Nicholas M.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-1981-1818</contrib-id>
<name>
<surname>Backman</surname>
<given-names>Vadim</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Biomedical Engineering, Northwestern
University, Evanston, IL, USA.</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2021-11-10">
<day>10</day>
<month>11</month>
<year>2021</year>
</pub-date>
<volume>7</volume>
<issue>72</issue>
<fpage>3957</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2022</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>Microscopy</kwd>
<kwd>Hyperspectral Imaging</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Partial Wave Spectroscopic (PWS) Microscopy is a novel
  spectroscopic microscopy technique that quantitatively detects the
  nanoscale mass density distribution within a biological sample. PWS
  microscopy achieves sensitivity to nanoscale structures within
  biological cells by using the spectroscopic content of microscope
  images, and quantitatively measures nanoarchitectural changes in cells
  associated with carcinogenesis
  (<xref alt="Chandler et al., 2016" rid="ref-ChandlerU003A2016" ref-type="bibr">Chandler
  et al., 2016</xref>). Additionally, PWS does not require exogenous
  labels and thus works even in unstained samples.</p>
  <p><monospace>PWSpy</monospace> is a Python module dedicated to the
  analysis of PWS data. It includes a full suite of tools that prove
  useful in analyzing experimental data. This includes object-oriented
  representations of the raw data involved as well as the analyzed
  output data and auxiliary data used such as ROIs, calibration files,
  and automated imaging metadata produced by the PWS Acquisition
  (<xref alt="Anthony, 2020" rid="ref-PWS_Acquisition" ref-type="bibr">Anthony,
  2020</xref>) plugin for Micro-Manager
  (<xref alt="Edelstein et al., 2014" rid="ref-Micro-Manager" ref-type="bibr">Edelstein
  et al., 2014</xref>). A single PWS measurement can be treated as a 3D
  image cube with dimensions (x, y, and wavenumber) and a single PWS
  experiment may consist of thousands of such images colocalized with
  widefield fluorescence, confocal microscopy, or other interferometric
  image cubes. With <monospace>PWSpy</monospace>, it is trivial to skip
  the basics of preprocessing and get to the heart of extracting
  meaningful results from your experimental data. Basic operations such
  as normalization, camera non-linearity compensation, and calibration
  can all be handled with the call of a single method so you can trust
  that they have been performed without error. Additionally, the library
  provides a means for conveniently loading and storing auxiliary data
  such as ROIs, notes, and analysis results. Utility functionality for
  generating visualizations, automatic colocalization, basic modeling of
  reflectance, loading an manipulation of Micro-Manager position list
  files, and more are provided in the <monospace>utility</monospace>
  subpackage.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Any analysis of raw data generated by PWS microscopy or other
  related interferometric imaging modalities
  (<xref alt="Gladstein et al., 2019" rid="ref-GladsteinU003A2019" ref-type="bibr">Gladstein
  et al., 2019</xref>) requires loading image data and metadata from a
  large variety of file formats and performing complex pre-processing
  steps before any of the real analysis begins. Up until now a great
  many single-use MATLAB scripts have been written to perform these
  tasks but a comprehensive and reusable library has never been
  developed. Any minor variations in how this pre-processing or analysis
  is performed can result in major differences in final analysis results
  and any script that fully implements all of the required processing
  becomes so long as to be unreadable. <monospace>PWSpy</monospace>
  provides an object-oriented interface for performing all common file
  I/O, pre-processing, and analysis tasks related to PWS. This allows
  users to write succinct and readable scripts/software that can be
  trusted to process data correctly. Automated unit testing helps ensure
  that as the code continues to be improved upon the analysis results
  will stay the same. In order to guarantee that analysis results can
  always be repeated, results that are saved to file include metadata
  that fully describes the analysis settings, calibration files, and the
  Git revision SHA of <monospace>PWSpy</monospace> that were used in
  analysis.</p>
  <p>The data processing steps described in previous publications
  (<xref alt="L. Cherkezyan et al., 2013" rid="ref-cherkezyanU003A2013" ref-type="bibr">L.
  Cherkezyan et al., 2013</xref>;
  <xref alt="Lusik Cherkezyan et al., 2017" rid="ref-cherkezyanU003A2017" ref-type="bibr">Lusik
  Cherkezyan et al., 2017</xref>;
  <xref alt="Gladstein et al., 2019" rid="ref-GladsteinU003A2019" ref-type="bibr">Gladstein
  et al., 2019</xref>) can be found written out clearly in Python under
  the <monospace>analysis</monospace> package. This library provides the
  backend code for the user interfaces found in
  <monospace>PWSpy_GUI</monospace>
  (<xref alt="Anthony, 2021" rid="ref-PWSpy_GUI" ref-type="bibr">Anthony,
  2021</xref>). <monospace>PWSpy</monospace> was designed to be used by
  any researchers working with PWS data. It has already been used in one
  scientific publication
  (<xref alt="Li et al., 2021" rid="ref-LiU003A2021" ref-type="bibr">Li
  et al., 2021</xref>) with many more on the way.
  <monospace>PWSpy</monospace> takes care of all the low-level details
  of PWS analysis so that researchers can focus on the big picture.</p>
  <fig>
    <caption><p>Example images produced by PWSpy</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="media/figs/gridcells.png" xlink:title="" />
  </fig>
</sec>
<sec id="description">
  <title>Description</title>
  <sec id="analysis">
    <title>Analysis</title>
    <p>A core aim of <monospace>PWSpy</monospace> is to make the
    analysis of PWS and other related interferometric measurements
    uniform, understandable, repeatable, and bug free. In order to make
    the procedures involved in each analysis pipeline in the
    <monospace>pwspy.analysis</monospace> package easier to understand
    the functionality of each type of analysis is split between a set of
    three classes: an analysis class that performs the actual data
    analysis, a settings class that defines the permissible adjustable
    parameters of the analysis, and a results class which stores the
    output of an analysis performed on a single measurement. The outline
    of behavior that each of these classes must implement is defined in
    a set of three abstract base classes. For example, each analysis
    class must implement a <monospace>run</monospace> method which takes
    a single raw measurement as input and returns a single analysis
    result alongside a list of warnings indicating potential issues with
    the input data or analysis settings.</p>
    <fig>
      <caption><p>Inheritance diagram showing how the abstract base
      classes defining analysis pipelines, analysis settings and
      serializable analysis results relate to the implementations used
      to perform various types of image analysis</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="media/figs/analysis_inherit.png" xlink:title="" />
    </fig>
    <p>In order to help produce reproducible research each analysis
    result stores information about the analysis settings that were used
    to produce it as well as information about any calibration
    measurements that were used to pre-process the data and the Git
    revision SHA of <monospace>PWSpy</monospace>.</p>
  </sec>
  <sec id="data-types">
    <title>Data Types</title>
    <p>Each type of raw experimental data that is handled by PWSpy is
    represented by a set of two classes, a metadata class which can
    provide useful information about the experimental data without
    loading the full image cube into memory, and a data class which
    facilitates operating on the 3D image data itself. In order to
    encourage writing code that will not be strongly coupled to the
    implementation details of a specific measurement type, abstract base
    classes for metadata and image data are defined. It is encouraged
    that code external to the <monospace>pwspy.dataTypes</monospace>
    package is written in terms of these abstract base classes when
    possible.</p>
    <p>In addition to the metadata and image data classes, the
    <monospace>pwspy.dataTypes</monospace> package also contains classes
    to represent auxiliary data such as an <monospace>Roi</monospace>
    used to select data from a specific range within an image cube or an
    <monospace>Acquisition</monospace> used to group together multiple
    colocalized images of different modalities with their corresponding
    <monospace>Roi</monospace>s, and any notes that have been written
    about the <monospace>Acquisition</monospace>.</p>
  </sec>
  <sec id="utility">
    <title>Utility</title>
    <p>While the core functionality of <monospace>PWSpy</monospace> is
    to facilitate the analysis of data from PWS microscopy and related
    interferometric imaging techniques, the
    <monospace>utility</monospace> package contains functionality not
    directly related to this task but still vital in producing well
    calibrated results, coregistering images from different imaging
    modalities, and performing higher order analysis of large-scale
    experiments. Below is a brief outline of two applications handled by
    subpackages of <monospace>pwspy.utility</monospace>, for a complete
    description of the functionality provided by the
    <monospace>utility</monospace> package please refer to the
    documentation.</p>
    <sec id="achieving-accurate-spectroscopic-reflectometry-measurements-on-commercial-microscopes">
      <title>Achieving accurate spectroscopic reflectometry measurements
      on commercial microscopes</title>
      <p>In order to accurately quantify interferometric variations in a
      sample’s reflectance spectra one must first be able to accurately
      quantify the reflectance of a sample. Even the highest end
      microscope objectives will reflect some portion of the incident
      light back to the camera when used in an epi-illumination
      configuration. In many cases for live-cell imaging where the
      average sample reflectance is ~0.4% this unwanted internal
      reflectance of the microscope can be even greater than the sample
      reflectance depending on factors like the alignment of the
      aperture and field stops of the microscope. In order to achieve
      accurate reflectometry measurements this internal reflectance must
      be accurately measured and then subtracted from experimental data
      during pre-processing. If we model the light intensity collected
      at the camera to be <inline-formula><alternatives>
      <tex-math><![CDATA[I = I_{0}(R_{internal} + R_{sample})]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>I</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>I</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>n</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>a</mml:mi><mml:mi>m</mml:mi><mml:mi>p</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
      where <inline-formula><alternatives>
      <tex-math><![CDATA[I_{0}]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>I</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
      is the illumination intensity and <inline-formula><alternatives>
      <tex-math><![CDATA[R_{sample}]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>a</mml:mi><mml:mi>m</mml:mi><mml:mi>p</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>
      is the sample reflectance then with measurements of two reference
      samples, each with a well known reflectance, the internal
      reflectance can be calculated as <inline-formula><alternatives>
      <tex-math><![CDATA[R_{internal} = \frac{ R_{1}I_{2} - R_{2}I_{1} } { I_{1} - I_{2} }]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>n</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>I</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:msub><mml:mi>I</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>I</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:math></alternatives></inline-formula></p>
      <p>The
      <monospace>pwspy.utility.reflection.extraReflectance</monospace>
      subpackage provides functionality to conveniently extend this
      simple calculation to produce an <inline-formula><alternatives>
      <tex-math><![CDATA[R_{internal}]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>n</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>
      image cube from datasets consisting of images from an arbitrary
      number of reference reflectances. The output of this calculation
      is vital to the analyses contained in
      <monospace>pwspy.analysis</monospace>, it’s data handling is
      managed by the <monospace>pwspy.dataTypes.ERMetaData</monospace>
      and <monospace>pwspy.dataTypes.ExtraReflectance</monospace>
      classes.</p>
      <fig>
        <caption><p>A: Internal reflectance spectra for a single X, Y
        position in the microscope field of view. The final output is
        calculated as a weighted mean of the calculation corresponding
        to each pair of the available reference reflections. B: Before
        accounting for the internal reflectance of the microscope the
        ratios between measurements of two reflective materials disagree
        with what would be predicted by the Fresnel equations by a
        factor of 1.8. C: After subtracting the internal reflectance
        from the measurements experiment agrees well with
        prediction.</p></caption>
        <graphic mimetype="image" mime-subtype="png" xlink:href="media/figs/er_grid.png" xlink:title="" />
      </fig>
    </sec>
    <sec id="parsing-of-acquisition-engine-metadata">
      <title>Parsing of acquisition engine metadata</title>
      <p>While the core focus of <monospace>PWSpy</monospace> is on
      handling the details of accurately analyzing a single PWS
      microscopy image cube, any real biology experiment will consist of
      hundreds or thousands of images spanning multiple imaging
      conditions and cell plates. To make the acquisition of this data
      easier the PWS Acquisition
      (<xref alt="Anthony, 2020" rid="ref-PWS_Acquisition" ref-type="bibr">Anthony,
      2020</xref>) plugin for Micro-Manager provides flexible automated
      imaging presented to the user as a set of possible automation
      steps and a drag-and-drop tree which defines the order that steps
      will be executed in. Examples of possible types of steps that
      could be included in an automated experiment definition are: a
      time series of sub-steps, execution of substeps at a pre-defined
      set of XYZ coordinates, acquisition of a PWS image, a pause to
      wait for user input, etc.</p>
      <p>In order to minimize the amount of custom code that a data
      analyst must write for each new experiment in order to locate the
      data of an individual analyzed image in the larger context of the
      entire experiment, the
      <monospace>pwspy.utility.acquisition</monospace> subpackage
      contains functionality for parsing the metadata and log files
      saved by the acquisition engine. An instance of the
      <monospace>SequenceAcquisition</monospace> class binds each
      individual <monospace>pwspy.dataTypes.Acquisition</monospace> to a
      <monospace>SequencerCoordinate</monospace> which defines a unique
      location in the experiment sequence of automation steps, each of
      which is represented by an instance of
      <monospace>SequencerStep</monospace>.</p>
    </sec>
  </sec>
</sec>
<sec id="availability">
  <title>Availability</title>
  <p><monospace>PWSpy</monospace> is free and open source. It is
  published under the GNU General Public License v3. You can download
  the source code at
  <ext-link ext-link-type="uri" xlink:href="https://github.com/BackmanLab/PWSpy">https://github.com/BackmanLab/PWSpy</ext-link>.
  Online documentation and examples can be found at
  <ext-link ext-link-type="uri" xlink:href="https://pwspy.readthedocs.io">https://pwspy.readthedocs.io</ext-link>.
  <monospace>PWSpy</monospace> can be installed using Pip or using Conda
  from the “backmanlab” Anaconda Cloud channel.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The authors would like to thank many of the early users of
  <monospace>PWSpy</monospace> for providing feedback and bug reports as
  the project has developed.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-cherkezyanU003A2017">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Cherkezyan</surname><given-names>Lusik</given-names></name>
          <name><surname>Zhang</surname><given-names>Di</given-names></name>
          <name><surname>Subramanian</surname><given-names>Hariharan</given-names></name>
          <name><surname>Capoglu</surname><given-names>Ilker</given-names></name>
          <name><surname>Taflove</surname><given-names>Allen</given-names></name>
          <name><surname>Backman</surname><given-names>Vadim</given-names></name>
        </person-group>
        <article-title>Review of interferometric spectroscopy of scattered light for the quantification of subdiffractional structure of biomaterials</article-title>
        <source>Journal of Biomedical Optics</source>
        <year iso-8601-date="2017">2017</year>
        <volume>22</volume>
        <issue>3</issue>
        <pub-id pub-id-type="doi">10.1117/1.jbo.22.3.030901</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-LiU003A2021">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Li</surname><given-names>Yue</given-names></name>
          <name><surname>Eshein</surname><given-names>Adam</given-names></name>
          <name><surname>Virk</surname><given-names>Ranya K. A.</given-names></name>
          <name><surname>Eid</surname><given-names>Aya</given-names></name>
          <name><surname>Wu</surname><given-names>Wenli</given-names></name>
          <name><surname>Frederick</surname><given-names>Jane</given-names></name>
          <name><surname>VanDerway</surname><given-names>David</given-names></name>
          <name><surname>Gladstein</surname><given-names>Scott</given-names></name>
          <name><surname>Huang</surname><given-names>Kai</given-names></name>
          <name><surname>Shim</surname><given-names>Anne R. et al.</given-names></name>
        </person-group>
        <article-title>Nanoscale chromatin imaging and analysis platform bridges 4D chromatin organization with molecular function</article-title>
        <source>Science Advances</source>
        <year iso-8601-date="2021">2021</year>
        <volume>7</volume>
        <issue>1</issue>
        <pub-id pub-id-type="doi">10.1126/sciadv.abe4310</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-GladsteinU003A2019">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Gladstein</surname><given-names>Scott</given-names></name>
          <name><surname>Almassalha</surname><given-names>Luay M.</given-names></name>
          <name><surname>Cherkezyan</surname><given-names>Lusik</given-names></name>
          <name><surname>Chandler</surname><given-names>John E.</given-names></name>
          <name><surname>Eshein</surname><given-names>Adam</given-names></name>
          <name><surname>Eid</surname><given-names>Aya</given-names></name>
          <name><surname>Zhang</surname><given-names>Di</given-names></name>
          <name><surname>Wu</surname><given-names>Wenli</given-names></name>
          <name><surname>Bauer</surname><given-names>Greta M.</given-names></name>
          <name><surname>Stephens</surname><given-names>Andrew D.</given-names></name>
          <name><surname>al.</surname></name>
        </person-group>
        <article-title>Multimodal interference-based imaging of nanoscale structure and macromolecular motion uncovers UV induced cellular paroxysm</article-title>
        <source>Nature Communications</source>
        <year iso-8601-date="2019">2019</year>
        <volume>10</volume>
        <issue>1</issue>
        <pub-id pub-id-type="doi">10.1038/s41467-019-09717-6</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-PWSpy_GUI">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Anthony</surname><given-names>Nicholas M.</given-names></name>
        </person-group>
        <article-title>PWSpy GUI: A collection of graphical user interfaces for the analysis of multimodal interference-based image data.</article-title>
        <source>GitHub repository</source>
        <publisher-name>GitHub</publisher-name>
        <year iso-8601-date="2021">2021</year>
        <uri>https://github.com/nanthony21/pwspy_gui</uri>
      </element-citation>
    </ref>
    <ref id="ref-PWS_Acquisition">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Anthony</surname><given-names>Nicholas M.</given-names></name>
        </person-group>
        <article-title>PWS acquisition: A micro-manager plugin for the automated acquisition of multimodal interference-based imaging.</article-title>
        <source>GitHub repository</source>
        <publisher-name>GitHub</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://github.com/nanthony21/PWSAcquisition</uri>
      </element-citation>
    </ref>
    <ref id="ref-Micro-Manager">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Edelstein</surname><given-names>Arthur D</given-names></name>
          <name><surname>Tsuchida</surname><given-names>Mark A</given-names></name>
          <name><surname>Amodaj</surname><given-names>Nenad</given-names></name>
          <name><surname>Pinkard</surname><given-names>Henry</given-names></name>
          <name><surname>Vale</surname><given-names>Ronald D</given-names></name>
          <name><surname>Stuurman</surname><given-names>Nico</given-names></name>
        </person-group>
        <article-title>Advanced methods of microscope control using uManager software</article-title>
        <source>Journal of Biological Methods</source>
        <year iso-8601-date="2014">2014</year>
        <volume>1</volume>
        <issue>2</issue>
        <pub-id pub-id-type="doi">10.14440/jbm.2014.36</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-cherkezyanU003A2013">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Cherkezyan</surname><given-names>L.</given-names></name>
          <name><surname>Capoglu</surname><given-names>I.</given-names></name>
          <name><surname>Subramanian</surname><given-names>H.</given-names></name>
          <name><surname>Rogers</surname><given-names>J. D.</given-names></name>
          <name><surname>Damania</surname><given-names>D.</given-names></name>
          <name><surname>Taflove</surname><given-names>A.</given-names></name>
          <name><surname>Backman</surname><given-names>V.</given-names></name>
        </person-group>
        <article-title>Interferometric spectroscopy of scattered light can quantify the statistics of subdiffractional refractive-index fluctuations</article-title>
        <source>Physical Review Letters</source>
        <year iso-8601-date="2013">2013</year>
        <volume>111</volume>
        <issue>3</issue>
        <pub-id pub-id-type="doi">10.1103/physrevlett.111.033903</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-ChandlerU003A2016">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Chandler</surname><given-names>John E.</given-names></name>
          <name><surname>Cherkezyan</surname><given-names>Lusik</given-names></name>
          <name><surname>Subramanian</surname><given-names>Hariharan</given-names></name>
          <name><surname>Backman</surname><given-names>Vadim</given-names></name>
        </person-group>
        <article-title>Nanoscale refractive index fluctuations detected via sparse spectral microscopy</article-title>
        <source>Biomedical Optics Express</source>
        <year iso-8601-date="2016">2016</year>
        <volume>7</volume>
        <issue>3</issue>
        <pub-id pub-id-type="doi">10.1364/boe.7.000883</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
